openapi: 3.0.1
info:
  title: Services.ClientServices
  description: 'The Client Services service group provides end points for getting reports, managing subscriptions, Mifid and transferring funds.'
  version: 2.1.844+5ac80b7cee
  x-framework-version: 24.0.3+a37f5f8d74
  x-machine: DEVOAWEB11-DK1
servers:
  - url: https://blue.openapi.sys.dom/openapi
paths:
  /cs/v1/questionnaires/questionsettypes:
    get:
      tags:
        - Questionnaires - QuestionSetTypes
      description: Gets all the question set types
      operationId: QuestionSetTypesGetAsync
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionSetTypePagedResult'
              example: {
  "Data": [
    {
      "QuestionSetTypeId": "QuestionSetTypeIdd75b5ea5-ecc2-423d-944a-66b9f5b4af00",
      "QuestionSetTypeName": "QuestionSetTypeNamecd0f1f6a-2e14-48cb-9403-2bdb2da75ef5"
    }
  ],
  "NextId": "NextId0152e1aa-9a3a-4630-97d5-140b9534e334",
  "TotalCount": 801
}
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/targetmarkets/riskrewardprofiles:
    get:
      tags:
        - Target market assessment
      summary: Get risk reward profiles
      description: Gets all available risk reward profiles
      operationId: TargetMarketGetRiskRewardProfilesAsync
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TMRiskElement'
              example: [
  {
    "Description": "Description774ad896-06ff-4922-ba8f-956f93f14aec",
    "Id": "Idc02c8915-f6f6-46fb-ba03-509137a6ab0c",
    "Name": "Name0a27750b-816c-4eef-b700-2c7a5da7c6b5",
    "Range": [
      15652
    ]
  }
]
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/targetmarkets/{Uic}/{AssetType}':
    get:
      tags:
        - Target market assessment
      summary: Get target market assessment
      description: Endpoint to fetch target market assessment
      operationId: TargetMarketGetTargetMarketAssessmentAsync
      parameters:
        - name: AssetType
          in: path
          description: Asset Type
          required: true
          schema:
            $ref: '#/components/schemas/AssetType'
          example: Stock
        - name: Uic
          in: path
          description: Instrument uic
          required: true
          schema:
            type: integer
            format: int32
          example: 124578
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TMAssessment'
              example: {
  "AbilityToBearLosses": [
    {
      "Description": "Partial loss of capital possible, protection between 0% and 100%",
      "Id": "2",
      "Name": "Partially protected capital",
      "Rating": "Positive"
    }
  ],
  "ClientType": [
    {
      "Description": "Instrument suitable for professional clients only",
      "Id": "2",
      "Name": "Professional",
      "Rating": "Positive"
    }
  ],
  "EfficiencyProfile": [
    {
      "Description": "Can be sold online or without advisory",
      "Id": "1",
      "Name": "Execution only",
      "Rating": "Positive"
    },
    {
      "Description": "Can be sold with investment advisory only",
      "Id": "2",
      "Name": "Advised",
      "Rating": "Positive"
    }
  ],
  "InvestmentHorizon": [
    {
      "Description": "Investment shall provide current or future retirement income",
      "Id": "2",
      "Name": "Retirement provision",
      "Rating": "Positive"
    }
  ],
  "KnowledgeAndExperiences": [
    {
      "Description": "Instrument requires basic knowledge and experience",
      "Id": "1",
      "Name": "Basic",
      "Rating": "Positive"
    },
    {
      "Description": "Instrument requires intermediate knowledge and experience",
      "Id": "2",
      "Name": "Intermediate",
      "Rating": "Positive"
    }
  ],
  "Risk": {
    "Description": "Profile with higher risk and corresponding expected return",
    "Id": "1",
    "Name": "Speculative",
    "Rating": 6
  }
}
        '204':
          description: No content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/online:
    post:
      description: Attempts to take the application online
      operationId: cs_online
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-application-visibility: saxo-only
      x-network-visibility: internal
  '/cs/v1/accounttransfer/{ClientKey}':
    get:
      tags:
        - Whole Account Transfer
      description: Get Whole Account transfer details.
      operationId: WholeAccountTransferGetTransferDetails
      parameters:
        - name: ClientKey
          in: path
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: TransferIDs
          in: query
          description: Comma separate list of Transfer IDs
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          description: Indicates that the request was performed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WholeAccountTransferReportData'
              example: {
  "AccountIDInSaxo": "AccountIDInSaxo827aa850-e289-4366-8d3c-09ac626c0f10",
  "ClientId": "ClientId002c7264-6a74-46b5-940d-122c32049b64",
  "ClientName": "ClientName44acbe94-49c6-4d35-a9ba-2d201d4a6352",
  "ExternalAccountId": "ExternalAccountId226c7504-7c4e-4cf1-9c16-a5533e78f1c7",
  "InstrumentDetails": [
    {
      "Currency": "Currency4c3d3b90-c5cc-4389-8edf-633d675af208",
      "Description": "Description9075051c-1f7f-49e7-b591-b345e669ac1a",
      "Exchange": "Exchangedb1c8543-1aca-4901-b3b0-81affa11cdca",
      "ExchangeText": "ExchangeTexteb7234f2-ad1f-45bc-8277-c7895d090484",
      "InstrumentSymbolCode": "InstrumentSymbolCode1936f5ea-9e2e-4712-a32e-0856cc224bde",
      "IsinCode": "IsinCode68c933bd-8409-4a06-bf70-fa5343cebd2b",
      "Price": -449268022316543.81,
      "PurchaseDate": "2021-12-08",
      "Quantity": -2895949707370661.0,
      "Uic": "Uic4300b07d-4a03-4def-b4ff-a7b763f1ee1d"
    }
  ],
  "SettlementMarketId": "SettlementMarketId7cf6941b-0bc6-40db-a346-718ce9157452",
  "SubmissionDate": "2020-05-16",
  "TransferType": "TransferOut"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/accounttransfer/settlementmarkets:
    get:
      tags:
        - Whole Account Transfer
      summary: Retrieve settlement markets used for whole account transfer
      description: Retrieves settlement markets used for whole account transfer
      operationId: WholeAccountTransferGetSettlementMarkets
      responses:
        '200':
          description: Indicates that the request was successful.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/SettlementMarket'
              example: [
  {
    "Description": "Australia",
    "SettlementMarketId": "1"
  },
  {
    "Description": "Austria",
    "SettlementMarketId": "2"
  },
  {
    "Description": "Belgium",
    "SettlementMarketId": "3"
  },
  {
    "Description": "Canada",
    "SettlementMarketId": "4"
  },
  {
    "Description": "Finland",
    "SettlementMarketId": "5"
  },
  {
    "Description": "France",
    "SettlementMarketId": "6"
  },
  {
    "Description": "Germany",
    "SettlementMarketId": "7"
  }
]
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/accounttransfer:
    post:
      tags:
        - Whole Account Transfer
      summary: Request whole account transfer
      description: Request whole account transfer
      operationId: WholeAccountTransferTransfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.TransferDetails'
            example: {
  "ClientDetails": {
    "AccountKey": "zsnh|NO42RmzjC4oPovKGA==",
    "ExternalAccountId": "APKE000000000000000",
    "SettlementMarketId": "2"
  },
  "InstrumentDetails": [
    {
      "AssetType": "Stock",
      "Price": 194.82,
      "PurchaseDate": "2019-03-02",
      "Quantity": 1.0,
      "Uic": 899
    }
  ],
  "TransferType": "TransferIn"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WholeAccountTransferResponse'
              example: {
  "TransferReferenceId": "63HGCDS3E89DS"
}
        '202':
          description: Indicates that the request was accepted.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/isalive:
    get:
      description: Determines whether this service-group instance is alive.
      operationId: cs_isalive
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
              example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /cs/v1/mifid/productareas:
    get:
      tags:
        - MiFID - Product Areas
      summary: Get product areas
      operationId: ProductAreaGetProductAreas
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductAreaResponse'
              example: [
  {
    "ProductAreaId": 0,
    "ProductAreaName": "All"
  },
  {
    "ProductAreaId": 1,
    "ProductAreaName": "Forex Spot"
  },
  {
    "ProductAreaId": 2,
    "ProductAreaName": "Forex Forwards"
  },
  {
    "ProductAreaId": 3,
    "ProductAreaName": "Forex Options"
  },
  {
    "ProductAreaId": 4,
    "ProductAreaName": "Futures"
  }
]
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/cashmanagement/creditcard/Logos:
    get:
      tags:
        - Cash Management – CreditCard
      description: Get logos by definitionId or payment provider type.
      operationId: CreditCardGetLogosForPaymentProvider
      parameters:
        - name: DefinitionIds
          in: query
          description: Creditcard definitionId ID
          schema:
            type: array
            items:
              type: integer
              format: int32
          example: 23
        - name: PaymentProvider
          in: query
          description: payment provider
          schema:
            $ref: '#/components/schemas/PaymentProviderNullable'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardLogoResponse'
              example: {
  "CreditCardLogos": [
    {
      "ContentType": "gif",
      "Data": "R0lGODlhMAAeAHAAACwAAAAAMAAeAIf3//8ICGPevd73rQAhIWv3787W1uYpa1rvEN7vEFqtEN6tEFopShnvEJzvEBmtEJytEBmU76XvpVKtpVKUtRkIa1rOEN7OEFqMEN6MEFoIShnOEJzOEBmMEJyMEBmUzqXOpVKMpVKUlBlKSpz3pSlra5ytpbXW5pwpGTopGRCU7+bv5lKt5lKU5inmnLW1pZQIGToIGRCUzubO5lKM5lKU5gjmnJTWpSmUlObWnOYpKZyMnLW1zt6Mc5wpQlpKa5xrjJwIIWMpSpxKSlpr797vc95ra97vc1pra1pr71rvMd7vMVopa94p794p71qtMd6tMVprKd4pKd6tc95rrd5rKVqtc1prrVoprd4prVopaxnvMZzvMRmtMZytMRmtc5y176VrrZxraxkpa5xr75zvc5zvcxlr7xkp75wp7xlrKZxrKRmtcxlrrRkprZwprRnvpXOtpXO1tRkIKZxKrZxKa1oIa5xK797Oc95Ka97Oc1pK71oIa94I794I71pKKd4IKd6Mc95Krd5KKVqMc1pKrVoIrd4IrVpKaxlK75zOc5zOcxlK7xkI75wI7xlKKZxKKRmMcxlKrRkIrZwIrRlrSpwpCJyMUpwIQlprzt7vUt5rSt7vUlprSlprzlrOMd7OMVopSt4pzt4pzlqMMd6MMVprCN4pCN6tUt5rjN5rCFqtUlprjFopjN4pjFoIaxnOMZzOMRmMMZyMMRmtUpy1zqVrShlrzpzvUpzvUhlrzhkpzpwpzhlrCJxrCBmtUhlrjBkpjJwpjBnOpXOMpXO1lBkICJxKjJwISpxKzt7OUt5KSt7OUlpKzloISt4Izt4IzlpKCN4ICN6MUt5KjN5KCFqMUlpKjFoIjN4IjFpKShlKzpzOUpzOUhlKzhkIzpwIzhlKCJxKCBmMUhlKjBkIjJwIjBne7++1td7W5s7mzinv5nPm7ym17+at5nO15inmvbWMpZTmzgjO5nPm7wiM5nO15gjmvZS1lOb35pyUrd73nOYpCGPWpQj35u/3/+8I/wABGBhIsKDBgwgTKjQgkIDDhxAjSpxIsWIAdAYIBNioUWOAjhw/hvQIUiRJkSZDmjAQ5CNIhyZfyoxJs+PMiwYGCSGgg6ePnjp0/OQpFGhRokODJiWws2dTpgTQCTRwjurAqlWtZsV61arWrlu9ZjXwD4DZs2jTql3Ltm1bA/7i+it7Vu4/uWf/DUznL21cum7P7hhB4GeJuiN8jAAAhMAIAQDSVdKoYxBDAP5K7NwRWC06j30BmNi4QwCBICMK7Nho8vJqfgEWd05bYqNUACM2DtRY4p+OjyZ4mNjR11+ljUH4AZ4NAF0AGJz9bVy8OgBnjmrTBUCt8TLzhgEqAf8oAePi+NOQPQYoERr3x4zmv2POPcJ37ALnchNgmBHmCIb+tFTCObzJZ9YOQRCwg0ZAYKaRbAJVtx4A1cFF33KzjcaTQ32h0xJxaHkYwA8ADPJRT6cR0B5zBJ42IYUbmUDhSgJU14OHOrTEET+3yfeISJcdF8BAsMG00Tm1EVCCCfo0Zp2BFPrg2FlSEiAQYQkS8IMBpimJGAE9QOmPADzMZRZBZvnDgwAYleUPmmfBCWVnJqSDTnsYYjhnW5mhswM6K5kgQAnoAMpmaXsGZsAOBphQwg476HPODiYwOVylKyaqlgkYnWOCPyacU6honXqH1j//FKDqqqy26moBd6l26g+ss8Jqa6y22gpAASSoI4E6JKxAQrC9/kqssML6Ciywyfbq7LLPOtsrrANUa+212Gar7bbaylNtPgVU66241o677bjmokvuAN6aay24wK7LbrnzqjvvuuqIS4K8A+Q7bj67qprqwAK7mmquB+eq8MEJF/xPQAA7",
      "DefinitionId": 1,
      "Height": 30.0,
      "Width": 48.0
    }
  ]
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/cashmanagement/creditcard/Logo/{DefinitionId}':
    get:
      tags:
        - Cash Management – CreditCard
      description: Gets logo by definitionId
      operationId: CreditCardGetLogo
      parameters:
        - name: DefinitionId
          in: path
          description: CreditCard definition ID
          required: true
          schema:
            type: integer
            format: int32
          example: 2
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/cashmanagement/creditcard/Confirm:
    get:
      tags:
        - Cash Management – CreditCard
      description: Returns the result of a transaction
      operationId: CreditCardConfirmTransaction
      parameters:
        - name: MerchantData
          in: query
          description: Merchant data sent by card issuer bank.
          schema:
            title: Merchant data sent by card issuer bank.
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: PageResponse
          in: query
          description: Token as a page response sent by card issuer bank.
          schema:
            title: Token as a page response sent by card issuer bank.
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: PaymentProvider
          in: query
          description: Payment provider to use for payment service
          schema:
            title: Payment provider to use for payment service
            allOf:
              - $ref: '#/components/schemas/PaymentProviderNullable'
          example: "Trustly"
        - name: RedirectUrl
          in: query
          description: "Redirect Url when user will be redirected from payment \r\n            service provider to Saxo environment."
          required: true
          schema:
            title: "Redirect Url when user will be redirected from payment \r\n            service provider to Saxo environment."
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatusResponse'
              example: {
  "Account": "Accountb1532ec2-f66d-4704-a2a1-2a91639836e3",
  "AccountAmount": 1345552598964751.5,
  "Amount": 5.44241128412655E+27,
  "AmountToTransfer": -4818.2214979935161,
  "CardDescription": "CardDescription9adb49d1-49c3-450f-8bc8-37a8ee3cdcc7",
  "ExchangeRate": -20102129272.902042,
  "Fee": 2888486743017.8916,
  "FromCurrency": "FromCurrencya4dec58b-9f68-48f8-8ff2-c8edb0f8d346",
  "PaymentId": "PaymentId18a7bdfa-449e-4dc7-9554-d8bd10a69624",
  "ToCurrency": "ToCurrency55ded54d-6dd6-49d2-a665-acd1fa80995c",
  "TransactionResult": "TransactionDeclined"
}
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/cashmanagement/creditcard/ConfirmTransaction:
    post:
      tags:
        - Cash Management – CreditCard
      summary: Returns status of credit card transaction
      description: Returns the status of a transaction.
      operationId: CreditCardConfirm2Transaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorldPayTransactionInformations'
            example: {
  "error": "Error4a2f64aa-3c9d-4d38-8c84-da16fa4c3c7b",
  "gateway": {
    "mac": "Macc5caad8a-c773-4047-90e8-c7ded6d4ce15",
    "orderKey": "OrderKey52808173-1c59-4de1-ac20-7656849a90a1",
    "paymentAmount": "PaymentAmount38fe6d14-807e-485c-8a9a-b18ee87358e4",
    "paymentCurrency": "PaymentCurrencyc6577316-c7c0-4e48-a7b3-1eb1b9925fa4",
    "paymentStatus": "PaymentStatus61ea940f-7720-4ea4-8c95-02cf126bdc70"
  },
  "order": {
    "orderKey": "OrderKey741b9f7f-9da0-47d7-afae-ed1a7b22c2c2",
    "status": "Cancelled_By_Shopper"
  }
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatusResponse'
              example: {
  "Account": "Accountb1532ec2-f66d-4704-a2a1-2a91639836e3",
  "AccountAmount": 1345552598964751.5,
  "Amount": 5.44241128412655E+27,
  "AmountToTransfer": -4818.2214979935161,
  "CardDescription": "CardDescription9adb49d1-49c3-450f-8bc8-37a8ee3cdcc7",
  "ExchangeRate": -20102129272.902042,
  "Fee": 2888486743017.8916,
  "FromCurrency": "FromCurrencya4dec58b-9f68-48f8-8ff2-c8edb0f8d346",
  "PaymentId": "PaymentId18a7bdfa-449e-4dc7-9554-d8bd10a69624",
  "ToCurrency": "ToCurrency55ded54d-6dd6-49d2-a665-acd1fa80995c",
  "TransactionResult": "TransactionDeclined"
}
        '200':
          description: Indicates that the request was performed correctly.
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/cashmanagement/creditcard/TransactionStatuses:
    post:
      tags:
        - Cash Management – CreditCard
      summary: Returns status of credit card transaction
      description: Returns the status of a transaction.
      operationId: CreditCardTransactionStatus
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionStatusRequest'
            example: {
  "MerchantData": "MerchantData7867e49c-3e0e-4b5f-b484-827314e42839",
  "PageResponse": "PageResponsea39a8724-00db-4226-84c0-75d24111d93d",
  "PaymentProvider": "Paytrail",
  "RedirectUrl": "RedirectUrlf6b330b0-36f3-4048-b9c5-f24e946c9f3b"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionStatusResponse'
              example: {
  "Account": "Accountb1532ec2-f66d-4704-a2a1-2a91639836e3",
  "AccountAmount": 1345552598964751.5,
  "Amount": 5.44241128412655E+27,
  "AmountToTransfer": -4818.2214979935161,
  "CardDescription": "CardDescription9adb49d1-49c3-450f-8bc8-37a8ee3cdcc7",
  "ExchangeRate": -20102129272.902042,
  "Fee": 2888486743017.8916,
  "FromCurrency": "FromCurrencya4dec58b-9f68-48f8-8ff2-c8edb0f8d346",
  "PaymentId": "PaymentId18a7bdfa-449e-4dc7-9554-d8bd10a69624",
  "ToCurrency": "ToCurrency55ded54d-6dd6-49d2-a665-acd1fa80995c",
  "TransactionResult": "TransactionDeclined"
}
        '200':
          description: Indicates that the request was performed correctly.
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/cashmanagement/creditcard/TransactionRequests:
    post:
      tags:
        - Cash Management – CreditCard
      summary: Initiate credit card transaction
      description: 'Initiate a credit card transaction request. If initial parameter validation succeeds the endpoint will return a url, which the client application must use to proceed with the payment.'
      operationId: POST_CreditCardRequestTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionRequest'
            example: {
  "FailureUrl": "FailureUrlfcca2d74-0f7f-4c45-b5b6-a0d56ca56a02",
  "InstallationId": "InstallationId0dd6b5b6-830b-4ece-a35c-33c447528401",
  "IsRecurringPayment": false,
  "IssuerCountryCode": "IssuerCountryCode5cdfaeb8-420f-48da-857a-b097e0860299",
  "PaymentId": "PaymentId8cb03e29-c626-46ca-b901-bd9147f52708",
  "SuccessUrl": "SuccessUrlf980da35-62a6-41f6-b3fd-289b3fa5ada8"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionResponse'
              example: {
  "CupPostData": {
    "key8583d279-4eef-49af-ad62-9067b67ac182": "value4a9406cc-2676-4e56-95f5-de222e66b61c"
  },
  "Is3DSecureScheme": true,
  "Method": "Methodc4a039fc-37f0-40ea-8342-75a5d664e26f",
  "RedirectUrl": "RedirectUrl845fbdf5-89bb-4821-af99-c218d53d0187",
  "Secure3DPostData": {
    "key7e310285-5736-45b6-8c93-35a77e9f652f": "valueec16d327-10a9-4ac0-8140-3df90cb103ab"
  }
}
        '200':
          description: Indicates that the request was performed correctly.
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/cashmanagement/creditcard/Transaction:
    post:
      tags:
        - Cash Management – CreditCard
      summary: Initiate credit card transaction
      description: 'Initiate a credit card transaction request. If initial parameter validation succeeds the endpoint will return a url, which the client application must use to proceed with the payment.'
      operationId: CreditCardRequestTransaction
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorldPayTransactionRequest'
            example: {
  "InstallationId": "InstallationId9bfab45e-4e73-438b-9f22-c68d937f0745",
  "IsRecurringPayment": false,
  "IssuerCountryCode": "IssuerCountryCode3a598b8a-f13c-4cea-8fe2-16a627911dfa",
  "PaymentId": "PaymentId336af75b-ebb1-4583-8027-b6547e0a86d7",
  "RegisteredCardId": "RegisteredCardId5e7922df-fb48-4b1f-b75e-69fb9fd0c49e"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorldPayTransactionResponse'
              example: {
  "Country": "Countryda6ca6a1-cf34-4db3-ba79-8c4b17bab1a0",
  "CupPostData": {
    "key2bb81904-e89c-4d55-825b-cddf7ce29a38": "valuec8b66c22-a0ab-4e16-af90-bc9b497b105b"
  },
  "Is3DSecureScheme": true,
  "Language": "Language64db7d66-3332-4601-9475-a01e8783260e",
  "Method": "Methoddd973eae-c2c1-48e4-9ca2-c6962c2966b7",
  "PreferedPaymentMethod": "PreferedPaymentMethod3b2b72dd-96f1-464b-a84e-d0e938b145a1",
  "Secure3DPostData": {
    "key996ef295-f047-42b2-8c73-fd68ebbb4278": "value1d2ef76b-5803-4487-9bea-5716f564b04e"
  },
  "Url": "Urlc6b40fc2-3669-48fb-8c58-af0052be5b6e"
}
        '200':
          description: Indicates that the request was performed correctly.
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/cashmanagement/creditcard/Preview:
    get:
      tags:
        - Cash Management – CreditCard
      summary: Return preview of transaction
      description: Returns a preview of what charges and deposits will take place if the client goes ahead with the transaction
      operationId: CreditCardGetPreview
      parameters:
        - name: AccountKey
          in: query
          description: The account to transfer to.
          required: true
          schema:
            title: The account to transfer to.
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: "3e76e8c3-bb23-4912-86e0-7a387d5c7a2d"
        - name: Amount
          in: query
          description: The ammount to transfer
          required: true
          schema:
            title: The ammount to transfer
            type: number
          example: -6.7149380605825666
        - name: CardDefinitionId
          in: query
          description: The card definition id
          required: true
          schema:
            title: The card definition id
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: Currency
          in: query
          description: The currency to transfer the amount in.
          required: true
          schema:
            title: The currency to transfer the amount in.
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: IsAutoTrading
          in: query
          description: 'If the account is an AutoTrading account, this has to be set as true'
          schema:
            title: 'If the account is an AutoTrading account, this has to be set as true'
            type: boolean
          example: false
        - name: IssuerCountryCode
          in: query
          description: The creditcard issuer country
          required: true
          schema:
            title: The creditcard issuer country
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: PaymentId
          in: query
          description: The payment id to use.
          required: true
          schema:
            title: The payment id to use.
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: RegisteredCardId
          in: query
          description: 'If using a existing card, this should be set.'
          schema:
            title: 'If using a existing card, this should be set.'
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PreviewResponse'
              example: {
  "Amount": 7.0758292192546848E+28,
  "AmountToCharge": 3.8544093947744126E+28,
  "AmountToDeposit": -4488756.4582446963,
  "DisplayFeeDisclaimer": true,
  "ExchangeRate": 124068425.62394036,
  "FromCurrency": "FromCurrencyd4edf7f2-357e-47c5-a862-e9317298f03c",
  "ToCurrency": "ToCurrency1bfdef82-d60f-4448-a45e-b88dd4846383",
  "TransactionFee": -5.1425872495147233,
  "TransferredFromCardAmount": 5893.2300000000005,
  "TransferredFromCardCurrency": "TransferredFromCardCurrency40720c01-15bc-4a07-aedf-d71e84abcbd0"
}
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/cashmanagement/creditcard/TransactionOptions:
    get:
      tags:
        - Cash Management – CreditCard
      description: Gets all available transaction options for credit card
      operationId: CreditCardGetTransactionOptions
      parameters:
        - name: PaymentProvider
          in: query
          schema:
            $ref: '#/components/schemas/PaymentProviderNullable'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransactionOptions'
              example: {
  "CardDefinitions": [
    {
      "BrandId": "BrandIda0a0d550-ee78-47b6-8d61-e6d804d3bd40",
      "CardDefinitionId": "CardDefinitionId1ea72f10-92df-4de7-bc30-a94c14ed4162",
      "LockedCountry": "LockedCountry77b1fefd-0769-43d2-a644-fa91394e781e",
      "LockedCurrency": "LockedCurrency19884bd6-c18f-443a-b3bc-60f4bc69ae73",
      "Name": "Name536431f3-3623-4feb-8cb5-bf9429255c20",
      "ProviderId": "ProviderId04de98c1-0e22-4089-aab8-247d1efa32d9"
    }
  ],
  "Countries": [
    {
      "CountryCode": "CountryCode1279e54f-4b0f-4938-88c5-54b11aa21e8e",
      "CountryName": "CountryName8055a0b2-15fa-4f6e-9b21-f359fe522102"
    }
  ],
  "Currencies": [
    "c8547b5b-bada-4c0f-81a5-125e0ff18e41"
  ],
  "IsAddNewCardAllowed": true,
  "MaximumAllowedStoredCards": 32659,
  "PaymentId": "PaymentId5ef0106a-55db-4a1e-a843-a8d7004e1063",
  "RestrictedCardDefinitions": [
    {
      "BrandId": "BrandId32f8d2e2-a291-445d-9441-de55d6959b88",
      "CardDefinitionId": "CardDefinitionId1db30b53-123f-4dc9-98bc-529385f688fb",
      "LockedCountry": "LockedCountrydc765e44-393a-4a6b-9537-8d55a3d484f7",
      "LockedCurrency": "LockedCurrencyc99c45f0-10c4-401f-a670-d2c009180f8f",
      "Name": "Namee834bdf5-201c-40d5-951c-c3be0fae59ed",
      "ProviderId": "ProviderId8fb49cce-c528-48b2-bf56-0e386d0eafc3"
    }
  ],
  "StoredCards": [
    {
      "CardDefinitionId": "CardDefinitionIda5767c29-f27e-4a5c-a035-3014d8ac91db",
      "CardNumber": "CardNumber50c61931-b74e-4d3b-b66c-a89b525d2a70",
      "IssuerCountry": "IssuerCountrydbaf8584-85e4-4538-96d8-dbf371f26f5a",
      "RegisteredCardId": "RegisteredCardId23849a9b-488d-46a0-8d7f-e833daa9c828"
    }
  ],
  "SubsidiaryAddress": "SubsidiaryAddressba6825b8-a634-49f8-a60f-89d801238d4a"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/tradingconditions/ContractOptionSpaces/{AccountKey}/{OptionRootId}':
    get:
      tags:
        - Trading Conditions - Contract Option
      summary: Get trading conditions for a contract option.
      description: "Trading conditions for all exchange traded options and synthetic options(OTC). \r\n             Trading conditions details default behavior for the option (can it be traded and how), \r\n             margin requirements for opening and holding a position in an option (how much cash is needed on the account) \r\n             as well as the cost structure of opening, closing and holding a position."
      operationId: ContractOptionGetForContractOption
      parameters:
        - name: AccountKey
          in: path
          description: The account key to lookup the conditions for
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: 7m4I|vtYLUnEGg77o9uQhw==
        - name: FieldGroups
          in: query
          description: Specify which field groups to return
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ScheduledTradingConditionsFieldGroup'
        - name: OptionRootId
          in: path
          description: The optionRootId for the option to lookup
          required: true
          schema:
            type: integer
            format: int32
          example: 32
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContractOptionTradingConditionsResponse'
              example: {
  "AccountCurrency": "GBP",
  "AssetType": "FxSpot",
  "CarryingCost": {
    "FixedRate": 1.0,
    "InterbankRate": {
      "AskRate": 2.0,
      "BidRate": 1.0,
      "TradeDate": "2022-04-05"
    },
    "MarkUpRate": 1.5
  },
  "CommissionLimits": [
    {
      "Currency": "USD",
      "OrderAction": "ExecuteOrder",
      "PerUnitRate": 6.0
    }
  ],
  "CurrencyCutSpreadRate": 0.5,
  "ExerciseCutoffTime": "2022-04-10T06:05:13.828277Z",
  "ExerciseCutOffTime": "16:30:00",
  "ExpirationTime": "14:30:00",
  "ExpiryTime": "2022-04-11T06:05:13.828277Z",
  "ExposureLimits": [
    {
      "Identifier": "CL",
      "Level": "BaseContractNet",
      "RuleType": "Amount",
      "Value": 200.0
    }
  ],
  "FinanceInterestMarkUp": 9.99,
  "HoldingFee": {
    "FromPeriodInDays": 120,
    "Value": 1.6
  },
  "InstrumentCurrency": "USD",
  "IsTradable": true,
  "MarginRequirement": {
    "MinimumUnderlyingValue": 0.5,
    "Premium": 1.0,
    "TradingProfile": "Basic",
    "UnderlyingValueOvernightExposure": 1.0
  },
  "PortfolioBasedMargin": {
    "ExtremeStressFactor": 15.6,
    "Initial": 185.5,
    "IntraWeek": 8.7,
    "LiquidityThresholdAmount": 569987.0,
    "LiquidityThresholdCurrency": "USD",
    "VolatilityAddOn": 1000.68,
    "VolatilityStress": 100.0
  },
  "Rating": 5.0,
  "SettlementStyle": "PhysicalDelivery",
  "SwapInterestMarkUp": 1.11,
  "Uic": 0
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /cs/v2/cashmanagement/interaccounttransfers:
    post:
      tags:
        - CashManagement - Inter Account Transfer
      description: Interaccount transfer
      operationId: InterAccountTransferTransfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferRequest'
            example: {
  "Amount": 1000.0,
  "Currency": "JPY",
  "FromAccountKey": "-gh-xomNFSNUYdRL0KrPpg==",
  "IsAutoTrading": false,
  "ToAccountKey": "y3kFQWkqJYMgOgaxcoqshA=="
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TransferResult'
              example: {
  "Commission": 0.0,
  "FromAccountAmount": 9.0776625,
  "FromAccountCurrency": "USD",
  "ToAccountAmount": 1000.0,
  "ToAccountCurrency": "JPY"
}
        '200':
          description: Indicates that the transfer was performed correctly.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cs/v1/reports/trades/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Trades
      description: Gets all trades for dates or tradeId.
      operationId: TradesGetDetailsAsync
      parameters:
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $skiptoken
          in: query
          schema:
            type: string
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: AccountGroupKey
          in: query
          description: The key of the account group to which the resource belongs.
          schema:
            title: The key of the account group to which the resource belongs.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: "valuee2441c25-4e71-4162-8f02-f3faeebdf0fc"
        - name: AccountKey
          in: query
          description: The key of the account to which the resource belongs.
          schema:
            title: The key of the account to which the resource belongs.
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: "3e76e8c3-bb23-4912-86e0-7a387d5c7a2d"
        - name: ClientKey
          in: path
          description: The key of the client to which the resource belongs.
          required: true
          schema:
            title: The key of the client to which the resource belongs.
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: "7309a5ef-be28-4aef-885e-f5c1aa6e05e8"
        - name: FromDate
          in: query
          description: 'from date in UTC, ignored when tradeId is given'
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: MockDataId
          in: query
          description: Optional Mock Data Parameter
          schema:
            type: string
        - name: ToDate
          in: query
          description: 'to date in UTC, ignored when tradeId is given'
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
        - name: TradeId
          in: query
          description: 'trade id, accountkey is mandatory with tradeId'
          schema:
            type: string
          example: 293832
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradeListResult'
              example: {
  "__next": "/openapi/....../?$top=1&$skip=1",
  "Data": [
    {
      "AccountCurrency": "AUD",
      "AccountCurrencyDecimals": 0,
      "AccountId": "148455INET",
      "AdjustedTradeDate": "2010-10-10",
      "Amount": -100000.0,
      "AssetType": "FxSpot",
      "ClientCurrency": "AUD",
      "Direction": "None",
      "ExchangeDescription": "Inter Bank",
      "InitialMargin": 0.0,
      "InstrumentCurrencyDecimal": 2,
      "InstrumentDescription": "Australian Dollar/US Dollar",
      "InstrumentSectorName": "Major",
      "InstrumentSectorTypeId": 2,
      "InstrumentSymbol": "AUDUSD",
      "MaintenanceMargin": 0.0,
      "OrderId": "735126300",
      "Price": 0.73356,
      "RootInstrumentSectorName": "FX",
      "RootInstrumentSectorTypeId": 1,
      "Strike": 0.0,
      "ToOpenOrClose": "ToClose",
      "TradeBarrierEventStatus": false,
      "TradeDate": "2015-10-12",
      "TradedValue": 73356.0,
      "TradeEventType": "Sold",
      "TradeExecutionTime": "2015-10-12T04:26:47Z",
      "TradeId": "861198960",
      "TradeType": "Market",
      "Uic": 4,
      "UnderlyingInstrumentDescription": "Australian Dollar/US Dollar",
      "UnderlyingInstrumentSymbol": "AUDUSD",
      "ValueDate": "2015-10-14",
      "Venue": "OTC"
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cs/v1/reports/bookings/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Bookings
      description: Get all bookings for ClientKey between two dates or by specifying a combination of FilterType and FilterValue.
      operationId: BookingGet
      parameters:
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $skiptoken
          in: query
          schema:
            type: string
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: AccountGroupKey
          in: query
          description: The key of the account group to which the resource belongs.
          schema:
            title: The key of the account group to which the resource belongs.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: "valuee2441c25-4e71-4162-8f02-f3faeebdf0fc"
        - name: AccountKey
          in: query
          description: The key of the account to which the resource belongs.
          schema:
            title: The key of the account to which the resource belongs.
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: "3e76e8c3-bb23-4912-86e0-7a387d5c7a2d"
        - name: ClientKey
          in: path
          description: The key of the client to which the resource belongs.
          required: true
          schema:
            title: The key of the client to which the resource belongs.
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: "7309a5ef-be28-4aef-885e-f5c1aa6e05e8"
        - name: FilterType
          in: query
          description: 'Type, basis on which bookings are reterived. If specified you must also specify a FilterValue'
          schema:
            $ref: '#/components/schemas/BookingRequestTypeNullable'
        - name: FilterValue
          in: query
          description: Id for the specified filter type.
          schema:
            type: string
        - name: FromDate
          in: query
          description: 'From date, ignored when filterType and filterValue are not null'
          schema:
            type: string
            format: date
            x-type-name: Date
        - name: MockDataId
          in: query
          description: Optional Mock Data Parameter
          schema:
            type: string
        - name: ToDate
          in: query
          description: 'To date, ignored when filterType and filterValue are not null'
          schema:
            type: string
            format: date
            x-type-name: Date
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BookingListResult'
              example: {
  "__next": "/openapi/....../?$top=1&$skip=1",
  "Data": [
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -1.03999996185303,
      "AmountAccountCurrency": 6.62,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 6.62,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": 1.03602616670318,
      "AssetType": "StockIndexOption",
      "BkAmountId": "3042746175",
      "BkAmountType": "Exchange Fee",
      "BkAmountTypeId": "30",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "USD",
      "Date": "2015-01-15",
      "InstrumentDescription": "Volatility Index (VIX) Jan2015 15.000 C",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "VIX/F15C15:xcbf",
      "RelatedPositionId": "773603907",
      "RelatedTradeId": "773603907",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 1012706,
      "UnderlyingInstrumentDescription": "CBOE Vloatility Index",
      "UnderlyingInstrumentSectorName": "<Unknown>",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "VIX.I",
      "UnderlyingInstrumentUic": 10606,
      "ValueDate": "2015-01-15"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": 1260.0,
      "AmountAccountCurrency": 8010.89,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 8010.89,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": 1253.69964631131,
      "AssetType": "StockIndexOption",
      "BkAmountId": "3042746174",
      "BkAmountType": "Premium",
      "BkAmountTypeId": "12",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "USD",
      "Date": "2015-01-15",
      "InstrumentDescription": "Volatility Index (VIX) Jan2015 15.000 C",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "VIX/F15C15:xcbf",
      "RelatedPositionId": "773603907",
      "RelatedTradeId": "773603907",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 1012706,
      "UnderlyingInstrumentDescription": "CBOE Vloatility Index",
      "UnderlyingInstrumentSectorName": "<Unknown>",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "VIX.I",
      "UnderlyingInstrumentUic": 10606,
      "ValueDate": "2015-01-15"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -6.0,
      "AmountAccountCurrency": -38.15,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -38.15,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": 5.97045290932424,
      "AssetType": "StockIndexOption",
      "BkAmountId": "3042742814",
      "BkAmountType": "Commission",
      "BkAmountTypeId": "4",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "USD",
      "Date": "2015-01-15",
      "InstrumentDescription": "Volatility Index (VIX) Jan2015 15.000 C",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "VIX/F15C15:xcbf",
      "RelatedPositionId": "773603907",
      "RelatedTradeId": "773603907",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 1012706,
      "UnderlyingInstrumentDescription": "CBOE Vloatility Index",
      "UnderlyingInstrumentSectorName": "<Unknown>",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "VIX.I",
      "UnderlyingInstrumentUic": 10606,
      "ValueDate": "2015-01-15"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -1186.5,
      "AmountAccountCurrency": -7654.42,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -7654.42,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -1189.20237392412,
      "AssetType": "Stock",
      "BkAmountId": "3052212830",
      "BkAmountType": "Share Amount",
      "BkAmountTypeId": "2",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "USD",
      "Date": "2015-01-20",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT:xnas",
      "RelatedPositionId": "775130723",
      "RelatedTradeId": "775130723",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSectorName": "Telecommunications Equipment",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT:xnas",
      "UnderlyingInstrumentUic": 85485,
      "ValueDate": "2015-01-23"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -12.0,
      "AmountAccountCurrency": -77.42,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -77.42,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -12.0280893639499,
      "AssetType": "Stock",
      "BkAmountId": "3051745520",
      "BkAmountType": "Commisison",
      "BkAmountTypeId": "4",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "USD",
      "Date": "2015-01-20",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT:xnas",
      "RelatedPositionId": "775130723",
      "RelatedTradeId": "775130723",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSectorName": "Telecommunications Equipment",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT:xnas",
      "UnderlyingInstrumentUic": 85485,
      "ValueDate": "2015-01-23"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -10.0,
      "AmountAccountCurrency": -66.79,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -66.79,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -10.0261198510868,
      "AssetType": "CfdOnStock",
      "BkAmountId": "3126672978",
      "BkAmountType": "Commisison",
      "BkAmountTypeId": "4",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "USD",
      "Date": "2015-03-02",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT:xnas",
      "RelatedPositionId": "787515963",
      "RelatedTradeId": "787515963",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSectorName": "Telecommunications Equipment",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT:xnas",
      "UnderlyingInstrumentUic": 85485,
      "ValueDate": "2015-03-02"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -10.0,
      "AmountAccountCurrency": -66.79,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -66.79,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -10.0261198510868,
      "AssetType": "CfdOnStock",
      "BkAmountId": "3126672978",
      "BkAmountType": "Commisison",
      "BkAmountTypeId": "4",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "USD",
      "Date": "2015-03-02",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT:xnas",
      "RelatedPositionId": "787515963",
      "RelatedTradeId": "787515963",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSectorName": "Telecommunications Equipment",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT:xnas",
      "UnderlyingInstrumentUic": 85485,
      "ValueDate": "2015-03-02"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -2.96,
      "AmountAccountCurrency": -20.61,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -20.61,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -2.96031369845305,
      "AssetType": "CfdOnStock",
      "BkAmountId": "3185111269",
      "BkAmountType": "CFD Finance",
      "BkAmountTypeId": "10",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "USD",
      "Date": "2015-03-31",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT:xnas",
      "RelatedPositionId": "0",
      "RelatedTradeId": "0",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSectorName": "Telecommunications Equipment",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT:xnas",
      "UnderlyingInstrumentUic": 85485,
      "ValueDate": "2015-04-01"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -0.3,
      "AmountAccountCurrency": -2.24,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -2.24,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -0.334595535240827,
      "AssetType": "CfdOnStock",
      "BkAmountId": "3360198216",
      "BkAmountType": "CFD Finance",
      "BkAmountTypeId": "10",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "EUR",
      "Date": "2015-06-30",
      "InstrumentDescription": "National Bank of Greece SA",
      "InstrumentSectorName": "Banks",
      "InstrumentSectorTypeId": 656,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "ETE=xath",
      "RelatedPositionId": "0",
      "RelatedTradeId": "0",
      "RootInstrumentSectorName": "Financials",
      "RootInstrumentSectorTypeId": 509,
      "Uic": 20690,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "National Bank of Greece SA",
      "UnderlyingInstrumentSectorName": "Banks",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "ETE=xath",
      "UnderlyingInstrumentUic": 20690,
      "ValueDate": "2015-07-01"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -6.41,
      "AmountAccountCurrency": -6.41,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -6.41,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -0.949643698425162,
      "BkAmountId": "3360618999",
      "BkAmountType": "Interest",
      "BkAmountTypeId": "45",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "DKK",
      "Date": "2015-07-01",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "RelatedPositionId": "0",
      "RelatedTradeId": "0",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 0,
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentUic": 0,
      "ValueDate": "2015-07-01"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -3.06,
      "AmountAccountCurrency": -20.79,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -20.79,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -3.06030073085104,
      "AssetType": "CfdOnStock",
      "BkAmountId": "3420534529",
      "BkAmountType": "CFD Finance",
      "BkAmountTypeId": "10",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "USD",
      "Date": "2015-07-31",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RelatedPositionId": "0",
      "RelatedTradeId": "0",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSectorName": "Telecommunications Equipment",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485,
      "ValueDate": "2015-08-03"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -0.31,
      "AmountAccountCurrency": -2.31,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -2.31,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -0.340033414539004,
      "AssetType": "CfdOnStock",
      "BkAmountId": "3420454836",
      "BkAmountType": "CFD Finance",
      "BkAmountTypeId": "10",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "EUR",
      "Date": "2015-07-31",
      "InstrumentDescription": "National Bank of Greece SA",
      "InstrumentSectorName": "Banks",
      "InstrumentSectorTypeId": 656,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "ETE=xath",
      "RelatedPositionId": "0",
      "RelatedTradeId": "0",
      "RootInstrumentSectorName": "Financials",
      "RootInstrumentSectorTypeId": 509,
      "Uic": 20690,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "National Bank of Greece SA",
      "UnderlyingInstrumentSectorName": "Banks",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "ETE=xath",
      "UnderlyingInstrumentUic": 20690,
      "ValueDate": "2015-08-03"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -4.6,
      "AmountAccountCurrency": -4.6,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -4.6,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -0.675050995700219,
      "BkAmountId": "3420990244",
      "BkAmountType": "Interest",
      "BkAmountTypeId": "45",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "DKK",
      "Date": "2015-08-03",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "RelatedPositionId": "0",
      "RelatedTradeId": "0",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 0,
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentUic": 0,
      "ValueDate": "2015-08-03"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -325.0,
      "AmountAccountCurrency": -2182.26,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -2182.26,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -326.285099129811,
      "AssetType": "StockIndexOption",
      "BkAmountId": "3440442853",
      "BkAmountType": "Premium",
      "BkAmountTypeId": "12",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "USD",
      "Date": "2015-08-12",
      "InstrumentDescription": "Volatility Index (VIX) Aug2015 15 C",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "VIX/Q15C15=xcbf",
      "RelatedPositionId": "840409122",
      "RelatedTradeId": "840409122",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 1561206,
      "UnderlyingInstrumentDescription": "CBOE Volatility Index",
      "UnderlyingInstrumentSectorName": "<Unknown>",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "VIX.I",
      "UnderlyingInstrumentUic": 10606,
      "ValueDate": "2015-08-12"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -1.03999996185303,
      "AmountAccountCurrency": -6.96,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -6.96,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -1.04063873687988,
      "AssetType": "StockIndexOption",
      "BkAmountId": "3440445011",
      "BkAmountType": "Exchange Fee",
      "BkAmountTypeId": "30",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "USD",
      "Date": "2015-08-12",
      "InstrumentDescription": "Volatility Index (VIX) Aug2015 16 P",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "VIX/Q15P16=xcbf",
      "RelatedPositionId": "840305316",
      "RelatedTradeId": "840305316",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 1561245,
      "UnderlyingInstrumentDescription": "CBOE Volatility Index",
      "UnderlyingInstrumentSectorName": "<Unknown>",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "VIX.I",
      "UnderlyingInstrumentUic": 10606,
      "ValueDate": "2015-08-12"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -1.03999996185303,
      "AmountAccountCurrency": -6.91,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -6.91,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -1.03316288388505,
      "AssetType": "StockIndexOption",
      "BkAmountId": "3440445585",
      "BkAmountType": "Exchange Fee",
      "BkAmountTypeId": "30",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "USD",
      "Date": "2015-08-12",
      "InstrumentDescription": "Volatility Index (VIX) Aug2015 16 P",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "VIX/Q15P16=xcbf",
      "RelatedPositionId": "840407407",
      "RelatedTradeId": "840407407",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 1561245,
      "UnderlyingInstrumentDescription": "CBOE Volatility Index",
      "UnderlyingInstrumentSectorName": "<Unknown>",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "VIX.I",
      "UnderlyingInstrumentUic": 10606,
      "ValueDate": "2015-08-12"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -260.0,
      "AmountAccountCurrency": -1741.21,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -1741.21,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -260.340599862444,
      "AssetType": "StockIndexOption",
      "BkAmountId": "3440441397",
      "BkAmountType": "Premium",
      "BkAmountTypeId": "12",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "USD",
      "Date": "2015-08-12",
      "InstrumentDescription": "Volatility Index (VIX) Aug2015 16 P",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "VIX/Q15P16=xcbf",
      "RelatedPositionId": "840305316",
      "RelatedTradeId": "840305316",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 1561245,
      "UnderlyingInstrumentDescription": "CBOE Volatility Index",
      "UnderlyingInstrumentSectorName": "<Unknown>",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "VIX.I",
      "UnderlyingInstrumentUic": 10606,
      "ValueDate": "2015-08-12"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -19.0,
      "AmountAccountCurrency": -19.0,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -19.0,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -2.85383841266503,
      "AssetType": "Stock",
      "BkAmountId": "3479817118",
      "BkAmountType": "Commission",
      "BkAmountTypeId": "4",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "DKK",
      "Date": "2015-08-31",
      "InstrumentDescription": "Wealth Invest Sirius Balance",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 400,
      "InstrumentSubType": "Etf",
      "InstrumentSymbol": "WEISIB=xcse",
      "RelatedPositionId": "847585758",
      "RelatedTradeId": "847585758",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 400,
      "Uic": 343053,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Wealth Invest Sirius Balance",
      "UnderlyingInstrumentSectorName": "<Unknown>",
      "UnderlyingInstrumentSubType": "Etf",
      "UnderlyingInstrumentSymbol": "WEISIB=xcse",
      "UnderlyingInstrumentUic": 343053,
      "ValueDate": "2015-09-02"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -1072.8,
      "AmountAccountCurrency": -1072.8,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -1072.8,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -161.136728900371,
      "AssetType": "Stock",
      "BkAmountId": "3480224792",
      "BkAmountType": "Share Amount",
      "BkAmountTypeId": "2",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "DKK",
      "Date": "2015-08-31",
      "InstrumentDescription": "Wealth Invest Sirius Balance",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 400,
      "InstrumentSubType": "Etf",
      "InstrumentSymbol": "WEISIB=xcse",
      "RelatedPositionId": "847585758",
      "RelatedTradeId": "847585758",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 400,
      "Uic": 343053,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Wealth Invest Sirius Balance",
      "UnderlyingInstrumentSectorName": "<Unknown>",
      "UnderlyingInstrumentSubType": "Etf",
      "UnderlyingInstrumentSymbol": "WEISIB=xcse",
      "UnderlyingInstrumentUic": 343053,
      "ValueDate": "2015-09-02"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -1103.0,
      "AmountAccountCurrency": -1103.0,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -1103.0,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -165.672829956291,
      "AssetType": "Stock",
      "BkAmountId": "3480224810",
      "BkAmountType": "Share Amount",
      "BkAmountTypeId": "2",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "DKK",
      "Date": "2015-08-31",
      "InstrumentDescription": "Wealth Invest - Saxo Global Equities",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 400,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "WEISGE=xcse",
      "RelatedPositionId": "847585836",
      "RelatedTradeId": "847585836",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 400,
      "Uic": 1307373,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Wealth Invest - Saxo Global Equities",
      "UnderlyingInstrumentSectorName": "<Unknown>",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "WEISGE=xcse",
      "UnderlyingInstrumentUic": 1307373,
      "ValueDate": "2015-09-02"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -19.0,
      "AmountAccountCurrency": -19.0,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -19.0,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -2.85383841266503,
      "AssetType": "Stock",
      "BkAmountId": "3479817136",
      "BkAmountType": "Commission",
      "BkAmountTypeId": "4",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "DKK",
      "Date": "2015-08-31",
      "InstrumentDescription": "Wealth Invest - Saxo Global Equities",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 400,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "WEISGE=xcse",
      "RelatedPositionId": "847585836",
      "RelatedTradeId": "847585836",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 400,
      "Uic": 1307373,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Wealth Invest - Saxo Global Equities",
      "UnderlyingInstrumentSectorName": "<Unknown>",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "WEISGE=xcse",
      "UnderlyingInstrumentUic": 1307373,
      "ValueDate": "2015-09-02"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -1.03999996185303,
      "AmountAccountCurrency": -7.12,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -7.12,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -1.04404184965504,
      "AssetType": "StockIndexOption",
      "BkAmountId": "3679054443",
      "BkAmountType": "Exchange Fee",
      "BkAmountTypeId": "30",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "USD",
      "Date": "2015-12-10",
      "InstrumentDescription": "Volatility Index (VIX) Jan2016 20 P",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "VIX/F16P20=xcbf",
      "RelatedPositionId": "883010450",
      "RelatedTradeId": "883010450",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 2206610,
      "UnderlyingInstrumentDescription": "CBOE Volatility Index",
      "UnderlyingInstrumentSectorName": "<Unknown>",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "VIX.I",
      "UnderlyingInstrumentUic": 10606,
      "ValueDate": "2015-12-10"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -680.0,
      "AmountAccountCurrency": -4653.05,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -4653.05,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -682.300411311431,
      "AssetType": "StockIndexOption",
      "BkAmountId": "3679054441",
      "BkAmountType": "Premium",
      "BkAmountTypeId": "12",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "USD",
      "Date": "2015-12-10",
      "InstrumentDescription": "Volatility Index (VIX) Jan2016 20 P",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "VIX/F16P20=xcbf",
      "RelatedPositionId": "883010450",
      "RelatedTradeId": "883010450",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 2206610,
      "UnderlyingInstrumentDescription": "CBOE Volatility Index",
      "UnderlyingInstrumentSectorName": "<Unknown>",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "VIX.I",
      "UnderlyingInstrumentUic": 10606,
      "ValueDate": "2015-12-10"
    },
    {
      "AccountCurrency": "DKK",
      "AccountId": "179643INET",
      "Amount": -12.0,
      "AmountAccountCurrency": -82.11,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -82.11,
      "AmountSubClass": "NotAssigned",
      "AmountUSD": -12.040207342019,
      "AssetType": "StockIndexOption",
      "BkAmountId": "3679054442",
      "BkAmountType": "Commission",
      "BkAmountTypeId": "4",
      "CaMasterRecordId": "0",
      "ClientCurrency": "DKK",
      "ConversionRate": 0.0,
      "ConversionRateAccountCurrency": 0.0,
      "ConversionRateClientCurrency": 0.0,
      "ConversionRateUSD": 0.0,
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Currency": "USD",
      "Date": "2015-12-10",
      "InstrumentDescription": "Volatility Index (VIX) Jan2016 20 P",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "VIX/F16P20=xcbf",
      "RelatedPositionId": "883010450",
      "RelatedTradeId": "883010450",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 2206610,
      "UnderlyingInstrumentDescription": "CBOE Volatility Index",
      "UnderlyingInstrumentSectorName": "<Unknown>",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "VIX.I",
      "UnderlyingInstrumentUic": 10606,
      "ValueDate": "2015-12-10"
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /cs/v1/mifid/appropriatenesstests:
    get:
      tags:
        - MiFID - AppropriatenessTest
      summary: Get appropriateness test
      description: 'Get the most recent appropriateness test including structure, questions and answers for the currently logged in user.'
      operationId: AppropriatenessTestsGetAsync
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppropriatenessTest'
              example: {
  "AppropriatenessTestId": "44299041-87a2-48d7-a5fb-6600e18e7a70",
  "Description": "As an EU regulated Bank, Saxo Bank is required to consider whether its products are appropriate for retail clients. Saxo Bank therefore encourages you to answer the below questions in order for Saxo Bank to be able to determine which products may be appropriate for you. \n\nYou will receive these questions every time you log on until you have completed the test",
  "Name": "Appropriateness Version 24",
  "PublishedDate": "2014-12-14",
  "QuestionSections": [
    {
      "Name": "Educational background",
      "Questions": [
        {
          "QuestionId": "9949d4c0-0660-4869-8c05-040745b275bb",
          "QuestionOptions": [
            {
              "QuestionOptionId": "89c31333-ff3d-4218-a7bc-5857527e1967",
              "Selected": true,
              "Text": "Primary school"
            }
          ],
          "QuestionText": "What is your educational background?"
        }
      ],
      "Title": "Educational background"
    }
  ],
  "Title": "Appropriateness test"
}
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    put:
      tags:
        - MiFID - AppropriatenessTest
      summary: Update appropriateness test with answers
      description: Updates the appropriateness test for the currently logged in user.
      operationId: AppropriatenessTestsUpdate
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppropriatenessTest'
            example: {
  "AppropriatenessTestId": "44299041-87a2-48d7-a5fb-6600e18e7a70",
  "Description": "As an EU regulated Bank, Saxo Bank is required to consider whether its products are appropriate for retail clients. Saxo Bank therefore encourages you to answer the below questions in order for Saxo Bank to be able to determine which products may be appropriate for you. \n\nYou will receive these questions every time you log on until you have completed the test",
  "Name": "Appropriateness Version 24",
  "PublishedDate": "2014-12-14",
  "QuestionSections": [
    {
      "Name": "Educational background",
      "Questions": [
        {
          "QuestionId": "9949d4c0-0660-4869-8c05-040745b275bb",
          "QuestionOptions": [
            {
              "QuestionOptionId": "89c31333-ff3d-4218-a7bc-5857527e1967",
              "Selected": true,
              "Text": "Primary school"
            }
          ],
          "QuestionText": "What is your educational background?"
        }
      ],
      "Title": "Educational background"
    }
  ],
  "Title": "Appropriateness test"
}
      responses:
        '204':
          description: No Content
        '200':
          description: Indicates that the updated was performed correctly.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - AutoMapperError
                    type: string
                    x-enum-descriptions:
                      AutoMapperError: AutoMapper failed type casting.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/support/cases/{CaseId}/attachments/{FileId}':
    get:
      tags:
        - Support - Cases
      summary: Retrieves a specified file attached to a specific case
      description: Adds file to a case.
      operationId: SupportCasesGetFile
      parameters:
        - name: CaseId
          in: path
          description: The case id
          required: true
          schema:
            type: string
          example: c9bd4b27-2ab7-46aa-932e-7f5258093928
        - name: FileId
          in: path
          description: The file id.
          required: true
          schema:
            type: string
          example: sdbd4b27-2ab7-46aa-932e-7f5258093928
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HttpResponseMessage'
              example: null
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidQueryParameters
                    type: string
                    x-enum-descriptions:
                      InvalidQueryParameters: One or more of the query parameters are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/support/cases/{CaseId}/attachments':
    post:
      tags:
        - Support - Cases
      summary: Add file to a case
      description: Adds file to a case.
      operationId: SupportCasesAttachFile
      parameters:
        - name: CaseId
          in: path
          description: The case id
          required: true
          schema:
            type: string
          example: c9bd4b27-2ab7-46aa-932e-7f5258093928
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: The request is invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/support/cases/{CaseId}/notes':
    post:
      tags:
        - Support - Cases
      summary: Add note to an case
      description: Adds note to an existing case
      operationId: SupportCasesCreateNote
      parameters:
        - name: CaseId
          in: path
          description: The case id
          required: true
          schema:
            type: string
          example: c9bd4b27-2ab7-46aa-932e-7f5258093928
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNoteCommand'
            example: {
  "CaseId": "CaseId58e022b5-766f-48ff-b568-295e967cf48f",
  "ClientId": "ClientIda4103bcf-aab8-41cf-a4c7-b34ca54de5b0",
  "CreatedDate": "2023-03-26T05:19:23.9189711",
  "Note": "Notefadc599b-0e3b-4d34-9d0b-298b7a0eee91",
  "Title": "Title95a5e20b-d036-4ba9-aa73-ef1b4697473c"
}
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: The request is invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/support/cases/{CaseId}/casereopenrequests':
    post:
      tags:
        - Support - Cases
      description: Reopen case requests.
      operationId: SupportCasesAcceptReopenCaseRequest
      parameters:
        - name: CaseId
          in: path
          description: The case ID
          required: true
          schema:
            type: string
          example: c9bd4b27-2ab7-46aa-932e-7f5258093928
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: The request is invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/support/cases/{CaseId}/casecloserequests':
    post:
      tags:
        - Support - Cases
      description: Close case requests
      operationId: SupportCasesAcceptCloseCaseRequest
      parameters:
        - name: CaseId
          in: path
          description: The case Id
          required: true
          schema:
            type: string
          example: c9bd4b27-2ab7-46aa-932e-7f5258093928
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloseCaseCommand'
            example: {
  "CaseId": "CaseIdc232bd83-f95f-4986-9340-7b0f7e68d742",
  "ClientId": "ClientIdafb605b5-a3e2-479c-ad2f-c72cfc304829",
  "CloseNote": "CloseNote2206e1a2-f534-489f-a740-100e54c9ff91"
}
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: The request is invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/support/cases/{CaseId}':
    get:
      tags:
        - Support - Cases
      summary: Get a specific client support case
      description: Get a specific client support case. The calling application can specify preferred language in the Accept-Language header.
      operationId: SupportCasesGetCase
      parameters:
        - name: CaseId
          in: path
          required: true
          schema:
            type: string
          example: c9bd4b27-2ab7-46aa-932e-7f5258093928
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Case'
              example: {
  "CaseId": "CaseId70962872-340a-4887-bc18-08b81d16162c",
  "CaseStatus": "Closed",
  "CreatedDate": "2022-06-16T08:05:11.245557Z",
  "Deadline": "2022-07-08T01:16:15.662108Z",
  "Description": "Description2c0dc7fe-00a8-4736-b76b-784320daf7d6",
  "HasAttachment": true,
  "ModifiedDate": "2023-03-15T02:46:42.514655Z",
  "Notes": [
    {
      "CreatedDate": "2023-07-24T11:25:56.984262Z",
      "FileId": "FileIdcd1a7252-2b73-4241-9a53-e825000d28fc",
      "FileName": "FileNamec61cfa8a-e2f9-4164-80cb-4a74702f882e",
      "FileSize": 32614,
      "Note": "Note4cc8926b-41ec-4739-b7f1-389f744b5276",
      "Title": "Title2e48a930-2074-4932-a8a1-0a3d1bf611f9"
    }
  ],
  "NotifyClient": false,
  "SubjectId": "SubjectId7319d3af-a5fb-43ff-9e21-336f40b1cb71",
  "TicketNumber": "TicketNumber03107c0a-df3a-4f34-850e-176e42bb11b1",
  "Title": "Title8f5dd859-2bef-4ee7-841a-ddf785d2246d"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: The request is invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    patch:
      tags:
        - Support - Cases
      summary: Update support case
      description: Update the support case. Set the NotifyClientProperty
      operationId: SupportCasesUpdateCase
      parameters:
        - name: CaseId
          in: path
          description: The case id
          required: true
          schema:
            type: string
          example: c9bd4b27-2ab7-46aa-932e-7f5258093928
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCaseCommand'
            example: {
  "NotifyClient": false
}
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseOperationResponse'
              example: {
  "TicketNumber": "TicketNumber0162b986-e7c3-4770-bdd1-f1e7b93c1f4c"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: The request is invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/support/cases/me:
    get:
      tags:
        - Support - Cases
      summary: Get a list of cilent support cases
      description: Get list of support cases for the client associated with the currently logged in user.
      operationId: SupportCasesGetMyCases
      parameters:
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 50
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Model.CaseSummaryListResult'
              example: {
  "Data": [
    {
      "CaseId": "CaseId4625f8a3-2492-43fc-9309-efe18c496818",
      "CaseStatus": "Open",
      "CreatedDate": "2021-04-16T08:35:38.179057Z",
      "Deadline": "2023-11-21T12:07:47.490652Z",
      "Description": "Description8da83507-741c-4a06-95aa-e1baf7ac5e6b",
      "HasAttachment": true,
      "HasNote": true,
      "ModifiedDate": "2020-08-18T14:53:41.969086Z",
      "NotifyClient": false,
      "SubjectId": "SubjectIdc7b8b84f-d393-41cc-b6c0-f4512faa8268",
      "TicketNumber": "TicketNumberec7a02c2-207b-4b97-b5b3-962379495c27",
      "Title": "Title328dbd7d-d852-4f5f-911a-18fe1934da48"
    }
  ],
  "MaxRows": 7907
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    post:
      tags:
        - Support - Cases
      summary: Create a new support case related to the current client
      description: Creates a new case related to the client associated with the logged in user.
      operationId: SupportCasesCreateCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCaseCommand'
            example: {
  "CaseTitle": "CaseTitlef2fba36e-dc07-46e5-8faa-621e6342d03c",
  "Description": "Description70d27de8-a427-4743-837d-518b7d0800fc",
  "InternalCase": true,
  "NotifyClient": false,
  "SubjectId": "SubjectIdefe833ac-a3ab-458d-8f09-3e8a70928d9e"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseCreatedResponse'
              example: {
  "CaseId": "CaseId46fc900a-50e3-442f-a242-3bbadc2a05a8",
  "TicketNumber": "TicketNumber5f513e07-4a33-4dcc-83cd-574bba92f1e5"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: The request is invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/audit/orderactivities:
    get:
      tags:
        - Audit - OrderActivities
      summary: Query Order activities history
      description: "Query Order activities history\r\n\r\n\r\nThe __nextPoll link is present when relevant and MUST be used for continuously polling\r\n\r\n\r\nOur preferred option for continuously fetching order activities is to stream it out of ENS"
      operationId: OrderActivitiesGetOrderStatesAsync
      parameters:
        - name: $skiptoken
          in: query
          schema:
            type: string
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: AccountKey
          in: query
          description: 'Account key: If specified will only return entries pertaining to specified Account.'
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: uLDoIiVA30y8uj4kFKp7Og ==
        - name: ClientKey
          in: query
          description: 'Client key: If specified will only return entries pertaining to specified client and its sub clients depending upon includeSubAccounts.'
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 2y0tX0m9ZH7MH8HK38qM9g==
        - name: CorrelationKey
          in: query
          description: 'CorrelationKey: If specified, will only return entries with the specified CorrelationKey'
          schema:
            type: string
          example: bb6bfb96-606d-45d6-95f5-efa443192f5c
        - name: EntryType
          in: query
          description: 'EntryType: optional. Defaults to ''All'': Return all entries pertaining to any order. ''Last'': Only return the latest state of an order ignoring ToDateTime (if any).'
          schema:
            $ref: '#/components/schemas/Models.OrderEntryTypeNullable'
          example: All
        - name: FieldGroups
          in: query
          description: 'FieldGroups: DisplayAndFormat'
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/Models.OrderActivityFieldGroup'
          example: DisplayAndFormat
        - name: FromDateTime
          in: query
          description: 'Only include entries, with a ActivityDateTime greater than or equal to FromDateTime'
          schema:
            type: string
            format: date-time
            x-type-name: UtcDateTime
          example: '2017-12-01T00:00:00.0000000+00:00'
        - name: IncludeSubAccounts
          in: query
          description: 'IncludeSubAccounts: If specified true will return entries for all clients under specified ClientId in a hierarchy.'
          schema:
            type: boolean
          example: false
        - name: OrderId
          in: query
          description: 'OrderId: Will only return entries pertaining to specified OrderId'
          schema:
            type: string
          example: 234728341
        - name: Status
          in: query
          description: 'Status: If specified will only return entries with the specified OrderStatus'
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OrderLogStatus'
          example: Placed
        - name: ToDateTime
          in: query
          description: 'Only include entries, with a ActivityDateTime less than or equal to ToDateTime. Cannot be used with EntryType="Last"'
          schema:
            type: string
            format: date-time
            x-type-name: UtcDateTime
          example: '2017-12-31T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.OrderActivitiesResponseListResult'
              example: {
  "__next": "/openapi/....../?$top=1&$skiptoken=1",
  "Data": [
    {
      "AccountId": "120602INET",
      "ActivityTime": "2017-12-28T08:20:19Z",
      "Amount": 300.0,
      "AssetType": "CfdOnStock",
      "BuySell": "Buy",
      "ClientId": "3031269",
      "CorrelationKey": "bb6bfb96-606d-45d6-95f5-efa443192f5c",
      "DisplayAndFormat": {
        "BarrierFormat": "Normal",
        "Currency": "DKK",
        "Decimals": 3,
        "Description": "Genmab A/S",
        "Format": "Normal",
        "OrderDecimals": 2,
        "StrikeFormat": "Normal",
        "Symbol": "GEN:xcse"
      },
      "Duration": {
        "DurationType": "DayOrder"
      },
      "HandledBy": "3031269",
      "LogId": "260971",
      "OrderId": "234728341",
      "OrderRelation": "StandAlone",
      "OrderType": "Market",
      "Price": 1048.2,
      "SleepingOrderCondition": {
        "BreakoutTriggerDownPrice": 150.1,
        "BreakoutTriggerUpPrice": 160.6,
        "BuySell": "Buy",
        "ConditionId": "114485191",
        "Duration": {
          "DurationType": "DayOrder"
        },
        "OrderType": "LimitTrigger",
        "Price": 16000.01,
        "Status": "Placed",
        "SubStatus": "Confirmed",
        "Symbol": "NAS100.I",
        "TrailingStopDistanceToMarket": 10.1,
        "TriggerPriceType": "Ask",
        "Uic": 1909050
      },
      "Status": "Placed",
      "SubStatus": "Requested",
      "Uic": 2090
    }
  ]
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cs/v2/subscriptionbilling/billingdetails/{ClientKey}':
    get:
      tags:
        - Subscription Billing - Billing Details
      description: Obsolete Gets the billing details between two dates for all users of the client
      operationId: BillingDetailV2GetBillingDetailsForAllUsers
      parameters:
        - name: ClientKey
          in: path
          description: Client Key
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: FromDate
          in: query
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: IncludeAllUsers
          in: query
          description: 'Whether billing details of all the users of the client are required, if false then only the logged in user will be considered'
          schema:
            type: boolean
        - name: ToDate
          in: query
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingDetailListResult'
              example: {
  "Data": [
    {
      "AccountCurrencyCode": "USD",
      "AccountCurrencyDecimals": 2,
      "AccountId": "430001/918866",
      "AmountAccountCurrency": -1.5,
      "AmountServiceCurrency": 2.5,
      "LevelName": "Level 1",
      "ServiceCurrencyCode": "USD",
      "ServiceCurrencyDecimals": 2,
      "ServiceName": "NASDAQ",
      "StatusName": "Private",
      "TradeDate": "2022-04-05T06:05:13.614706Z",
      "UserId": 109903911
    }
  ],
  "MaxRows": 20924
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      deprecated: true
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
      x-deprecated-date: '2022-01-01'
  /cs/v2/subscriptionbilling/billingdetails:
    get:
      tags:
        - Subscription Billing - Billing Details
      description: Gets the billing details between two dates
      operationId: BillingDetailV2GetBillingDetails
      parameters:
        - name: ClientKey
          in: query
          description: 'Client Identifier Key: If specified will return billing details for all users'
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: FromDate
          in: query
          description: From Date
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: To Date
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2018-10-10T00:00:00.0000000+00:00'
        - name: UserKey
          in: query
          description: 'User Identifier Key: If specified will return billing details for specified user'
          schema:
            minLength: 1
            type: string
            x-type-name: UserKey
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BillingDetailListResult'
              example: {
  "Data": [
    {
      "AccountCurrencyCode": "USD",
      "AccountCurrencyDecimals": 2,
      "AccountId": "430001/918866",
      "AmountAccountCurrency": -1.5,
      "AmountServiceCurrency": 2.5,
      "LevelName": "Level 1",
      "ServiceCurrencyCode": "USD",
      "ServiceCurrencyDecimals": 2,
      "ServiceName": "NASDAQ",
      "StatusName": "Private",
      "TradeDate": "2022-04-05T06:05:13.614706Z",
      "UserId": 109903911
    }
  ],
  "MaxRows": 20924
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/audit/activities/security:
    get:
      tags:
        - Audit - Activities
      summary: Get securities activities for specified client
      description: "Gets the security activity log for a specific client. Entries are returned with the first item being the most resent activity. \r\n\r\n\r\nYou may filter the list by specifying various parameters in the query string.\r\n\r\n\r\nThe returned description is translated to the language specified in the accept-language header."
      operationId: ActivityLogGetSecurityRelatedActivities
      parameters:
        - name: $skiptoken
          in: query
          schema:
            type: string
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 10
        - name: ClientKey
          in: query
          description: Client key
          required: true
          schema:
            title: Client key
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: "7309a5ef-be28-4aef-885e-f5c1aa6e05e8"
        - name: From
          in: query
          description: From datetime in UTC
          schema:
            title: From datetime in UTC
            type: string
            format: date-time
            x-type-name: UtcDateTime
          example: "2022-11-22T04:12:10.295922Z"
        - name: To
          in: query
          description: To datetime in UTC
          schema:
            title: To datetime in UTC
            type: string
            format: date-time
            x-type-name: UtcDateTime
          example: "2022-11-22T04:12:10.295922Z"
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityListResult'
              example: {
  "__next": "/openapi/....../?$top=1&$skip=1",
  "Data": [
    {
      "AccountId": "192134INET",
      "ClientId": "2147279170",
      "CorrelationKey": "481bf7ae-bbcc-4187-b198-8ad02103c933",
      "Created": "2014-01-23T00:00:00Z",
      "Description": "Position 106472330: Tomorrow / Next Roll. Position rolled from the 17 Dec 2014 to the 18 Dec 2014. Old price: 1.21298, New price: 1.21301",
      "LogId": "193733",
      "PostingId": "106472330",
      "UserId": "54658"
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/audit/activities:
    get:
      tags:
        - Audit - Activities
      summary: Get activities for specified client
      description: "Gets the activity log for a specific client. Entries are returned with the first item being the most resent activity. \r\n\r\n\r\nYou may filter the list by specifying various parameters in the query string.\r\n\r\n\r\nThe returned description is translated to the language specified in the accept-language header."
      operationId: ActivityLogGet
      parameters:
        - name: $skiptoken
          in: query
          schema:
            type: string
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 50
        - name: AccountGroupKey
          in: query
          description: Filter by accounts in an account group.
          schema:
            title: Filter by accounts in an account group.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: "valuee5e8aa7b-fff7-49e0-b48b-c9956c394dde"
        - name: AccountKey
          in: query
          description: Account Key
          schema:
            title: Account Key
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: "ef7c5c6a-acdc-4696-8595-118797f96b7c"
        - name: ClientKey
          in: query
          description: Client Key
          required: true
          schema:
            title: Client Key
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: "7309a5ef-be28-4aef-885e-f5c1aa6e05e8"
        - name: CorrelationKey
          in: query
          description: Entry must relate to specified correlationKey
          schema:
            title: Entry must relate to specified correlationKey
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: From
          in: query
          description: From Date
          schema:
            title: From Date
            type: string
            format: date-time
            x-type-name: UtcDateTime
          example: "2022-11-22T04:12:10.295922Z"
        - name: LogEntryTypes
          in: query
          description: Select the subset of activities to return
          schema:
            title: Select the subset of activities to return
            type: array
            items:
              $ref: '#/components/schemas/LogEntryType'
          example: [
  "Chat"
]
        - name: PostingId
          in: query
          description: Entry must refer to specified PostingId
          schema:
            title: Entry must refer to specified PostingId
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: To
          in: query
          description: To Date
          schema:
            title: To Date
            type: string
            format: date-time
            x-type-name: UtcDateTime
          example: "2022-11-22T04:12:10.295922Z"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ActivityListResult'
              example: {
  "__next": "/openapi/....../?$top=1&$skip=1",
  "Data": [
    {
      "AccountId": "192134INET",
      "ClientId": "2147279170",
      "CorrelationKey": "481bf7ae-bbcc-4187-b198-8ad02103c933",
      "Created": "2014-01-23T00:00:00Z",
      "Description": "Position 106472330: Tomorrow / Next Roll. Position rolled from the 17 Dec 2014 to the 18 Dec 2014. Old price: 1.21298, New price: 1.21301",
      "LogId": "193733",
      "PostingId": "106472330",
      "UserId": "54658"
    }
  ]
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /cs/v1/membershippoints/performance:
    get:
      tags:
        - URM Membership Points
      summary: Historical point balance for client
      description: Gets the historical point balance for the client. It returns the client performance data on the basis of time series mentioned in field group
      operationId: MembershipPointsGetPerformance
      parameters:
        - name: ClientKey
          in: query
          description: 'If not provided, the request is executed in the context of the currently authenticated client. If provided, in the context of the client the key refer to'
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: W-CgwnsUEpETkiR8MPJalA==
        - name: FieldGroups
          in: query
          description: 'Series field group - Daily, Monthly, Yearly'
          schema:
            $ref: '#/components/schemas/TimeFieldGroup'
          example: 'Daily,Monthly,Yearly'
        - name: FromDate
          in: query
          description: Only valid if PointSeriesGroup is requested. From date from which the historical points are requested
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2018-01-20T00:00:00.0000000+00:00'
        - name: IncludeExpired
          in: query
          description: 'Only valid if PointSeriesGroup is requested. By default true. To exclude expired points, pass this as false'
          schema:
            type: boolean
          example: true
        - name: PointSourceType
          in: query
          description: Only valid if PointSeriesGroup is requested. By default all source types will be delivered. Same will come from Lookup data endpoint. Comma separated list of keys. If provided will return the events for that particular type else All
          schema:
            type: array
            items:
              type: integer
              format: int32
          example: 14
        - name: ToDate
          in: query
          description: Only valid if PointSeriesGroup is requested. To date till which the historical points are requested.
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2019-01-20T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PerformanceResponse'
              example: {
  "DailySeries": [
    {
      "Date": "2022-04-05",
      "IsExpired": false,
      "Points": 20
    },
    {
      "Date": "2022-04-06",
      "IsExpired": true,
      "Points": 40
    }
  ],
  "MonthlySeries": [
    {
      "Date": "2022-04-05",
      "IsExpired": true,
      "Points": 200
    },
    {
      "Date": "2022-05-05",
      "IsExpired": true,
      "Points": 500
    }
  ],
  "YearlySeries": [
    {
      "Date": "2022-04-05",
      "IsExpired": false,
      "Points": 2000
    },
    {
      "Date": "2023-04-05",
      "IsExpired": false,
      "Points": 5000
    }
  ]
}
        '400':
          description: Indicates that the request parameters was invalid.
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: Default error code returned when it cannot be determined which part of the request is malformed.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Indicates that user don't have permission to do this.
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/membershippoints/classificationthresholds:
    get:
      tags:
        - URM Membership Points
      summary: Membership client classification threshold
      description: Gets the list of classifications associated with client profile. Points and time range also will be included in classification details
      operationId: MembershipPointsGetClassificationsThreshold
      parameters:
        - name: ClientKey
          in: query
          description: 'If not provided, the request is executed in the context of the currently authenticated client else in the context of the client the key refer to'
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: W-CgwnsUEpETkiR8MPJalA==
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassificationResponseListResult'
              example: {
  "__count": 3,
  "Data": [
    {
      "Description": "Description text",
      "MaxPoints": 30000,
      "MinPoints": 0,
      "Type": {
        "Key": "1",
        "Value": "Classic"
      }
    },
    {
      "Description": "Description text",
      "MaxPoints": 500000,
      "MinPoints": 30000,
      "Type": {
        "Key": "3",
        "Value": "Platinum"
      }
    },
    {
      "Description": "Description text",
      "MinPoints": 500000,
      "Type": {
        "Key": "4",
        "Value": "VIP"
      }
    }
  ]
}
        '400':
          description: Indicates that the request parameters was invalid.
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: Default error code returned when it cannot be determined which part of the request is malformed.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Indicates that user don't have permission to do this.
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/membershippoints/activities:
    get:
      tags:
        - URM Membership Points
      summary: Membership points received from activities
      description: 'Gets all obtained points along with point source, received date, expiry date and description etc'
      operationId: MembershipPointsGetActivities
      parameters:
        - name: $skiptoken
          in: query
          schema:
            type: string
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: ClientKey
          in: query
          description: 'If not provided, the request is executed in the context of the currently authenticated client else in the context of the client the key refer to'
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: W-CgwnsUEpETkiR8MPJalA==
        - name: FieldGroups
          in: query
          description: 'FieldGroups: DisplayAndFormat (only for Trade Event Type)'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PointActivityFieldGroup'
          example: DisplayAndFormat
        - name: FromDate
          in: query
          description: From date from which the activities are requested
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2018-01-01T00:00:00.0000000+00:00'
        - name: IncludeExpired
          in: query
          description: By default value will be false
          schema:
            type: boolean
          example: false
        - name: PointSourceType
          in: query
          description: By default all source types will be delivered. Same will come from Lookup data endpoint. Comma separated list of keys. If provided will return the events for that particular type else All
          schema:
            type: array
            items:
              type: integer
              format: int32
          example: 12
        - name: ToDate
          in: query
          description: To date till which the activities are requested
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2019-01-01T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MembershipPointActivityResponseListResult'
              example: {
  "__count": 7,
  "Data": [
    {
      "Amount": 16.0,
      "AssetType": "Stock",
      "Date": "2019-06-27",
      "DisplayAndFormat": {
        "Currency": "USD",
        "Decimals": 0,
        "Description": "Vanguard S&P500 ETF",
        "DisplayHint": "Etf",
        "Symbol": "EURUSD"
      },
      "ExpiryDate": "2019-05-16",
      "MembershipPointId": 12345,
      "Points": 10,
      "PointSourceType": {
        "Key": "Trade",
        "Value": "Trade"
      },
      "Uic": 21
    },
    {
      "Amount": 5.0,
      "AssetType": "FxSpot",
      "Date": "2019-05-01",
      "DisplayAndFormat": {
        "Decimals": 0,
        "Description": "Platinum",
        "DisplayHint": "PreciousMetal",
        "Symbol": "EURUSD"
      },
      "ExpiryDate": "2019-12-16",
      "MembershipPointId": 123456,
      "Points": 60,
      "PointSourceType": {
        "Key": "Trade",
        "Value": "Trade"
      },
      "Uic": 21
    },
    {
      "Amount": 23.0,
      "AssetType": "Stock",
      "Date": "2019-04-23",
      "DisplayAndFormat": {
        "Decimals": 0,
        "Description": "IBM Common Stock",
        "Symbol": "IBM"
      },
      "ExpiryDate": "2019-09-16",
      "MembershipPointId": 12346,
      "Points": 55,
      "PointSourceType": {
        "Key": "Trade",
        "Value": "Trade"
      },
      "Uic": 21
    },
    {
      "Amount": 5.0,
      "AssetType": "CfdOnStock",
      "Date": "2019-04-05",
      "DisplayAndFormat": {
        "Decimals": 0,
        "Description": "Microsoft Corporation",
        "Symbol": "MSFT"
      },
      "ExpiryDate": "2019-12-16",
      "MembershipPointId": 1246,
      "Points": 100,
      "PointSourceType": {
        "Key": "Trade",
        "Value": "Trade"
      },
      "Uic": 21
    },
    {
      "Amount": 40.0,
      "AssetType": "Stock",
      "Date": "2019-03-18",
      "DisplayAndFormat": {
        "Decimals": 0,
        "Description": "Apple Inc.",
        "Symbol": "AAPL"
      },
      "ExpiryDate": "2019-12-16",
      "MembershipPointId": 12046,
      "Points": 150,
      "PointSourceType": {
        "Key": "Trade",
        "Value": "Trade"
      },
      "Uic": 21
    },
    {
      "Amount": 100000.0,
      "AssetType": "FxSpot",
      "Date": "2019-03-16",
      "DisplayAndFormat": {
        "Decimals": 0,
        "Description": "Euro/US Dollar",
        "Symbol": "EURUSD"
      },
      "ExpiryDate": "2019-12-16",
      "IsExpired": true,
      "MembershipPointId": 120146,
      "Points": 35,
      "PointSourceType": {
        "Key": "Trade",
        "Value": "Trade"
      },
      "Uic": 21
    },
    {
      "Date": "2019-03-16",
      "Description": "Thanks for participating in the seminar",
      "ExpiryDate": "2019-12-16",
      "IsExpired": true,
      "MembershipPointId": 2547120,
      "Points": 100,
      "PointSourceType": {
        "Key": "Voucher",
        "Value": "Voucher"
      }
    }
  ]
}
        '400':
          description: Indicates that the request parameters was invalid.
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: Default error code returned when it cannot be determined which part of the request is malformed.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Indicates that user don't have permission to do this.
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/membershippoints/classificationdetails:
    get:
      tags:
        - URM Membership Points
      summary: Client classification details
      description: 'Client classification details along with point, classification name and next classification name'
      operationId: MembershipPointsGetCurrentClassification
      parameters:
        - name: ClientKey
          in: query
          description: 'If not provided, the request is executed in the context of the currently authenticated client. If provided, in the context of the client the key refer to'
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: W-CgwnsUEpETkiR8MPJalA==
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClassificationDetailResponse'
              example: {
  "CurrentClassification": {
    "Classification": {
      "Key": "3",
      "Value": "Platinum"
    },
    "DaysLeft": 90,
    "Points": 100,
    "ValidUntil": "2022-07-05"
  },
  "TargetClassification": {
    "ActionType": {
      "Key": "Retain",
      "Value": "RETAIN"
    },
    "Classification": {
      "Key": "3",
      "Value": "Platinum"
    },
    "DaysLeft": 5,
    "EndDate": "2022-08-05",
    "Points": 100,
    "StartDate": "2022-05-05"
  }
}
        '400':
          description: Indicates that the request parameters was invalid.
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: Default error code returned when it cannot be determined which part of the request is malformed.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/membershippoints/lookupdata:
    get:
      tags:
        - URM Membership Points
      summary: List of lookup data for search criteria
      description: Returns a list of lookup data.
      operationId: MembershipPointsGetLookupData
      parameters:
        - name: FieldGroups
          in: query
          description: The field groups. By default all options will return
          schema:
            $ref: '#/components/schemas/Common.LookupFieldGroup'
          example: 'PointSourceType,ClassificationType,ActionType'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LookupResponseListResult'
              example: {
  "__count": 1,
  "Data": [
    {
      "OptionType": "PointSourceType",
      "Values": [
        {
          "Key": "1",
          "Value": "Referral"
        },
        {
          "Key": "2",
          "Value": "First 30-day funding"
        },
        {
          "Key": "3",
          "Value": "Traded asset class for the first time"
        }
      ]
    }
  ]
}
        '400':
          description: Indicates that the request parameters was invalid.
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: Default error code returned when it cannot be determined which part of the request is malformed.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/offline:
    post:
      description: Attempts to take the application offline
      operationId: cs_offline
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      requestBody:
        content:
          application/json:
            schema:
              type: string
            example: "00:00:00.0002495"
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-application-visibility: saxo-only
      x-network-visibility: internal
  /cs/v1/clientinfo/documents:
    post:
      tags:
        - ClientInfo
      summary: Saves documents based on documenttypes
      description: Saves documents based on documenttypes
      operationId: ClientInfoSaveDocuments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveDocumentRequest'
            example: {
  "Documents": [
    {
      "Data": "iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4",
      "DocumentTypes": [
        "PEAInternalInstruction"
      ],
      "ExpiryDate": "2023-04-05",
      "Name": "PEAInternalInstruction.pdf"
    }
  ]
}
      responses:
        '201':
          description: Created
        '500':
          description: Internal Server Error.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidDataFormat
                      - InvalidDocumentName
                      - NoDocumentProvided
                    type: string
                    x-enum-descriptions:
                      NoDocumentProvided: At least one document must be passed.
                      InvalidDocumentName: Document name should have extension.
                      InvalidDataFormat: Document data should be Base64 string.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/clientinfo/clients/rightsandrestrictions:
    get:
      tags:
        - ClientInfo
      summary: Retrieves rights and restrictions applicable for client
      description: Retrieves rights and restrictions applicable for client
      operationId: ClientInfoGetRightsAndRestrictions
      responses:
        '200':
          description: Indicates that the request was successful.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RightsRestrictionsListResult'
              example: {
  "Data": [
    {
      "AccountId": "216053INET",
      "ClientId": "2829174",
      "Description": "Prohibition to transfer pledged account",
      "EndDate": "2020-02-25",
      "ExternalAccountId": "APKE9000000000002110000000000079413",
      "InstrumentSymbolCode": "VOD:xlsn",
      "IsRightHolderRequire": true,
      "Quantity": 2.0,
      "Reason": "Prohibition to transfer pledged account",
      "RegistrationDate": "2019-02-21",
      "RestrictionId": "001",
      "StartDate": "2019-02-25"
    }
  ],
  "MaxRows": 8695
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/clientinfo/clients/emails:
    get:
      tags:
        - ClientInfo
      summary: Retrieves email mappings for user
      description: Retrieves email mappings for user
      operationId: ClientInfoGetEmailMappings
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailMappingResponseListResult'
              example: {
  "Data": [
    {
      "Email": "something@domain.net",
      "Identifier": "[CRM1]",
      "Validated": false
    }
  ],
  "MaxRows": 17196
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/clientinfo/clients/search:
    get:
      tags:
        - ClientInfo
      summary: Search all child counterparts based on ownerId
      description: Search all child counterparts based on ownerId
      operationId: ClientInfoSearch
      parameters:
        - name: $inlinecount
          in: query
          schema:
            enum:
              - AllPages
              - None
            type: string
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            maximum: 100
            minimum: 0
            type: integer
            format: int32
            default: 10
        - name: AccountId
          in: query
          description: Search where AccountId starts with
          schema:
            title: Search where AccountId starts with
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: ClientId
          in: query
          description: Search where clientId starts with
          schema:
            title: Search where clientId starts with
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: ClientName
          in: query
          description: Search where clientName starts with
          schema:
            title: Search where clientName starts with
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: Operator
          in: query
          description: 'Search operator: ''AND'' \ ''OR'''
          schema:
            title: 'Search operator: ''AND'' \ ''OR'''
            allOf:
              - $ref: '#/components/schemas/Operator'
          example: "OR"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Models.ClientSearchResponseListResult'
              example: {
  "Data": [
    {
      "AccountIds": [
        "83bc449b-dc52-4a2d-93b9-27d409f54919"
      ],
      "Accounts": [
        {
          "AccountDisplayName": "AccountDisplayName56a9182b-5dc6-4e47-99e5-924e84f08e8b",
          "AccountId": "AccountId27b40de0-a5cf-47f5-9038-73cdc0a88b10",
          "AccountRiskProfileId": "AccountRiskProfileId0d2d06ce-4edc-40e4-bd1e-42c6cedb55db",
          "AccountRiskProfileName": "AccountRiskProfileName9966fcf6-b2cb-42ee-a923-33c272585ca0"
        }
      ],
      "ClientId": "ClientIdf5a2357f-f126-4969-84b5-8cf68db8448f",
      "ClientKey": "ClientKeybf6bd636-e38b-46d3-aea8-ab55f4f5e583",
      "ClientName": "ClientName9139233e-6a59-4e12-8d4e-dd5f8fcdec2d",
      "DefaultAccountId": "DefaultAccountIdf5fb51c4-3e25-4e67-8958-dfc97c22ac45",
      "LegalAssetTypes": [
        "Cash"
      ]
    }
  ],
  "MaxRows": 10391
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      deprecated: true
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
      x-deprecated-date: '2022-01-01'
  /cs/v1/clientinfo/PersonalData:
    get:
      tags:
        - ClientInfo
      summary: "Returns personal data information of a client based on clientKey.\r\n            If clientkey is not provided, It returns data of the logged-in client."
      description: "Returns personal data information of a client based on clientKey.\r\n            If clientkey is not provided, It returns data of the logged-in client."
      operationId: ClientInfoGetClientPersonalData
      parameters:
        - name: ClientKey
          in: query
          description: 'The clients ID, encrypted'
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 7m4I|vtYLUnEGg77o9uQhw==
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PiiClientDetails'
              example: {
  "AliasFirstName": "Hallud",
  "AliasLastName": "Holk",
  "AliasName": "Hallud Holk",
  "ClientId": "20011223",
  "DateOfBirth": "2022-04-05T06:05:13.5311699+00:00",
  "FullName": "Hallud Holk",
  "Gender": "Male",
  "MaidenName": "maidenname",
  "MaritalStatus": "Single",
  "OriginalScriptFirstName": "Martin",
  "OriginalScriptLastName": "Bond",
  "OriginalScriptName": "Bond Martin",
  "PiiClientBankInformation": {
    "AccountNumber": "1140769",
    "AccountTypeCode": "1",
    "BankName": "Rakutek / Mabo",
    "BranchCode": "228",
    "ClearingCode": "0036",
    "Name": "Fuchitsa"
  },
  "PiiClientContactInfo": {
    "FaxNumber": "##121212",
    "FourthEmail": "email4_1000000@email.com",
    "MobileNumber": "9856321477",
    "PhoneNumber": "+45 39704000",
    "PrimaryEmail": "email1_1000000@email.com",
    "SecondaryEmail": "email2_1000000@email.com",
    "SecondaryPhoneNumber": "+45 39704001",
    "ThirdEmail": "email3_1000000@email.com"
  },
  "PiiClientIdInfo": {
    "BillPaymentReference": "9834838930",
    "CprNumber": "4930047398",
    "NorwegianPersonNumber": "12714575710",
    "PersonalId": "0610739292",
    "TaxIdTin": "T9474118B",
    "TypeOfId": "Passport number",
    "UsTaxId": "1102245901",
    "UsTaxIdType": "TypeSSN"
  },
  "PiiClientRegisteredAddress": {
    "BuildingName": "DanStand",
    "BuildingNo": "23",
    "City": "Copenhagen",
    "Country": "Denmark",
    "Floor": "Flat B 60/A",
    "LocalArea": "Brogand",
    "PostOfficeBox": "92110",
    "SideDoor": "124",
    "StateOrProvince": "Øresunt",
    "Street": "Hylten Ally",
    "Unit": "Z Block",
    "ZipCode": "1610"
  },
  "PiiClientRegisteredOriginalScriptAddress": {
    "BuildingName": "TestBuilding",
    "BuildingNo": "23",
    "City": "Copenhagen",
    "CoName": "Nirmayal A/s",
    "Country": "Denmark",
    "Floor": "1",
    "LocalArea": "TestLocal",
    "PostOfficeBox": "92110",
    "SideDoor": "124",
    "StateOrProvince": "Øresunt",
    "Street": "Hylten Ally",
    "Unit": "Z Block",
    "ZipCode": "1610"
  },
  "PiiEmploymentStatusInfo": {
    "EmployerAddress": "Building 10 G/F Orstand",
    "EmployerName": "Danotep",
    "EmploymentFunctions": "Consultant-Others-Consultancy",
    "IsWorkingInPoliticalPublicOffice": true,
    "IsWorkingInPrivateCompanyExecutiveManagement": true,
    "IsWorkingInPrivateCompanyOther": true,
    "IsWorkingInPublicSectorOrStateExecutiveBoard": true,
    "IsWorkingInPublicSectorOrStateOther": true,
    "OccupationalBackground": "Consultant-Others-Consultancy https://www.BTW.com",
    "PositionTitle": "R&D",
    "WorkStatusInfo": "Employed"
  },
  "PiiIncomeInfo": {
    "DividendsInterestFromOwnCompany": true,
    "DividendsInterestFromStocksBonds": true,
    "Others": true,
    "Royalties": true,
    "SalaryAfterTax": "50.001 - 100.000 (€)",
    "SecondaryIncome": "Dividends, Rent from Properties",
    "TotalSecondaryIncome": "0 - 50.000 (€)"
  },
  "PiiJapanLocalInfo": {
    "AnnualIncomeIn10000Jpy": "500",
    "CommodityFuturesTradingExpInYears": 30,
    "FinancialAssetsIn10000Jpy": 800,
    "ForeignExchangeMarginTradingExpInYears": 100,
    "InsiderAffiliatedCorporateCheck": true,
    "InsiderAffiliatedCorporateName": "Apple Inc",
    "InsiderAffiliatedDepartmentAndPosition": "IT",
    "InsiderBelongCorporateCheck": false,
    "InsiderBelongCorporateName": "Apple Inc",
    "InsiderInformationCorporateCheck": false,
    "InsiderInformationCorporateName": "Mircosoft Inc",
    "InsiderMainStockHolderCorporateCheck": true,
    "InsiderMainStockHolderCorporateName": "Microsoft Inc",
    "InsiderRelativeCorporateCheck": false,
    "InsiderRelativeCorporateName": "Apple Inc",
    "InsiderRelativeDepartmentAndPosition": "HR",
    "InsiderResignedCorporateCheck": false,
    "InsiderResignedCorporateName": "XYZ Inc",
    "InsiderResignedDepartmentAndLastPosition": "Sales",
    "JobInformation": "Contract",
    "LetterAddressType": "Permanent",
    "LetterOfAuthorization": "Yes",
    "MarginTradingExpInYears": 20,
    "MyNumberVerifiedDate": "2022-02-14",
    "StockIndexFuturesTradingExpInYears": 18,
    "TaxPrefecture": "Tax Prefecture",
    "TaxPrefectureValidYear": 230,
    "UsTaxDocumentation": "Yes"
  },
  "PiiNationalityAndCitizenshipInfo": {
    "CountryOfBirth": "Denmark",
    "IsUsCitizen": true,
    "IsUsReportable": true,
    "IsUsTaxLiable": true,
    "Nationality": "Denmark",
    "PlaceOfBirth": "Oresunt",
    "UsTaxExpiryYear": 2022
  },
  "PiiSingaporeLocalInfo": {
    "HasRwsAcknowledgement": true,
    "IsClassificationRequired": true,
    "IsEducationalQualificationSatisfied": true,
    "IsSingaporePermanentResident": true,
    "LastClassificationDate": "2022-04-05T06:05:13.5311699+00:00",
    "NetWorth": "< €5,000"
  },
  "PiiStatusInfo": {
    "IsSaxoEmployee": true,
    "MarketingConsent": true,
    "OnlineTradingExperience": "Experienced (3 - 5 years)",
    "ServiceLanguage": "English"
  },
  "PiiUkLocalInfo": {
    "AnnualIncomeAfterTax": 207659.0,
    "EstimatedValueOfSavingsAndInvestments": 80009780.0,
    "MonthlyIncomeAfterTax": 2065870.0,
    "MonthlyOutgoing": 105672.0
  },
  "PiiWealthInfo": {
    "Inheritance": true,
    "InvestableAssets": "< 5,000 (€)",
    "NetWorth": "< €5,000",
    "OtherSourceOfWealth": true,
    "ProfitFromSellingOwnCompany": false,
    "RoyalitiesSourceOfWealth": true,
    "SavingFromSalaryPension": false,
    "SourceOfWealth": "Private income",
    "TradingProfit": true
  },
  "PiiWorkStatusInfo": {
    "IsDiplomat": false,
    "IsEmployed": true,
    "IsFinancialSectorEmployee": true,
    "IsRetired": false,
    "IsSelfEmployed": false,
    "IsStudent": false,
    "IsUnemployed": false,
    "Occupation": "Professional"
  },
  "RegisteredAddressCoName": "Nirmayal A/s",
  "SubscriberName": "Mark Todd",
  "Title": "Mr."
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/clientinfo/linkedindividuals/{ClientKey}':
    get:
      tags:
        - ClientInfo
      description: Gets the linked individuals details.
      operationId: ClientInfoGetLinkedIndividuals
      parameters:
        - name: ClientKey
          in: path
          description: 'The clients ID, encrypted'
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 7m4I|vtYLUnEGg77o9uQhw==
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LinkedIndividualListResult'
              example: {
  "Data": [
    {
      "ContactInfo": {
        "FaxNumber": "##121212",
        "FourthEmail": "email4_1000000@email.com",
        "MobileNumber": "9856321477",
        "PhoneNumber": "+45 39704000",
        "PrimaryEmail": "email1_1000000@email.com",
        "SecondaryEmail": "email2_1000000@email.com",
        "SecondaryPhoneNumber": "+45 39704001",
        "ThirdEmail": "email3_1000000@email.com"
      },
      "ContactName": "Ram Parsaad",
      "Gender": "Male",
      "PersonalIdExpiryDate": "0001-01-01",
      "PersonalIdType": "NationalIdentityCard",
      "RegisteredAddress": {
        "BuildingName": "Taxla Infospace",
        "BuildingNo": "A 307",
        "City": "Dwarka",
        "Country": "Indiana",
        "Floor": "3rd",
        "LocalArea": "Shipyward",
        "PostOfficeBox": "234567",
        "SideDoor": "SideDoor",
        "StateOrProvince": "HomeLand",
        "Street": "Sideway Block Streat",
        "Unit": "Unit",
        "ZipCode": "12345"
      },
      "Role": "Role",
      "TaxId": "TaxId"
    }
  ],
  "MaxRows": 30306
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/clientinfo/clients/{ClientKey}':
    get:
      tags:
        - ClientInfo
      summary: Return client information
      description: 'Returns client information, possible including client details and client address.'
      operationId: ClientInfoGetClientInfo
      parameters:
        - name: ClientKey
          in: path
          description: 'The clients ID, encrypted'
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 7m4I|vtYLUnEGg77o9uQhw==
        - name: FieldsSpec
          in: query
          description: Which field groups would you like to get returned.
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ClientInfoGroupSpec'
          example: 'Details,Address'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientInfo'
              example: {
  "BrokerAddress": {
    "Address": "10, Ajay Gate",
    "AddressExt": "NiharaPura ext.",
    "BuildingName": "Danstand",
    "City": "Copenhagen",
    "CityNew": "Copenhagen",
    "CoName": "Nirmayal A/s",
    "Country": "Denmark",
    "CountryIsoCode": "DK",
    "CountryIsoName": "Denmark",
    "DisplayableAddress": [
      "Kamala Berdin",
      "Address #8520",
      "AddressExt #8520",
      "Zip #8520 City #8520",
      "State #8520",
      "Denmark"
    ],
    "Email": "SaxoRESSTDPR@tst2.dom",
    "Fax": "##121212",
    "Floor": "Flat B 60/A",
    "LocalArea": "Brogand",
    "Number": "86464226",
    "OwnerName": "Kamala Berdin",
    "Phone": "+45 39704000",
    "PoBox": "1831",
    "PostalCode": "Zip #8520",
    "PostalDistrict": "North",
    "Side": "South",
    "State": "Catawba",
    "StreetName": "Hyltit Ally",
    "TaxId": "1102245901",
    "Unit": "Z Block"
  },
  "BrokerId": "1",
  "CanInitiateChat": false,
  "CashWithdrawalRequires2FA": true,
  "ClientAddress": {
    "Address": "Address #484505",
    "AddressExt": "AddressExt #484505",
    "BuildingName": "Danstand",
    "City": "City #484505",
    "CityNew": "City_New #484505",
    "ClientName": "Williemae Calamity",
    "CoName": "CoName #484505",
    "Country": "United Kingdom",
    "CountryIsoCode": "GB",
    "CountryIsoName": "United Kingdom",
    "DisplayableAddress": [
      "Williemae Calamity",
      "Address #484505",
      "AddressExt #484505",
      "Zip #484505 City #484505",
      "State #484505",
      "Denmark"
    ],
    "Fax": "##121212",
    "Floor": "Flat B 60/A",
    "LocalArea": "Brogand",
    "Number": "Number #484505",
    "PoBox": "PoBox #484505",
    "PostalCode": "Zip #8520",
    "PostalDistrict": "PostalDistrict #484505",
    "Side": "South",
    "State": "Catawba",
    "StreetName": "Hyltit Ally",
    "Unit": "Z Block"
  },
  "ClientDetails": {
    "Aum": 100.2,
    "ClientAssetCategory": "SAAssetSwap",
    "ClientSegment": "Classic",
    "CompanyRegistrationNumber": "ISO154099IBN",
    "CompanyTaxId": "Saxo2345end",
    "ContractualSolution": {
      "Key": "55",
      "Value": "value55"
    },
    "DefaultAccountId": "117404INET",
    "Iban": "IBAN - 117404INET",
    "IntentToInvest": "_5001_10000_",
    "IsEnabledForThirdPartyPayments": true,
    "IsHINEnabled": true,
    "IsMinor": true,
    "IsProductReclassificationLocked": false,
    "LegalCountryName": "Denmark",
    "LegalEntityId": "1",
    "LegalEntityType": "Cooperative",
    "LegalGuardians": [
      {
        "LegalGuardianId": "1",
        "Name": "Guardian1",
        "RegisteredAddress": {
          "BuildingName": "Bulinding1"
        }
      }
    ],
    "LeiCode": "Saxovms1",
    "LeiCodeStatus": "LeiStatus",
    "LeiNextRenewalDate": "0001-01-01",
    "OfficeInformation": {
      "ClosingOffice": {
        "Id": 8,
        "Name": "Prague",
        "RegionId": 3,
        "RegionName": "CEE"
      }
    },
    "PrimaryEmail": "em************@*****.com",
    "PrimaryPhone": "262****",
    "RelationshipManager": {
      "Email": "SaxoRESSTDPR@tst2.dom",
      "Name": "SaxoRESSTDPR SaxoRESSTDPR",
      "Office": {
        "Id": 8,
        "Name": "Prague",
        "RegionId": 3,
        "RegionName": "CEE"
      }
    },
    "SalesTrader": {
      "Email": "SaxoRESSPCD@tst2.dom",
      "Name": "SaxoRESSPCD SaxoRESSPCD",
      "Office": {
        "Id": 8,
        "Name": "Prague",
        "RegionId": 3,
        "RegionName": "CEE"
      }
    },
    "ServiceLanguage": {
      "Code": "en",
      "Name": "English"
    }
  },
  "ClientId": "2629956",
  "ClientName": "A_Name_2629956",
  "ClientTypeName": "Internet Client",
  "ContractType": "JointAccount",
  "EnabledForMembershipPoints": true,
  "HasCounterparts": false,
  "IsClientActive": true,
  "OwnerAddress": {
    "Address": "10, Ajay Gate",
    "AddressExt": "NiharaPura ext.",
    "BuildingName": "Danstand",
    "City": "Copenhagen",
    "CityNew": "Copenhagen",
    "CoName": "Nirmayal A/s",
    "Country": "Denmark",
    "CountryIsoCode": "DK",
    "CountryIsoName": "Denmark",
    "DisplayableAddress": [
      "Tamala Berdin",
      "Address #8520",
      "AddressExt #8520",
      "Zip #8520 City #8520",
      "State #8520",
      "Denmark"
    ],
    "Email": "something@domain.net",
    "Fax": "##121212",
    "Floor": "Flat B 60/A",
    "LocalArea": "Brogand",
    "Number": "86464226",
    "OwnerName": "Kamala Berdin",
    "Phone": "+45 39704000",
    "PoBox": "1831",
    "PostalCode": "Zip #8520",
    "PostalDistrict": "North",
    "Side": "South",
    "State": "Catawba",
    "StreetName": "Hyltit Ally",
    "TaxId": "1102245901",
    "Unit": "Z Block"
  },
  "OwnerId": "2629956",
  "VatRate": 77610.015
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/reports/aggregatedAmounts/{ClientKey}/{FromDate}/{ToDate}':
    get:
      tags:
        - Historical Report Data - Aggregated amounts
      description: Get all aggregated amounts between two dates
      operationId: AggregatedAmountGet
      parameters:
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $skiptoken
          in: query
          schema:
            type: string
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: AccountGroupKey
          in: query
          description: The key of the account group to which the resource belongs.
          schema:
            title: The key of the account group to which the resource belongs.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: "valuee2441c25-4e71-4162-8f02-f3faeebdf0fc"
        - name: AccountKey
          in: query
          description: The key of the account to which the resource belongs.
          schema:
            title: The key of the account to which the resource belongs.
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: "3e76e8c3-bb23-4912-86e0-7a387d5c7a2d"
        - name: ClientKey
          in: path
          description: The key of the client to which the resource belongs.
          required: true
          schema:
            title: The key of the client to which the resource belongs.
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: "7309a5ef-be28-4aef-885e-f5c1aa6e05e8"
        - name: FromDate
          in: path
          description: From date
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: MockDataId
          in: query
          description: Optional Mock Data Parameter
          schema:
            type: string
        - name: ToDate
          in: path
          description: To date
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregatedAmountListResult'
              example: {
  "__next": "/openapi/....../?$top=1&$skip=1",
  "Data": [
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 255.71,
      "AmountAccountCurrency": 255.71,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 255.71,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -3,
      "AmountTypeName": "Cash Balances",
      "AmountUSD": 41.2259276277075,
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-01-02",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 0,
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentUic": 0
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 660.0,
      "AmountAccountCurrency": 4073.280255,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 4073.280255,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 660.0,
      "AssetType": "StockIndexOption",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-01-02",
      "InstrumentDescription": "Volatility Index (VIX) Jan2015 15.000 C",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "VIX/F15C15=xcbf",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 1012706,
      "UnderlyingInstrumentAssetType": "StockIndex",
      "UnderlyingInstrumentDescription": "CBOE Volatility Index",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "VIX.I",
      "UnderlyingInstrumentUic": 10606
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -60.0,
      "AmountAccountCurrency": -338.39,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -338.39,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": -59.9998387785868,
      "AssetType": "StockIndexOption",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-01-02",
      "InstrumentDescription": "Volatility Index (VIX) Jan2015 15.000 C",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "VIX/F15C15=xcbf",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 1012706,
      "UnderlyingInstrumentAssetType": "StockIndex",
      "UnderlyingInstrumentDescription": "CBOE Volatility Index",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "VIX.I",
      "UnderlyingInstrumentUic": 10606
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 660.0,
      "AmountAccountCurrency": 4093.75,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 4093.75,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": 660.000161221413,
      "AssetType": "StockIndexOption",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-01-02",
      "InstrumentDescription": "Volatility Index (VIX) Jan2015 15.000 C",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "VIX/F15C15=xcbf",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 1012706,
      "UnderlyingInstrumentAssetType": "StockIndex",
      "UnderlyingInstrumentDescription": "CBOE Volatility Index",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "VIX.I",
      "UnderlyingInstrumentUic": 10606
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 920.0,
      "AmountAccountCurrency": 5708.84633,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 5708.84633,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 920.0,
      "AssetType": "StockIndexOption",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-01-05",
      "InstrumentDescription": "Volatility Index (VIX) Jan2015 15.000 C",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "VIX/F15C15=xcbf",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 1012706,
      "UnderlyingInstrumentAssetType": "StockIndex",
      "UnderlyingInstrumentDescription": "CBOE Volatility Index",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "VIX.I",
      "UnderlyingInstrumentUic": 10606
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 8221.83,
      "AmountAccountCurrency": 8221.83,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 8221.83,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -3,
      "AmountTypeName": "Cash Balances",
      "AmountUSD": 1279.23418622562,
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-01-16",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 0,
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentUic": 0
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 8221.83,
      "AmountAccountCurrency": 8221.83,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 8221.83,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -3,
      "AmountTypeName": "Cash Balances",
      "AmountUSD": 1283.89862269278,
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-01-19",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 0,
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentUic": 0
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 489.99,
      "AmountAccountCurrency": 489.99,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 489.99,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -3,
      "AmountTypeName": "Cash Balances",
      "AmountUSD": 76.125594257838,
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-01-20",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 0,
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentUic": 0
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": true,
      "Amount": -1186.5,
      "AmountAccountCurrency": -7654.42,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -7654.42,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": 2,
      "AmountTypeName": "Share Amount",
      "AmountUSD": -1189.20237392412,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-01-20",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": true,
      "Amount": -12.0,
      "AmountAccountCurrency": -77.42,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -77.42,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": 4,
      "AmountTypeName": "Commission",
      "AmountUSD": -12.0280893639499,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-01-20",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1220.1,
      "AmountAccountCurrency": 7814.0291817,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 7814.0291817,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 1220.1,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-01-20",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 21.5999999999999,
      "AmountAccountCurrency": 121.46,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 121.46,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": 18.8702109809528,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-01-20",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1220.1,
      "AmountAccountCurrency": 7853.3,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 7853.3,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": 1220.10067426902,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-01-20",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 489.99,
      "AmountAccountCurrency": 489.99,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 489.99,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -3,
      "AmountTypeName": "Cash Balances",
      "AmountUSD": 76.5131168019987,
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-01-21",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 0,
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentUic": 0
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1216.32,
      "AmountAccountCurrency": 7750.3667136,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 7750.3667136,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 1216.32,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-01-21",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -13.4400000000001,
      "AmountAccountCurrency": 2.65999999999985,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 2.65999999999985,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": -13.4403072658449,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-04",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1147.02,
      "AmountAccountCurrency": 7527.49,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 7527.49,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": 1147.01987764089,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-04",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 489.99,
      "AmountAccountCurrency": 489.99,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 489.99,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -3,
      "AmountTypeName": "Cash Balances",
      "AmountUSD": 75.5504502281978,
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-05",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 0,
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentUic": 0
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1101.66,
      "AmountAccountCurrency": 7109.20146552,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 7109.20146552,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 1101.66,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-05",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -45.3599999999999,
      "AmountAccountCurrency": -382.56,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -382.56,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": -45.3592756919588,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-05",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1101.66,
      "AmountAccountCurrency": 7144.93,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 7144.93,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": 1101.66060194893,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-05",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 489.99,
      "AmountAccountCurrency": 489.99,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 489.99,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -3,
      "AmountTypeName": "Cash Balances",
      "AmountUSD": 74.5129944190149,
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-06",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 0,
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentUic": 0
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1259.58,
      "AmountAccountCurrency": 8241.45776139,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 8241.45776139,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 1259.58,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-06",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 157.92,
      "AmountAccountCurrency": 1137.94,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 1137.94,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": 157.919075357595,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-06",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1259.58,
      "AmountAccountCurrency": 8282.87,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 8282.87,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": 1259.57967730653,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-06",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1317.12,
      "AmountAccountCurrency": 8636.29,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 8636.29,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": 1317.12000244016,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-20",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 489.99,
      "AmountAccountCurrency": 489.99,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 489.99,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -3,
      "AmountTypeName": "Cash Balances",
      "AmountUSD": 74.4609072258947,
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-23",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 0,
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentUic": 0
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1284.78,
      "AmountAccountCurrency": 8412.22231605,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 8412.22231605,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 1284.78,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-23",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -32.3399999999999,
      "AmountAccountCurrency": -181.800000000001,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -181.800000000001,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": -32.340730348373,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-23",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1284.78,
      "AmountAccountCurrency": 8454.49,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 8454.49,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": 1284.77927209179,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-23",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 489.99,
      "AmountAccountCurrency": 489.99,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 489.99,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -3,
      "AmountTypeName": "Cash Balances",
      "AmountUSD": 74.4665653495441,
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-24",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 0,
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentUic": 0
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1291.92,
      "AmountAccountCurrency": 8458.329432,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 8458.329432,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 1291.92,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-24",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 7.1400000000001,
      "AmountAccountCurrency": 46.3400000000001,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 46.3400000000001,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": 7.1401807957518,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-24",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1291.92,
      "AmountAccountCurrency": 8500.83,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 8500.83,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": 1291.91945288754,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-24",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 489.99,
      "AmountAccountCurrency": 489.99,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 489.99,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -3,
      "AmountTypeName": "Cash Balances",
      "AmountUSD": 74.5384983989108,
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-25",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 0,
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentUic": 0
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1317.54,
      "AmountAccountCurrency": 8617.741586895,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 8617.741586895,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 1317.54,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-02-25",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1317.96,
      "AmountAccountCurrency": 9007.53962976,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 9007.53962976,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 1317.96,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-03-06",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -30.0,
      "AmountAccountCurrency": -204.95,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -204.95,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": -29.9999903997027,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-03-06",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -25.2,
      "AmountAccountCurrency": -23.4700000000012,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -23.4700000000012,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": -25.2006222564567,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-03-06",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -20.0,
      "AmountAccountCurrency": -137.38,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -137.38,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": -20.0005823433496,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-03-06",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1317.96,
      "AmountAccountCurrency": 9052.8,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 9052.8,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": 1317.95946890286,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-03-06",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 423.2,
      "AmountAccountCurrency": 423.2,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 423.2,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -3,
      "AmountTypeName": "Cash Balances",
      "AmountUSD": 61.639296508029,
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-03-09",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 0,
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentUic": 0
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1504.0,
      "AmountAccountCurrency": 10377.71844,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 10377.71844,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 1504.0,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-03-09",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1263.36,
      "AmountAccountCurrency": 8630.5443504,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 8630.5443504,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 1263.36,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-03-09",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -65.0,
      "AmountAccountCurrency": -446.21,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -446.21,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": -64.9995997197899,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-03-09",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 0.0,
      "AmountAccountCurrency": 24.8199999999997,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 24.8199999999997,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": -0.00127218726947831,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-03-24",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -57.5,
      "AmountAccountCurrency": -392.8,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -392.8,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": -57.5000365962555,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-03-24",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1286.46,
      "AmountAccountCurrency": 8788.19,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 8788.19,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": 1286.45938547568,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-03-24",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 423.2,
      "AmountAccountCurrency": 423.2,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 423.2,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -3,
      "AmountTypeName": "Cash Balances",
      "AmountUSD": 62.1580535951648,
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-03-25",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 0,
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentUic": 0
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1487.0,
      "AmountAccountCurrency": 10174.78597575,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 10174.78597575,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 1487.0,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-03-25",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1249.08,
      "AmountAccountCurrency": 8461.77723237,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 8461.77723237,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 1249.08,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-03-25",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -44.5,
      "AmountAccountCurrency": -301.66,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -301.66,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": -44.4996843387591,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-03-25",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -37.3800000000001,
      "AmountAccountCurrency": -283.890000000001,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -283.890000000001,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": -37.3791983552619,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-03-25",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 7.5,
      "AmountAccountCurrency": 53.51,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 53.51,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": 7.49907548094534,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-04-16",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 6.29999999999996,
      "AmountAccountCurrency": -26.25,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -26.25,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": 6.30080975284068,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-04-16",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -20.5,
      "AmountAccountCurrency": -142.2,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -142.2,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": -20.500695610804,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-04-16",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1317.54,
      "AmountAccountCurrency": 9138.92,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 9138.92,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": 1317.54020486279,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-04-16",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 396.57,
      "AmountAccountCurrency": 396.57,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 396.57,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -3,
      "AmountTypeName": "Cash Balances",
      "AmountUSD": 57.4414461391387,
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-04-17",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 0,
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentUic": 0
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1557.5,
      "AmountAccountCurrency": 10806.58837125,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 10806.58837125,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 1557.5,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-04-17",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 78.3300000000002,
      "AmountAccountCurrency": 561.880000000001,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 561.880000000001,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": 78.329031862161,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-05-11",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -75.75,
      "AmountAccountCurrency": -506.81,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -506.81,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": -75.7495590828924,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-05-11",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1271.13,
      "AmountAccountCurrency": 8504.62,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 8504.62,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": 1271.12964457597,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-05-11",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 368.71,
      "AmountAccountCurrency": 368.71,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 368.71,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -3,
      "AmountTypeName": "Cash Balances",
      "AmountUSD": 55.403872305577,
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-05-12",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 0,
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentUic": 0
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1511.5,
      "AmountAccountCurrency": 10109.251709625,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 10109.251709625,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 1511.5,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-05-12",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1269.66,
      "AmountAccountCurrency": 8407.276197915,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 8407.276197915,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 1269.66,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-05-12",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -33.0,
      "AmountAccountCurrency": -222.99,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -222.99,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": -32.9995265411465,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-07-06",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -27.72,
      "AmountAccountCurrency": -140.0,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -140.0,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": -27.7204361750864,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-07-06",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -40.0,
      "AmountAccountCurrency": -269.99,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -269.99,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": -39.9994073942384,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-07-06",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1301.16,
      "AmountAccountCurrency": 8782.63,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 8782.63,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": 1301.15928502115,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-07-06",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 50.0,
      "AmountAccountCurrency": 335.1881375,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 335.1881375,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 50.0,
      "AssetType": "StockIndexOption",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-08-17",
      "InstrumentDescription": "Volatility Index (VIX) Aug2015 15 C",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "VIX/Q15C15=xcbf",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 1561206,
      "UnderlyingInstrumentAssetType": "StockIndex",
      "UnderlyingInstrumentDescription": "CBOE Volatility Index",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "VIX.I",
      "UnderlyingInstrumentUic": 10606
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 6904.98,
      "AmountAccountCurrency": 6904.98,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 6904.98,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -3,
      "AmountTypeName": "Cash Balances",
      "AmountUSD": 1019.6442678992,
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-08-18",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 0,
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentUic": 0
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -63.6,
      "AmountAccountCurrency": -474.71,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -474.71,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": -70.0994543669106,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-08-18",
      "InstrumentDescription": "National Bank of Greece SA",
      "InstrumentSectorName": "Banks",
      "InstrumentSectorTypeId": 656,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "ETE=xath",
      "RootInstrumentSectorName": "Financials",
      "RootInstrumentSectorTypeId": 509,
      "Uic": 20690,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "National Bank of Greece SA",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "ETE=xath",
      "UnderlyingInstrumentUic": 20690
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 53.4,
      "AmountAccountCurrency": 400.570488,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 400.570488,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 58.8571386380585,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-08-18",
      "InstrumentDescription": "National Bank of Greece SA",
      "InstrumentSectorName": "Banks",
      "InstrumentSectorTypeId": 656,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "ETE=xath",
      "RootInstrumentSectorName": "Financials",
      "RootInstrumentSectorTypeId": 509,
      "Uic": 20690,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "National Bank of Greece SA",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "ETE=xath",
      "UnderlyingInstrumentUic": 20690
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -4.1,
      "AmountAccountCurrency": -30.63,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -30.63,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": -4.18727691104819,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-08-18",
      "InstrumentDescription": "National Bank of Greece SA",
      "InstrumentSectorName": "Banks",
      "InstrumentSectorTypeId": 656,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "ETE=xath",
      "RootInstrumentSectorName": "Financials",
      "RootInstrumentSectorTypeId": 509,
      "Uic": 20690,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "National Bank of Greece SA",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "ETE=xath",
      "UnderlyingInstrumentUic": 20690
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 0.0,
      "AmountAccountCurrency": 1.73000000000002,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 1.73000000000002,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": 0.000740230152210586,
      "AssetType": "StockIndexOption",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-08-18",
      "InstrumentDescription": "Volatility Index (VIX) Aug2015 15 C",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "VIX/Q15C15=xcbf",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 1561206,
      "UnderlyingInstrumentAssetType": "StockIndex",
      "UnderlyingInstrumentDescription": "CBOE Volatility Index",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "VIX.I",
      "UnderlyingInstrumentUic": 10606
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 50.0,
      "AmountAccountCurrency": 336.9045125,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 336.9045125,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 50.0,
      "AssetType": "StockIndexOption",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-08-18",
      "InstrumentDescription": "Volatility Index (VIX) Aug2015 15 C",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "VIX/Q15C15=xcbf",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 1561206,
      "UnderlyingInstrumentAssetType": "StockIndex",
      "UnderlyingInstrumentDescription": "CBOE Volatility Index",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "VIX.I",
      "UnderlyingInstrumentUic": 10606
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1040.4,
      "AmountAccountCurrency": 1040.4,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 1040.4,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": 156.794188789005,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-09-28",
      "InstrumentDescription": "Wealth Invest Sirius Balance",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 400,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "WEISIB=xcse",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 400,
      "Uic": 343053,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Wealth Invest Sirius Balance",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "WEISIB=xcse",
      "UnderlyingInstrumentUic": 343053
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1040.4,
      "AmountAccountCurrency": 1040.4,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 1040.4,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 156.794188789004,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-09-28",
      "InstrumentDescription": "Wealth Invest Sirius Balance",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 400,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "WEISIB=xcse",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 400,
      "Uic": 343053,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Wealth Invest Sirius Balance",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "WEISIB=xcse",
      "UnderlyingInstrumentUic": 343053
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1.44000000000005,
      "AmountAccountCurrency": 1.44000000000005,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 1.44000000000005,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": 0.90069260396578,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-09-28",
      "InstrumentDescription": "Wealth Invest Sirius Balance",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 400,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "WEISIB=xcse",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 400,
      "Uic": 343053,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Wealth Invest Sirius Balance",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "WEISIB=xcse",
      "UnderlyingInstrumentUic": 343053
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -36.5999999999999,
      "AmountAccountCurrency": -36.5999999999999,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -36.5999999999999,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": -4.78566754791757,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-09-28",
      "InstrumentDescription": "Wealth Invest - Saxo Global Equities",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 400,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "WEISGE=xcse",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 400,
      "Uic": 1307373,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Wealth Invest - Saxo Global Equities",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "WEISGE=xcse",
      "UnderlyingInstrumentUic": 1307373
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1073.0,
      "AmountAccountCurrency": 1073.0,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 1073.0,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 161.707193935603,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-09-28",
      "InstrumentDescription": "Wealth Invest - Saxo Global Equities",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 400,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "WEISGE=xcse",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 400,
      "Uic": 1307373,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Wealth Invest - Saxo Global Equities",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "WEISGE=xcse",
      "UnderlyingInstrumentUic": 1307373
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1073.0,
      "AmountAccountCurrency": 1073.0,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 1073.0,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": 161.707193935603,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-09-28",
      "InstrumentDescription": "Wealth Invest - Saxo Global Equities",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 400,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "WEISGE=xcse",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 400,
      "Uic": 1307373,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Wealth Invest - Saxo Global Equities",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "WEISGE=xcse",
      "UnderlyingInstrumentUic": 1307373
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -6.7,
      "AmountAccountCurrency": -50.01,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -50.01,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": -7.85590056224295,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-09-28",
      "InstrumentDescription": "National Bank of Greece SA",
      "InstrumentSectorName": "Banks",
      "InstrumentSectorTypeId": 656,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "ETE=xath",
      "RootInstrumentSectorName": "Financials",
      "RootInstrumentSectorTypeId": 509,
      "Uic": 20690,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "National Bank of Greece SA",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "ETE=xath",
      "UnderlyingInstrumentUic": 20690
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 4191.3,
      "AmountAccountCurrency": 4191.3,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 4191.3,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -3,
      "AmountTypeName": "Cash Balances",
      "AmountUSD": 607.518426450018,
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-11-12",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 0,
      "InstrumentSubType": "None",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 0,
      "Uic": 0,
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentUic": 0
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 118.8,
      "AmountAccountCurrency": 819.61,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 819.61,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": 118.800414549829,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-11-12",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 2023.8,
      "AmountAccountCurrency": 13948.33509261,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 13948.33509261,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 2023.8,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-11-12",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -3.60000000000001,
      "AmountAccountCurrency": -30.43,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -30.43,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": -3.59995983369781,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-11-12",
      "InstrumentDescription": "Ubiquiti Networks Inc.",
      "InstrumentSectorName": "Telecommunications Equipment",
      "InstrumentSectorTypeId": 684,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "UBNT=xnas",
      "RootInstrumentSectorName": "Technology",
      "RootInstrumentSectorTypeId": 510,
      "Uic": 85485,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Ubiquiti Networks Inc.",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "UBNT=xnas",
      "UnderlyingInstrumentUic": 85485
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1139.04,
      "AmountAccountCurrency": 1139.04,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 1139.04,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 165.100992165588,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-11-12",
      "InstrumentDescription": "Wealth Invest Sirius Balance",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 400,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "WEISIB=xcse",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 400,
      "Uic": 343053,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Wealth Invest Sirius Balance",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "WEISIB=xcse",
      "UnderlyingInstrumentUic": 343053
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 1139.04,
      "AmountAccountCurrency": 1139.04,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 1139.04,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -4,
      "AmountTypeName": "Position Values",
      "AmountUSD": 165.100992165588,
      "AssetType": "Stock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-11-12",
      "InstrumentDescription": "Wealth Invest Sirius Balance",
      "InstrumentSectorName": "<Unknown>",
      "InstrumentSectorTypeId": 400,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "WEISIB=xcse",
      "RootInstrumentSectorName": "<Unknown>",
      "RootInstrumentSectorTypeId": 400,
      "Uic": 343053,
      "UnderlyingInstrumentAssetType": "Stock",
      "UnderlyingInstrumentDescription": "Wealth Invest Sirius Balance",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "WEISIB=xcse",
      "UnderlyingInstrumentUic": 343053
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": true,
      "Amount": -0.03,
      "AmountAccountCurrency": -0.22,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -0.22,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": 10,
      "AmountTypeName": "CFD Finance",
      "AmountUSD": -0.031155515588379,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-11-30",
      "InstrumentDescription": "Stora Enso R",
      "InstrumentSectorName": "Paper",
      "InstrumentSectorTypeId": 580,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "STERV=xhel",
      "RootInstrumentSectorName": "Basic Materials",
      "RootInstrumentSectorTypeId": 502,
      "Uic": 955,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Stora Enso R",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "STERV=xhel",
      "UnderlyingInstrumentUic": 955
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 935.0,
      "AmountAccountCurrency": 6982.30908375,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 6982.30908375,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 987.818724464869,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-11-30",
      "InstrumentDescription": "Stora Enso R",
      "InstrumentSectorName": "Paper",
      "InstrumentSectorTypeId": 580,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "STERV=xhel",
      "RootInstrumentSectorName": "Basic Materials",
      "RootInstrumentSectorTypeId": 502,
      "Uic": 955,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Stora Enso R",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "STERV=xhel",
      "UnderlyingInstrumentUic": 955
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -8.53,
      "AmountAccountCurrency": -63.68,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -63.68,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": -9.01810560303625,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-11-30",
      "InstrumentDescription": "Stora Enso R",
      "InstrumentSectorName": "Paper",
      "InstrumentSectorTypeId": 580,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "STERV=xhel",
      "RootInstrumentSectorName": "Basic Materials",
      "RootInstrumentSectorTypeId": 502,
      "Uic": 955,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Stora Enso R",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "STERV=xhel",
      "UnderlyingInstrumentUic": 955
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": -32.32,
      "AmountAccountCurrency": -32.32,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -32.32,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -5,
      "AmountTypeName": "PnL",
      "AmountUSD": -4.57702847189277,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-11-30",
      "InstrumentDescription": "Danske Bank A/S",
      "InstrumentSectorName": "Banks",
      "InstrumentSectorTypeId": 656,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "DANSKE=xcse",
      "RootInstrumentSectorName": "Financials",
      "RootInstrumentSectorTypeId": 509,
      "Uic": 15521,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Danske Bank A/S",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "DANSKE=xcse",
      "UnderlyingInstrumentUic": 15521
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": false,
      "Amount": 11370.0,
      "AmountAccountCurrency": 11370.0,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": 11370.0,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": -6,
      "AmountTypeName": "Exposure",
      "AmountUSD": 1610.1736919994,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-11-30",
      "InstrumentDescription": "Danske Bank A/S",
      "InstrumentSectorName": "Banks",
      "InstrumentSectorTypeId": 656,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "DANSKE=xcse",
      "RootInstrumentSectorName": "Financials",
      "RootInstrumentSectorTypeId": 509,
      "Uic": 15521,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Danske Bank A/S",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "DANSKE=xcse",
      "UnderlyingInstrumentUic": 15521
    },
    {
      "AccountCurrency": "DKK",
      "AffectsBalance": true,
      "Amount": -0.32,
      "AmountAccountCurrency": -0.32,
      "AmountClass": "NotAssigned",
      "AmountClientCurrency": -0.32,
      "AmountSubClass": "NotAssigned",
      "AmountTypeId": 10,
      "AmountTypeName": "CFD Finance",
      "AmountUSD": -0.0453171135830967,
      "AssetType": "CfdOnStock",
      "BookingAccountId": "179643INET",
      "ClientCurrency": "DKK",
      "CostClass": "NotAssigned",
      "CostSubClass": "NotAssigned",
      "Date": "2015-11-30",
      "InstrumentDescription": "Danske Bank A/S",
      "InstrumentSectorName": "Banks",
      "InstrumentSectorTypeId": 656,
      "InstrumentSubType": "None",
      "InstrumentSymbol": "DANSKE=xcse",
      "RootInstrumentSectorName": "Financials",
      "RootInstrumentSectorTypeId": 509,
      "Uic": 15521,
      "UnderlyingInstrumentAssetType": "CfdOnStock",
      "UnderlyingInstrumentDescription": "Danske Bank A/S",
      "UnderlyingInstrumentSubType": "None",
      "UnderlyingInstrumentSymbol": "DANSKE=xcse",
      "UnderlyingInstrumentUic": 15521
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cs/v2/subscriptionbilling/agreements/subscriptions/{SubscriptionId}':
    get:
      tags:
        - Subscription Billing - Agreements
      description: Gets a existing service agreement by subscriptionId
      operationId: AgreementV2Get
      parameters:
        - name: SubscriptionId
          in: path
          description: Subscription ID of a specific agreement
          required: true
          schema:
            type: string
        - name: UserKey
          in: query
          description: 'User Identifier Key: If specified will return service agreement for specified user'
          schema:
            minLength: 1
            type: string
            x-type-name: UserKey
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreement'
              example: {
  "AgreementTemplate": {
    "Countries": [
      {
        "CountryId": "DK",
        "CountryName": "Denmark"
      }
    ],
    "RestrictedCountries": [
      {
        "CountryId": "DK",
        "CountryName": "Denmark"
      }
    ],
    "ServiceName": "OPRA Data",
    "SubscriptionClassifications": [
      {
        "Classification": "Professional",
        "Price": {
          "Currency": "DKK",
          "Value": 1.1
        }
      }
    ],
    "Template": "<html>\n<BODY><P align=center><STRONG><I>Nasdaq Subscriber Agreement [label name= \"Level\"]</I></STRONG></P></BODY>\n</html>"
  },
  "AvailableActions": [
    "Subscribe"
  ],
  "IsEditableMode": true,
  "IsOccupationDetailsMandatory": false,
  "SubscriptionValues": {
    "AgreementValues": [
      {
        "Name": "ProfessionalStatusAvailable",
        "Value": "true"
      },
      {
        "Name": "SemiProfessionalStatusAvailable",
        "Value": "false"
      },
      {
        "Name": "clientprolevel",
        "Value": "Professional"
      },
      {
        "Name": "privatestatusavailable",
        "Value": "true"
      },
      {
        "Name": "level",
        "Value": "Level1"
      },
      {
        "Name": "ca_client_id",
        "Value": "123456"
      },
      {
        "Name": "ca_client_id_l1",
        "Value": "123456"
      },
      {
        "Name": "ca_full_name_l1",
        "Value": "Narender Modi"
      },
      {
        "Name": "acceptdisclaimer",
        "Value": "true"
      }
    ],
    "From": "2019-01-01T00:00:00Z",
    "To": "2020-12-31T00:00:00Z"
  }
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v2/subscriptionbilling/agreements:
    get:
      tags:
        - Subscription Billing - Agreements
      description: 'Gets a service agreement by serviceId, clientKey and level'
      operationId: AgreementV2GetServiceAgreement
      parameters:
        - name: From
          in: query
          description: DateTime in UTC
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
        - name: LevelType
          in: query
          description: Agreement level
          required: true
          schema:
            $ref: '#/components/schemas/LevelType'
          example: level1
        - name: ServiceId
          in: query
          description: Service ID of a agreement
          required: true
          schema:
            type: integer
            format: int32
          example: 1223
        - name: UserKey
          in: query
          description: 'User Identifier Key: If specified will return service agreement for specified user'
          schema:
            minLength: 1
            type: string
            x-type-name: UserKey
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Agreement'
              example: {
  "AgreementTemplate": {
    "Countries": [
      {
        "CountryId": "DK",
        "CountryName": "Denmark"
      }
    ],
    "RestrictedCountries": [
      {
        "CountryId": "DK",
        "CountryName": "Denmark"
      }
    ],
    "ServiceName": "OPRA Data",
    "SubscriptionClassifications": [
      {
        "Classification": "Professional",
        "Price": {
          "Currency": "DKK",
          "Value": 1.1
        }
      }
    ],
    "Template": "<html>\n<BODY><P align=center><STRONG><I>Nasdaq Subscriber Agreement [label name= \"Level\"]</I></STRONG></P></BODY>\n</html>"
  },
  "AvailableActions": [
    "Subscribe"
  ],
  "IsEditableMode": true,
  "IsOccupationDetailsMandatory": false,
  "SubscriptionValues": {
    "AgreementValues": [
      {
        "Name": "ProfessionalStatusAvailable",
        "Value": "true"
      },
      {
        "Name": "SemiProfessionalStatusAvailable",
        "Value": "false"
      },
      {
        "Name": "clientprolevel",
        "Value": "Professional"
      },
      {
        "Name": "privatestatusavailable",
        "Value": "true"
      },
      {
        "Name": "level",
        "Value": "Level1"
      },
      {
        "Name": "ca_client_id",
        "Value": "123456"
      },
      {
        "Name": "ca_client_id_l1",
        "Value": "123456"
      },
      {
        "Name": "ca_full_name_l1",
        "Value": "Narender Modi"
      },
      {
        "Name": "acceptdisclaimer",
        "Value": "true"
      }
    ],
    "From": "2019-01-01T00:00:00Z",
    "To": "2020-12-31T00:00:00Z"
  }
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/tradingconditions/instrument:
    get:
      tags:
        - Trading Conditions
      description: Get data for instruments for all CommissionGroupIds
      operationId: InstrumentGetDataForInstruments
      parameters:
        - name: ClientPlanIds
          in: query
          schema:
            type: array
            items:
              type: string
        - name: CommissionGroupId
          in: query
          description: CommissionGroupIds
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
        - name: InstrumentFilters
          in: query
          description: InstrumentFilters
          schema:
            title: InstrumentFilters
            type: array
            items:
              $ref: '#/components/schemas/AssetTypeFilter'
          example: [
  {
    "AssetType": "Bond",
    "Uic": 13190
  }
]
        - name: Instruments
          in: query
          description: "Instrument Filter. This needs to be there for the model binding to allow the query notation and model\r\n                binding/parsing."
          schema:
            title: "Instrument Filter. This needs to be there for the model binding to allow the query notation and model\r\n                binding/parsing."
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: KeywordFilters
          in: query
          description: Keyword filters
          schema:
            title: Keyword filters
            type: array
            items:
              $ref: '#/components/schemas/KeywordFilter'
          example: [
  {
    "Keyword": "Keywordebb7e000-51b5-4e37-82be-4a4669f18e10",
    "Values": [
      "4d4aa6f5-0afa-49bc-9234-60ba49d3019b"
    ]
  }
]
        - name: Size
          in: query
          description: Gets or sets the size of the search result.
          schema:
            title: Gets or sets the size of the search result.
            type: integer
            format: int32
          example: 10937
        - name: Uics
          in: query
          description: Uics
          schema:
            title: Uics
            type: array
            items:
              type: integer
              format: int32
          example: [
  31198
]
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentDetailsListResult'
              example: {
  "__next": "/openapi/....../?$top=1&$skip=1",
  "Data": [
    {
      "AmountCurrency": "EUR",
      "AssetType": "FxKnockInOption",
      "ExerciseCutOffTime": "02:30:30",
      "ExpirationTime": "03:30:30",
      "ExpiryDateTime": "2022-04-05T06:05:13.403684Z",
      "InstrumentCurrency": "USD",
      "InstrumentSubType": "None",
      "InstrumentSymbol": "EURUSD",
      "IsShortTraded": true,
      "MaxAutoTradeSize": 10000000.0,
      "MaxStreamingAmountFarDate": 3000000.0,
      "MaxStreamingAmountNearDate": 20000000.0,
      "MinimumLotSize": 0.0,
      "MinOrderSize": 1000.0,
      "MinOrderSizeCurrency": "EUR",
      "MutualFund": {
        "AssetTypeClassification": "Fixed Income",
        "FundCountry": "Ireland",
        "FundCountryCode": "IE"
      },
      "TradingDetails": [
        {
          "ClientPlanId": "2315",
          "CommissiongroupId": 1,
          "CommissionLimits": [
            {
              "Currency": "USD",
              "MinCommission": 15.0,
              "MinSpread": 1.0,
              "OrderAction": "ExecuteOrder",
              "PerUnitRate": 0.02,
              "SpreadRate": 0.0006
            }
          ],
          "ForexPriceBands": [
            {
              "AutoExecuteEnabled": true,
              "AutoQuoteEnabled": true,
              "DisplayDecimals": 5,
              "MaxBand": 2000000.0,
              "MinBand": 1.0,
              "Spread": 0.0009,
              "SpreadType": "Variable",
              "UpperBandLimit": 2000000.0
            }
          ],
          "HoldingFee": {
            "FromPeriodInDays": 120,
            "Value": 1.6
          },
          "IndicativeSpread": {
            "CalculationTime": "2022-04-05T06:05:13.403684Z",
            "PipSize": 0.0001,
            "Tenors": [
              {
                "Period": "1W",
                "Spread": 4.4
              },
              {
                "Period": "2W",
                "Spread": 5.0
              },
              {
                "Period": "3W",
                "Spread": 5.5
              },
              {
                "Period": "1M",
                "Spread": 6.1
              },
              {
                "Period": "2M",
                "Spread": 7.6
              },
              {
                "Period": "3M",
                "Spread": 8.7
              }
            ]
          }
        }
      ],
      "TradingHour": {
        "Sessions": [
          {
            "EndTime": "2022-04-05T06:05:13.403684Z",
            "InstrumentSessionState": "Closed",
            "StartTime": "2022-04-05T06:05:13.403684Z"
          },
          {
            "EndTime": "2022-04-05T06:05:13.403684Z",
            "InstrumentSessionState": "Undefined",
            "StartTime": "2022-04-05T06:05:13.403684Z"
          },
          {
            "EndTime": "2022-04-05T06:05:13.403684Z",
            "InstrumentSessionState": "AutomatedTrading",
            "StartTime": "2022-04-05T06:05:13.403684Z"
          },
          {
            "EndTime": "2022-04-06T06:05:13.403684Z",
            "InstrumentSessionState": "Undefined",
            "StartTime": "2022-04-06T06:05:13.403684Z"
          }
        ],
        "TimeZone": 0,
        "TimeZoneOffset": "00:00:00"
      },
      "Uic": 21
    }
  ]
}
        '500':
          description: Internal Server Error
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentFiltersRequired
                      - MaxUicLimit
                    type: string
                    x-enum-descriptions:
                      MaxUicLimit: One or more of the provided parameters are invalid.
                      InstrumentFiltersRequired: One or more of the provided parameters are invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/tradingconditions/instrument/{AccountKey}/{Uic}/{AssetType}':
    get:
      tags:
        - Trading Conditions
      summary: Trading conditions for all instruments except contract options
      description: "Trading conditions for all instruments except contract options. \r\n            Trading conditions details default behavior for the instrument (can it be traded and how), \r\n            margin requirements for opening and holding a position in an instrument (how much cash is needed on the account) \r\n            as well as the cost structure of opening, closing and holding a position."
      operationId: InstrumentGetForInstrument
      parameters:
        - name: AccountKey
          in: path
          description: The account key to lookup the conditions for
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: 7m4I|vtYLUnEGg77o9uQhw==
        - name: AssetType
          in: path
          description: The assetType of the instrument to lookup
          required: true
          schema:
            $ref: '#/components/schemas/AssetType'
          example: Fxspot
        - name: FieldGroups
          in: query
          description: Specify which field groups to return
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ScheduledTradingConditionsFieldGroup'
        - name: Uic
          in: path
          description: The uic for the instrument to lookup
          required: true
          schema:
            type: integer
            format: int32
          example: 21
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingConditionsResponse'
              example: {
  "AccountCurrency": "GBP",
  "AmountCurrency": "EUR",
  "AssetType": "FxSpot",
  "CarryingCost": {
    "FixedRate": 2.0,
    "InterbankRate": {
      "AskRate": 1.0,
      "BidRate": 2.0,
      "TradeDate": "0001-01-01"
    },
    "MarkUpRate": 2.0
  },
  "CommissionLimits": [
    {
      "Currency": "USD",
      "MinCommission": 3.0,
      "OrderAction": "ExecuteOrder",
      "RateOnAmount": 5E-05
    }
  ],
  "CurrencyCutSpreadRate": 0.5,
  "ExposureLimits": [
    {
      "Currency": "USD",
      "Identifier": "EUR",
      "Level": "Currency",
      "RuleType": "Value",
      "Value": 115000000.0
    },
    {
      "Currency": "USD",
      "Identifier": "USD",
      "Level": "Currency",
      "RuleType": "Value",
      "Value": 115000000.0
    },
    {
      "Currency": "USD",
      "Identifier": "Fx-NOP",
      "Level": "Asset",
      "RuleType": "Value",
      "Value": 50000000.0
    }
  ],
  "FinanceInterestMarkUp": 2.0,
  "Financing": {
    "AskMarkUp": 2.0,
    "BidMarkDown": 2.0,
    "FixedRateAsk": 2.0,
    "FixedRateBid": 3.0,
    "InterbankRate": {
      "AskRate": 1.0,
      "BidRate": 2.0,
      "TradeDate": "0001-01-01"
    }
  },
  "FinancingInterest": {
    "InterbankRate": {
      "AskRate": 1.0,
      "BidRate": 2.0,
      "TradeDate": "0001-01-01"
    },
    "Markup": 1.0,
    "TradeDate": "0001-01-01"
  },
  "ForexPriceBands": [
    {
      "AutoExecuteEnabled": true,
      "AutoQuoteEnabled": true,
      "DisplayDecimals": 5,
      "MaxBand": 100000.0,
      "Spread": 1E-05,
      "SpreadType": "Variable",
      "UpperBandLimit": 100000.0
    },
    {
      "AutoExecuteEnabled": true,
      "AutoQuoteEnabled": true,
      "DisplayDecimals": 5,
      "MaxBand": 100000.0,
      "Spread": 2E-05,
      "SpreadType": "Variable",
      "UpperBandLimit": 25000000.0
    }
  ],
  "InstrumentCurrency": "USD",
  "IsTradable": true,
  "LoanInterest": {
    "InterbankRate": {
      "AskRate": 1.0,
      "BidRate": 2.0,
      "TradeDate": "0001-01-01"
    },
    "Markup": 2.0
  },
  "MarginTierRequirement": {
    "Entries": [
      {
        "ExtraWeekMarginRate": 0.015,
        "InitialMarginRate": 0.015,
        "IntraWeekMarginRate": 0.015,
        "TierLowerBound": 0.0
      },
      {
        "ExtraWeekMarginRate": 0.065,
        "InitialMarginRate": 0.055,
        "IntraWeekMarginRate": 0.045,
        "TierLowerBound": 1000000.0
      },
      {
        "ExtraWeekMarginRate": 0.025,
        "InitialMarginRate": 0.025,
        "IntraWeekMarginRate": 0.025,
        "TierLowerBound": 25000000.0
      },
      {
        "ExtraWeekMarginRate": 0.003,
        "InitialMarginRate": 0.003,
        "IntraWeekMarginRate": 0.003,
        "TierLowerBound": 50000000.0
      },
      {
        "ExtraWeekMarginRate": 0.035,
        "InitialMarginRate": 0.035,
        "IntraWeekMarginRate": 0.035,
        "TierLowerBound": 100000000.0
      },
      {
        "ExtraWeekMarginRate": 0.045,
        "InitialMarginRate": 0.045,
        "IntraWeekMarginRate": 0.045,
        "TierLowerBound": 150000000.0
      },
      {
        "ExtraWeekMarginRate": 0.05,
        "InitialMarginRate": 0.05,
        "IntraWeekMarginRate": 0.05,
        "TierLowerBound": 250000000.0
      }
    ],
    "TierCurrency": "USD"
  },
  "MaxOrderAutoPlaceAmount": 25000000.0,
  "MaxStreamingAmount": 25000000.0,
  "MinOrderSize": 1000.0,
  "MinOrderSizeCurrency": "EUR",
  "PortfolioBasedMargin": {
    "ExtremeStressFactor": 15.6,
    "Initial": 185.5,
    "IntraWeek": 8.7,
    "LiquidityThresholdAmount": 569987.0,
    "LiquidityThresholdCurrency": "USD",
    "VolatilityAddOn": 1000.68,
    "VolatilityStress": 100.0
  },
  "Rating": 0.0,
  "RiskIndicator": 0.0,
  "Rules": [
    "DayTradingNotAllowed",
    "ExchangeFeeConstituents",
    "NoMoreBuyOnExchange",
    "NoMoreBuyOnInstrument",
    "OrderAmendmentNotAllowed"
  ],
  "SpreadAsLowAs": 7E-05,
  "SwapInterestMarkUp": 0.45,
  "SwapPoints": {
    "AskPoint": 1.0,
    "BidPoint": 2.0,
    "Date": "0001-01-01",
    "Markup": 1.0,
    "TimeZoneAbbreviation": "CTE",
    "TimeZoneOffset": "00:00:00"
  },
  "TicketFeeThreshold": 50000.0,
  "Uic": 21
}
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /cs/v2/cashmanagement/wiretransfers/instructions:
    get:
      tags:
        - CashManagement - WireTransfers
      summary: Get wiretransfer instructions for specified client and account
      description: Get the details of the instructions which a client must use to fund this account through wire transfer. The information depends on the client the account and the selected funding currency.
      operationId: WireTransferGet
      parameters:
        - name: AccountKey
          in: query
          description: Selected account key in which user will fund.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: yLmSmTV0XPMiq3W9gDPRuA==
        - name: ClientKey
          in: query
          description: Logged-in client key
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: yiQKxZINqbowdH|Dod3HKA==
        - name: CurrencyCode
          in: query
          description: Transaction currency.
          required: true
          schema:
            type: string
          example: DKK
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WireTransferResponse'
              example: {
  "ClientDetails": {
    "AccountId": "113965-1",
    "AccountNumber": "0100772196",
    "AttainKey": "113965-1",
    "Bic": "SAXODKKKXXX",
    "ClientId": 8374926,
    "ClientNameAndAddress": "Name/Address",
    "Iban": "DK7833789377226198",
    "RegistrationNumber": "7392"
  },
  "CurrencyCode": "DKK",
  "IntermediaryBank": {
    "Address": "PHILIP HEYMANS ALLE 15,2900 HELLERUP DENMARK",
    "Bic": "SAXODKKKXXX",
    "Name": "Saxo Bank A/S"
  },
  "IsBrokerFunding": false,
  "ReceivingBank": {
    "Address": "PHILIP HEYMANS ALLE 15,2900 HELLERUP DENMARK",
    "Bic": "SAXODKKKXXX",
    "Name": "Saxo Bank A/S"
  },
  "SubsidiaryId": "1",
  "SubsidiaryName": "Saxo Bank",
  "VirtualAccountId": "SGACU 878000017001"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /cs/apistatus:
    get:
      description: Returns default server status information
      operationId: cs_apistatus
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerStatus'
              example: {
  "Created": "0001-01-01T00:00:00Z",
  "LeasePeriod": 0,
  "LogicalProcessors": 0,
  "MachineUptime": 0,
  "SystemUptime": 0,
  "TimeSpentMs": 2367.4,
  "ToolId": 0
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  '/cs/v1/platforms/disclaimers/{ClientKey}/{Platform}':
    get:
      tags:
        - Platforms - Disclaimers
      description: Get localized disclaimers for a specific client and platform
      operationId: DisclaimerGetDisclaimers
      parameters:
        - name: ClientKey
          in: path
          description: The client key
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 7m4I|vtYLUnEGg77o9uQhw==
        - name: Platform
          in: path
          description: Platform
          required: true
          schema:
            $ref: '#/components/schemas/Platform'
          example: MyAccount
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DisclaimerListResult'
              example: {
  "Data": [
    {
      "LanguageCode": "LanguageCoded86bcb82-64ce-44c6-9d18-1c9c7d39bf01",
      "LocalizedText": "LocalizedTexta3d142ef-0494-4cf1-813f-5a372efdfafe",
      "ModuleId": "ModuleId90544c0a-82b8-4925-a11a-8a7b68e41ece"
    }
  ],
  "MaxRows": 10631
}
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/questionnaires/questionsets/{QuestionSetTypeId}':
    get:
      tags:
        - Questionnaires - Question Sets
      description: Gets a question set
      operationId: QuestionsetsGetAsync
      parameters:
        - name: QuestionSetTypeId
          in: path
          description: The question set type Id
          required: true
          schema:
            type: string
          example: c9bd4b27-2ab7-46aa-932e-7f5258093928
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Questionset'
              example: {
  "Description": "Description299bb9a3-10be-42fa-b68d-3de57a026757",
  "Name": "Nameadb6de6d-56af-469a-8177-9cef6ffa7854",
  "PublishedDate": "2021-06-15",
  "QuestionnaireTestId": "bb74fb57-c9eb-4b8f-98e7-e775d258ef6e",
  "QuestionSections": [
    {
      "AssetTypes": [
        "FuturesOption"
      ],
      "Description": "Description7e52cd46-310c-48c2-b593-7f1339e21a21",
      "Name": "Name43ac03fa-43c5-4f71-801b-a4ac96c9cff1",
      "Questions": [
        {
          "Answer": "Answeree540b0f-f04e-4544-8c73-f9879095bb36",
          "DataType": "Options",
          "NumberRangeOptions": {
            "Maximum": 368162.61227292271,
            "Minimum": 35.970948122230382
          },
          "QuestionId": "87e81d1e-dba1-4cee-8dbd-caf4a842cf7d",
          "QuestionOptions": [
            {
              "QuestionOptionId": "ca6a48f5-86a2-4e99-8490-34a5e18d9288",
              "Selected": true,
              "Text": "Texta8b7f6d2-9830-44ec-851d-250294d53d90"
            }
          ],
          "QuestionText": "QuestionText2e85ec87-241a-4802-829d-69e33cf9dacf"
        }
      ],
      "RenderType": "Default",
      "Title": "Titlebc53cc48-d79c-4bf9-9c4d-770cd1562848"
    }
  ],
  "Title": "Titlee22477cf-800c-40e5-986c-10fe0d71e25e"
}
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    put:
      tags:
        - Questionnaires - Question Sets
      description: Updates question set for specific client
      operationId: QuestionsetsUpdate
      parameters:
        - name: QuestionSetTypeId
          in: path
          description: The question set type Id
          required: true
          schema:
            type: string
          example: c9bd4b27-2ab7-46aa-932e-7f5258093928
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Questionset'
            example: {
  "Description": "Description299bb9a3-10be-42fa-b68d-3de57a026757",
  "Name": "Nameadb6de6d-56af-469a-8177-9cef6ffa7854",
  "PublishedDate": "2021-06-15",
  "QuestionnaireTestId": "bb74fb57-c9eb-4b8f-98e7-e775d258ef6e",
  "QuestionSections": [
    {
      "AssetTypes": [
        "FuturesOption"
      ],
      "Description": "Description7e52cd46-310c-48c2-b593-7f1339e21a21",
      "Name": "Name43ac03fa-43c5-4f71-801b-a4ac96c9cff1",
      "Questions": [
        {
          "Answer": "Answeree540b0f-f04e-4544-8c73-f9879095bb36",
          "DataType": "Options",
          "NumberRangeOptions": {
            "Maximum": 368162.61227292271,
            "Minimum": 35.970948122230382
          },
          "QuestionId": "87e81d1e-dba1-4cee-8dbd-caf4a842cf7d",
          "QuestionOptions": [
            {
              "QuestionOptionId": "ca6a48f5-86a2-4e99-8490-34a5e18d9288",
              "Selected": true,
              "Text": "Texta8b7f6d2-9830-44ec-851d-250294d53d90"
            }
          ],
          "QuestionText": "QuestionText2e85ec87-241a-4802-829d-69e33cf9dacf"
        }
      ],
      "RenderType": "Default",
      "Title": "Titlebc53cc48-d79c-4bf9-9c4d-770cd1562848"
    }
  ],
  "Title": "Titlee22477cf-800c-40e5-986c-10fe0d71e25e"
}
      responses:
        '204':
          description: No Content
        '200':
          description: Indicates that the updated was performed correctly.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - AutoMapperError
                    type: string
                    x-enum-descriptions:
                      AutoMapperError: AutoMapper failed type casting.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/api/oas3:
    get:
      summary: Get Open API Specification 3.0 documentation for the service group.
      description: Returns the OAS 3 document for the service group.
      operationId: OasGetOas3
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  '/cs/v1/mifid/classificationstatuses/{Platform}':
    get:
      tags:
        - MiFID - Classification Status
      summary: Returns a asset classification status list
      description: Returns a asset classification status list
      operationId: GET_ClassificationStatusesGetAsync
      parameters:
        - name: ClientKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: Platform
          in: path
          description: Platform ID
          required: true
          schema:
            $ref: '#/components/schemas/Models.Platform'
          example: 2
        - name: Version
          in: query
          description: Version of endpoint
          schema:
            type: integer
            format: int32
          example: 0
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetClassificationStatus'
              example: {
  "AssetAppropriatenessTestStatus": "NotTaken",
  "AssetName": "Forex Spot",
  "AssetTypes": [
    "FxSpot"
  ],
  "ClassificationType": "Retail",
  "ProductAreaId": 1
}
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/mifid/classificationstatuses:
    get:
      tags:
        - MiFID - Classification Status
      summary: Returns asset classification status list
      description: Returns an asset classification status list for the currently authenticated user.
      operationId: ClassificationStatusesGetAsync
      parameters:
        - name: ClientKey
          in: query
          description: Client whose classification status is requested
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: Version
          in: query
          description: Version of endpoint where 0 specifies for granular level products and 1 for productArea = 'All'
          schema:
            type: integer
            format: int32
          example: 0
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AssetClassificationStatus'
              example: {
  "AssetAppropriatenessTestStatus": "NotTaken",
  "AssetName": "Forex Spot",
  "AssetTypes": [
    "FxSpot"
  ],
  "ClassificationType": "Retail",
  "ProductAreaId": 1
}
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v2/subscriptionbilling/services:
    get:
      tags:
        - Subscription Billing - Services
      description: Gets a list of all possible services by clientID
      operationId: GET_ServiceV2GetServices
      parameters:
        - name: ExchangeId
          in: query
          description: 'ExchangeId: If specified will return services for specified exchangeId'
          schema:
            type: string
        - name: UserKey
          in: query
          description: 'User Identifier Key: If specified will return services for specified user'
          schema:
            minLength: 1
            type: string
            x-type-name: UserKey
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceListResult'
              example: {
  "Data": [
    {
      "ExchangeAssetTypes": [
        {
          "AssetTypes": [
            "Stock"
          ],
          "ExchangeId": "HKEX"
        }
      ],
      "Levels": [
        {
          "AvailableActions": [
            "Subscribe"
          ],
          "LevelType": "Level2",
          "SubscriptionClassifications": [
            {
              "Classification": "Professional",
              "Price": {
                "Currency": "DKK",
                "Value": 1.1
              }
            }
          ]
        }
      ],
      "RestrictedCountries": [
        {
          "CountryId": "DK",
          "CountryName": "Denmark"
        }
      ],
      "ServiceId": "101",
      "ServiceName": "",
      "ServiceType": "Stocks"
    }
  ],
  "MaxRows": 20890
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v2/subscriptionbilling/services/me:
    get:
      tags:
        - Subscription Billing - Services
      description: Obsolete Gets a list of all possible services by clientID
      operationId: ServiceV2GetServices
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceListResult'
              example: {
  "Data": [
    {
      "ExchangeAssetTypes": [
        {
          "AssetTypes": [
            "Stock"
          ],
          "ExchangeId": "HKEX"
        }
      ],
      "Levels": [
        {
          "AvailableActions": [
            "Subscribe"
          ],
          "LevelType": "Level2",
          "SubscriptionClassifications": [
            {
              "Classification": "Professional",
              "Price": {
                "Currency": "DKK",
                "Value": 1.1
              }
            }
          ]
        }
      ],
      "RestrictedCountries": [
        {
          "CountryId": "DK",
          "CountryName": "Denmark"
        }
      ],
      "ServiceId": "101",
      "ServiceName": "",
      "ServiceType": "Stocks"
    }
  ],
  "MaxRows": 20890
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      deprecated: true
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
      x-deprecated-date: '2022-01-01'
  /cs/v2/audit/orderactivities:
    get:
      tags:
        - Audit - OrderActivities
      summary: Query Order activities history
      description: "Query Order activities history\r\n\r\n\r\nOur preferred option for continuously fetching order activities is to stream it out of ENS"
      operationId: OrderActivitiesV2GetOrderStatesAsync
      parameters:
        - name: $skiptoken
          in: query
          schema:
            type: string
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: AccountGroupKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: 'Account key: If specified will only return entries pertaining to specified Account.'
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: uLDoIiVA30y8uj4kFKp7Og ==
        - name: ClientKey
          in: query
          description: 'Client key: If specified will only return entries pertaining to specified client and its sub clients depending upon includeSubAccounts.'
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 2y0tX0m9ZH7MH8HK38qM9g==
        - name: CorrelationKey
          in: query
          description: 'CorrelationKey: If specified, will only return entries with the specified CorrelationKey'
          schema:
            type: string
          example: bb6bfb96-606d-45d6-95f5-efa443192f5c
        - name: Duration
          in: query
          description: 'Duration: If specified will only return entries with the specified duration type.'
          schema:
            $ref: '#/components/schemas/OpenOrderDurationNullable'
          example: GoodTillDate
        - name: EntryType
          in: query
          description: 'EntryType: optional. Defaults to ''All'': Return all entries pertaining to any order. ''Last'': Only return the latest state of an order ignoring ToDateTime (if any).'
          schema:
            $ref: '#/components/schemas/OrderEntryTypeNullable'
          example: All
        - name: ExpirationDateTime
          in: query
          description: 'ExpirationDateTime: If specified will only return entries with the specified expiry date. The expiration date, should only be set if the duration type is GoodTillDate. If the field contains the time, it must always be expressed in the exchange local time and Time zone indication must never be added. The time part should be in the following format: HH:mm, where HH is 24 hour clock. Seconds and milliseconds are not allowed. The expiration date is applicable only with Duration ''GoodTillDate'''
          schema:
            type: string
          example: '2017-12-01T00:00:00.0000000+00:00'
        - name: FieldGroups
          in: query
          description: 'FieldGroups: DisplayAndFormat'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OrderActivityFieldGroup'
          example: DisplayAndFormat
        - name: FromDateTime
          in: query
          description: 'Only include entries, with a ActivityDateTime greater than or equal to FromDateTime. FromDateTime can go back to maximum 3-years and It should be UTC Date Time. FromDateTime is required if ToDateTime is specified. If OrderId, FromDateTime and ToDateTime are not specified then response include entries with ActivityDateTime greater than past 3 month'
          schema:
            type: string
            format: date-time
            x-type-name: UtcDateTime
          example: '2017-12-01T00:00:00.0000000+00:00'
        - name: IncludeSubAccounts
          in: query
          description: 'IncludeSubAccounts: If specified true will return entries for all clients under specified ClientId in a hierarchy.'
          schema:
            type: boolean
          example: false
        - name: IpoOrderStatuses
          in: query
          description: 'IpoOrderStatuses: If specified will only return entries with the specified IpoOrderStatuses'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/IpoOrderStatus'
          example: Offer
        - name: OrderId
          in: query
          description: 'OrderId: Will only return entries pertaining to specified OrderId.'
          schema:
            type: string
          example: 234728341
        - name: OrderStates
          in: query
          description: 'SaxoInternal- OrderStates: If specified will only return entries with the specified Order State. By default all options will return'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OrderState'
          example: 'Cancelled,Expired'
        - name: OrderStatuses
          in: query
          description: 'OrderStatuses: If specified will only return entries with the specified OrderStatus'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OrderStatus'
          example: Placed
        - name: OrderTypes
          in: query
          description: 'OrderTypes: If specified will only return entries with the specified order type.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PlaceableOrderType'
          example: 'Market,Limit'
        - name: ToDateTime
          in: query
          description: 'Only include entries, with a ActivityDateTime less than or equal to ToDateTime. Cannot be used with EntryType="Last". Maximum 3-months date range can be accepted from FromDateTime. ToDateTime is required if FromDateTime is specified'
          schema:
            type: string
            format: date-time
            x-type-name: UtcDateTime
          example: '2017-12-31T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderActivitiesResponseListResult'
              example: {
  "__next": "/openapi/....../?$top=1&$skiptoken=1",
  "Data": [
    {
      "AccountId": "120602INET",
      "ActivityId": "260971",
      "ActivityTime": "2017-12-28T08:20:19Z",
      "AlgoOrderTradingStrategy": "iceberg",
      "AllocationKeyId": "6001526",
      "AllocationKeyName": "EmergingMarkets",
      "Amount": 300.0,
      "AssetType": "CfdOnStock",
      "AveragePrice": 100.0,
      "BuySell": "Buy",
      "CancelReason": "CancelledByDealer",
      "ClientId": "3031269",
      "ClientName": "John A",
      "CorrelationKey": "bb6bfb96-606d-45d6-95f5-efa443192f5c",
      "Direction": "Call",
      "DisplayAndFormat": {
        "BarrierFormat": "Normal",
        "Currency": "DKK",
        "Decimals": 3,
        "Description": "Genmab A/S",
        "Format": "Normal",
        "OrderDecimals": 2,
        "StrikeFormat": "Normal",
        "Symbol": "GEN:xcse"
      },
      "Duration": {
        "DurationType": "DayOrder"
      },
      "ExecutionPrice": 110.0,
      "ExternalReference": "7900087332",
      "FillAmount": 236.0,
      "FilledAmount": 100.0,
      "FinancingLevel": 3.0,
      "FxForwardValueDate": "2019-12-28",
      "HandledBy": "3031269",
      "IpoFinancingAmountPct": 12.0,
      "IpoOrderStatus": "Offer",
      "IpoSubscriptionFee": 19.0,
      "IsSecondCurrencyOrder": true,
      "LowerBarrier": 20.0,
      "LowerStrike": 200.0,
      "MultiLegOrderDetails": {
        "Amount": 100.0,
        "BuySell": "Buy",
        "ContractOptionStrategy": "Butterfly",
        "Description": "STM Butterfly 18M21 C28.5/C29/C29.5:xpar",
        "LegCount": 2,
        "MultiLegOrderId": "123",
        "Price": 10.0
      },
      "MultilegOrderId": "1245896",
      "NearLegValueDate": "2017-12-30",
      "OrderId": "234728341",
      "OrderRelation": "StandAlone",
      "OrderType": "Market",
      "ParentInstrumentInfo": {
        "AssetType": "CfdOnStock",
        "BuySell": "Buy",
        "Uic": 2090
      },
      "PositionId": "74859666",
      "Price": 1048.2,
      "PutCall": "Call",
      "RelatedOrderIds": [
        "71782599",
        "85265966"
      ],
      "RelatedPositionId": "74589652",
      "SecondCurrencyAmount": 1000.0,
      "Status": "Placed",
      "StopLimitPrice": 90.0,
      "SubStatus": "Requested",
      "Uic": 2090,
      "UpperBarrier": 300.0,
      "UpperStrike": 230.0,
      "UserId": "74859658",
      "ValueDate": "2017-12-28"
    }
  ]
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/platforms/autotrading/termsandconditions:
    get:
      tags:
        - Platforms - Auto Trading Terms and Conditions
      description: Gets the clients Auto Trading Terms and Conditions Status
      operationId: AutoTradingTermsAndConditionsGet
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TermsAndConditions'
              example: {
  "AutoTradingTermsAndConditionsStatus": "Unknown"
}
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    put:
      tags:
        - Platforms - Auto Trading Terms and Conditions
      description: Accepting the Terms and Conditions
      operationId: AutoTradingTermsAndConditionsUpdate
      responses:
        '204':
          description: No Content
        '200':
          description: Indicates that the request was performed correctly.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - AutoMapperError
                    type: string
                    x-enum-descriptions:
                      AutoMapperError: AutoMapper failed type casting.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/tradingconditions:
    get:
      tags:
        - Trading Conditions - Account
      description: Gets trading condition based on account.
      operationId: TradingConditionGetTradingCondition
      parameters:
        - name: AccountKey
          in: query
          description: The account key.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingCondition'
              example: {
  "CommissionGroupName": "CS 303",
  "PartnerRiskProfile": "PartnerRiskProfile"
}
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/apps/{AppId}/approvallevels':
    put:
      tags:
        - Apps
      description: Change accepted approval level for an app.
      operationId: AppsChangeApprovalLevel
      parameters:
        - name: AppId
          in: path
          description: ID of app
          required: true
          schema:
            type: integer
            format: int32
          example: 2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAppApprovalLevelModel'
            example: {
  "Level": "Everything"
}
      responses:
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - UnknownApp
                    type: string
                    x-enum-descriptions:
                      UnknownApp: Specified app does not exist
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/apps/{AppId}':
    get:
      tags:
        - Apps
      description: Get information for a specific app.
      operationId: AppsGet
      parameters:
        - name: AppId
          in: path
          description: ID of app
          required: true
          schema:
            type: integer
            format: int32
          example: 2
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OAuth2AppWithAppApprovalForUser'
              example: {
  "AppId": 26440,
  "ApprovalLevelAccepted": "ReadOnly",
  "ApprovalLevelModifiedTimestamp": "2021-01-16T11:00:57.723518Z",
  "ApprovalLevelRequired": "NoAccess",
  "Description": "Description5f733f91-dd4c-46a4-93d2-8d552dff94cc",
  "HasOwnMifidFlow": false,
  "Name": "Nameba65c7ef-3d10-423b-8a34-ed7bdb656d0f",
  "NeedsAppApproval": true,
  "PreApproved": false
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - UnknownApp
                    type: string
                    x-enum-descriptions:
                      UnknownApp: Specified app does not exist
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/apps/my:
    get:
      tags:
        - Apps
      description: Get collection of apps approved by the user.
      operationId: AppsMy
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OAuth2AppWithAppApprovalForUser'
              example: [
  {
    "AppId": 16704,
    "ApprovalLevelAccepted": "Unspecified",
    "ApprovalLevelModifiedTimestamp": "2021-11-20T04:53:14.041277Z",
    "ApprovalLevelRequired": "Everything",
    "Description": "Descriptione788be39-fa9f-410c-82bc-8758a222ac99",
    "HasOwnMifidFlow": true,
    "Name": "Nameba9a8b00-5161-4a06-bfca-d16d80916a50",
    "NeedsAppApproval": false,
    "PreApproved": true
  }
]
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/securitiestransfer/{ClientKey}':
    get:
      tags:
        - Securities Transfer
      description: Get Security transfer details.
      operationId: SecuritiesTransferGetTransferDetails
      parameters:
        - name: ClientKey
          in: path
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: TransferIDs
          in: query
          description: Comma separate list of Transfer IDs
          required: true
          schema:
            type: array
            items:
              type: integer
              format: int32
      responses:
        '200':
          description: Indicates that the request was performed.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityTransferReportData'
              example: {
  "AccountId": "AccountId20167f14-f644-4016-8793-d34a077ff3c4",
  "AccountManager": "AccountManager98e81806-e8b3-4410-88f5-99310523dae1",
  "BrokerContact": "BrokerContact72e00230-af0e-4491-888c-5882b19afc47",
  "BrokerMail": "BrokerMail836f3209-a8ee-4af7-a503-cc11063c7d96",
  "BrokerName": "BrokerName1a0dd372-f860-48f8-99a1-3e5695a90321",
  "BrokerPhone": "BrokerPhone92bbefa2-1313-4718-9c7a-b3db289795fe",
  "ClientAccountAtBroker": "ClientAccountAtBrokerc6278dac-3e69-40bb-9f2f-15bc2a32d311",
  "ClientId": "ClientId03b8f297-1fea-4cbd-8c1c-f19b52f4b9ff",
  "ClientName": "ClientNamee8cdd0cc-f8b0-4436-ac2d-700d335bb9f9",
  "InstrumentDetails": [
    {
      "Currency": "Currency9938e56d-ee08-4fd6-a355-5de8aa14aeda",
      "Description": "Description8a047056-6aab-4db8-8a6c-8e7cd9ea077d",
      "Exchange": "Exchangef55b82c7-6eb0-4961-8046-641423d6b458",
      "ExchangeText": "ExchangeTexta5a5a7d4-2a54-4291-864b-7a88bfaf5b97",
      "InstrumentSymbolCode": "InstrumentSymbolCode6045363d-964d-4ddb-8d14-d1d72ca81c09",
      "IsinCode": "IsinCode5d359f4c-961d-4096-8863-49f42cc33893",
      "Price": -5341.625895837381,
      "PurchaseDate": "2022-10-20",
      "Quantity": 603751131.00286365,
      "Uic": "Uic1d69a35e-344a-4664-aeff-e05a825787f7"
    }
  ],
  "SubmissionDate": "2021-11-10",
  "TransferType": "TransferOut"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/securitiestransfer/brokers/{CountryId}':
    get:
      tags:
        - Securities Transfer
      description: Get brokers.
      operationId: SecuritiesTransferGetBrokers
      parameters:
        - name: CountryId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Indicates that the request was performed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Broker'
              example: [
  {
    "Contact": "Broker Contact 1",
    "CountryId": 11,
    "Email": "BrokerEmail1@email.com",
    "Name": "ABC Investment Bank",
    "PhoneNumber": "+45 12345678"
  },
  {
    "Contact": "Broker Contact 2",
    "CountryId": 11,
    "Email": "BrokerEmail2@email.com",
    "Name": "Alps Investment Bank",
    "PhoneNumber": "+45 1234567890"
  }
]
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BrokerInformationUrl
                    type: string
                    x-enum-descriptions:
                      BrokerInformationUrl: SecurityTransfer initiated
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/securitiestransfer/countries:
    get:
      tags:
        - Securities Transfer
      description: Get countries.
      operationId: SecuritiesTransferGetCountries
      responses:
        '200':
          description: Indicates that the request was performed.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Country'
              example: [
  {
    "CountryId": 11,
    "IsoCode": "DK",
    "Name": "Denmark"
  },
  {
    "CountryId": 116,
    "IsoCode": "CN",
    "Name": "China"
  }
]
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - CountryDetailUrl
                    type: string
                    x-enum-descriptions:
                      CountryDetailUrl: SecurityTransfer initiated
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/securitiestransfer/transfers:
    post:
      tags:
        - Securities Transfer
      summary: Submit securities transfer request
      description: "Submit the list of securities, which the client wants transferred in or out of Saxo Bank.\r\n             \r\nIf at least one security in the list of securities is accepted the service will return \"201 Created\" and the response will contain the actual transfer result for each security.\r\n\r\nIf no securities in the list is accepted, the service will return a \"400\" and an object containing \"ErrorCode\":100, and the list of transfer results for each security."
      operationId: SecuritiesTransferTransfer
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransferDetails'
            example: {
  "AssetType": "Etc",
  "BrokerDetails": {
    "BrokerContact": "John Doe",
    "BrokerMail": "john@mybroker.com",
    "BrokerName": "MyBroker",
    "BrokerPhone": "555 212-639-9675",
    "ClientAccountAtBroker": "0100772196"
  },
  "BrokerSsi": {
    "AccountAtClearingAgent": "AccountAtClearingAgent188f7a46-b097-4ffb-9f50-533eda876b54",
    "AgentLocalAccount": "AgentLocalAccount927db06d-b085-4b8c-b0ff-1227e36d467d",
    "BuyerSellerCode": "BuyerSellerCode44db0d9f-5779-4376-aff7-a8e79d1b4ac3",
    "BuyerSellerCodeType": "None",
    "ClearingAgentCode": "ClearingAgentCoded7b30a31-c03b-4bff-a8de-e1fe7ab463db",
    "ClearingAgentCodeType": "Local",
    "FreeText": "FreeText4e96687e-5d54-430d-ad9b-44564ece0d2f",
    "SettlementAgentAccount": "SettlementAgentAccountaa36010a-0cc2-42e0-af30-d217d394fa88"
  },
  "SaxoDetails": {
    "AccountKey": "zsnh|NO42RmzjC4oPovKGA=="
  },
  "SecuritiesTransferDetails": [
    {
      "Price": 194.82,
      "Quantity": 1.0,
      "Uic": "211"
    }
  ],
  "SettlementDate": "2023-03-12",
  "TradeDate": "2021-05-15",
  "TransferType": "TransferIn"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityTransferResponse'
              example: {
  "TransferReferenceId": "63HGCDS3E89DS"
}
        '200':
          description: Indicates that the request was performed.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - AccountInvalidError
                    type: string
                    x-enum-descriptions:
                      AccountInvalidError: AccountId is not valid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/clientplans/lookupdata:
    get:
      tags:
        - ClientPlans
      description: Lookup
      operationId: ClientPlansLookUp
      parameters:
        - name: ClientKey
          in: query
          description: Client Key Identifier
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 2y0tX0m9ZH7MH8HK38qM9g==
        - name: FieldGroups
          in: query
          description: Specify lookup fields required in response
          schema:
            $ref: '#/components/schemas/LookupFieldGroup'
          example: ClientPlan
      responses:
        '200':
          description: Action was executed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientPlanLookupListResult'
              example: {
  "Data": [
    {
      "FieldGroup": "ClientPlans",
      "Values": [
        {
          "Id": "1",
          "Name": "Plan1"
        },
        {
          "Id": "2",
          "Name": "Plan2"
        }
      ]
    }
  ]
}
        '404':
          description: Client plans not found.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/clientplans:
    get:
      tags:
        - ClientPlans
      description: Get available client plans
      operationId: ClientPlansGetClientPlan
      parameters:
        - name: ClientKey
          in: query
          description: Client Key Identifier
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 2y0tX0m9ZH7MH8HK38qM9g==
      responses:
        '200':
          description: Action was executed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientPlan'
              example: {
  "CurrentPlan": {
    "Id": "501",
    "Name": "Current Plan"
  },
  "PlanGroupId": "2031",
  "RequestedPlan": {
    "Id": "1001",
    "Name": "Requested Plan",
    "StartDate": "2022-04-05"
  }
}
        '404':
          description: Client plans not found.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    patch:
      tags:
        - ClientPlans
      description: Update Client Plans
      operationId: ClientPlansUpdateClientPlans
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClientPlanRequest'
            example: {
  "ClientKey": "eZZG5keMwrNdWWIm7pOXQg==",
  "ClientPlanId": "1"
}
      responses:
        '204':
          description: 'Request successful, no content to return.'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: ''
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v2/subscriptionbilling/subscriptions/{SubscriptionId}/prolong':
    patch:
      tags:
        - Subscription Billing - Subscriptions
      description: Prolong subscription
      operationId: SubscriptionV2Prolong
      parameters:
        - name: SubscriptionId
          in: path
          description: ID of the subscription
          required: true
          schema:
            type: string
          example: 1212
        - name: UserKey
          in: query
          description: 'User Identifier Key: If specified will prolong subscription to specified user'
          schema:
            minLength: 1
            type: string
            x-type-name: UserKey
      responses:
        '204':
          description: No Content
        '200':
          description: Indicates that the request was performed correctly.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v2/subscriptionbilling/subscriptions/{SubscriptionId}':
    delete:
      tags:
        - Subscription Billing - Subscriptions
      description: Unsubscribe to a existing subscription
      operationId: DELETE_SubscriptionV2Unsubscribe
      parameters:
        - name: SubscriptionId
          in: path
          description: ID of the subscription
          required: true
          schema:
            type: string
          example: 1212
        - name: UserKey
          in: query
          description: 'User Identifier Key: If specified will unsubscribe for specified user'
          schema:
            minLength: 1
            type: string
            x-type-name: UserKey
      responses:
        '204':
          description: No Content
        '200':
          description: Indicates that the request was performed correctly.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v2/subscriptionbilling/subscriptions/{SubscriptionId}/unsubscribe':
    patch:
      tags:
        - Subscription Billing - Subscriptions
      description: Obsolete Unsubscribe to a existing subscription
      operationId: SubscriptionV2Unsubscribe
      parameters:
        - name: SubscriptionId
          in: path
          description: ID of the subscription
          required: true
          schema:
            type: string
          example: 1212
      responses:
        '204':
          description: No Content
        '200':
          description: Indicates that the request was performed correctly.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      deprecated: true
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
      x-deprecated-date: '2022-01-01'
  /cs/v2/subscriptionbilling/subscriptions:
    get:
      tags:
        - Subscription Billing - Subscriptions
      description: Gets a list of all existing subscriptions by userKey
      operationId: GET_SubscriptionV2GetSubscriptions
      parameters:
        - name: UserKey
          in: query
          description: 'User Identifier Key: If specified will return subscriptions for specified user'
          schema:
            minLength: 1
            type: string
            x-type-name: UserKey
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionListResult'
              example: {
  "Data": [
    {
      "AvailableActions": [
        "Unsubscribe",
        "ViewSubscription"
      ],
      "From": "2021-04-05T06:05:13.066233Z",
      "LevelType": "Delayed",
      "ServiceId": "01",
      "SubscriptionClassification": {
        "Classification": "Professional",
        "Price": {
          "Currency": "DKK",
          "Value": 1.1
        }
      },
      "SubscriptionId": "1212",
      "To": "2023-04-05T06:05:13.066233Z"
    }
  ],
  "MaxRows": 30764
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    post:
      tags:
        - Subscription Billing - Subscriptions
      description: Subscribes to a subscription
      operationId: SubscriptionV2Subscribe
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
            example: {
  "AgreementValues": [
    {
      "Name": "ProfessionalStatusAvailable",
      "Value": "true"
    },
    {
      "Name": "SemiProfessionalStatusAvailable",
      "Value": "false"
    },
    {
      "Name": "clientprolevel",
      "Value": "Professional"
    },
    {
      "Name": "privatestatusavailable",
      "Value": "true"
    },
    {
      "Name": "level",
      "Value": "Level1"
    },
    {
      "Name": "ca_client_id",
      "Value": "123456"
    },
    {
      "Name": "ca_client_id_l1",
      "Value": "123456"
    },
    {
      "Name": "ca_full_name_l1",
      "Value": "Narender Modi"
    },
    {
      "Name": "acceptdisclaimer",
      "Value": "true"
    }
  ],
  "From": "2022-03-06T06:05:13.080595Z",
  "LevelType": "Level2",
  "ServiceId": "",
  "UserKey": "2y0tX0m9ZH7MH8HK38qM9g=="
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
              example: {
  "SubscriptionId": "1212"
}
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v2/subscriptionbilling/subscriptions/me:
    get:
      tags:
        - Subscription Billing - Subscriptions
      description: Obsolete Gets a list of all existing subscriptions by clientKey
      operationId: SubscriptionV2GetSubscriptions
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionListResult'
              example: {
  "Data": [
    {
      "AvailableActions": [
        "Unsubscribe",
        "ViewSubscription"
      ],
      "From": "2021-04-05T06:05:13.066233Z",
      "LevelType": "Delayed",
      "ServiceId": "01",
      "SubscriptionClassification": {
        "Classification": "Professional",
        "Price": {
          "Currency": "DKK",
          "Value": 1.1
        }
      },
      "SubscriptionId": "1212",
      "To": "2023-04-05T06:05:13.066233Z"
    }
  ],
  "MaxRows": 30764
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      deprecated: true
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
      x-deprecated-date: '2022-01-01'
  /cs/v1/tradingconditions/cost:
    get:
      tags:
        - Trading Conditions - Cost
      summary: Get pre-trade cost illustration for multiple instruments
      description: Gets pre-trade cost illustration for multiple instruments
      operationId: GET_CostGetTradingConditionCost
      parameters:
        - name: AccountKey
          in: query
          description: Optional account key
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: Amount
          in: query
          description: The number of asset to be traded.
          required: true
          schema:
            type: number
          example: 10000
        - name: CommissionGroupId
          in: query
          description: Optional commissionGroupId
          schema:
            type: integer
            format: int32
        - name: FieldGroups
          in: query
          description: The field groups.
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TradingConditionFieldGroup'
          example: DisplayAndFormat
        - name: HoldingPeriodInDays
          in: query
          description: The holding period in days if provided else 1 day.
          schema:
            type: integer
            format: int32
          example: 5
        - name: InstrumentFilters
          in: query
          description: InstrumentFilters
          schema:
            title: InstrumentFilters
            type: array
            items:
              $ref: '#/components/schemas/AssetTypeFilter'
          example: [
  {
    "AssetType": "Bond",
    "Uic": 13190
  }
]
        - name: Instruments
          in: query
          description: Uic/AssetType collection
          schema:
            title: "Instrument Filter. This needs to be there for the model binding to allow the query notation and model\r\n                binding/parsing."
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: KeywordFilters
          in: query
          description: Keyword filters
          schema:
            title: Keyword filters
            type: array
            items:
              $ref: '#/components/schemas/KeywordFilter'
          example: [
  {
    "Keyword": "Keywordebb7e000-51b5-4e37-82be-4a4669f18e10",
    "Values": [
      "4d4aa6f5-0afa-49bc-9234-60ba49d3019b"
    ]
  }
]
        - name: ManagementFeeProfileId
          in: query
          description: Management fee profile id
          schema:
            type: string
        - name: Price
          in: query
          schema:
            type: number
        - name: Size
          in: query
          description: Gets or sets the size of the search result.
          schema:
            title: Gets or sets the size of the search result.
            type: integer
            format: int32
          example: 10937
        - name: Uics
          in: query
          description: Uics
          schema:
            title: Uics
            type: array
            items:
              type: integer
              format: int32
          example: [
  31198
]
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingConditionCostResponseListResult'
              example: {
  "Data": [
    {
      "AccountCurrency": "GBP",
      "AccountID": "125567INET",
      "Amount": 10000.0,
      "AssetType": "FxSpot",
      "Cost": {
        "Long": {
          "BuySell": "Buy",
          "Currency": "USD",
          "HoldingCost": {
            "Tax": [
              {
                "Pct": 0.5,
                "Rule": {
                  "BuySell": "Sell",
                  "CalculationType": "ValueFraction",
                  "Description": "UK Stamp Duty",
                  "Value": 0.5
                },
                "Value": 92.92
              },
              {
                "Pct": 0.005,
                "Rule": {
                  "BuySell": "Sell",
                  "CalculationType": "FixedAmount",
                  "Description": "UK PTM Levy",
                  "Value": 0.5
                },
                "Value": 1.0
              }
            ],
            "TomNext": {
              "Pct": 0.005,
              "Rule": {
                "Markup": 0.35
              },
              "Value": 0.572
            }
          },
          "TotalCost": 6.672,
          "TotalCostPct": 0.056,
          "TradingCost": {
            "Commissions": [
              {
                "Pct": 0.05,
                "Rule": {
                  "Currency": "USD",
                  "MinCommission": 3.0
                },
                "Value": 6.0
              }
            ],
            "Spread": {
              "DisplayDecimals": 4,
              "Rule": {
                "Pct": 1E-05
              },
              "Value": 0.1
            }
          },
          "TrailingCommission": {
            "Pct": 0.5,
            "Rule": {
              "Pct": 0.5
            },
            "Value": 410.959
          }
        },
        "Short": {
          "BuySell": "Sell",
          "Currency": "USD",
          "HoldingCost": {
            "Tax": [
              {
                "Pct": 0.5,
                "Rule": {
                  "BuySell": "Sell",
                  "CalculationType": "ValueFraction",
                  "Description": "UK Stamp Duty",
                  "Value": 0.5
                },
                "Value": 92.92
              },
              {
                "Pct": 0.005,
                "Rule": {
                  "BuySell": "Sell",
                  "CalculationType": "FixedAmount",
                  "Description": "UK PTM Levy",
                  "Value": 0.5
                },
                "Value": 1.0
              }
            ],
            "TomNext": {
              "Pct": 0.005,
              "Rule": {
                "Markup": 0.35
              },
              "Value": 0.572
            }
          },
          "TotalCost": 6.672,
          "TotalCostPct": 0.056,
          "TradingCost": {
            "Commissions": [
              {
                "Pct": 0.05,
                "Rule": {
                  "Currency": "USD",
                  "MinCommission": 3.0
                },
                "Value": 6.0
              }
            ],
            "Spread": {
              "DisplayDecimals": 4,
              "Rule": {
                "Pct": 1E-05
              },
              "Value": 0.1
            }
          },
          "TrailingCommission": {
            "Pct": 0.5,
            "Rule": {
              "Pct": 0.5
            },
            "Value": 410.959
          }
        }
      },
      "CostCalculationAssumptions": [
        "IncludesOpenAndCloseCost",
        "EquivalentOpenAndClosePrice"
      ],
      "DisplayAndFormat": {
        "BarrierFormat": "Normal",
        "Currency": "USD",
        "Decimals": 4,
        "Description": "Euro/US Dollar",
        "Format": "Normal",
        "OrderDecimals": 2,
        "StrikeFormat": "Normal",
        "Symbol": "EURUSD"
      },
      "HoldingPeriodInDays": 5,
      "Instrument": "EURUSD",
      "Price": 1.19376,
      "Uic": 21
    }
  ],
  "MaxRows": 13848
}
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/tradingconditions/cost/{AccountKey}/{Uic}/{AssetType}':
    get:
      tags:
        - Trading Conditions - Cost
      summary: Get pre-trade cost illustration for regular instruments
      description: Gets pre-trade cost illustration for regular instruments
      operationId: CostGetTradingConditionCost
      parameters:
        - name: AccountKey
          in: path
          description: The account key to lookup the conditions for
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: 7m4I|vtYLUnEGg77o9uQhw==
        - name: Amount
          in: query
          description: The number of asset to be traded.
          required: true
          schema:
            type: number
          example: 10000
        - name: AssetType
          in: path
          description: The assetType of the instrument to lookup
          required: true
          schema:
            $ref: '#/components/schemas/AssetType'
          example: FxSpot
        - name: FieldGroups
          in: query
          description: The field groups.
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/TradingConditionFieldGroup'
          example: DisplayAndFormat
        - name: HoldingPeriodInDays
          in: query
          description: The holding period in days if provided else 1 day.
          schema:
            type: integer
            format: int32
          example: 5
        - name: Price
          in: query
          description: The instrument price to be used for the calculation. Required for all non-Saxo applications.
          schema:
            type: number
          example: 1.19376
        - name: Uic
          in: path
          description: The uic for the instrument to lookup
          required: true
          schema:
            type: integer
            format: int32
          example: 21
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TradingConditionCostResponse'
              example: {
  "AccountCurrency": "GBP",
  "AccountID": "125567INET",
  "Amount": 10000.0,
  "AssetType": "FxSpot",
  "Cost": {
    "Long": {
      "BuySell": "Buy",
      "Currency": "USD",
      "HoldingCost": {
        "Tax": [
          {
            "Pct": 0.5,
            "Rule": {
              "BuySell": "Sell",
              "CalculationType": "ValueFraction",
              "Description": "UK Stamp Duty",
              "Value": 0.5
            },
            "Value": 92.92
          },
          {
            "Pct": 0.005,
            "Rule": {
              "BuySell": "Sell",
              "CalculationType": "FixedAmount",
              "Description": "UK PTM Levy",
              "Value": 0.5
            },
            "Value": 1.0
          }
        ],
        "TomNext": {
          "Pct": 0.005,
          "Rule": {
            "Markup": 0.35
          },
          "Value": 0.572
        }
      },
      "TotalCost": 6.672,
      "TotalCostPct": 0.056,
      "TradingCost": {
        "Commissions": [
          {
            "Pct": 0.05,
            "Rule": {
              "Currency": "USD",
              "MinCommission": 3.0
            },
            "Value": 6.0
          }
        ],
        "Spread": {
          "DisplayDecimals": 4,
          "Rule": {
            "Pct": 1E-05
          },
          "Value": 0.1
        }
      },
      "TrailingCommission": {
        "Pct": 0.5,
        "Rule": {
          "Pct": 0.5
        },
        "Value": 410.959
      }
    },
    "Short": {
      "BuySell": "Sell",
      "Currency": "USD",
      "HoldingCost": {
        "Tax": [
          {
            "Pct": 0.5,
            "Rule": {
              "BuySell": "Sell",
              "CalculationType": "ValueFraction",
              "Description": "UK Stamp Duty",
              "Value": 0.5
            },
            "Value": 92.92
          },
          {
            "Pct": 0.005,
            "Rule": {
              "BuySell": "Sell",
              "CalculationType": "FixedAmount",
              "Description": "UK PTM Levy",
              "Value": 0.5
            },
            "Value": 1.0
          }
        ],
        "TomNext": {
          "Pct": 0.005,
          "Rule": {
            "Markup": 0.35
          },
          "Value": 0.572
        }
      },
      "TotalCost": 6.672,
      "TotalCostPct": 0.056,
      "TradingCost": {
        "Commissions": [
          {
            "Pct": 0.05,
            "Rule": {
              "Currency": "USD",
              "MinCommission": 3.0
            },
            "Value": 6.0
          }
        ],
        "Spread": {
          "DisplayDecimals": 4,
          "Rule": {
            "Pct": 1E-05
          },
          "Value": 0.1
        }
      },
      "TrailingCommission": {
        "Pct": 0.5,
        "Rule": {
          "Pct": 0.5
        },
        "Value": 410.959
      }
    }
  },
  "CostCalculationAssumptions": [
    "IncludesOpenAndCloseCost",
    "EquivalentOpenAndClosePrice"
  ],
  "DisplayAndFormat": {
    "BarrierFormat": "Normal",
    "Currency": "USD",
    "Decimals": 4,
    "Description": "Euro/US Dollar",
    "Format": "Normal",
    "OrderDecimals": 2,
    "StrikeFormat": "Normal",
    "Symbol": "EURUSD"
  },
  "HoldingPeriodInDays": 5,
  "Instrument": "EURUSD",
  "Price": 1.19376,
  "Uic": 21
}
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cs/v1/tradingconditions/InterestProfile/{ClientKey}':
    get:
      tags:
        - Trading Conditions - InterestProfile
      summary: Get interest profiles
      description: Gets interest profiles
      operationId: InterestProfileGetInterestProfile
      parameters:
        - name: ClientKey
          in: path
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 7m4I|vtYLUnEGg77o9uQhw==
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InterestRuleListResult'
              example: {
  "Data": [
    {
      "AccountCurrencyCode": "EUR",
      "CurrencyCode": "USD",
      "InterestType": "Fixed",
      "MaxAmount": 99.999,
      "MinAmount": 1.99,
      "Rate": 9.99
    }
  ],
  "MaxRows": 9271
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/diagnostics/users:
    get:
      description: Get information about unique users served by the publishers and other performance related information.
      operationId: cs_users
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  /cs/diagnostics/subscriptions:
    get:
      description: "Gets information about subscriptions in the publishers.\r\n\r\nIf no filter is specified all subscriptions from all publishers are returned."
      operationId: cs_subscriptions
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
        - name: ApplicationId
          in: query
          description: Restricts the subscriptions to an application if specified.
          schema:
            title: Restricts the subscriptions to an application if specified.
            minimum: 1
            type: integer
            format: int32
            x-type-name: ApplicationId
          example: "10759"
        - name: ContextId
          in: query
          description: Restricts the subscriptions to a streaming session if specified along with a session id.
          schema:
            title: Restricts the subscriptions to a streaming session if specified along with a session id.
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: Publisher
          in: query
          description: Restricts the subscriptions to a publisher if specified.
          schema:
            title: Restricts the subscriptions to a publisher if specified.
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: SessionId
          in: query
          description: Restricts the subscriptions to a session if specified.
          schema:
            title: Restricts the subscriptions to a session if specified.
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            x-type-name: SessionId
          example: "c9d2578c-bf35-4d21-8806-bcdbf9545a1a"
        - name: UserId
          in: query
          description: Restricts the subscriptions to a MITS user if specified.
          schema:
            title: Restricts the subscriptions to a MITS user if specified.
            allOf:
              - $ref: '#/components/schemas/UserIdNullable'
          example: 777835942
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  /cs/diagnostics/publishers:
    get:
      description: Returns the list of publisher names.
      operationId: cs_publishers
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  /cs/v1/log:
    post:
      tags:
        - Log
      summary: Log messages and data
      description: Logs the messages and data in the log file.
      operationId: LogLogMessages
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/LogRequest'
            example: [
  {
    "AppName": "SaxoApp",
    "Message": "Custom log message.",
    "Severity": "Trace"
  },
  {
    "AppName": "TraderApp",
    "Data": {
      "AdditionalInfo": "Any additonal Information"
    },
    "Message": "Log Information.",
    "Severity": "Info"
  }
]
      responses:
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-application-visibility: saxo-only
  /cs/v2/clientinfo/clients/hierarchy:
    get:
      tags:
        - ClientInfo
      summary: Search all clients or child counterparts based on ownerId
      description: "Search all child counterparts based on clientKey and ownerID\r\n             Requested Client -&gt; IBs -&gt; Normal Clients, and requested client is just returned as entry 0, \r\n             but not if we $skip (as if we do that, we've already requested the first page so have entry 0)\r\n             so something like\r\n             $skip = 0, $top = 5, return [RequestedClient, IB1, IB2, IB3, IB4]\r\n             $skip = 5, $top = 5, return [IB5, Client1, Client2, Client3, Client4]"
      operationId: ClientInfoV2SearchClientHierarchy
      parameters:
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            maximum: 100
            minimum: 0
            type: integer
            format: int32
            default: 10
        - name: ClientKey
          in: query
          description: search clients on the base of clientKey
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 7m4I|vtYLUnEGg77o9uQhw==
        - name: ClientType
          in: query
          description: ClientType options to filter records in search
          schema:
            $ref: '#/components/schemas/ClientTypeNullable'
        - name: FieldGroups
          in: query
          description: fieldGroups specify either return Accounts/Users or both in response
          schema:
            $ref: '#/components/schemas/SearchFieldGroupsNullable'
          example: Accounts
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSearchResponseListResult'
              example: {
  "Data": [
    {
      "Accounts": [
        {
          "AccountDisplayName": "Stock CFD (R)",
          "AccountGroupId": "AccountGroupId1",
          "AccountGroupName": "Group1",
          "AccountId": "72158INET",
          "AccountKey": "7O7jkyRC6p0S8umNatRBKA==",
          "PartnerAccountKey": "PAK - 10001/INET100JIK"
        }
      ],
      "ClientId": "825472",
      "ClientKey": "qWRC6bqfPBmkV|or68xT4A==",
      "ClientType": "House",
      "ContractType": "JointAccount",
      "DefaultAccountId": "82158INET",
      "DefaultAccountKey": "abcC6bqfPBmkV|or68xT4A==",
      "LegalAssetTypes": [
        "Bond"
      ],
      "Name": "hll",
      "PartnerPlatformId": "1",
      "Users": [
        {
          "UserId": "1881236",
          "UserKey": "aG90Uvk5z2acv5Qqtm4AgA=="
        }
      ]
    }
  ]
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v2/clientinfo/clients/searchtree:
    get:
      tags:
        - ClientInfo
      summary: 'Search all parent counterparts based on the Keywords,clientKey and accountKey.'
      description: "Search all the parent counterparts based on the Keywords,clientKey and accountKey. \r\n             If only Keywords field is provided, it will search clients having AccountId Or ClientId Or ClientName field values containing the keywords.\r\n             If AccountKey, ClientKey fields are provided, the lookup will be for an exact match of these values with AND operator.\r\n             To get Accounts, Users info in the response, specify \"All\" in the FieldGroups,\r\n             To get Users specify \"Users\", in the FieldGroups ,\r\n             To get Accounts specify \"Accounts\", in the FieldGroups \r\n             The default value of $top is 10 and max value is 100."
      operationId: ClientInfoV2SearchClientTree
      parameters:
        - name: AccountKey
          in: query
          description: seacrh based on accountKey
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: 8m4I|vtYLUnEGg77o9uWhw==
        - name: ClientKey
          in: query
          description: seacrh based on clientKey
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 7m4I|vtYLUnEGg77o9uQhw==
        - name: FieldGroups
          in: query
          description: fieldGroups specify either return Accounts/Users or both in response
          schema:
            $ref: '#/components/schemas/SearchFieldGroupsNullable'
          example: Accounts
        - name: Keywords
          in: query
          description: seacrh based on string in keywords
          schema:
            type: string
          example: '{IB}'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSearchTreeListResult'
              example: {
  "Data": [
    {
      "Accounts": [
        {
          "AccountDisplayName": "Stock CFD (R)",
          "AccountGroupId": "AccountGroupId1",
          "AccountGroupName": "Group1",
          "AccountId": "72158INET",
          "AccountKey": "7O7jkyRC6p0S8umNatRBKA=="
        }
      ],
      "ClientId": "825472",
      "ClientKey": "qWRC6bqfPBmkV|or68xT4A==",
      "ClientType": "House",
      "ContractType": "JointAccount",
      "DefaultAccountId": "82158INET",
      "DefaultAccountKey": "abcC6bqfPBmkV|or68xT4A==",
      "LegalAssetTypes": [
        "Bond"
      ],
      "Name": "hll1",
      "OwnerId": "825471",
      "SubClients": [
        {
          "Accounts": [
            {
              "AccountDisplayName": "Stock CFD (R)",
              "AccountGroupId": "AccountGroupId2",
              "AccountGroupName": "Group2",
              "AccountId": "72158INES",
              "AccountKey": "7O7jkyRC6p0S8umNatRBKB=="
            }
          ],
          "ClientId": "825473",
          "ClientKey": "qWRC6bqfPBmkV|or68xT4A==",
          "ClientType": "House",
          "ContractType": "JointAccount",
          "DefaultAccountId": "82158INET",
          "DefaultAccountKey": "abcC6bqfPBmkV|or68xT4A==",
          "LegalAssetTypes": [
            "Bond"
          ],
          "Name": "hll2",
          "OwnerId": "825472",
          "SubClients": [],
          "Users": [
            {
              "UserId": "1881236",
              "UserKey": "aG90Uvk5z2acv5Qqtm4AgA=="
            }
          ]
        }
      ],
      "Users": [
        {
          "UserId": "1881236",
          "UserKey": "aG90Uvk5z2acv5Qqtm4AgA=="
        }
      ]
    }
  ]
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v2/clientinfo/clients/search:
    post:
      tags:
        - ClientInfo
      summary: Search all child counterparts based on ownerId
      description: "Search all child counterparts based on the values provided in the search criteria. If only Keywords field is provided,\r\n             it will search clients having AccountId Or ClientId Or ClientName Or UserId Or UserName field values.\r\n             If AccountId, AccountKey, ClientId, ClientKey fields are provided, the lookup will be for an exact match of these values with AND operator.\r\n             To get Accounts, Users info in the response, specify \"Accounts\", \"Users\" in the FieldGroups list respectively.\r\n             The default value of $top is 10 and max value is 100."
      operationId: ClientInfoV2Search
      parameters:
        - name: $inlinecount
          in: query
          schema:
            enum:
              - AllPages
              - None
            type: string
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            maximum: 100
            minimum: 0
            type: integer
            format: int32
            default: 10
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientSearchCriteria'
            example: {
  "AccountId": "72158INET",
  "AccountKey": "7O7jkyRC6p0S8umNatRBKA==",
  "ClientId": "825472",
  "ClientKey": "qWRC6bqfPBmkV|or68xT4A==",
  "FieldGroups": [
    "Accounts"
  ],
  "Keywords": "",
  "UserId": "1881236"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientSearchResponseListResult'
              example: {
  "Data": [
    {
      "Accounts": [
        {
          "AccountDisplayName": "Stock CFD (R)",
          "AccountGroupId": "AccountGroupId1",
          "AccountGroupName": "Group1",
          "AccountId": "72158INET",
          "AccountKey": "7O7jkyRC6p0S8umNatRBKA==",
          "PartnerAccountKey": "PAK - 10001/INET100JIK"
        }
      ],
      "ClientId": "825472",
      "ClientKey": "qWRC6bqfPBmkV|or68xT4A==",
      "ClientType": "House",
      "ContractType": "JointAccount",
      "DefaultAccountId": "82158INET",
      "DefaultAccountKey": "abcC6bqfPBmkV|or68xT4A==",
      "LegalAssetTypes": [
        "Bond"
      ],
      "Name": "hll",
      "PartnerPlatformId": "1",
      "Users": [
        {
          "UserId": "1881236",
          "UserKey": "aG90Uvk5z2acv5Qqtm4AgA=="
        }
      ]
    }
  ]
}
        '200':
          description: Indicates that the request was performed correctly (even if there is no record found).
        '400':
          description: If no value is provided in any of the search fields.
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: Default error code returned when it cannot be determined which part of the request is malformed.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /cs/v2/clientinfo/PersonalData:
    get:
      tags:
        - ClientInfo
      summary: "Returns personal data information of a client based on clientKey.\r\n            If clientkey is not provided, It returns data of the logged-in client."
      description: "Returns personal data information of a client based on clientKey.\r\n            If clientkey is not provided, It returns data of the logged-in client."
      operationId: ClientInfoV2GetClientPersonalData
      parameters:
        - name: ClientKey
          in: query
          description: 'The clients ID, encrypted'
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 7m4I|vtYLUnEGg77o9uQhw==
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenewalDetails'
              example: {
  "OptionSets": [
    {
      "Key": "iit_renewaliit_natureofbusiness",
      "Options": [
        {
          "Key": "AntiqueArtdealersAuctionhouses",
          "Value": "Antique / Art dealers / Auction houses"
        },
        {
          "Key": "Attorneyatlaw",
          "Value": "Attorney at law"
        },
        {
          "Key": "Automotive",
          "Value": "Automotive"
        },
        {
          "Key": "CateringRestaurants",
          "Value": "Catering / Restaurants"
        },
        {
          "Key": "Cleaningservices",
          "Value": "Cleaning services"
        },
        {
          "Key": "ConstructionDemolition",
          "Value": "Construction / Demolition"
        }
      ]
    }
  ],
  "RenewalEntityId": "5f4b7cfc-91e5-459d-be10-024ec4bb2709",
  "Sections": [
    {
      "DisplayType": "SingleChoice",
      "Name": {
        "Key": "NotSet",
        "Value": "NotSet"
      },
      "Sections": [
        {
          "DisplayType": "VerticalSection",
          "Name": {
            "Key": "SecondaryIncome",
            "Value": "Secondary Income"
          },
          "Sections": [
            {
              "DisplayType": "VerticalSection",
              "Fields": [
                {
                  "DisplayType": "Bool",
                  "Name": {
                    "Key": "iit_secondarysourceofincome_dividends_stocks",
                    "Value": "Dividends from stocks/bonds"
                  },
                  "Value": "False",
                  "ValueType": "Bool"
                },
                {
                  "DisplayType": "Bool",
                  "Name": {
                    "Key": "iit_secondarysourceofincome_dividends_comp",
                    "Value": "Dividends from compan"
                  },
                  "Value": "False",
                  "ValueType": "Bool"
                },
                {
                  "DisplayType": "SingleLineOfText",
                  "Name": {
                    "Key": "iit_othersecondaryincomedescription",
                    "Value": "Secondary Income"
                  },
                  "Validations": [
                    {
                      "CompareType": "GreaterThan",
                      "ConditionalFieldName": "SecondarySourcesOfIncome",
                      "TriggerFieldName": "iit_totalamountofsecondarysourcesofincome",
                      "TriggerFieldValue": "0",
                      "Type": "AtLeastOneGroupedValueSelected"
                    }
                  ],
                  "ValueType": "String"
                }
              ],
              "Name": {
                "Key": "SecondarySourcesOfIncome",
                "Value": "SecondarySourcesOfIncome"
              },
              "Validations": [
                {
                  "CompareType": "GreaterThan",
                  "ConditionalFieldName": "SecondarySourcesOfIncome",
                  "TriggerFieldName": "iit_totalamountofsecondarysourcesofincome",
                  "TriggerFieldValue": "0",
                  "Type": "AtLeastOneGroupedValueSelected"
                }
              ]
            }
          ]
        },
        {
          "DisplayType": "VerticalSection",
          "Fields": [
            {
              "DisplayType": "SingleLineOfText",
              "Name": {
                "Key": "iit_firstname",
                "Value": "First Name"
              },
              "Validations": [
                {
                  "Type": "TextMaxLength",
                  "Value": "128"
                }
              ],
              "Value": "Chris",
              "ValueType": "String"
            },
            {
              "DisplayType": "SingleLineOfText",
              "Name": {
                "Key": "iit_lastname",
                "Value": "Surname"
              },
              "Validations": [
                {
                  "Type": "TextMaxLength",
                  "Value": "128"
                }
              ],
              "Value": "Brown",
              "ValueType": "String"
            }
          ],
          "Name": {
            "Key": "PersonalDetails",
            "Value": "Personal Details"
          }
        },
        {
          "DisplayType": "VerticalSection",
          "Fields": [
            {
              "DisplayType": "SingleLineOfText",
              "Name": {
                "Key": "BuildingName",
                "Value": "Building name"
              },
              "Validations": [
                {
                  "Type": "TextMaxLength",
                  "Value": "128"
                }
              ],
              "Value": "Metropolis",
              "ValueType": "String"
            },
            {
              "DisplayType": "SingleLineOfText",
              "Name": {
                "Key": "Street",
                "Value": "Street"
              },
              "Validations": [
                {
                  "Type": "TextMaxLength",
                  "Value": "128"
                }
              ],
              "Value": "Oscar Street",
              "ValueType": "String"
            },
            {
              "DisplayType": "SingleLineOfText",
              "Name": {
                "Key": "Building",
                "Value": "Building no"
              },
              "Validations": [
                {
                  "Type": "TextMaxLength",
                  "Value": "128"
                }
              ],
              "Value": "30 8 TH",
              "ValueType": "String"
            },
            {
              "DisplayType": "SingleLineOfText",
              "Name": {
                "Key": "City",
                "Value": "Building no"
              },
              "Validations": [
                {
                  "Type": "TextMaxLength",
                  "Value": "128"
                }
              ],
              "Value": "30 8 TH",
              "ValueType": "String"
            },
            {
              "DisplayType": "SingleChoice",
              "Name": {
                "Key": "iit_natureofbusiness",
                "Value": "Company's business"
              },
              "OptionSetKey": "iit_renewaliit_natureofbusiness",
              "Value": "",
              "ValueType": "OptionListKey"
            }
          ],
          "Name": {
            "Key": "RegisteredAddress",
            "Value": "Address"
          }
        }
      ]
    }
  ],
  "State": "RenewalEntityInProcessAwaitingCustomerInput"
}
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    put:
      tags:
        - ClientInfo
      description: Update client personal data.
      operationId: ClientInfoV2UpdateClientPersonalData
      parameters:
        - name: ClientKey
          in: query
          description: Client identifier encrypted.
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenewalDataRequest'
            example: {
  "FieldData": [
    {
      "Key": "AntiqueArtdealersAuctionhouses",
      "Value": "2"
    },
    {
      "Key": "FinancialSectorEmployee",
      "Value": "false"
    }
  ],
  "RenewalEntityId": "1"
}
      responses:
        '204':
          description: Indicates that the request was performed correctly.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - ClientRenewalUpdateError
                    type: string
                    x-enum-descriptions:
                      ClientRenewalUpdateError: Data update failed in backend.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v2/cashmanagement/withdrawals/WithdrawalIbanBeneficiaryBank:
    post:
      tags:
        - CashManagement - Cash Withdrawal
      summary: Obsolete Execute withdrawal using IBAN and beneficiary bank details
      description: All resources related to CashManagement - Cash Withdrawal in the Client Service service group will be removed (On or after January 1st 2022). Please start using /atr/v1/cashmanagement/withdrawals endpoint under Asset Transfer service group.
      operationId: CashWithdrawalWithdrawalIBanBeneficiaryBank
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWithdrawalIbanBeneficiaryBank'
            example: {
  "AccountKey": null,
  "Amount": 0.0,
  "BeneficiaryAddress": "PHILIP HEYMANS ALLE 15,2900 HELLERUP DENMARK",
  "BeneficiaryCityAndPostcode": "Copenhagen",
  "BeneficiaryCountry": "Denmark",
  "BeneficiaryName": "Name",
  "Iban": "DK4611490100006455",
  "IsAutoTrading": false,
  "MessageToBeneficiary": "Comments",
  "RequestingSystem": "ClientPortal"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalResponse'
              example: {
  "CutExchangeRate": 1.0,
  "OutgoingRequestId": 3099494
}
        '200':
          description: Indicates that the transfer was performed correctly.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      deprecated: true
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-deprecated-date: '2022-01-01'
  /cs/v2/cashmanagement/withdrawals/WithdrawalAccountNumberBeneficiaryBank:
    post:
      tags:
        - CashManagement - Cash Withdrawal
      summary: Obsolete Executed withdrawal using account number and beneficiary bank details
      description: All resources related to CashManagement - Cash Withdrawal in the Client Service service group will be removed (On or after January 1st 2022). Please start using /atr/v1/cashmanagement/withdrawals endpoint under Asset Transfer service group.
      operationId: CashWithdrawalWithdrawalAccountNumberBeneficiaryBank
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWithdrawalAccountNumberBeneficiaryBank'
            example: {
  "AccountKey": "7wfA7-TCgQ0ygd||aOXY0w==",
  "AccountNumber": "4563874",
  "Amount": 1000.0,
  "ClearingCode": "Fedwire",
  "Currency": "DKK",
  "IsAutoTrading": false,
  "MessageToBeneficiary": "Comments by user",
  "ReceivingCountryCode": "US",
  "RequestingSystem": "ClientPortal",
  "Swift": "Swif"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalResponse'
              example: {
  "CutExchangeRate": 1.0,
  "OutgoingRequestId": 3099494
}
        '200':
          description: Indicates that the transfer was performed correctly.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      deprecated: true
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-deprecated-date: '2022-01-01'
  /cs/v2/cashmanagement/withdrawals/WithdrawalAccountNumberSwift:
    post:
      tags:
        - CashManagement - Cash Withdrawal
      summary: Obsolete Execute withdrawal using account number and SWIFT BIC
      description: All resources related to CashManagement - Cash Withdrawal in the Client Service service group will be removed (On or after January 1st 2022). Please start using /atr/v1/cashmanagement/withdrawals endpoint under Asset Transfer service group.
      operationId: CashWithdrawalWithdrawalAccountNumberSwift
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWithdrawalAccountNumberSwift'
            example: {
  "AccountKey": "7wfA7-TCgQ0ygd||aOXY0w==",
  "AccountNumber": "4563874",
  "Amount": 1000.0,
  "ClearingCode": "1149",
  "Currency": "DKK",
  "IsAutoTrading": false,
  "MessageToBeneficiary": "Comments by user",
  "ReceivingCountryCode": "US",
  "RequestingSystem": "ClientPortal",
  "Swift": "Swif"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalResponse'
              example: {
  "CutExchangeRate": 1.0,
  "OutgoingRequestId": 3099494
}
        '200':
          description: Indicates that the transfer was performed correctly.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      deprecated: true
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-deprecated-date: '2022-01-01'
  /cs/v2/cashmanagement/withdrawals/WithdrawIBanSwift:
    post:
      tags:
        - CashManagement - Cash Withdrawal
      summary: Obsolete Execute withdrawal using IBAN and SWIFT BIC
      description: All resources related to CashManagement - Cash Withdrawal in the Client Service service group will be removed (On or after January 1st 2022). Please start using /atr/v1/cashmanagement/withdrawals endpoint under Asset Transfer service group.
      operationId: CashWithdrawalWithdrawIBanSwift
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RequestWithdrawalIbanSwift'
            example: {
  "AccountKey": "7wfA7-TCgQ0ygd||aOXY0w==",
  "Amount": 1000.0,
  "ClearingCode": "1149",
  "Currency": "DKK",
  "Iban": "DK4611490100006455",
  "IsAutoTrading": false,
  "MessageToBeneficiary": "Comments by user",
  "ReceivingCountryCode": "US",
  "RequestingSystem": "ClientPortal",
  "Swift": "Swif"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WithdrawalResponse'
              example: {
  "CutExchangeRate": 1.0,
  "OutgoingRequestId": 3099494
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      deprecated: true
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-deprecated-date: '2022-01-01'
  /cs/v2/cashmanagement/withdrawals/ClearingCodeLabelNames:
    get:
      tags:
        - CashManagement - Cash Withdrawal
      description: Method used to return Clearing code label name and country code.
      operationId: CashWithdrawalGetClearingCodeLabelName
      parameters:
        - name: CountryCode
          in: query
          description: 'Two character country code like "DK", "GB" etc.'
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Indicates that the transfer was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClearingCodeLabelResponse'
              example: {
  "ClearingCodeLabelName": "Fedwire",
  "CountryCode": "US"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v2/cashmanagement/withdrawals/currencies:
    get:
      tags:
        - CashManagement - Cash Withdrawal
      description: Get all valid withdrawal currencies
      operationId: CashWithdrawalGetCurrencies
      responses:
        '200':
          description: Indicates that the transfer was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyDetailsListResult'
              example: {
  "Data": [
    {
      "CurrencyCode": "DKK",
      "Decimals": 2
    }
  ],
  "MaxRows": 14818
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/cashmanagement/beneficiaryinstructions/{ClientKey}/{BeneficiaryInstructionId}':
    delete:
      tags:
        - CashManagement - Beneficiary Instructions
      summary: Obsolete Retire beneficiary instruction
      description: All resources related to CashManagement - Beneficiary Instructions in the Client Service service group will be removed (On or after January 1st 2022). Please start using /atr/v1/cashmanagement/beneficiaryinstructions endpoint under Asset Transfer service group.
      operationId: BeneficiaryInstructionsDelete
      parameters:
        - name: BeneficiaryInstructionId
          in: path
          description: Beneficiary instruction Id
          required: true
          schema:
            type: string
          example: 11
        - name: ClientKey
          in: path
          description: Client key
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: BxS0VWLta8lJ3SBpjGBQjw==
      responses:
        '204':
          description: No Content
        '202':
          description: Indicates that the request accepted for processing.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      deprecated: true
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
      x-deprecated-date: '2022-01-01'
  '/cs/v1/cashmanagement/beneficiaryinstructions/{ClientKey}':
    get:
      tags:
        - CashManagement - Beneficiary Instructions
      summary: Obsolete Gets list of beneficiary instructions.
      description: All resources related to CashManagement - Beneficiary Instructions in the Client Service service group will be removed (On or after January 1st 2022). Please start using /atr/v1/cashmanagement/beneficiaryinstructions endpoint under Asset Transfer service group.
      operationId: BeneficiaryInstructionsGetBeneficiaryInstructionsAsync
      parameters:
        - name: ClientKey
          in: path
          description: Client key
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: BxS0VWLta8lJ3SBpjGBQjw==
        - name: Currency
          in: query
          description: Currency code
          schema:
            type: string
          example: USD
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BeneficiaryInstructionsResponseListResult'
              example: {
  "Data": [
    {
      "BeneficiaryDetails": {
        "AccountNumber": "AccountNumberd4875cbc-8a19-4f35-bcdb-1af2e4086ea2",
        "BankAddress": "BankAddress4c4a9afd-40b6-4de7-b209-59325cd23f64",
        "BankName": "BankName921baf8b-9e8f-4f83-aa1b-8af05ee50f7d",
        "Bic": "Bicb0afb537-a3ab-4833-96a5-0d14cb388f09",
        "ClearingCode": "ClearingCode6094d854-7894-4206-9745-554c2c44f5d9",
        "CountryCode": "CountryCode5eb87955-d8bb-4f48-a45d-5ded2982d8d9",
        "Iban": "Ibane195cfd0-e572-40a6-af81-fc74e26a23f7"
      },
      "ClientId": "ClientId2a9ad19c-b4d1-462a-8eed-b0e0abc74ba8",
      "Currency": "Currency56a19dd6-bc20-4ef9-acf7-8ea6dd77e536",
      "Id": "Idd5ee9e08-e48b-49c9-8bd6-91ed0e9c78f1",
      "IntermediaryBank": {
        "AccountNumber": "AccountNumberd5a87a07-64e2-4d28-bb79-bec1793141e7",
        "Bic": "Bic340a3811-6e0b-42e3-873d-8c556b021e6f",
        "ClearingCode": "ClearingCode83554a15-904d-4820-90de-0d4727f28817"
      },
      "Name": "Namee8adc36a-c84c-428c-a62c-65e6f63c338b",
      "RegulatedBroker": {
        "AccountNumber": "AccountNumber7cf373fa-54a9-41f7-95c0-f15ae54ea46c",
        "Name": "Name7e53af31-be60-415f-a1db-4f9df4ba62f6"
      }
    }
  ],
  "MaxRows": 29922
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - CurrencyInvalid
                    type: string
                    x-enum-descriptions:
                      CurrencyInvalid: Currency invalid
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      deprecated: true
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
      x-deprecated-date: '2022-01-01'
  '/cs/v1/reports/closedPositions/{ClientKey}/{FromDate}/{ToDate}':
    get:
      tags:
        - Historical Report Data - Closed positions
      description: Get all closed positions between two dates
      operationId: ClosedPositionGet
      parameters:
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: AccountGroupKey
          in: query
          description: The key of the account group to which the resource belongs.
          schema:
            title: The key of the account group to which the resource belongs.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: "valuee2441c25-4e71-4162-8f02-f3faeebdf0fc"
        - name: AccountKey
          in: query
          description: The key of the account to which the resource belongs.
          schema:
            title: The key of the account to which the resource belongs.
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: "3e76e8c3-bb23-4912-86e0-7a387d5c7a2d"
        - name: ClientKey
          in: path
          description: The key of the client to which the resource belongs.
          required: true
          schema:
            title: The key of the client to which the resource belongs.
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: "7309a5ef-be28-4aef-885e-f5c1aa6e05e8"
        - name: FromDate
          in: path
          description: From date
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: path
          description: To date
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClosedPositionListResult'
              example: {
  "__next": "/openapi/....../?$top=1&$skip=1",
  "Data": [
    {
      "AccountCurrency": "USD",
      "AccountCurrencyDecimals": 2,
      "AccountId": "169236INET2",
      "Amount": 400.0,
      "AmountClose": -700.0,
      "AmountOpen": 400.0,
      "AssetType": "Stock",
      "ClosePositionId": "112428055",
      "ClosePrice": 3.1,
      "ExchangeDescription": "NASDAQ",
      "InstrumentDescription": "Central European Media Enterprise Ltd",
      "InstrumentSectorName": "Broadcasting & Entertainment",
      "InstrumentSectorTypeId": 640,
      "InstrumentSymbol": "CETV:xnas",
      "OpenPositionId": "642405794",
      "OpenPrice": 3.6126,
      "PnLAccountCurrency": 228.64,
      "PnLClientCurrency": 2614.90455108964,
      "PnLUSD": -228.64,
      "RootInstrumentSectorName": "Consumer Service",
      "RootInstrumentSectorTypeId": 506,
      "TotalBookedOnClosingLegAccountCurrency": 2154.95,
      "TotalBookedOnClosingLegClientCurrency": 54083.2750759607,
      "TotalBookedOnClosingLegUSD": 2154.95,
      "TotalBookedOnOpeningLegAccountCurrency": -1460.04,
      "TotalBookedOnOpeningLegClientCurrency": -28289.824063745,
      "TotalBookedOnOpeningLegUSD": -1406.04,
      "TradeDate": "2017-04-07",
      "TradeDateClose": "2017-04-07",
      "TradeDateOpen": "2013-08-19",
      "UnderlyingInstrumentDescription": "Central European Media Enterprise Ltd",
      "UnderlyingInstrumentSymbol": "CETV:xnas"
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cs/v1/partner/support/cases/{CaseId}/note':
    post:
      tags:
        - Support - Cases
      summary: Create note under a case
      description: Creates a note under a particular case that matches the case id
      operationId: PartnerSupportCasesCreateNote
      parameters:
        - name: CaseId
          in: path
          description: The case ID
          required: true
          schema:
            type: string
          example: SAX-567846-K5W7Q6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateNoteRequest'
            example: {
  "Attachment": {
    "FileName": "Support_Issue.jpg",
    "MimeType": "image/jpeg"
  },
  "Note": "This is a note",
  "Title": "Note title"
}
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '204':
          description: 'Request successful, no content to return.'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - CaseAlreadyClosed
                    type: string
                    x-enum-descriptions:
                      CaseAlreadyClosed: Case cannot be updated since it's in closed status
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: ''
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cs/v1/partner/support/cases/{CaseId}/internalcomment':
    post:
      tags:
        - Support - Cases
      summary: Create internal comment under a case
      description: Creates an internal comment under a particular case that matches the case id
      operationId: PartnerSupportCasesCreateInternalComment
      parameters:
        - name: CaseId
          in: path
          description: The case ID
          required: true
          schema:
            type: string
          example: SAX-567846-K5W7Q6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInternalCommentRequest'
            example: {
  "Comment": "Please follow up on this"
}
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '204':
          description: 'Request successful, no content to return.'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - CaseAlreadyClosed
                    type: string
                    x-enum-descriptions:
                      CaseAlreadyClosed: Case cannot be updated since it's in closed status
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: ''
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cs/v1/partner/support/cases/{CaseId}/caseclose':
    put:
      tags:
        - Support - Cases
      summary: Close a specific support case
      description: Request to close a particular case that matches the case id
      operationId: PartnerSupportCasesCloseCase
      parameters:
        - name: CaseId
          in: path
          description: The case ID
          required: true
          schema:
            type: string
          example: SAX-567846-K5W7Q6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CloseCaseRequest'
            example: {
  "Status": "InformationProvided"
}
      responses:
        '204':
          description: 'Request successful, no content to return.'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - CaseAlreadyClosed
                    type: string
                    x-enum-descriptions:
                      CaseAlreadyClosed: Case cannot be updated since it's in closed status
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: ''
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cs/v1/partner/support/cases/{CaseId}':
    get:
      tags:
        - Support - Cases
      summary: Get a specific support case
      description: Gets a particular case that matches the case id
      operationId: PartnerSupportCasesGetCase
      parameters:
        - name: CaseId
          in: path
          description: The case ID
          required: true
          schema:
            type: string
          example: SAX-567846-K5W7Q6
      responses:
        '200':
          description: Action was executed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetCaseResponse'
              example: {
  "Case": {
    "Activities": [
      {
        "ActivityPriority": "Low",
        "ActivityTime": "2019-04-04T10:07:46Z",
        "ActivityType": "Email",
        "From": {
          "EmailAddress": "johndoe@email.com",
          "Name": "John Doe"
        },
        "PhoneNumber": "+457372863",
        "Status": "Open"
      }
    ],
    "CaseId": "5464-XSDD-434-3DDS",
    "CaseLatestActivityTime": "2019-04-04T10:07:46Z",
    "CaseStatus": "InProgress",
    "CaseType": "Problem",
    "ClientId": "3748352",
    "ClientName": "John Doe",
    "ClientSegment": "Vip",
    "ContactPersonId": "3748352",
    "ContactPersonName": "John Doe",
    "CreatedOn": "2019-04-04T10:07:46Z",
    "Description": "Requesting instrument details",
    "FirstResponseSent": false,
    "FollowUpDateTime": "2019-04-15T10:07:46Z",
    "HandledByPartner": true,
    "InternalComments": [
      {
        "Comment": "This is a comment",
        "CreatedOn": "2019-04-04T10:07:46Z"
      }
    ],
    "IsEscalated": false,
    "Notes": [
      {
        "Attachment": {
          "FileName": "Support_Issue.jpg",
          "MimeType": "image/jpeg"
        },
        "CreatedOn": "2019-04-04T10:07:46Z",
        "NoteOrigin": "Other",
        "NoteText": "This is a note",
        "NoteTitle": "Note title"
      }
    ],
    "Origin": "Web",
    "ReassignmentCount": 0,
    "ServiceLanguage": "EN",
    "ShowInPortal": true,
    "Subject": "Viewing Instruments",
    "Title": "Instrument Details"
  }
}
        '404':
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
    patch:
      tags:
        - Support - Cases
      summary: Update support case
      description: Updates a particular case that matches with the case id
      operationId: PartnerSupportCasesUpdateNote
      parameters:
        - name: CaseId
          in: path
          description: The case ID
          required: true
          schema:
            type: string
          example: SAX-567846-K5W7Q6
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCaseRequest'
            example: {
  "CaseStatus": "InProgress",
  "CaseType": "Problem",
  "Description": "Case description",
  "FollowUpDueDate": "2019-04-15T10:07:46Z",
  "HandledByPartner": true,
  "IsEscalated": true,
  "ShowInPortal": true,
  "Title": "Case Title"
}
      responses:
        '204':
          description: 'Request successful, no content to return.'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - CaseAlreadyClosed
                    type: string
                    x-enum-descriptions:
                      CaseAlreadyClosed: Case cannot be updated since it's in closed status
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: ''
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /cs/v1/partner/support/cases:
    get:
      tags:
        - Support - Cases
      summary: Get a list of all support cases
      description: Get a list of support cases of clients under the logged-in IB
      operationId: PartnerSupportCasesGetCases
      parameters:
        - name: $top
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 100
        - name: FromDateTime
          in: query
          description: Includes cases with latest activity time greater than or equal to FromDateTime
          schema:
            type: string
            format: date-time
            x-type-name: UtcDateTime
          example: '2019-01-01T00:00:00.0000000+00:00'
        - name: Status
          in: query
          description: 'Status: If specified will only return entries with the specified case status'
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/CaseStatus'
          example: InProgress
        - name: ToDateTime
          in: query
          description: Includes cases with latest activity time less than or equal to ToDateTime
          schema:
            type: string
            format: date-time
            x-type-name: UtcDateTime
          example: '2019-04-04T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Action was executed successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CaseSummaryListResult'
              example: {
  "__count": 1,
  "Data": [
    {
      "CaseId": "5464-XSDD-434-3DDS",
      "CaseLatestActivityTime": "2019-04-04T10:07:46Z",
      "CaseStatus": "InProgress",
      "ClientId": "4334435",
      "CreatedOn": "2019-04-04T10:07:46Z",
      "CustomerName": "John Doe",
      "FollowUpDateTime": "2019-04-15T10:07:46Z",
      "HandledByPartner": false,
      "IsEscalated": true,
      "Title": "Instrument request"
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: ''
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
    post:
      tags:
        - Support - Cases
      summary: Facilitates an IB to create a new case on behalf of its client
      description: Facilitates an IB to create a new case on behalf of its client
      operationId: PartnerSupportCasesCreateCase
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateCaseRequest'
            example: {
  "CaseTitle": "Account opening request case",
  "ClientKey": "W-CgwnsUEpETkiR8MPJalA==",
  "Description": "Case created by IBs on behalf of their clients",
  "NotifyClient": true,
  "ShowInPortal": false
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCaseResponse'
              example: {
  "CaseId": "SAX-002612-W5S4S6"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: The request is invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /cs/v1/mifid/classificationtests:
    get:
      tags:
        - MiFID - Classification
      summary: Get classification test for authenticated user
      description: Gets the most recent product classification test for all classification types for the authenticated user.
      operationId: ClassificationTestsGetClassificationsAsync
      parameters:
        - name: Version
          in: query
          description: Version of endpoint where 0 specifies for granular level products and 1 for productArea = 'All'
          schema:
            type: integer
            format: int32
          example: 0
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Classification'
              example: {
  "ClassificationType": "Professional",
  "Name": "Professional",
  "Products": [
    {
      "Name": "CFDs",
      "ProductAreaId": 6,
      "Qualified": true,
      "Questionnaire": {
        "Acknowledge": "I declare that I find that I am in possession of the expertise, experience and knowledge that makes me capable of making my own investment decisions and that I understand the risks involved in transactions with this product",
        "Questions": [
          {
            "AnswerType": "Bool",
            "Confirmed": true,
            "QuestionId": "1",
            "Text": "I have carried out transactions in the product on an average frequency of at least 10 per quarter during the previous four quarters"
          },
          {
            "AnswerType": "Bool",
            "Confirmed": true,
            "QuestionId": "2",
            "Text": "The size of my portfolio, defined as including cash deposits and financial instruments, exceeds EUR 500,000."
          },
          {
            "AnswerType": "Bool",
            "Confirmed": true,
            "QuestionId": "4",
            "Text": "I work or have worked in the financial sector for at least one year in a professional position that requires knowledge of the product."
          }
        ],
        "Statement": "To further confirm that I am a professional client, I confirm that I fulfil at least 2 out of 3 of the following criteria"
      }
    }
  ],
  "Qualified": true
}
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    put:
      tags:
        - MiFID - Classification
      summary: Update product classifications
      description: "Updates the product classifications for the authenticated user. The classification object, must contain a list of all products, for which the user\r\n             classifies as \"professional\"."
      operationId: ClassificationTestsUpdate
      parameters:
        - name: Version
          in: query
          description: Version of endpoint where 0 specifies for granular level products and 1 for productArea = 'All'
          schema:
            type: integer
            format: int32
          example: 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Classification'
            example: {
  "ClassificationType": "Professional",
  "Name": "Professional",
  "Products": [
    {
      "Name": "CFDs",
      "ProductAreaId": 6,
      "Qualified": true,
      "Questionnaire": {
        "Acknowledge": "I declare that I find that I am in possession of the expertise, experience and knowledge that makes me capable of making my own investment decisions and that I understand the risks involved in transactions with this product",
        "Questions": [
          {
            "AnswerType": "Bool",
            "Confirmed": true,
            "QuestionId": "1",
            "Text": "I have carried out transactions in the product on an average frequency of at least 10 per quarter during the previous four quarters"
          },
          {
            "AnswerType": "Bool",
            "Confirmed": true,
            "QuestionId": "2",
            "Text": "The size of my portfolio, defined as including cash deposits and financial instruments, exceeds EUR 500,000."
          },
          {
            "AnswerType": "Bool",
            "Confirmed": true,
            "QuestionId": "4",
            "Text": "I work or have worked in the financial sector for at least one year in a professional position that requires knowledge of the product."
          }
        ],
        "Statement": "To further confirm that I am a professional client, I confirm that I fulfil at least 2 out of 3 of the following criteria"
      }
    }
  ],
  "Qualified": true
}
      responses:
        '204':
          description: No Content
        '200':
          description: Indicates that the classification test was submitted correctly.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - AutoMapperError
                      - ClassificationTestArgumentError
                      - ClassificationTypeArgumentError
                    type: string
                    x-enum-descriptions:
                      AutoMapperError: AutoMapper failed type casting.
                      ClassificationTestArgumentError: At least two out of three questions have to be confirmed.
                      ClassificationTypeArgumentError: Only professional classification can be updated.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v2/cashmanagement/validations/withdrawalreasons:
    get:
      tags:
        - 'CashManagement - Bic, Iban, CountryCode and ClearingCode Validation'
      description: Get Withdrawal Reasons
      operationId: ValidationGetWithdrawalReasons
      parameters:
        - name: AccountKey
          in: query
          description: Account to get withdrawal reasons for
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: 7m4I|vtYLUnEGg77o9uQhw==
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LocalizedInfoListResult'
              example: {
  "__next": "/openapi/....../?$top=1&$skip=1",
  "Data": [
    {
      "Key": "Key",
      "Value": "Value"
    }
  ]
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v2/cashmanagement/validations/fundinglimits/{AccountKey}':
    get:
      tags:
        - 'CashManagement - Bic, Iban, CountryCode and ClearingCode Validation'
      description: Get tax saving account's funding limit details
      operationId: ValidationGetFundingLimits
      parameters:
        - name: AccountKey
          in: path
          description: Account to get funding limit for
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: 7m4I|vtYLUnEGg77o9uQhw==
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountValues'
              example: {
  "AccountCurrency": "USD",
  "AccountNumber": "113965-1",
  "FundingSchedule": "Annual",
  "MaxFundingLimit": 50000.0,
  "NetFundedAmount": 26000.0,
  "RemainingFundingLimit": 24000.0
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    patch:
      tags:
        - 'CashManagement - Bic, Iban, CountryCode and ClearingCode Validation'
      summary: Update funding limit
      description: Update funding limit for pension accounts
      operationId: ValidationUpdateFundingLimits
      parameters:
        - name: AccountKey
          in: path
          description: Account to update funding limit for
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: 7m4I|vtYLUnEGg77o9uQhw==
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFundingLimitRequest'
            example: {
  "MaxFundingLimit": 2600.0
}
      responses:
        '204':
          description: Indicates that request was completed successfully.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v2/cashmanagement/validations/LengthValidationInfo:
    get:
      tags:
        - 'CashManagement - Bic, Iban, CountryCode and ClearingCode Validation'
      description: "Method used to return maximum allowable length of account number\r\n            and clearing code so that UI can validate it."
      operationId: ValidationGetLengthValidationInfo
      parameters:
        - name: CountryCode
          in: query
          description: 'Valid two character country code like "DK", "GB" etc.'
          required: true
          schema:
            type: string
        - name: CurrencyCode
          in: query
          description: Valid three character currency code like "EUR"
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountLengthResponse'
              example: {
  "ClearingCodeLength": 27443,
  "MaxAccountLength": 1958
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v2/cashmanagement/validations/EnrichedData:
    get:
      tags:
        - 'CashManagement - Bic, Iban, CountryCode and ClearingCode Validation'
      description: "For given data method will retrun bank name, address etc. Consumer can provide any option or combination of input\r\n            to get the bank details. For example if consumer has only BIC then it will return the bank details of that BIC. \r\n            If combination like Clearing code and Country code then method will return the bank details of that clearing code."
      operationId: ValidationEnrichFromSwiftReferenceData
      parameters:
        - name: Bic
          in: query
          description: 'Bank indentifier code, can be string.empty'
          schema:
            title: 'Bank indentifier code, can be string.empty'
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: ClearingCode
          in: query
          description: 'Clearing code, can be string.empty'
          schema:
            title: 'Clearing code, can be string.empty'
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: CountryCode
          in: query
          description: 'Country code, Mandatory in case of clearing code.'
          schema:
            title: 'Country code, Mandatory in case of clearing code.'
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: CurrencyCode
          in: query
          description: Currency code
          schema:
            title: Currency code
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: Iban
          in: query
          description: 'IBAN, can be string.empty'
          schema:
            title: 'IBAN, can be string.empty'
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnrichmentResponse'
              example: {
  "Bic": "Bic7493a1ce-cc7d-48f9-b5db-b770e85bee5e",
  "CountryCode": "CountryCode3d85c9da-574a-45cc-978d-66e7e1ea3f5a",
  "ErrorText": "ErrorTextee792624-cf46-49e8-a580-08b0ccc98db6",
  "InstitutionAddress": "InstitutionAddresse74673ad-c328-45e1-b38d-f6c8e7544d0e",
  "InstitutionName": "InstitutionName52276b28-73d7-4429-a1e4-da055585da58"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v2/cashmanagement/validations/iban:
    get:
      tags:
        - 'CashManagement - Bic, Iban, CountryCode and ClearingCode Validation'
      operationId: ValidationGetIban
      parameters:
        - name: AccountKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IbanAccountListResult'
              example: {
  "__next": "/openapi/....../?$top=1&$skip=1",
  "Data": [
    {
      "AccountId": "20002",
      "Iban": "DK2511490100135843"
    }
  ]
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v2/cashmanagement/validations/iban/{AccountKey}':
    get:
      tags:
        - 'CashManagement - Bic, Iban, CountryCode and ClearingCode Validation'
      description: Gets IBAN from accountkey
      operationId: ValidationIban
      parameters:
        - name: AccountKey
          in: path
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
              example: {
  "IsOk": false,
  "Message": "Messagea561e9fe-f65c-4c68-951e-551ef8803f9b"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v2/cashmanagement/validations/IsIbanSupported:
    get:
      tags:
        - 'CashManagement - Bic, Iban, CountryCode and ClearingCode Validation'
      description: Check if an IBAN is supported for a country
      operationId: ValidationIsIbanSupported
      parameters:
        - name: IsoCountryCode
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
              example: {
  "IsOk": false,
  "Message": "Messagea561e9fe-f65c-4c68-951e-551ef8803f9b"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v2/cashmanagement/validations/AccountBalance/{AccountKey}':
    get:
      tags:
        - 'CashManagement - Bic, Iban, CountryCode and ClearingCode Validation'
      description: Get a list of account balances
      operationId: GET_ValidationGetAccountBalances
      parameters:
        - name: AccountKey
          in: path
          description: Required account key
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalanceResponse'
              example: {
  "AmountsNotBooked": 78824420.7816923,
  "CashBalance": 35604720.60593573,
  "MaxAllowedWithdrawalAmount": -33411678926726.137,
  "MaxFundingLimit": -39.583587630147541,
  "NetFreeBalance": -3.8958085791485046E+24,
  "NetFundedAmount": -6.3133940949565816E+25,
  "RemainingFundingLimit": 466180610.41236305,
  "RemainingFundingTax": -343068372.92679882
}
        '503':
          description: Service Unavailable
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v2/cashmanagement/validations/AccountBalances:
    get:
      tags:
        - 'CashManagement - Bic, Iban, CountryCode and ClearingCode Validation'
      description: Get a list of account balances
      operationId: ValidationGetAccountBalances
      parameters:
        - name: FromAccountKey
          in: query
          description: Required source account key
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ToAccountKey
          in: query
          description: Optional destination account key
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountBalancesResponse'
              example: {
  "AmountsNotBooked": -8.2156129773543323E+23,
  "CashBalance": -6.0757350218661736E+28,
  "MaxAllowedInteraccountTransfer": 5.88436888572088E+21,
  "MaxAllowedWithdrawalAmount": 61567.446638513757,
  "MaxFundingLimit": 57.761464622036435,
  "NetFreeBalance": 30119855288.710827,
  "NetFundedAmount": -7.0162737397608153E+25,
  "RemainingFundingLimit": 508075812113.273,
  "RemainingFundingTax": -2812901.377377904
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v2/cashmanagement/validations/ConversionRate/{FromAccountKey}/{ToCurrency}':
    get:
      tags:
        - 'CashManagement - Bic, Iban, CountryCode and ClearingCode Validation'
      description: Get the conversion rate from an account to a currency
      operationId: ValidationGetConversionRate
      parameters:
        - name: FromAccountKey
          in: path
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ToCurrency
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConversionRateResponse'
              example: {
  "ConversionRate": 5255.1162760911611
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v2/cashmanagement/validations/ValidateSwiftReferenceData:
    get:
      tags:
        - 'CashManagement - Bic, Iban, CountryCode and ClearingCode Validation'
      description: Validate Iban without Petra
      operationId: ValidationValidateSwiftReferenceData
      parameters:
        - name: Bic
          in: query
          description: Bic code
          schema:
            title: Bic code
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: ClearingCode
          in: query
          description: Clearing code
          schema:
            title: Clearing code
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: CountryCode
          in: query
          description: Country code
          schema:
            title: Country code
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
        - name: Iban
          in: query
          description: Iban
          schema:
            title: Iban
            type: string
          example: "32fa06b8-4044-4b5f-82c1-9ac38b2206f1"
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidationResponse'
              example: {
  "IsOk": false,
  "Message": "Messagea561e9fe-f65c-4c68-951e-551ef8803f9b"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/platforms/accessfeatures/{ClientKey}':
    get:
      tags:
        - Platforms - Access Features
      description: Gets accessible features based on account type
      operationId: AccessFeaturesGetAccessibleFeatures
      parameters:
        - name: AccountKey
          in: query
          description: Account Key
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: 7m4I|vtYLUnEGg77o9uQhw==
        - name: ClientKey
          in: path
          description: Client Key
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 7m4I|vtYLUnEGg77o9uQhw==
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountAccessFeaturesListResult'
              example: {
  "Data": [
    {
      "AccessFeatures": [
        {
          "FeatureDescription": "FeatureDescription70862412-e946-4241-ad13-bc493ecfae77",
          "FeatureId": 6442,
          "FeatureName": "FeatureName3543cc87-a852-4edd-a97d-9158bf041983"
        }
      ],
      "AccountID": "AccountIDd1553587-1835-49ea-8c19-35731518f616",
      "AccountSubType": "FrancePeaPme",
      "AccountType": "Collateral"
    }
  ],
  "MaxRows": 18072
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/mifid/riskwarnings/productareas:
    post:
      tags:
        - MiFID - Risk Warning
      summary: Register Risk warning acceptance by productareas
      description: Call this endpoint to register that the client has seen and accepts the MIFID risk warning for the specified products.
      operationId: RiskWarningAcceptRiskWarningByProducAreas
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductareaAcceptRequest'
            example: {
  "AcceptWithConsent": true,
  "ClientHasSeenRiskWarning": false,
  "ProductAreaIds": [
    1106
  ],
  "SsoSessionId": "SsoSessionId349a40b4-382c-47ac-a64b-54761663f369"
}
      responses:
        '201':
          description: Created
        '200':
          description: Indicates that the request was performed correctly.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cs/v1/mifid/riskwarnings:
    post:
      tags:
        - MiFID - Risk Warning
      summary: Register Risk warning acceptance by assetclasses
      description: Call this endpoint to register that the client has seen and accepts the MIFID risk warning for the specified products.
      operationId: RiskWarningAcceptRiskWarning
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptRequest'
            example: {
  "AcceptWithConsent": true,
  "AssetTypes": [
    "FxNoTouchOption"
  ],
  "ClientHasSeenRiskWarning": false,
  "SsoSessionId": "SsoSessionIdc2d6efac-5887-477b-ace0-3533efa304b8"
}
      responses:
        '201':
          description: Created
        '200':
          description: Indicates that the request was performed correctly.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cs/v1/platforms/menus/{ClientKey}/{Platform}':
    get:
      tags:
        - Platforms - Menus
      description: Gets the menu belonging to a specific client for a specific platform
      operationId: MenusGetAsync
      parameters:
        - name: ClientKey
          in: path
          description: Client key
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 7m4I|vtYLUnEGg77o9uQhw==
        - name: Platform
          in: path
          description: The platform
          required: true
          schema:
            $ref: '#/components/schemas/Platform'
          example: MyAccount
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Menu'
              example: {
  "Items": [
    {
      "Description": "Descriptiona6ffd3f8-24ab-46b7-a2f9-31ccae5f6934",
      "FullName": "FullName66ad424f-ab37-47ba-bac3-f6a50135d21e",
      "Items": [],
      "ModuleId": "ModuleId138216ee-fefc-4278-ac34-f23b982126ad",
      "Name": "Name7b7fedf0-ff54-4bc6-b714-82a95d7ad227",
      "Url": "Url92a243d9-b61f-4f1f-b009-7e86de9589f0"
    }
  ]
}
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
components:
  schemas:
    AcceptRequest:
      title: Specifies that the client has seen the Riskwarning for the specified asset types.
      required:
        - ClientHasSeenRiskWarning
        - AssetTypes
      type: object
      properties:
        AcceptWithConsent:
          title: Indicates if the risk warning has been accepted with written consent by user (i.e. Auriga user)
          type: boolean
        AssetTypes:
          title: List of assets the client has seen the risk warning for.
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
        ClientHasSeenRiskWarning:
          title: Client has seen the risk warning related to trading inappropriate products.
          type: boolean
        SsoSessionId:
          title: Optionally specify session ID from SSO.
          type: string
          description: 'SSO uses a "composite id", consisting of both a guid and an integer.'
      additionalProperties: false
    AccessFeature:
      title: Access feature
      type: object
      properties:
        FeatureDescription:
          title: Access feature description
          type: string
        FeatureId:
          title: Access feature id
          type: integer
          format: int32
        FeatureName:
          title: Access feature name
          type: string
      additionalProperties: false
    AccountAccessFeatures:
      type: object
      properties:
        AccessFeatures:
          title: Access features
          type: array
          items:
            $ref: '#/components/schemas/AccessFeature'
        AccountID:
          title: Account ID
          type: string
        AccountSubType:
          title: Account sub type
          allOf:
            - $ref: '#/components/schemas/AccountSubTypeNullable'
        AccountType:
          title: Account type
          allOf:
            - $ref: '#/components/schemas/AccountType'
      additionalProperties: false
    AccountAccessFeaturesListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/AccountAccessFeatures'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    AccountBalanceResponse:
      title: Account balance details.
      type: object
      properties:
        AmountsNotBooked:
          title: Amounts not booked
          type: number
        CashBalance:
          title: Cash balance
          type: number
        MaxAllowedWithdrawalAmount:
          title: Max allowed withdrawal amount
          type: number
        MaxFundingLimit:
          title: Max funding allowed per year
          type: number
        NetFreeBalance:
          title: Net free balance
          type: number
        NetFundedAmount:
          title: Net funded amount
          type: number
        RemainingFundingLimit:
          title: Remaining allowed fund for rest of the year
          type: number
        RemainingFundingTax:
          title: Remaining Funding Tax
          type: number
      additionalProperties: false
    AccountBalancesResponse:
      type: object
      properties:
        AmountsNotBooked:
          type: number
        CashBalance:
          type: number
        MaxAllowedInteraccountTransfer:
          type: number
        MaxAllowedWithdrawalAmount:
          type: number
        MaxFundingLimit:
          title: Max Funding allowed per year
          type: number
        NetFreeBalance:
          type: number
        NetFundedAmount:
          title: Net funded amount
          type: number
        RemainingFundingLimit:
          title: Remaining allowed fund for rest of the year
          type: number
        RemainingFundingTax:
          title: Remaining Funding Tax
          type: number
      additionalProperties: false
    AccountInfo:
      type: object
      properties:
        AccountCurrency:
          title: Account Base Currency
          type: string
        AccountDisplayName:
          title: Account Display Name
          type: string
        AccountGroupId:
          title: AccountGroup Id
          type: string
        AccountGroupName:
          title: AccountGroup Name
          type: string
        AccountId:
          title: Account Id
          type: string
        AccountKey:
          title: Account Key
          type: string
        AccountType:
          allOf:
            - $ref: '#/components/schemas/AccountTypeNullable'
        PartnerAccountKey:
          title: External reference assigned to this account by the partner
          type: string
      additionalProperties: false
    AccountLengthResponse:
      type: object
      properties:
        ClearingCodeLength:
          title: Maximum clearing code length for validation.
          type: integer
          format: int32
        MaxAccountLength:
          title: Maximum account length for validation.
          type: integer
          format: int32
      additionalProperties: false
    AccountResponse:
      type: object
      properties:
        AccountDisplayName:
          type: string
        AccountId:
          type: string
        AccountRiskProfileId:
          type: string
        AccountRiskProfileName:
          type: string
      additionalProperties: false
    AccountSubType:
      enum:
        - BankingBook
        - Error
        - FinlandEsa
        - FrancePea
        - FrancePeaPme
        - InternalCustody
        - None
        - NorwayASK
        - PendingSettlement
        - SwedenISK
        - TradingBook
        - VAT
      type: string
    AccountSubTypeNullable:
      $ref: '#/components/schemas/AccountSubType'
    AccountType:
      title: Account types
      enum:
        - ASK
        - AutoTradingFollower
        - AutoTradingLeader
        - BlockTrading
        - Cgb
        - Collateral
        - Commission
        - ConBroker
        - ConEgo
        - DvP
        - Facilitation
        - Funding
        - Interest
        - MFAllocation
        - MFTotal
        - MarginLending
        - Normal
        - Omnibus
        - Pension
        - PledgedCash
        - Settlement
        - SettlementTrading
        - Shadow
        - Tax
        - TaxSavings
        - VariationMargin
      type: string
      x-enum-descriptions:
        Normal: Default. Used for normal client accounts.
        BlockTrading: Used for block trading accounts only. The account where the root block trade is executed. This is our allocation account.
        SettlementTrading: 'For FX Settlement trading clients, this account type is used for the main trading account.'
        Collateral: For WLP accounts holding WLP’s collateral (funds transferred from WLP to Saxo Bank). Not used for trading.
        Funding: For WLP accounts used to transfer funds between WLP and WLP client accounts. Not used for trading.
        Commission: For partners only. Used to hold partner commission amounts. Not used for trading.
        Interest: For partners only. Used to hold partner interest amounts. Not used for trading.
        Omnibus: For WLPs only. Used purely as an overall account. Not used for trading.
        MFAllocation: Used for managed funds ALLOCATION account sonly (nothing to do with normal allocation/block trading accounts). Only MF trades.
        MFTotal: Used for managed funds TOTAL accounts only. Only MF trades.
        Settlement: Used in connection with SettlementTrading accounts. SettlementTrading accounts is used on the actual trading account. Settlement accounts are used on the sub accounts. Not used for trading.
        ConBroker: 'Used on broker accounts (in practise, the Normal account is actually used).'
        ConEgo: 'Used on EGO accounts (in practise, the Normal account is actually used).'
        Shadow: 'This account is used when a trade is allocated with negative allocation key. Two Shadow accounts are used. One to hold positive exposure, one to hold the equal but opposite exposure. Used very limited.'
        Cgb: Used for client accounts having open positions in Managed Fund instruments called ”CGB” (Capital Guaranteed Bonds).
        Tax: Account Type for Julias bear
        AutoTradingLeader: Account Type for Saxo Select Leader accounts
        AutoTradingFollower: Account Type for Saxo Select Follower accounts
        DvP: Account type for delivery versus payment
        VariationMargin: Indicates the account on which exchange of collateral(cash) under EMIR between client and Saxo happens
        PledgedCash: Account type for Pledged Cash
        Facilitation: Account type for Facilitation flow
        ASK: Account type for Aktiesparekonto(ASK)-Danish Investment Account
        Pension: Account type for Pension
        MarginLending: Account type for Margin Lending
        TaxSavings: Generic account type for tax savings accounts. Should be used in conjection with AccountSubType
    AccountTypeNullable:
      $ref: '#/components/schemas/AccountType'
    AccountValues:
      title: Tax saving account details
      type: object
      properties:
        AccountCurrency:
          title: Account currency
          type: string
        AccountNumber:
          title: Account number
          type: string
        FirstFundingDate:
          title: First Funding Date
          type: string
          format: date
          x-type-name: Date
        FundingSchedule:
          title: Funding schedule
          allOf:
            - $ref: '#/components/schemas/FundingSchedule'
        MaxFundingLimit:
          title: Maximum funding limit allowed
          type: number
        NetFundedAmount:
          title: Net funded amount
          type: number
        RemainingFundingLimit:
          title: Remaining funding limit
          type: number
        RemainingFundingTax:
          title: Remaining Funding Tax
          type: number
      additionalProperties: false
    Activity:
      title: Activity in a case
      type: object
      properties:
        ActivityPriority:
          title: Activity priority
          allOf:
            - $ref: '#/components/schemas/ActivityPriority'
        ActivityTime:
          title: Activity time
          type: string
          format: date-time
          x-type-name: UtcDateTime
        ActivityType:
          title: Activity type
          allOf:
            - $ref: '#/components/schemas/ActivityType'
        Attachments:
          title: List of attachments
          type: array
          items:
            $ref: '#/components/schemas/File'
        Direction:
          title: Direction of activity
          type: string
        EmailBcc:
          title: People in Bcc
          type: array
          items:
            $ref: '#/components/schemas/ActivityContact'
        EmailCc:
          title: People in Cc
          type: array
          items:
            $ref: '#/components/schemas/ActivityContact'
        From:
          title: Person who initiated the activity
          allOf:
            - $ref: '#/components/schemas/ActivityContact'
        PhoneNumber:
          title: Phone number
          type: string
        Status:
          title: Activity status
          allOf:
            - $ref: '#/components/schemas/ActivityStatus'
        Subject:
          title: Subject of activity
          type: string
        To:
          title: People to whom the activity was initiated
          type: array
          items:
            $ref: '#/components/schemas/ActivityContact'
      additionalProperties: false
    ActivityContact:
      title: Activity contact
      type: object
      properties:
        EmailAddress:
          title: Email address
          type: string
        Name:
          title: Name
          type: string
      additionalProperties: false
    ActivityListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Models.Activity'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    ActivityLogSearchRequest:
      title: Parameters to search in activityLog
      required:
        - ClientKey
      type: object
      properties:
        AccountGroupKey:
          title: Filter by accounts in an account group.
          minLength: 1
          type: string
          x-type-name: AccountGroupKey
        AccountKey:
          title: Account Key
          minLength: 1
          type: string
          x-type-name: AccountKey
        ClientKey:
          title: Client Key
          minLength: 1
          type: string
          x-type-name: ClientKey
        CorrelationKey:
          title: Entry must relate to specified correlationKey
          type: string
        From:
          title: From Date
          type: string
          format: date-time
          x-type-name: UtcDateTime
        LogEntryTypes:
          title: Select the subset of activities to return
          type: array
          items:
            $ref: '#/components/schemas/LogEntryType'
        PostingId:
          title: Entry must refer to specified PostingId
          type: string
        To:
          title: To Date
          type: string
          format: date-time
          x-type-name: UtcDateTime
      additionalProperties: false
    ActivityPriority:
      title: Activity priority
      enum:
        - High
        - Low
        - Normal
      type: string
      x-enum-descriptions:
        Low: Low priority
        Normal: Normal priority
        High: High priority
    ActivityStatus:
      title: Activity status
      enum:
        - Canceled
        - Completed
        - Open
      type: string
      x-enum-descriptions:
        Open: The activity is open
        Completed: The activity is completed
        Canceled: The activity is cancelled
    ActivityType:
      title: Type of activity
      enum:
        - Email
        - PhoneCall
      type: string
      x-enum-descriptions:
        Email: Email
        PhoneCall: Phone call
    AdvancedOptions:
      title: Advanced options when specifying a withdrawal
      type: object
      properties:
        IntermediaryBank:
          title: Swift/BIC of intermediaryBank bank.
          type: string
        RegulatedBroker:
          title: The regulated broker. Used if founds should be paid to a regulated broker.
          allOf:
            - $ref: '#/components/schemas/CashWithdrawal.RegulatedBroker'
        RequestClosureOfAccount:
          title: Closure of account.
          type: boolean
      additionalProperties: false
    AggregatedAmount:
      title: The aggregated amount.
      type: object
      properties:
        AccountCurrency:
          title: The account currency
          type: string
        AffectsBalance:
          title: Denotes whether the aggregated amount affected the cash balance
          type: boolean
        Amount:
          title: Aggregated Amount in Instrument currency
          type: number
        AmountAccountCurrency:
          title: Aggregated Amount in account currency
          type: number
        AmountClass:
          title: Cost Category
          allOf:
            - $ref: '#/components/schemas/AmountClass'
        AmountClientCurrency:
          title: Aggregated Amount in Client currency
          type: number
        AmountSubClass:
          title: Cost Sub Category
          allOf:
            - $ref: '#/components/schemas/AmountSubClass'
        AmountTypeId:
          title: ID for the amount type
          type: integer
          format: int32
        AmountTypeName:
          title: Name of the amount type. Describes the type of the amount
          type: string
        AmountUSD:
          title: Aggregated  Amount in USD
          type: number
        AssetType:
          title: AssetType
          allOf:
            - $ref: '#/components/schemas/AssetTypeNullable'
        BookingAccountId:
          title: BookingAccountId
          type: string
        ClientCurrency:
          title: The client currency
          type: string
        CostClass:
          title: Cost Category
          allOf:
            - $ref: '#/components/schemas/CostClass'
          x-network-visibility: internal
        CostSubClass:
          title: Cost Sub Category
          allOf:
            - $ref: '#/components/schemas/CostSubClass'
          x-network-visibility: internal
        Date:
          title: Date
          type: string
          format: date
          x-type-name: Date
        InstrumentDescription:
          title: Instrument
          type: string
        InstrumentSectorName:
          title: Sector name of the instrument
          type: string
        InstrumentSectorTypeId:
          title: Sector type Id of instrument
          type: integer
          format: int32
        InstrumentSubType:
          title: sub type of instrument
          allOf:
            - $ref: '#/components/schemas/DisplayHintType'
        InstrumentSymbol:
          title: The instrument code
          type: string
        RootInstrumentSectorName:
          title: Top Level Sector name of the instrument
          type: string
        RootInstrumentSectorTypeId:
          title: Top Level Sector Id of the instrument
          type: integer
          format: int32
        Uic:
          title: Uic of instrument
          type: integer
          format: int32
        UnderlyingInstrumentAssetType:
          title: Asset type of underlying instrument
          allOf:
            - $ref: '#/components/schemas/AssetTypeNullable'
        UnderlyingInstrumentDescription:
          title: Description of underlying instrument
          type: string
        UnderlyingInstrumentSubType:
          title: sub type of underlying instrument
          allOf:
            - $ref: '#/components/schemas/DisplayHintType'
        UnderlyingInstrumentSymbol:
          title: Symbol of underlying instrument
          type: string
        UnderlyingInstrumentUic:
          title: Uic of underlying instrument
          type: integer
          format: int32
      additionalProperties: false
    AggregatedAmountListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/AggregatedAmount'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    Agreement:
      title: The agreement
      type: object
      properties:
        AgreementTemplate:
          title: Agreement Template contains data to be displayed
          allOf:
            - $ref: '#/components/schemas/AgreementTemplate'
        AvailableActions:
          title: Available actions that the client can perform
          type: array
          items:
            $ref: '#/components/schemas/ServiceUserAction'
        IsEditableMode:
          title: Details can be edited
          type: boolean
        IsOccupationDetailsMandatory:
          title: Occupation details are mandatory
          type: boolean
        SubscriptionValues:
          title: Subscription Values
          allOf:
            - $ref: '#/components/schemas/SubscriptionValues'
      additionalProperties: false
    AgreementTemplate:
      title: Agreement template
      type: object
      properties:
        Countries:
          title: List of countries
          type: array
          items:
            $ref: '#/components/schemas/Subscriptions.Country'
        RestrictedCountries:
          title: List of restricted countries
          type: array
          items:
            $ref: '#/components/schemas/Subscriptions.Country'
        ServiceName:
          title: Service name
          type: string
        SubscriptionClassifications:
          title: Subscription classifications
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionClassification'
        Template:
          title: Agreement html template
          type: string
      additionalProperties: false
    AgreementValue:
      title: Agreement value
      required:
        - Name
      type: object
      properties:
        Name:
          title: Name
          type: string
        Value:
          title: Value
          type: string
      additionalProperties: false
    AmountClass:
      title: The amount class.
      enum:
        - NotAssigned
        - OngoingCharges
        - OngoingPayment
        - TransactionCosts
      type: string
    AmountSubClass:
      title: The amount sub class.
      enum:
        - ExternalCosts
        - InstrumentRelated
        - ManagementFee
        - NonBookedCosts
        - NonInstrumentRelated
        - NotAssigned
      type: string
    AnswerType:
      title: The type of answers expected for the question
      enum:
        - Bool
        - Text
      type: string
      x-enum-descriptions:
        Bool: The answer type expected is boolean
        Text: The answer type expected is text
    ApiGroupInfo:
      title: Infor for an Api Group.
      type: object
      properties:
        Controller:
          title: Gets the Api Controller name.
          type: string
        Routes:
          title: Gets the routes for the ApiGroup.
          type: array
          items:
            type: string
      additionalProperties: false
    AppApprovalLevel:
      title: Approval level for an app.
      enum:
        - Everything
        - NoAccess
        - ReadOnly
        - Unspecified
      type: string
      description: A copy of Iit.Sso.DataLayer.Model.AppApprovalLevel in SSO.
      x-enum-descriptions:
        Unspecified: Nothing specified. App is neither approved or rejected.
        NoAccess: App has no access.
        ReadOnly: 'App has read only access, e.g. no trading.'
        Everything: 'App has access to everything, incl trading on clients behalf.'
    AppApprovalLevelNullable:
      $ref: '#/components/schemas/AppApprovalLevel'
    AppropriatenessTest:
      title: Describes the questions and answers in a Mifid Appropriateness test
      required:
        - AppropriatenessTestId
        - QuestionSections
      type: object
      properties:
        AppropriatenessTestId:
          title: 'The tests ID, actually the version number of the test.'
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
        Description:
          title: 'Appropriateness test description text, encouraging users to take the test'
          type: string
        Name:
          title: 'Test name, may include version number'
          type: string
        PublishedDate:
          title: The publish date of the test
          type: string
          format: date
          x-type-name: Date
        QuestionSections:
          title: List of all the question sections
          type: array
          items:
            $ref: '#/components/schemas/AppropriatenessTests.QuestionSection'
        Title:
          title: Title of the test
          type: string
      additionalProperties: false
    AppropriatenessTests.Question:
      title: Represents a single question in the appropriateness test
      required:
        - QuestionId
        - QuestionOptions
      type: object
      properties:
        QuestionId:
          title: ID of the question
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
        QuestionOptions:
          title: List of options (answers) to specific question
          type: array
          items:
            $ref: '#/components/schemas/AppropriatenessTests.QuestionOption'
        QuestionText:
          title: Actual question
          type: string
      additionalProperties: false
    AppropriatenessTests.QuestionOption:
      title: Represents an option to select as a potential answer to a question.
      required:
        - QuestionOptionId
        - Selected
      type: object
      properties:
        QuestionOptionId:
          title: ID of the specific option
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
        Selected:
          title: If the option has been selected or not
          type: boolean
        Text:
          title: Option text aka the answer
          type: string
      additionalProperties: false
    AppropriatenessTests.QuestionSection:
      title: Represents a section of questions within the appropriateness test
      required:
        - Questions
      type: object
      properties:
        AssetTypes:
          title: Relation ID to AssetType(s)
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
        Name:
          title: Name of the question section
          type: string
        Questions:
          title: List of questions belonging to the question section
          type: array
          items:
            $ref: '#/components/schemas/AppropriatenessTests.Question'
        Title:
          title: Title of the question section
          type: string
      additionalProperties: false
    AssetAppropriatenessTestPassed:
      title: Status of the appropriateness test
      enum:
        - NotPassed
        - NotTaken
        - Passed
      type: string
      x-enum-descriptions:
        NotTaken: The test was not taken for the product concerned.
        NotPassed: The test was NOT passed for the product concerned.
        Passed: The test was passed for the product concerned.
    AssetClassificationStatus:
      title: Represents the current classification status for a given asset type
      type: object
      properties:
        AssetAppropriatenessTestStatus:
          title: Status of the asset classification
          allOf:
            - $ref: '#/components/schemas/AssetAppropriatenessTestPassed'
        AssetName:
          title: 'The assets name, also known as product name and instrument name'
          type: string
        AssetNameUnTranslated:
          title: 'The assets name, also known as product name and instrument name (Untranslated)'
          type: string
        AssetTypes:
          title: Asset Types related to the product area
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
        ClassificationSubType:
          title: The asset sub classification sub type
          allOf:
            - $ref: '#/components/schemas/ClassificationSubTypeNullable'
        ClassificationType:
          title: The asset classification
          allOf:
            - $ref: '#/components/schemas/ClassificationType'
        Complexity:
          title: Describes the complexity of the asset
          allOf:
            - $ref: '#/components/schemas/AssetComplexityNullable'
        ProductAreaId:
          title: Identifier for Product Area
          type: integer
          format: int32
        RequestedClassificationStatus:
          title: Requested classification status
          allOf:
            - $ref: '#/components/schemas/ClassificationStatusNullable'
        RequestedClassificationType:
          title: Requested Classification type
          allOf:
            - $ref: '#/components/schemas/ClassificationTypeNullable'
      additionalProperties: false
    AssetComplexity:
      title: Describes the complexity of the assets
      enum:
        - Complex
        - Simple
      type: string
      x-enum-descriptions:
        Complex: Complex asset
        Simple: Simple asset
    AssetComplexityNullable:
      $ref: '#/components/schemas/AssetComplexity'
    AssetType:
      title: The possible AssetTypes for which you can get a quote or place an order or a trade.
      enum:
        - Bond
        - Cash
        - CertificateBonus
        - CertificateCappedBonus
        - CertificateCappedCapitalProtected
        - CertificateCappedOutperformance
        - CertificateConstantLeverage
        - CertificateDiscount
        - CertificateExpress
        - CertificateTracker
        - CertificateUncappedCapitalProtection
        - CertificateUncappedOutperformance
        - CfdFutureOption
        - CfdIndexOption
        - CfdOnCompanyWarrant
        - CfdOnEtc
        - CfdOnEtf
        - CfdOnEtn
        - CfdOnFund
        - CfdOnFutures
        - CfdOnIndex
        - CfdOnRights
        - CfdOnStock
        - CfdStockOption
        - CompanyWarrant
        - ContractFutures
        - Etc
        - Etf
        - Etn
        - Fund
        - FuturesOption
        - FuturesStrategy
        - FxBinaryOption
        - FxForwards
        - FxKnockInOption
        - FxKnockOutOption
        - FxNoTouchOption
        - FxOneTouchOption
        - FxSpot
        - FxSwap
        - FxVanillaOption
        - GuaranteeNote
        - IpoOnStock
        - ManagedFund
        - MiniFuture
        - MutualFund
        - PortfolioNote
        - Rights
        - SrdOnEtf
        - SrdOnStock
        - Stock
        - StockIndex
        - StockIndexOption
        - StockOption
        - Warrant
        - WarrantDoubleKnockOut
        - WarrantKnockOut
        - WarrantOpenEndKnockOut
        - WarrantSpread
      type: string
      x-enum-descriptions:
        FxSpot: Forex Spot.
        FxForwards: Forex Forward.
        FxVanillaOption: Forex Vanilla Option.
        FxKnockInOption: Forex Knock In Option.
        FxKnockOutOption: Forex Knock Out Option.
        FxBinaryOption: Forex Binary Option.
        FxOneTouchOption: Forex One Touch Option.
        FxNoTouchOption: Forex No Touch Option.
        ContractFutures: Contract Futures.
        FuturesStrategy: Futures Strategy.
        Stock: Stock.
        StockOption: Stock Option.
        Bond: Bond.
        FuturesOption: Futures Option.
        StockIndexOption: Stock Index Option.
        ManagedFund: 'Obsolete: Managed Fund.'
        Cash: Cash. Not tradeable!
        CfdOnStock: Cfd on Stock.
        CfdOnIndex: Cfd on Stock Index.
        CfdOnFutures: Cfd on Futures.
        StockIndex: Stock Index.
        MutualFund: Mutual Fund.
        CfdIndexOption: Cfd Index Option.
        CfdOnEtf: Cfd on Etf
        CfdOnEtc: Cfd on Etc
        CfdOnEtn: Cfd on Etn
        CfdOnFund: Cfd on Fund
        CfdOnRights: Cfd on Rights
        CfdStockOption: Cfd Stock Option
        CfdOnCompanyWarrant: Cfd on unlisted warrant issued by a corporation.
        Etf: Exchange traded fund.
        Etc: Etc
        Etn: Etn
        Fund: Fund
        FxSwap: Forex Swap.
        Rights: Rights
        Warrant: Warrant
        CfdFutureOption: Cfd Future Option.
        MiniFuture: MiniFuture.
        WarrantSpread: Warrant with built-in spread.
        WarrantKnockOut: Warrant with a knock-out barrier.
        WarrantOpenEndKnockOut: Knock-out Warrant with no expiry.
        WarrantDoubleKnockOut: Warrant with two knock-out barriers.
        CertificateUncappedCapitalProtection: Guarantees a percentage increase of the underlying asset's value above the issue price at expiry/maturity. Max loss is the amount invested multiplied by the CapitalProtection percentage.
        CertificateCappedCapitalProtected: Guarantees a capped percentage increase of the underlying asset's value above the issue price at expiry/maturity. Max loss is the amount invested multiplied by the CapitalProtection percentage.
        CertificateDiscount: 'Yields a capped return if the underlying asset''s value is above the specified cap level at expiry. If the underlying''s value is below the strike at expiry, the investor received the underlying or equivalent value. Offers direct exposure in underlying at a lower price (discount) with a capped potential profit and limited loss.'
        CertificateCappedOutperformance: Capped Outperformance Certificate.
        CertificateCappedBonus: Certificate Capped Bonus.
        CertificateExpress: Certificate Express kick out.
        CertificateTracker: A certificate that mirrors the price movement of the underlying instrument. Often used to trade movements in indicies. Movements can be a fixed ratio of the underlying and can be inverted for bearish/short speculation. Risk is equivalent to owning the underlying.
        CertificateUncappedOutperformance: 'Provides leveraged returns when the underlying price exceeds the threshold strike price. The amount leverage is defined by the Participation %. When the underlying is below the strike price, the certificate mirrors the underlying price 1:1.'
        CertificateBonus: 'Mirrors the price movement of the underlying only if and when the underlying price exceeds the defined barrier. If the certificate expires below the barrier, it offers partial protection/return of investment.'
        CertificateConstantLeverage: Certificate Constant Leverage.
        SrdOnStock: SRD. (Service de Règlement Différé) on Stock.
        SrdOnEtf: SRD. (Service de Règlement Différé) on Etf.
        IpoOnStock: IPO on Stock
        CompanyWarrant: 'Unlisted warrant issued by a corporation, often physically settled.'
        PortfolioNote: Danish pooled investment scheme (“Pulje”). Not online tradeable.
        GuaranteeNote: Danish investment scheme (“Grantbevis”). Not online tradeable.
      x-enum-network-visibility:
        CfdStockOption: internal
        FxSwap: internal
        CfdFutureOption: internal
    AssetTypeFilter:
      title: AssetType filter
      type: object
      properties:
        AssetType:
          title: AssetType
          allOf:
            - $ref: '#/components/schemas/AssetTypeNullable'
        Uic:
          title: Uic
          type: integer
          format: int32
      additionalProperties: false
    AssetTypeFilterCriteriaRequest:
      title: DTO class for Asset Type filter criteria transportation
      type: object
      properties:
        InstrumentFilters:
          title: InstrumentFilters
          type: array
          items:
            $ref: '#/components/schemas/AssetTypeFilter'
        Instruments:
          title: "Instrument Filter. This needs to be there for the model binding to allow the query notation and model\r\n                binding/parsing."
          type: string
        KeywordFilters:
          title: Keyword filters
          type: array
          items:
            $ref: '#/components/schemas/KeywordFilter'
        Size:
          title: Gets or sets the size of the search result.
          type: integer
          format: int32
        Uics:
          title: Uics
          type: array
          items:
            type: integer
            format: int32
      additionalProperties: false
    AssetTypeNullable:
      $ref: '#/components/schemas/AssetType'
    AutoTradingTermsAndConditionsStatus:
      title: The auto trading terms and conditions status.
      enum:
        - Accepted
        - NotAccepted
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: The status is unknown
        Accepted: Your request has been accepted
        NotAccepted: Your request has not been accepted
    BankDetails:
      type: object
      properties:
        Address:
          title: Address of the bank.
          type: string
        Bic:
          title: Bank Identification code i.e. SAXODKKK
          type: string
        Name:
          title: Name of the bank
          type: string
      additionalProperties: false
    BaseFeeRule:
      title: Base Fee Rule
      type: object
      properties:
        Currency:
          title: Currency
          type: string
        Markup:
          title: Markup
          type: number
        Pct:
          title: Percentage
          type: number
        Value:
          title: Value
          type: number
      additionalProperties: false
    BeneficiaryDetails:
      type: object
      properties:
        AccountNumber:
          title: Beneficiary local Bank Account Number
          type: string
        BankAddress:
          title: Beneficiary Bank address
          type: string
        BankName:
          title: Beneficiary Bank Name
          type: string
        Bic:
          title: Beneficiary Bank BIC (Swift Code)
          type: string
        ClearingCode:
          title: Beneficiary Bank local Clearing Code
          type: string
        CountryCode:
          title: Beneficiary Bank Country Code
          type: string
        Iban:
          title: Beneficiary International Bank Account Number
          type: string
      additionalProperties: false
    BeneficiaryInstructionsResponse:
      type: object
      properties:
        BeneficiaryDetails:
          title: Beneficiary detail
          allOf:
            - $ref: '#/components/schemas/BeneficiaryDetails'
        ClientId:
          title: Client Id
          type: string
        Currency:
          title: Transaction currency
          type: string
        Id:
          title: Instruction Id
          type: string
        IntermediaryBank:
          title: Intermediary detail
          allOf:
            - $ref: '#/components/schemas/IntermediaryBank'
        Name:
          title: Instruction name
          type: string
        RegulatedBroker:
          title: RegulatedBroker details
          allOf:
            - $ref: '#/components/schemas/RegulatedBroker'
      additionalProperties: false
    BeneficiaryInstructionsResponseListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/BeneficiaryInstructionsResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    BillingDetail:
      type: object
      properties:
        AccountCurrencyCode:
          title: Account currency code
          type: string
        AccountCurrencyDecimals:
          title: Decimals for account currency
          type: integer
          format: int32
        AccountId:
          title: Account ID
          type: string
        AmountAccountCurrency:
          title: Amount in account currency
          type: number
        AmountServiceCurrency:
          title: Amount in service currency
          type: number
        LevelName:
          title: Level name
          type: string
        ServiceCurrencyCode:
          title: Service currency code
          type: string
        ServiceCurrencyDecimals:
          title: Decimals for service currency
          type: integer
          format: int32
        ServiceName:
          title: Service name
          type: string
        StatusName:
          title: Status name
          type: string
        TradeDate:
          title: Trade date
          type: string
          format: date-time
          x-type-name: UtcDateTime
        UserId:
          title: User Id
          type: integer
          format: int32
      additionalProperties: false
    BillingDetailListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/BillingDetail'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    BondType:
      title: Describes the type of bond.
      enum:
        - Convertible
        - DualCurrency
        - FloatingRateNote
        - InflationLinked
        - NonInflationLinked
        - Perpetual
      type: string
      x-enum-descriptions:
        NonInflationLinked: Non Inflation Linked Bond.
        InflationLinked: Inflation Linked Bond.
        Convertible: Convertible Bond
        Perpetual: Perpetual Bond
        FloatingRateNote: FloatingRateNote Bond
        DualCurrency: DualCurrency Bond
    BondTypeNullable:
      $ref: '#/components/schemas/BondType'
    BondsCouponType:
      title: Type of bond coupons.
      enum:
        - CouponTypeFixed
        - CouponTypeNone
        - CouponTypeOther
        - CouponTypeVariable
      type: string
      x-enum-descriptions:
        CouponTypeNone: Zero-coupon bonds are issued at deep discounts and pay full face value at maturity.
        CouponTypeFixed: Bonds with fixed rate of interest.
        CouponTypeVariable: Bonds with floating rate of interest.
        CouponTypeOther: Other type of bond coupons.
    BondsCouponTypeNullable:
      $ref: '#/components/schemas/BondsCouponType'
    Booking:
      title: The booking.
      type: object
      properties:
        AccountCurrency:
          title: Booking account amount currency
          type: string
        AccountId:
          title: AccountId
          type: string
        Amount:
          title: Booked Amount in Instrument currency
          type: number
        AmountAccountCurrency:
          title: Booked Amount in account currency
          type: number
        AmountClass:
          title: Cost Category
          allOf:
            - $ref: '#/components/schemas/AmountClass'
        AmountClientCurrency:
          title: Booked Amount in Client currency
          type: number
        AmountSubClass:
          title: Cost Sub Category
          allOf:
            - $ref: '#/components/schemas/AmountSubClass'
        AmountUSD:
          title: Booked Amount USD
          type: number
        AssetType:
          title: AssetType
          allOf:
            - $ref: '#/components/schemas/AssetTypeNullable'
        BkAmountId:
          title: Id of booked amount
          type: string
        BkAmountType:
          title: Denotes the amount type for the booking
          type: string
        BkAmountTypeId:
          title: ID of the booked amount type
          type: string
        CaEventName:
          title: 'if booking is related to a corporate action, denotes the name of the event'
          type: string
        CaMasterRecordId:
          title: 'if booking is related to a corporate action, denotes the ID of the corporate action event'
          type: string
        ClientCurrency:
          title: Booking client amount currency
          type: string
        ConversionRate:
          title: Conversion rate
          type: number
        ConversionRateAccountCurrency:
          title: the currency conversion cost in account currency when trading an instrument with a different base currency compared to the account it is traded on
          type: number
        ConversionRateClientCurrency:
          title: the currency conversion cost in client currency when trading an instrument with a different base currency compared to the account it is traded on
          type: number
        ConversionRateUSD:
          title: the currency conversion cost in USD when trading an instrument with a different base currency compared to the account it is traded on
          type: number
        CostClass:
          title: Cost Category
          allOf:
            - $ref: '#/components/schemas/CostClass'
        CostSubClass:
          title: Cost Sub Category
          allOf:
            - $ref: '#/components/schemas/CostSubClass'
        Currency:
          title: Booking amount currency
          type: string
        Date:
          title: Date
          type: string
          format: date
          x-type-name: Date
        InstrumentDescription:
          title: Instrument
          type: string
        InstrumentSectorName:
          title: Sector name of the instrument
          type: string
        InstrumentSectorTypeId:
          title: Sector type Id of instrument
          type: integer
          format: int32
        InstrumentSubType:
          title: sub type of instrument
          allOf:
            - $ref: '#/components/schemas/DisplayHintType'
        InstrumentSymbol:
          title: The instrument code
          type: string
        RelatedPositionId:
          title: Related Position Id
          type: string
        RelatedTradeId:
          title: Related trade Id
          type: string
        RootInstrumentSectorName:
          title: Top Level Sector name of the instrument
          type: string
        RootInstrumentSectorTypeId:
          title: Top Level Sector Id of the instrument
          type: integer
          format: int32
        Uic:
          title: Uic of instrument
          type: integer
          format: int32
        UnderlyingInstrumentAssetType:
          title: Asset type of underlying instrument
          allOf:
            - $ref: '#/components/schemas/AssetTypeNullable'
        UnderlyingInstrumentDescription:
          title: Description of underlying instrument
          type: string
        UnderlyingInstrumentSectorName:
          title: Sector name of underlying instrument
          type: string
        UnderlyingInstrumentSubType:
          title: sub type of underlying instrument
          allOf:
            - $ref: '#/components/schemas/DisplayHintType'
        UnderlyingInstrumentSymbol:
          title: Symbol of underlying instrument
          type: string
        UnderlyingInstrumentUic:
          title: Uic of underlying instrument
          type: integer
          format: int32
        ValueDate:
          title: Booking value date
          type: string
          format: date
          x-type-name: Date
      additionalProperties: false
    BookingListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Booking'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    BookingRequestType:
      title: 'Request type, basis on which bookings are reterived'
      enum:
        - BkAmountId
        - BkAmountTypeId
        - CaMasterRecordId
        - RelatedTradeId
      type: string
      x-enum-descriptions:
        BkAmountId: Booking amount Id
        CaMasterRecordId: Corporate action Id
        RelatedTradeId: Related trade Id
        BkAmountTypeId: SaxoInternal- Booking Amount type Id
    BookingRequestTypeNullable:
      $ref: '#/components/schemas/BookingRequestType'
    BorrowingCost:
      title: Borrowing Cost
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    Broker:
      title: Broker Information
      type: object
      properties:
        Contact:
          title: Broker Contact
          type: string
        CountryId:
          title: Country Id
          type: integer
          format: int32
        Email:
          title: Broker Email
          type: string
        Name:
          title: Broker Name
          type: string
        PhoneNumber:
          title: Broker Phone Number
          type: string
      additionalProperties: false
    BrokerDetails:
      title: Broker details needed for the transfer
      required:
        - BrokerContact
        - BrokerMail
        - BrokerName
        - BrokerPhone
        - ClientAccountAtBroker
      type: object
      properties:
        BrokerContact:
          title: Name of contact with broker
          type: string
        BrokerMail:
          title: The broker's Email
          type: string
        BrokerName:
          title: The broker's name
          type: string
        BrokerPhone:
          title: The broker's phone number
          type: string
        ClientAccountAtBroker:
          title: Identifier of the client's account at the broker
          type: string
      additionalProperties: false
    BrokerInformation:
      type: object
      properties:
        Account:
          title: Account number of Broker
          type: string
        ClearingCode:
          title: Clearing code of Broker.
          type: string
        Field59:
          title: "Address set by business user which is part of field 59 \r\n            in case of broker transfer."
          type: string
        Iban:
          title: IBAN of broker
          type: string
      additionalProperties: false
    BrokerSsiDetails:
      type: object
      properties:
        AccountAtClearingAgent:
          title: The safekeeping / Security account at the custody of the client
          type: string
        AgentLocalAccount:
          title: The agent local account
          type: string
        BuyerSellerCode:
          title: The buyer seller code
          type: string
        BuyerSellerCodeType:
          title: The BIC Code / Local Code of the custody of the client with their counterpart
          allOf:
            - $ref: '#/components/schemas/BuyerSellerCodeType'
        ClearingAgentCode:
          title: The clearing agent code
          type: string
        ClearingAgentCodeType:
          title: The BIC / Local Code of the Exchange of the instrument. For example if client is trading in UK Share then the Clearing Agent would be the BIC / Local Code from UK
          allOf:
            - $ref: '#/components/schemas/ClearingAgentCodeType'
        FreeText:
          title: The information / remarks
          type: string
        SettlementAgentAccount:
          title: The settlement agent account
          type: string
      additionalProperties: false
    BuySell:
      title: "BuySell indicator \r\n            Note: Values are *NOT* identical to the values of the _BuySellTypes defined in ClmTradeEnums.idl\r\n            If we should align this then we should coordinate with web trader which have taken a dependency on the \r\n            actual values of this enum."
      enum:
        - Buy
        - Sell
      type: string
      x-enum-descriptions:
        Buy: Buy
        Sell: Sell
    BuySellNullable:
      $ref: '#/components/schemas/BuySell'
    BuyerSellerCodeType:
      title: The possible BuyerSellerCodeTypes.
      enum:
        - Bic
        - Cdident
        - Local
        - None
        - Text
      type: string
      x-enum-descriptions:
        None: The none
        Bic: The bic
        Local: The local
        Text: The text
        Cdident: The cdident
    CalculationTriggerType:
      title: Calculation Trigger Type
      enum:
        - Netted
        - Normal
      type: string
      x-enum-descriptions:
        Normal: Normal
        Netted: Netted
    CalculationType:
      title: Calculation type.
      enum:
        - CommissionFraction
        - FixedAmount
        - TradeAmountFraction
        - ValueFraction
      type: string
      x-enum-descriptions:
        FixedAmount: Tax is charged as fixed amount.
        CommissionFraction: Tax is calculated as percentage of commission.
        TradeAmountFraction: Tax is calculated as percentage of traded amount.
        ValueFraction: Tax is calculated as percentage of total value.
    CardDefinition:
      title: Credit Card Definition
      type: object
      properties:
        BrandId:
          title: The brand id
          type: string
        CardDefinitionId:
          title: The card definition id
          type: string
        LockedCountry:
          title: If the card is locked to a country this will be set
          type: string
        LockedCurrency:
          title: If the card is locked to a currency this will be set
          type: string
        Name:
          title: The card name
          type: string
        ProviderId:
          title: Payment service provider Id supported by Saxo.
          type: string
      additionalProperties: false
    CardLogoResponse:
      type: object
      properties:
        CreditCardLogos:
          title: Card logo information
          type: array
          items:
            $ref: '#/components/schemas/CreditCardLogo'
      additionalProperties: false
    CarryingCost:
      title: Carrying Cost
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    Case:
      title: The support case details
      type: object
      properties:
        CaseId:
          title: The caseId
          type: string
        CaseStatus:
          title: The case status.
          allOf:
            - $ref: '#/components/schemas/Model.CaseStatus'
        CreatedDate:
          title: The case creation date.
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Deadline:
          title: The deadline by which this case should be resolved.
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Description:
          title: The case description.
          type: string
        HasAttachment:
          title: Indicates whether this case has attachements
          type: boolean
        ModifiedDate:
          title: The case's last modification date and time
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Notes:
          title: The notes attached to this case.
          type: array
          items:
            $ref: '#/components/schemas/NoteDetails'
        NotifyClient:
          title: Indicates that the client should be emailed about changes to the case.
          type: boolean
        SubjectId:
          title: The subject which this case belongs to.
          type: string
        TicketNumber:
          title: The case's ticket number.
          type: string
        Title:
          title: The case title
          type: string
      additionalProperties: false
    CaseCreatedResponse:
      type: object
      properties:
        CaseId:
          type: string
        TicketNumber:
          type: string
      additionalProperties: false
    CaseDetails:
      title: Case details
      type: object
      properties:
        Activities:
          title: Activities in a case
          type: array
          items:
            $ref: '#/components/schemas/Activity'
        CaseId:
          title: Case id
          type: string
        CaseLatestActivityTime:
          title: DateTime of case latest activity
          type: string
          format: date-time
          x-type-name: UtcDateTime
        CaseStatus:
          title: Case status
          allOf:
            - $ref: '#/components/schemas/CaseStatus'
        CaseType:
          title: Case type
          allOf:
            - $ref: '#/components/schemas/CaseTypeNullable'
        ClientId:
          title: Unique ID of the client
          type: string
        ClientName:
          title: Name of the client
          type: string
        ClientSegment:
          title: Segment of client
          allOf:
            - $ref: '#/components/schemas/SegmentNullable'
        ContactPersonId:
          title: Unique ID of the contact person
          type: string
        ContactPersonName:
          title: Name of the contact person
          type: string
        CreatedOn:
          title: DateTime when the case was created
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Deadline:
          title: Deadline of case
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Description:
          title: Description of case
          type: string
        EscalatedOn:
          title: DateTime when the case was escalated
          type: string
          format: date-time
          x-type-name: UtcDateTime
        FirstResponseSent:
          title: Represents if the first response is sent for the case
          type: boolean
        FollowUpDateTime:
          title: Followup due date of case
          type: string
          format: date-time
          x-type-name: UtcDateTime
        HandledByPartner:
          title: Represents if the case is handled by partner
          type: boolean
        InternalComments:
          title: Internal comments in a case
          type: array
          items:
            $ref: '#/components/schemas/InternalComment'
        IsEscalated:
          title: Represents if the case is escalated
          type: boolean
        Notes:
          title: Notes of a case
          type: array
          items:
            $ref: '#/components/schemas/Note'
        Origin:
          title: Case origin
          allOf:
            - $ref: '#/components/schemas/OriginNullable'
        ReassignmentCount:
          title: Number of times the case has been reassigned
          type: integer
          format: int32
        ServiceLanguage:
          title: Service language
          type: string
        ShowInPortal:
          title: Represents if the case should be shown in portal
          type: boolean
        Subject:
          title: Subject of case
          type: string
        Title:
          title: Title of case
          type: string
      additionalProperties: false
    CaseOperationResponse:
      type: object
      properties:
        TicketNumber:
          title: The case reference
          type: string
      additionalProperties: false
    CaseStatus:
      title: Case status
      enum:
        - Canceled
        - ExternallyPending
        - InProgress
        - InformationProvided
        - InternallyPending
        - InternallyPendingEscalated
        - Merged
        - ProblemSolved
      type: string
      x-enum-descriptions:
        InProgress: Case is in progress
        ExternallyPending: Case is externally pending
        InternallyPending: Case is internally pending
        InternallyPendingEscalated: Case is internally pending and is escalated
        ProblemSolved: Problem solved
        InformationProvided: Information is provided for the case
        Canceled: Case is cancelled
        Merged: Case is merged
    CaseSummary:
      title: Case summary
      type: object
      properties:
        CaseId:
          title: Case id
          type: string
        CaseLatestActivityTime:
          title: DateTime of case latest activity
          type: string
          format: date-time
          x-type-name: UtcDateTime
        CaseStatus:
          title: Case status
          allOf:
            - $ref: '#/components/schemas/CaseStatus'
        ClientId:
          title: Customer Id
          type: string
        CreatedOn:
          title: DateTime when the case was created
          type: string
          format: date-time
          x-type-name: UtcDateTime
        CustomerName:
          title: Customer Name
          type: string
        Deadline:
          title: Case deadline
          type: string
          format: date-time
          x-type-name: UtcDateTime
        FollowUpDateTime:
          title: Date time of when the case is due to follow up
          type: string
          format: date-time
          x-type-name: UtcDateTime
        HandledByPartner:
          title: Is handled by Partner
          type: boolean
        IsEscalated:
          title: Represents if the case has been escalated
          type: boolean
        Title:
          title: Title of case
          type: string
      additionalProperties: false
    CaseSummaryListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/CaseSummary'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    CaseType:
      title: Case type
      enum:
        - Faq
        - Problem
        - Question
        - Request
      type: string
      x-enum-descriptions:
        Question: Case is a question
        Problem: Case is a problem
        Request: Case is a request
        Faq: Case is a faq
    CaseTypeNullable:
      $ref: '#/components/schemas/CaseType'
    CashWithdrawal.RegulatedBroker:
      title: Details of regulated broker.
      required:
        - BrokerName
        - AccountNumber
      type: object
      properties:
        AccountNumber:
          title: The regulated broker account.
          type: string
        BrokerName:
          title: The name of the regulated broker.
          type: string
      additionalProperties: false
    Classification:
      title: Defines the complete product classification for a client for one classifcation type
      required:
        - ClassificationType
        - Products
      type: object
      properties:
        ClassificationSubType:
          title: Type of sub classification
          allOf:
            - $ref: '#/components/schemas/ClassificationSubTypeNullable'
        ClassificationType:
          title: Type of the classification
          allOf:
            - $ref: '#/components/schemas/ClassificationType'
        Name:
          title: The classifications name
          type: string
        Products:
          title: All products of the current classification
          type: array
          items:
            $ref: '#/components/schemas/Product'
        Qualified:
          title: If the classification is qualified or not
          type: boolean
      additionalProperties: false
    ClassificationDetail:
      title: Client Classification details
      type: object
      properties:
        ActionType:
          title: Action type
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        Classification:
          title: Classification
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        DaysLeft:
          title: Days left for classification
          type: integer
          format: int32
        EndDate:
          title: End date
          type: string
          format: date
          x-type-name: Date
        Points:
          title: Points
          type: integer
          format: int32
        StartDate:
          title: Start date
          type: string
          format: date
          x-type-name: Date
        ValidUntil:
          title: Validity of Classification
          type: string
          format: date
          x-type-name: Date
      additionalProperties: false
    ClassificationDetailResponse:
      title: Client classification details
      type: object
      properties:
        CurrentClassification:
          title: Current Classification details
          allOf:
            - $ref: '#/components/schemas/ClassificationDetail'
        TargetClassification:
          title: Target Classification details
          allOf:
            - $ref: '#/components/schemas/ClassificationDetail'
      additionalProperties: false
    ClassificationResponse:
      title: Client classification response
      type: object
      properties:
        Description:
          title: Description
          type: string
        MaxPoints:
          title: Maximum points required for the classification
          type: integer
          format: int32
        MinPoints:
          title: Minimum points required for the classification
          type: integer
          format: int32
        Type:
          title: Classification Type
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
      additionalProperties: false
    ClassificationResponseListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ClassificationResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    ClassificationStatus:
      title: The classification status of the client
      enum:
        - Approved
        - NotApplicable
        - Pending
        - Rejected
      type: string
      x-enum-descriptions:
        NotApplicable: The status is not applicable - No request has been sent ever
        Pending: The status is pending
        Approved: The status is approved
        Rejected: The status is rejected
    ClassificationStatusNullable:
      $ref: '#/components/schemas/ClassificationStatus'
    ClassificationSubType:
      title: The sub classification types/levels
      enum:
        - Elective
        - PerSe
      type: string
      x-enum-descriptions:
        Elective: Classified as Elective
        PerSe: Classified as PerSe
    ClassificationSubTypeNullable:
      $ref: '#/components/schemas/ClassificationSubType'
    ClassificationType:
      title: The classification types/levels
      enum:
        - EligibleCounterPart
        - Professional
        - Retail
      type: string
      x-enum-descriptions:
        Retail: Classified as Retail Client
        Professional: Classified as Professional
        EligibleCounterPart: Classified as Eligible CounterPart
    ClassificationTypeNullable:
      $ref: '#/components/schemas/ClassificationType'
    ClearingAgentCodeType:
      title: The possible ClearingAgentCodeTypes.
      enum:
        - Bic
        - Local
        - None
      type: string
      x-enum-descriptions:
        None: The none
        Bic: The bic
        Local: The local
    ClearingCodeLabelResponse:
      type: object
      properties:
        ClearingCodeLabelName:
          title: Clearing code label name for given country.
          type: string
        CountryCode:
          title: Country code like "DK"
          type: string
      additionalProperties: false
    ClientAddress:
      title: Client Address
      type: object
      properties:
        Address:
          title: Address
          type: string
        AddressExt:
          title: Address ext
          type: string
        BuildingName:
          title: Building name
          type: string
        City:
          title: City
          type: string
        CityNew:
          title: City new
          type: string
        ClientName:
          title: Client name
          type: string
        CoName:
          title: Care-of (c/o) name.
          type: string
        Country:
          title: Country
          type: string
        CountryIsoCode:
          title: Country ISO code.
          type: string
        CountryIsoName:
          title: Country ISO name.
          type: string
        DisplayableAddress:
          title: Address that is easy to display
          type: array
          items:
            type: string
        Fax:
          title: Clients Fax
          type: string
        Floor:
          title: Floor number
          type: string
        LocalArea:
          title: Local area name.
          type: string
        Number:
          title: Street number.
          type: string
        PoBox:
          title: Post office box.
          type: string
        PostalCode:
          title: Postal Code
          type: string
        PostalDistrict:
          title: Postal district.
          type: string
        Side:
          title: Side
          type: string
        State:
          title: State.
          type: string
        StreetName:
          title: Street name.
          type: string
        Unit:
          title: Building complex unit number
          type: string
      additionalProperties: false
    ClientAssetType:
      enum:
        - ATFwithCorpTrustee
        - ATFwithIndTrustee
        - ISA
        - InvestmentWrapper
        - QROP
        - SAAssetSwap
        - SIPPAccount
        - SSAS
      type: string
      x-enum-descriptions:
        ISA: Individual Savings Account. UK Tax Wrapper.
        SIPPAccount: Self Invested Personal Pension. UK Tax Wrapper.
        QROP: Qualifying Recognised Overseas Pension Scheme. Overseas pension scheme that meets certain requirements of UK HMRC (tax department)
        SSAS: Small Self Administered Scheme UK Occupational Pension Scheme/Tax Wrapper
        SAAssetSwap: 'South African Asset Swap. Tax Wrapper. Offshore investment but not fully externalised, giving global diversification and foreign currency exposure.'
        ATFwithIndTrustee: Australian Trust/Tax Wrapper with an Individual Trustee
        ATFwithCorpTrustee: Australian Trust/Tax Wrapper with an Corporate Trustee
        InvestmentWrapper: 'Generic name for Tax Wrapper. Believe its mostly used in the UK, but it could be used for many things'
    ClientAssetTypeNullable:
      $ref: '#/components/schemas/ClientAssetType'
    ClientBankDetails:
      type: object
      properties:
        AccountId:
          title: Account ID of client
          type: string
        AccountNumber:
          title: Account number of client.
          type: string
        AttainKey:
          title: Attain key of client is now Obsolete. Please use  instead.
          type: string
          deprecated: true
          x-deprecated-date: '2022-01-01'
        Bic:
          title: Bank identification code.
          type: string
        ClientId:
          title: Client Id of logged in user.
          type: integer
          format: int32
        ClientNameAndAddress:
          title: Name and address of client register in CRM
          type: string
        Iban:
          title: IBAN of client.
          type: string
        RegistrationNumber:
          title: Bank registration number.
          type: string
      additionalProperties: false
    ClientDetail:
      title: Client details
      required:
        - ExternalAccountId
        - SettlementMarketId
        - AccountKey
      type: object
      properties:
        AccountKey:
          title: Identifier of the client's account at Saxo Bank
          minLength: 1
          type: string
          x-type-name: AccountKey
        ExternalAccountId:
          title: External account Id
          type: string
        SettlementMarketId:
          title: Settlement market Id
          type: string
      additionalProperties: false
    ClientDetails:
      title: Details about a client
      type: object
      properties:
        Aum:
          title: Asset under management
          type: number
        ClientAssetCategory:
          title: Client Asset Category
          allOf:
            - $ref: '#/components/schemas/ClientAssetTypeNullable'
        ClientSegment:
          title: Segment where client belongs
          allOf:
            - $ref: '#/components/schemas/ClientSegment'
        CompanyRegistrationNumber:
          title: The company registration number.
          type: string
        CompanyTaxId:
          title: Company tax identifier.
          type: string
        ContractualSolution:
          title: Contractual Solution
          allOf:
            - $ref: '#/components/schemas/ContractualSolution'
        DefaultAccountId:
          title: The ID of the client's default account.
          type: string
        HINAccountNumber:
          title: HIN account number.
          type: string
        Iban:
          title: Iban for default account.
          type: string
        IntentToInvest:
          title: Intent to invest.
          allOf:
            - $ref: '#/components/schemas/IntentToInvest'
        IsEnabledForThirdPartyPayments:
          title: Is enable for third party payments
          type: boolean
        IsHINEnabled:
          title: Is HIN account enabled.
          type: boolean
        IsMinor:
          title: Is client minor
          type: boolean
        IsProductReclassificationLocked:
          title: Is MiFID reclassification enabled
          type: boolean
        LegalCountryName:
          title: Legal Country Name
          type: string
        LegalEntityId:
          title: Legal entity ID
          type: string
        LegalEntityType:
          title: Client legal entity type.
          allOf:
            - $ref: '#/components/schemas/LegalEntityTypeNullable'
        LegalGuardians:
          title: Client Legal Guardian
          type: array
          items:
            $ref: '#/components/schemas/LegalGuardian'
        LeiCode:
          title: The lei code.
          type: string
        LeiCodeStatus:
          title: The lei code status.
          type: string
        LeiNextRenewalDate:
          title: The lei next renewal date.
          type: string
          format: date
          x-type-name: Date
        OfficeInformation:
          title: Office information.
          allOf:
            - $ref: '#/components/schemas/OfficeInformation'
        PrimaryEmail:
          title: Primary email
          type: string
        PrimaryPhone:
          title: Primary phone
          type: string
        RelationshipManager:
          title: Relationship manager details
          allOf:
            - $ref: '#/components/schemas/RelationshipManager'
        SalesTrader:
          title: Sales trader details
          allOf:
            - $ref: '#/components/schemas/SalesTrader'
        ServiceLanguage:
          title: Service language of Client
          allOf:
            - $ref: '#/components/schemas/Language'
      additionalProperties: false
    ClientInfo:
      type: object
      properties:
        BrokerAddress:
          title: The Broker's address
          allOf:
            - $ref: '#/components/schemas/OwnerAddress'
        BrokerId:
          title: Broker of the client
          type: string
        CanInitiateChat:
          title: Can initiate chat
          type: boolean
        CashWithdrawalRequires2FA:
          title: Is Cash Withdrawal Requires Two factor Authentication
          type: boolean
        ClientAddress:
          title: The client's address
          allOf:
            - $ref: '#/components/schemas/ClientAddress'
        ClientDetails:
          title: 'Client details including: default account, iban, primary email and primary phone.'
          allOf:
            - $ref: '#/components/schemas/ClientDetails'
        ClientId:
          title: Numeric ID of the client.
          type: string
        ClientName:
          title: Name of the client
          type: string
        ClientTypeName:
          title: Name of the client type
          type: string
        ContractType:
          title: Contract Type
          allOf:
            - $ref: '#/components/schemas/Enum.ContractTypeNullable'
        EnabledForMembershipPoints:
          title: Is Unified Revenue Model Applicable
          type: boolean
        HasCounterparts:
          title: client has counterparts or not.
          type: boolean
        IsClientActive:
          title: Is the client enabled?
          type: boolean
        OwnerAddress:
          title: The owner's address
          allOf:
            - $ref: '#/components/schemas/OwnerAddress'
        OwnerId:
          title: Owner of the client
          type: string
        VatRate:
          title: Vat rate
          type: number
      additionalProperties: false
    ClientInfoGroupSpec:
      title: Specifies which sections of the combined client and address info to return.
      enum:
        - BrokerAddress
        - ClientAddress
        - ClientDetails
        - HasCounterparts
        - OwnerAddress
      type: string
      x-enum-descriptions:
        ClientDetails: Certain details about this client
        ClientAddress: Address information for the client
        OwnerAddress: Owner address details group name
        BrokerAddress: Broker address details group name
        HasCounterparts: To know client has counterparts or not
    ClientPlan:
      title: Client Plans
      type: object
      properties:
        CurrentPlan:
          title: Current Plan Details
          allOf:
            - $ref: '#/components/schemas/CurrentPlan'
        PlanGroupId:
          title: Plan Group Id
          type: string
        RequestedPlan:
          title: Requested Plan Details
          allOf:
            - $ref: '#/components/schemas/RequestedPlan'
      additionalProperties: false
    ClientPlanLookup:
      title: Client Plan Lookup
      type: object
      properties:
        FieldGroup:
          title: Specifies the field for which lookup values are loaded in this lookup
          type: string
        Values:
          title: Lookup codes and names
          type: array
          items:
            $ref: '#/components/schemas/CurrentPlan'
      additionalProperties: false
    ClientPlanLookupListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ClientPlanLookup'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    ClientSearchCriteria:
      type: object
      properties:
        AccountId:
          title: AccountId to search
          type: string
        AccountKey:
          title: AccountKey to search
          minLength: 1
          type: string
          x-type-name: AccountKey
        ClientId:
          title: ClientId to search
          type: string
        ClientKey:
          title: ClientKey to search
          minLength: 1
          type: string
          x-type-name: ClientKey
        FieldGroups:
          title: FieldGroups controlling the presence of different fields in the response
          type: array
          items:
            $ref: '#/components/schemas/SearchCriteriaFieldGroups'
        Keywords:
          title: Text to search in other fields
          type: string
        UserId:
          title: UserId to search
          type: string
      additionalProperties: false
    ClientSearchResponse:
      type: object
      properties:
        Accounts:
          title: Accounts info
          type: array
          items:
            $ref: '#/components/schemas/AccountInfo'
        ClientId:
          title: ClientId
          type: string
        ClientKey:
          title: ClientKey
          type: string
        ClientType:
          title: ClientType either House or Client
          allOf:
            - $ref: '#/components/schemas/ClientType'
          x-network-visibility: internal
        ClientTypeName:
          title: Client Type Name
          type: string
          x-network-visibility: internal
        ContractType:
          title: Contract Type
          allOf:
            - $ref: '#/components/schemas/ContractTypeNullable'
          x-network-visibility: internal
        DefaultAccountId:
          title: Default Account Id
          type: string
        DefaultAccountKey:
          title: Default Account key
          type: string
        LegalAssetTypes:
          title: Legal Assets
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
        Name:
          title: Name of the client
          type: string
        OwnerId:
          title: Owner Id
          type: string
          x-network-visibility: internal
        PartnerPlatformId:
          title: Partner Platform Id
          type: string
          x-network-visibility: internal
        Users:
          title: Users info
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
      additionalProperties: false
    ClientSearchResponseListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ClientSearchResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    ClientSearchTree:
      type: object
      properties:
        Accounts:
          title: Accounts info
          type: array
          items:
            $ref: '#/components/schemas/AccountInfo'
        ClientId:
          title: ClientId
          type: string
        ClientKey:
          title: ClientKey
          type: string
        ClientType:
          title: ClientType either House or Client
          allOf:
            - $ref: '#/components/schemas/ClientType'
          x-network-visibility: internal
        ClientTypeName:
          title: Client Type Name
          type: string
          x-network-visibility: internal
        ContractType:
          title: Contract Type
          allOf:
            - $ref: '#/components/schemas/ContractTypeNullable'
          x-network-visibility: internal
        DefaultAccountId:
          title: Default Account Id
          type: string
        DefaultAccountKey:
          title: Default Account key
          type: string
        LegalAssetTypes:
          title: Legal Assets
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
        Name:
          title: Name of the client
          type: string
        OwnerId:
          title: Owner Id
          type: string
          x-network-visibility: internal
        PartnerPlatformId:
          title: Partner Platform Id
          type: string
          x-network-visibility: internal
        SubClients:
          title: Children contains list
          type: array
          items:
            $ref: '#/components/schemas/ClientSearchTree'
        Users:
          title: Users info
          type: array
          items:
            $ref: '#/components/schemas/UserInfo'
      additionalProperties: false
    ClientSearchTreeListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ClientSearchTree'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    ClientSegment:
      enum:
        - Classic
        - Na
        - Platinum
        - PlatinumVip
        - Premium
      type: string
      x-enum-descriptions:
        Classic: Classic segment client
        Premium: Premium segment client
        Platinum: Platinum segment client
        PlatinumVip: PlatinumVip segment client
        Na: Client segment not defined
    ClientType:
      title: The client type.
      enum:
        - Client
        - House
      type: string
      x-enum-descriptions:
        House: House
        Client: Client
    ClientTypeNullable:
      $ref: '#/components/schemas/Enum.ClientType'
    CloseCaseCommand:
      title: Data associated with closing the case
      type: object
      properties:
        CaseId:
          title: The id of the case to be closed.
          type: string
        ClientId:
          type: string
        CloseNote:
          title: The note describing the reason or circumstances for closure
          type: string
      additionalProperties: false
    CloseCaseRequest:
      title: Request to close a case
      required:
        - Status
      type: object
      properties:
        Status:
          title: Case Status
          allOf:
            - $ref: '#/components/schemas/CloseCaseStatus'
      additionalProperties: false
    CloseCaseStatus:
      title: Valid case status to close a case
      enum:
        - Canceled
        - InformationProvided
        - ProblemSolved
      type: string
      x-enum-descriptions:
        ProblemSolved: Problem solved
        InformationProvided: Information is provided for the case
        Canceled: Case is cancelled
    ClosedPosition:
      title: The closed position.
      type: object
      properties:
        AccountCurrency:
          title: The account currency
          type: string
        AccountCurrencyDecimals:
          title: The amount of decimals used by the account currency
          type: integer
          format: int32
        AccountId:
          title: AccountId
          type: string
        Amount:
          title: The amount bought or sold
          type: number
        AmountClose:
          title: The total traded amount for the Closing trade
          type: number
        AmountOpen:
          title: The total traded amount for the opening trade
          type: number
        AssetType:
          title: AssetType
          allOf:
            - $ref: '#/components/schemas/AssetTypeNullable'
        ClientCurrency:
          title: Client Currency
          type: string
        CloseIndexRatio:
          title: Close Index Ratio
          type: number
        ClosePositionId:
          title: Close position Id
          type: string
        ClosePrice:
          title: Close price of position
          type: number
        ExchangeDescription:
          title: Description of exchange
          type: string
        ISINCode:
          title: Instrument ISIN Code
          type: string
          x-network-visibility: internal
        InstrumentCurrency:
          title: Instrument Currency
          type: string
        InstrumentDescription:
          title: Instrument
          type: string
        InstrumentSectorName:
          title: Sector name of the instrument
          type: string
        InstrumentSectorTypeId:
          title: Sector type Id of instrument
          type: integer
          format: int32
        InstrumentSymbol:
          title: The instrument code
          type: string
        OpenIndexRatio:
          title: Open Index Ratio
          type: number
        OpenPositionId:
          title: Open position Id
          type: string
        OpenPrice:
          title: Open price of position
          type: number
        PnLAccountCurrency:
          title: Profit and Loss in account currency
          type: number
        PnLClientCurrency:
          title: Profit and Loss in client currency
          type: number
        PnLUSD:
          title: Profit and Loss in USD
          type: number
        RootInstrumentSectorName:
          title: Top Level Sector name of the instrument
          type: string
        RootInstrumentSectorTypeId:
          title: Top Level Sector Id of the instrument
          type: integer
          format: int32
        TotalBookedOnClosingLegAccountCurrency:
          title: Total booked on closing leg in account currency
          type: number
        TotalBookedOnClosingLegClientCurrency:
          title: Total booked on closing in client currency
          type: number
        TotalBookedOnClosingLegUSD:
          title: Total booked on closing in USD
          type: number
        TotalBookedOnOpeningLegAccountCurrency:
          title: Total booked on opening leg in account currency
          type: number
        TotalBookedOnOpeningLegClientCurrency:
          title: Total booked on opening leg in client currency
          type: number
        TotalBookedOnOpeningLegUSD:
          title: Total booked on opening leg in USD
          type: number
        TradeDate:
          title: Date of Trade
          type: string
          format: date
          x-type-name: Date
        TradeDateClose:
          title: Tradedate for closing trade
          type: string
          format: date
          x-type-name: Date
        TradeDateOpen:
          title: Tradedate for opening trade
          type: string
          format: date
          x-type-name: Date
        UnderlyingInstrumentDescription:
          title: Description of underlying instrument
          type: string
        UnderlyingInstrumentSymbol:
          title: Symbol of underlying instrument
          type: string
      additionalProperties: false
    ClosedPositionListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ClosedPosition'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    Commision:
      title: Commission
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/CommisionRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    CommisionRule:
      type: object
      properties:
        BaseCommission:
          title: 'Fixed commmission that if present, will always be charged.'
          type: number
        Currency:
          title: Currency
          type: string
        Markup:
          title: Markup
          type: number
        MaxCommission:
          title: Maximum commission applied if other commissions are above than this value.
          type: number
        MinCommission:
          title: Minimum commission applied if other commissions are lower than this value.
          type: number
        Pct:
          title: Percentage
          type: number
        PerUnitRate:
          title: Commission per share (or lot).
          type: number
        RateOnAmount:
          title: Commission as a percentage of the amount traded.
          type: number
        Value:
          title: Value
          type: number
      additionalProperties: false
    CommissionLimit:
      title: Contains comissions for a range of comission types
      type: object
      properties:
        BaseCommission:
          title: 'Fixed commmission that if present, will always be charged.'
          type: number
        Currency:
          title: The currency of the commission.
          type: string
        MaxAmount:
          title: Commission applied only to trade amounts below this value.
          type: number
        MaxCommission:
          title: Maximum commission applied if other commissions are above than this value.
          type: number
        MaxNumberOfContracts:
          title: Commission applied only to trade sizes (number of shares or lots) below this value.
          type: number
        MaxPrice:
          title: Commission applied only if the asset price is below this value.
          type: number
        MinAmount:
          title: 'Commission (percentage, amount / share or fixed amount) if the value of the trade is below this value.'
          type: number
        MinCommission:
          title: Minimum commission applied if other commissions are lower than this value.
          type: number
        MinNumberOfContracts:
          title: Commission applied only to trade sizes (number of shares or lots) above this value.
          type: number
        MinPrice:
          title: Commission applied only if the asset price is above this value.
          type: number
        MinSpread:
          title: The minimum bid/ask spread that can be seen for the instrument.
          type: number
        OrderAction:
          title: Indicates what action on an order the commission limit applies to.
          allOf:
            - $ref: '#/components/schemas/OrderActions'
        PerUnitRate:
          title: Commission per share (or lot).
          type: number
        RateOnAmount:
          title: Commission as a percentage of the amount traded.
          type: number
        SpreadMarkup:
          title: Spread in Price units(Markup)
          type: number
        SpreadRate:
          title: The  spread (min.) for spread based (non-FX) products.
          type: number
      additionalProperties: false
    Common.LookupFieldGroup:
      title: Lookup FieldGroup
      enum:
        - ActionType
        - All
        - ClassificationType
        - PointSourceType
      type: string
      x-enum-descriptions:
        PointSourceType: Point source type
        ClassificationType: Classification type
        ActionType: Action Type
        All: All
      x-type-warning: FlaggableEnum
    ConditionalConstraintCompareType:
      title: Conditional Constraint Compare Type
      enum:
        - Equals
        - GreaterThan
        - HasValue
        - LessThan
      type: string
      x-enum-descriptions:
        HasValue: Has Value
        GreaterThan: Greater Than
        LessThan: Less Than
    ConditionalConstraintCompareTypeNullable:
      $ref: '#/components/schemas/ConditionalConstraintCompareType'
    ConfirmTransactionRequest:
      required:
        - RedirectUrl
      type: object
      properties:
        MerchantData:
          title: Merchant data sent by card issuer bank.
          type: string
        PageResponse:
          title: Token as a page response sent by card issuer bank.
          type: string
        PaymentProvider:
          title: Payment provider to use for payment service
          allOf:
            - $ref: '#/components/schemas/PaymentProviderNullable'
        RedirectUrl:
          title: "Redirect Url when user will be redirected from payment \r\n            service provider to Saxo environment."
          type: string
      additionalProperties: false
    ContractOptionRootMarginRequirement:
      type: object
      properties:
        MinimumAmount:
          title: Minimum amount
          type: number
        MinimumUnderlyingValue:
          title: Minimum underlying value in percentage
          type: number
        Premium:
          title: Premium in percentage - 1 equivalent to 100%
          type: number
        TradingProfile:
          title: The trading profile
          type: string
        UnderlyingValueOvernightExposure:
          title: Underlying value overnight exposure in percentage
          type: number
      additionalProperties: false
    ContractOptionStrategy:
      title: Different contract options stragegies (Copy of Datafeed enum and should be updated whenever datafeed changes their)
      enum:
        - BackRatio
        - Butterfly
        - CalendarSpread
        - Combo
        - Condor
        - CoveredCall
        - CoveredPut
        - Custom
        - Diagonal
        - Gut
        - IronButterfly
        - IronCondor
        - PutCallSpread
        - RiskReversal
        - Straddle
        - Strangle
        - Synthetic
        - UnkownStrategyType
        - Vertical
      type: string
      x-enum-descriptions:
        Custom: User defined custom strategy.
        CoveredPut: The selling of a put option while being short an equivalent amount in the underlier
        CoveredCall: The selling of a call option while simultaneously holding an equivalent position in the underlier.
        PutCallSpread: "A call spread (also called a bull spread) comprises a long call at one strike price and a short call at a higher strike price. Both options are for the same expiration. A call spread is an inexpensive alternative to simply buying a call.\r\n            It has limited upside potential, but income from selling the high-strike call offsets the cost of purchasing the low-strike call."
        Vertical: 'A vertical spread has two legs. One is buy and one is sell with same expiration date, but with different strike prices.'
        BackRatio: 'Consists of two options, of same type and expiry, but with different amounts and strike prices.'
        Diagonal: 'A diagonal spread is two options of the same type, one buy and one sell, but with different expiry times and different strike prices. Essentially a combination of a Vertical and Calendar spread.'
        Condor: 'A condor strategy leverages four options with same expiry. A buy and a sell in the money, and a buy and a sell out of the money. Can also be characterized as two call spreads.'
        Butterfly: 'Non directional strategy that combines legs of same expiry, but with varying amounts and strike prices.'
        IronButterfly: Two overlapping vertical spreads. One of the verticals is on the call side and one is on the put side.
        IronCondor: A combined put and call spread with same expiration but varying different strikes.
        Straddle: 'Two legs, a call and a put with the same strike price and same expiration date.'
        Strangle: 'Two legs, a call and a put with the different strike prices, but same expiration date.'
        RiskReversal: 'One leg is an OTM put, the other leg is an OTM call.'
        CalendarSpread: 'A calendar spread is a long-short position is two calls or two puts. Both options have the same strike, but they have different expirations.'
        Gut: 'Buy a call and then buy a put at a higher strike price, Sell a call and then sell a put at higher strike price. 1:1 ratio'
        Synthetic: 'Buy a call, sell a put at the same strike. Sell a call, buy a put at the same strike. 1:1 ratio'
        Combo: 'Sell call, buy put at lower strike. Buy call, Sell put at lower strike (1:1 ratio).'
        UnkownStrategyType: Unknwon Strategy Type.
    ContractOptionStrategyNullable:
      $ref: '#/components/schemas/ContractOptionStrategy'
    ContractOptionTradingConditions:
      type: object
      properties:
        AccountCurrency:
          title: 'Currency of the selected account, used when listing currency conversion fees for the selected instrument back to the account currency.'
          type: string
        AssetType:
          title: Asset Type
          allOf:
            - $ref: '#/components/schemas/AssetType'
        CarryingCost:
          title: 'For instruments where carrying costs are applied (futures, Exchange traded options) , the percentage markup on the intebank interest rate applied for holding the position.'
          allOf:
            - $ref: '#/components/schemas/Models.CarryingCost'
        CommissionLimits:
          title: The commission structure for the selected instrument.
          type: array
          items:
            $ref: '#/components/schemas/CommissionLimit'
        CurrencyCutSpreadRate:
          title: Custody fee per year for holding cash positions.
          type: number
        ExchangeFeeRules:
          title: Exchange fee rules if applied separately.
          type: array
          items:
            $ref: '#/components/schemas/ExchangeFeeRules'
        ExchangeFees:
          title: "SaxoInternal - Exchange fee if applied separately.\r\n            Note: Use ExchangeFeeRules, as ExchangeFees is going to be decommissioned."
          type: array
          items:
            $ref: '#/components/schemas/OptionRootExchangeFee'
          deprecated: true
          x-deprecated-date: '2022-01-01'
          x-network-visibility: internal
        ExerciseCutOffTime:
          title: The last time the option can be traded.
          type: string
        ExerciseCutoffTime:
          title: "SaxoInternal - The last time the option can be traded.\r\n            Note : Use ExerciseCutOffTime, as ExerciseCutoffTime is going to be decommissioned."
          type: string
          format: date-time
          deprecated: true
          x-deprecated-date: '2022-01-01'
          x-network-visibility: internal
          x-type-name: UtcDateTime
        ExpirationTime:
          title: The last time on the expiry date the option can be traded.
          type: string
        ExpiryTime:
          title: "SaxoInternal - The last time on the expiry date the option can be traded.\r\n            Note : Use ExpirationTime, as ExpiryTime is going to be decommissioned."
          type: string
          format: date-time
          deprecated: true
          x-deprecated-date: '2022-01-01'
          x-network-visibility: internal
          x-type-name: UtcDateTime
        ExposureLimits:
          title: The maximum allowed exposure to the instrument.
          type: array
          items:
            $ref: '#/components/schemas/Exposure'
        FinanceInterestMarkUp:
          title: Finance interest markup.
          type: number
        HoldingFee:
          title: Holding fee if applied.
          allOf:
            - $ref: '#/components/schemas/Models.HoldingFee'
        InstrumentCurrency:
          title: Instrument Currency.
          type: string
        IsTradable:
          title: Indicates whether the instrument is currently tradable.
          type: boolean
        LoanInterestCharge:
          title: Interest Charged when MarginLending is used
          type: number
        MarginRequirement:
          title: The margin requirement for the contract option
          allOf:
            - $ref: '#/components/schemas/ContractOptionRootMarginRequirement'
        PortfolioBasedMargin:
          title: Portfolio based margin
          allOf:
            - $ref: '#/components/schemas/PortfolioBasedMargin'
        Rating:
          title: Risk Rating.
          type: number
        SettlementStyle:
          title: "An option is either cash settled or settled with a position in the underlying asset. \r\n            This value indicates what the behavior of the specific option is."
          allOf:
            - $ref: '#/components/schemas/SettlementStyleNullable'
        SwapInterestMarkUp:
          title: Swap interest markup
          type: number
        Taxes:
          title: (Requires License) List of taxes applied.
          type: array
          items:
            $ref: '#/components/schemas/Models.Tax'
        Uic:
          title: Instrument unique identifier
          type: integer
          format: int32
      additionalProperties: false
    ContractOptionTradingConditionsResponse:
      type: object
      properties:
        AccountCurrency:
          title: 'Currency of the selected account, used when listing currency conversion fees for the selected instrument back to the account currency.'
          type: string
        AssetType:
          title: Asset Type
          allOf:
            - $ref: '#/components/schemas/AssetType'
        CarryingCost:
          title: 'For instruments where carrying costs are applied (futures, Exchange traded options) , the percentage markup on the intebank interest rate applied for holding the position.'
          allOf:
            - $ref: '#/components/schemas/Models.CarryingCost'
        CommissionLimits:
          title: The commission structure for the selected instrument.
          type: array
          items:
            $ref: '#/components/schemas/CommissionLimit'
        CurrencyCutSpreadRate:
          title: Custody fee per year for holding cash positions.
          type: number
        ExchangeFeeRules:
          title: Exchange fee rules if applied separately.
          type: array
          items:
            $ref: '#/components/schemas/ExchangeFeeRules'
        ExchangeFees:
          title: "SaxoInternal - Exchange fee if applied separately.\r\n            Note: Use ExchangeFeeRules, as ExchangeFees is going to be decommissioned."
          type: array
          items:
            $ref: '#/components/schemas/OptionRootExchangeFee'
          deprecated: true
          x-deprecated-date: '2022-01-01'
          x-network-visibility: internal
        ExerciseCutOffTime:
          title: The last time the option can be traded.
          type: string
        ExerciseCutoffTime:
          title: "SaxoInternal - The last time the option can be traded.\r\n            Note : Use ExerciseCutOffTime, as ExerciseCutoffTime is going to be decommissioned."
          type: string
          format: date-time
          deprecated: true
          x-deprecated-date: '2022-01-01'
          x-network-visibility: internal
          x-type-name: UtcDateTime
        ExpirationTime:
          title: The last time on the expiry date the option can be traded.
          type: string
        ExpiryTime:
          title: "SaxoInternal - The last time on the expiry date the option can be traded.\r\n            Note : Use ExpirationTime, as ExpiryTime is going to be decommissioned."
          type: string
          format: date-time
          deprecated: true
          x-deprecated-date: '2022-01-01'
          x-network-visibility: internal
          x-type-name: UtcDateTime
        ExposureLimits:
          title: The maximum allowed exposure to the instrument.
          type: array
          items:
            $ref: '#/components/schemas/Exposure'
        FinanceInterestMarkUp:
          title: Finance interest markup.
          type: number
        HoldingFee:
          title: Holding fee if applied.
          allOf:
            - $ref: '#/components/schemas/Models.HoldingFee'
        InstrumentCurrency:
          title: Instrument Currency.
          type: string
        IsTradable:
          title: Indicates whether the instrument is currently tradable.
          type: boolean
        LoanInterestCharge:
          title: Interest Charged when MarginLending is used
          type: number
        MarginRequirement:
          title: The margin requirement for the contract option
          allOf:
            - $ref: '#/components/schemas/ContractOptionRootMarginRequirement'
        PortfolioBasedMargin:
          title: Portfolio based margin
          allOf:
            - $ref: '#/components/schemas/PortfolioBasedMargin'
        Rating:
          title: Risk Rating.
          type: number
        ScheduledContractOptionTradingConditions:
          title: Scheduled Trading Conditions for Contract Options
          type: array
          items:
            $ref: '#/components/schemas/ScheduledContractOptionTradingCondition'
        SettlementStyle:
          title: "An option is either cash settled or settled with a position in the underlying asset. \r\n            This value indicates what the behavior of the specific option is."
          allOf:
            - $ref: '#/components/schemas/SettlementStyleNullable'
        SwapInterestMarkUp:
          title: Swap interest markup
          type: number
        Taxes:
          title: (Requires License) List of taxes applied.
          type: array
          items:
            $ref: '#/components/schemas/Models.Tax'
        Uic:
          title: Instrument unique identifier
          type: integer
          format: int32
      additionalProperties: false
    ContractType:
      title: Contract Types
      enum:
        - Broker
        - Corporate
        - FinancialClient
        - IB
        - IB_IO
        - IB_POA
        - JointAccount
        - LocalAssetSolution
        - ManagedFund
        - MoneyManager
        - PrimeBrokerClient
        - Private
        - Reference
        - ReferringAgent
        - WhiteLabelClient
      type: string
      x-enum-descriptions:
        Private: Private
        Corporate: Corporate
        FinancialClient: Financial Client
        WhiteLabelClient: White Label Client
        IB_IO: IB-IO
        IB_POA: IB-POA
        PrimeBrokerClient: Prime Broker Client
        ReferringAgent: ReferringAgent
        Broker: Broker
        Reference: Saxo Reference
        IB: Saxo IB
        JointAccount: Joint Account
        LocalAssetSolution: Local Asset Solution
        MoneyManager: Money Manager
        ManagedFund: Managed Fund
    ContractTypeNullable:
      $ref: '#/components/schemas/ContractType'
    ContractualSolution:
      title: Contractual Solution
      type: object
      properties:
        Key:
          title: Key
          type: string
        Value:
          title: Value
          type: string
      additionalProperties: false
    ConversionCost:
      title: Conversion Cost
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    ConversionRateResponse:
      title: The validation response
      type: object
      properties:
        ConversionRate:
          title: The conversion rate
          type: number
      additionalProperties: false
    Cost:
      type: object
      properties:
        BuySell:
          title: The value indicates what side of a trade the cost applies to.
          allOf:
            - $ref: '#/components/schemas/BuySellNullable'
        Currency:
          title: Cost currency (also the Price currency of instrument).
          type: string
        FundCost:
          title: "Fund cost are cost charged by a fund, but not booked by Saxo. \r\n            They are simply running costs at the fund’s end for holding a position in the fund."
          allOf:
            - $ref: '#/components/schemas/FundCost'
        HoldingCost:
          title: Holding cost
          allOf:
            - $ref: '#/components/schemas/HoldingCost'
        TotalCost:
          title: Total cost
          type: number
        TotalCostPct:
          title: Total cost in percentage.
          type: number
        TradingCost:
          title: Trading cost
          allOf:
            - $ref: '#/components/schemas/TradingCost'
        TrailingCommission:
          title: Commission paid from the fund to Saxo.
          allOf:
            - $ref: '#/components/schemas/TrailingCommission'
      additionalProperties: false
    CostAssumption:
      title: Enum CostAssumption
      enum:
        - AtmStrikePrice
        - BasisOnLastClosePrice
        - BasisOnMidPrice
        - CarryingCostBasedOnMarginOtmDiscount
        - ConversionCostNotIncluded
        - DefaultCallOption
        - EquivalentOpenAndClosePrice
        - IncludesOpenAndCloseCost
        - InterbankChargesExcluded
        - NearDateSpotFarDateAsSpecified
      type: string
      x-enum-descriptions:
        IncludesOpenAndCloseCost: Includes open and close cost
        EquivalentOpenAndClosePrice: Open and Closed price are same
        BasisOnLastClosePrice: Basis on Last close price
        BasisOnMidPrice: Basis on Mid price
        InterbankChargesExcluded: 'Interbank Interest rate = 0, only the markup is included'
        DefaultCallOption: Default Call option
        AtmStrikePrice: Atm Strike price is used
        ConversionCostNotIncluded: Conversion cost not included
        NearDateSpotFarDateAsSpecified: 'Near date is spot, far date is as specified'
        CarryingCostBasedOnMarginOtmDiscount: Carrying cost estimation is based on 'Margin ex. OTM discount'
    CostClass:
      title: The cost class.
      enum:
        - AncillaryCosts
        - IncidentalCosts
        - NotAssigned
        - OneOffCosts
        - OngoingCosts
        - ThirdPartyPayments
        - TransactionCosts
      type: string
    CostSubClass:
      title: The cost sub class.
      enum:
        - NotAssigned
        - ProductCosts
        - ServiceCosts
        - ThirdpartyPayments
      type: string
    Country:
      title: Country detail
      type: object
      properties:
        CountryId:
          title: Country Id
          type: integer
          format: int32
        IsoCode:
          title: Country ISO Code
          type: string
        Name:
          title: Country
          type: string
      additionalProperties: false
    CouponFrequency:
      title: Coupon Frequency
      enum:
        - Annual
        - BiMonthly
        - Daily
        - Every182Days
        - Every28Days
        - Every2Years
        - Every3Years
        - Every4Months
        - Every4Years
        - Every52Weeks
        - Every5Years
        - Every6Years
        - Every7Years
        - Every84Days
        - Every91Days
        - Every9Months
        - FrequencyEnd
        - Monthly
        - None
        - Quarterly
        - SemiAnnual
        - Weekly
      type: string
      x-enum-descriptions:
        Annual: Annual
        Monthly: Monthly
        SemiAnnual: Semi annual
        Every28Days: Every 28 days
        Every2Years: Every 2 years
        Every4Months: Every 4 months
        Every3Years: Every 3 years
        Quarterly: Quarterly
        Every4Years: Every 4 years
        Weekly: Weekly
        Every5Years: Every 5 years
        BiMonthly: Bi monthly
        Every6Years: Every 6 years
        Every7Years: Every 7 years
        Every84Days: Every 84 days
        Every91Days: Every 91 days
        Every9Months: Every 9 months
        Daily: Daily
        Every52Weeks: Every 52 weeks
        Every182Days: Every 182 days
        FrequencyEnd: Frequency End
        None: None
    CouponFrequencyNullable:
      $ref: '#/components/schemas/CouponFrequency'
    CreateCaseCommand:
      title: Describes the request to create a new support case
      required:
        - CaseTitle
      type: object
      properties:
        CaseTitle:
          title: The title of the case
          type: string
        Description:
          title: The decription of the case
          type: string
        InternalCase:
          title: Indicates if this case is internal
          type: boolean
        NotifyClient:
          title: Whether to notify the client
          type: boolean
        SubjectId:
          title: The id of the subject to which the new case belongs
          type: string
      additionalProperties: false
    CreateCaseRequest:
      title: Request contract to create a new case
      required:
        - ClientKey
        - CaseTitle
      type: object
      properties:
        CaseTitle:
          title: Title of the case
          type: string
        ClientKey:
          title: Identifies the client for whom case has to be created
          minLength: 1
          type: string
          x-type-name: ClientKey
        Description:
          title: Description of case
          type: string
        NotifyClient:
          title: Whether to notify client
          type: boolean
        ShowInPortal:
          title: Indicates if this case is available in portal
          type: boolean
      additionalProperties: false
    CreateCaseResponse:
      title: Create case response
      type: object
      properties:
        CaseId:
          title: Case Id
          type: string
      additionalProperties: false
    CreateInternalCommentRequest:
      title: Create internal comment request
      required:
        - Comment
      type: object
      properties:
        Comment:
          title: Internal Comment
          type: string
      additionalProperties: false
    CreateNoteCommand:
      title: Add note to exisiting case.
      required:
        - Note
        - Title
      type: object
      properties:
        CaseId:
          type: string
        ClientId:
          type: string
        CreatedDate:
          title: The creation date
          type: string
        Note:
          title: The body or description of the note
          type: string
        Title:
          title: The title of the note
          type: string
      additionalProperties: false
    CreateNoteRequest:
      title: Request to create a note in a support case
      type: object
      properties:
        Attachment:
          title: Attachment of note
          allOf:
            - $ref: '#/components/schemas/File'
        Note:
          title: Note
          type: string
        Title:
          title: Title of note
          type: string
      additionalProperties: false
    CreditCard.Country:
      title: Country
      type: object
      properties:
        CountryCode:
          title: ISO 3166-1 Country code
          type: string
        CountryName:
          title: Country name
          type: string
      additionalProperties: false
    CreditCardErrorCode:
      enum:
        - NotFound
      type: string
      x-enum-descriptions:
        NotFound: Definition Id not found.
    CreditCardLogo:
      type: object
      properties:
        ContentType:
          title: Content Type of logo file
          type: string
        Data:
          title: Data of logo file in base64 format
          type: string
        DefinitionId:
          title: Unique id to identify type of card
          type: integer
          format: int32
        ErrorResponse:
          title: Error response
          allOf:
            - $ref: '#/components/schemas/ErrorInfo'
        Height:
          title: Height of image
          type: number
        Width:
          title: Width of Image
          type: number
      additionalProperties: false
    CurrencyDetails:
      title: Represents a currency.
      type: object
      properties:
        CurrencyCode:
          title: The currency's ISO 3166-1 code.
          type: string
        Decimals:
          title: Number of decimals used in minor currency.
          type: integer
          format: int32
      additionalProperties: false
    CurrencyDetailsListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyDetails'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    CurrentPlan:
      title: Current Client Plan
      type: object
      properties:
        Id:
          title: Plan Id
          type: string
        Name:
          title: Plan Name
          type: string
      additionalProperties: false
    CustodyFee:
      title: Custody Fee
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Custody Fee Rule
          allOf:
            - $ref: '#/components/schemas/CustodyFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    CustodyFeeRule:
      type: object
      properties:
        Currency:
          title: Currency
          type: string
        Markup:
          title: Markup
          type: number
        MaxFee:
          title: Maximum monthly Custody fee that will be charged.
          type: number
        MinFee:
          title: Minimum monthly custody fee that will be charged.
          type: number
        Pct:
          title: Percentage
          type: number
        Value:
          title: Value
          type: number
      additionalProperties: false
    DealCapture:
      title: Deal capture information
      type: object
      properties:
        BrokerClientKey:
          title: Broker client key
          minLength: 1
          type: string
          x-type-name: ClientKey
        BrokerCommission:
          title: Broker commission
          type: number
        TradeDate:
          title: Trade Date
          type: string
          format: date
          x-type-name: Date
        ValueDate:
          title: Value Date
          type: string
          format: date
          x-type-name: Date
      additionalProperties: false
    DependencyInfo:
      title: 'Represents information about named dependency, component, or subsystem.'
      type: object
      properties:
        Events:
          title: The events related to the dependency.
          type: array
          items:
            $ref: '#/components/schemas/DependencyStatusEvent'
        Name:
          title: The unique name of the dependency.
          type: string
      additionalProperties: false
    DependencyStatusEvent:
      type: object
      properties:
        Message:
          title: A free-text message describing the event.
          type: string
          description: 'The message can indicate the type of failure, an exception message, or likewise.'
        Status:
          title: The dependency status after the event.
          allOf:
            - $ref: '#/components/schemas/DependencyStatusKind'
        Timestamp:
          type: string
          format: date-time
          x-type-name: UtcDateTime
      additionalProperties: false
    DependencyStatusKind:
      title: Represents different dependency statuses.
      enum:
        - Failed
        - Initializing
        - None
        - Ready
      type: string
      x-enum-descriptions:
        None: Indicates that no status has been set for a dependency.
        Initializing: Indicates a dependency is initializing.
        Ready: Indicates that a dependency has operational status.
        Failed: Indicates that a dependency is not operational.
    Disclaimer:
      title: The disclaimer
      type: object
      properties:
        LanguageCode:
          title: Language code
          type: string
        LocalizedText:
          title: Localized disclaimer text
          type: string
        ModuleId:
          title: ID of the module the specific disclaimer belongs to
          type: string
      additionalProperties: false
    DisclaimerListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Disclaimer'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    DiskDrive:
      title: 'Data contract for logical disk drives, including Total and Free disk space'
      type: object
      properties:
        DriveSize:
          title: DriveSize (in GB)
          type: integer
          format: int64
        FreeSpace:
          title: FreeSpace (in GB)
          type: integer
          format: int64
        LogicalDrive:
          title: LogicalDrive (e.g. C or D)
          type: string
        PercentUsed:
          title: PercentUsed
          type: integer
          format: int32
      additionalProperties: false
    DisplayHintType:
      title: Display Hint Type.
      enum:
        - Continuous
        - CryptoCurrencies
        - Etc
        - Etf
        - Etn
        - Forex
        - Fund
        - Interests
        - None
        - PreciousMetal
        - Rights
        - StockIndices
        - Warrant
      type: string
      x-enum-descriptions:
        None: Indicates not special display hint is required.
        PreciousMetal: Metals like XAUUSD.
        Continuous: Used for the parent ContractFutures.
        Etf: Exchange Traded Funds.
        Etn: Exchange Traded Notes.
        Etc: Exchange Traded Certificates/Currencies.
        Rights: Rights.
        Warrant: Warrants.
        Forex: Forex. Intended to be used for Cfds on Futures on Forex.
        Interests: Interest rates. Intended to be used for Cfds on Futures on bonds.
        StockIndices: Stock indices. Intended to be used for Cfds on Futures on stock indices.
        Fund: Fund.
        CryptoCurrencies: Crypto currencies.
    DisplayHintTypeNullable:
      $ref: '#/components/schemas/DisplayHintType'
    DisplayType:
      title: Determines the way UI control should behave.
      enum:
        - Bool
        - DateTime
        - Document
        - HorizontalSection
        - MultipleLinesOfText
        - SingleChoice
        - SingleLineOfText
        - VerticalSection
      type: string
      x-enum-descriptions:
        SingleChoice: Single choice control
        Bool: Boolean control
        DateTime: Date and time control
        SingleLineOfText: SingleLine of text
        MultipleLinesOfText: MultipleLines of text
        HorizontalSection: Horizontal Section
        VerticalSection: Vertical Section
        Document: Document
    DocumentType:
      title: Document types available
      enum:
        - Articles_Memorandum
        - BeneficialOwnerInformation
        - CertificateOfGoodStanding
        - CertificateOfIncorporation
        - CertificateOfIncumbency
        - CorporateTranscript
        - DdNotesFromClient
        - Director_SignatoryInformation
        - IdPassport
        - OtherDdDocs
        - PEAInternalInstruction
        - PEATransferRequest
        - PEA_PMEInternalInstruction
        - PEA_PMETransferRequest
        - ProofOfResidence
        - SignedPEATransferRequest
        - SignedPEA_PMETransferRequest
        - SourceOfFundsDocument
        - TermsAndConditions
        - USTaxForm
      type: string
      x-enum-descriptions:
        Articles_Memorandum: Articles and memorandum
        BeneficialOwnerInformation: Beneficial owner information
        CertificateOfGoodStanding: Certificate of good standing
        CertificateOfIncorporation: Certificate of incorporation
        CertificateOfIncumbency: Certificate of incumbency
        CorporateTranscript: Corporate transcript
        Director_SignatoryInformation: Director/signatory information
        IdPassport: Proof of identity
        OtherDdDocs: Other DD docs(party)
        ProofOfResidence: Proof of residence
        SourceOfFundsDocument: Source of funds document
        TermsAndConditions: Terms and conditions
        USTaxForm: US tax form
        DdNotesFromClient: Dd notes from client
        PEATransferRequest: PEA transfer request
        PEA_PMETransferRequest: PEA-PME transfer request
        PEAInternalInstruction: PEA internal instruction
        PEA_PMEInternalInstruction: PEA-PME internal instruction
        SignedPEATransferRequest: Signed PEA transfer request
        SignedPEA_PMETransferRequest: Signed PEA-PME transfer request
    Domain.LocalizedInfo:
      title: Provides information about the localization.
      type: object
      properties:
        Key:
          title: Key identifier for the value.
          type: string
        Value:
          title: "A string value that represents the localized text. If the key is not found in specific language, it will be text of default language.\r\n            If the key is not found at all in localization resources, then key will be used in value itself."
          type: string
      additionalProperties: false
    Domain.OrderDuration:
      type: object
      properties:
        DurationType:
          title: The Order Type.
          allOf:
            - $ref: '#/components/schemas/OpenOrderDurationNullable'
        ExpirationDate:
          title: 'The ExpirationDate, if the Order Type is GTD.'
          type: string
          format: date-time
          x-type-name: UtcDateTime
        ExpirationDateContainsTime:
          title: 'In some instance, GTD orders are allowed to include an expiration time. This field indicates if the ExpirationDate can contain a time component.'
          type: boolean
      additionalProperties: false
    Domain.OrderSubStatus:
      title: The OrderSubStatus identifies the sub status of an order.
      enum:
        - Confirmed
        - Rejected
        - Requested
        - RouteRequestPending
        - RouteRequested
        - WaitCondition
      type: string
      x-enum-descriptions:
        Requested: Order request received by a client or dealer facing service.
        RouteRequested: Order request is routed to exchange/broker interface (a.k.a. STP server).
        RouteRequestPending: Order request is pending at exchange/broker.
        Confirmed: 'Order request is confirmed by the order manager, exchange or broker.'
        Rejected: 'Order request is rejected by client facing service, order manager or externally by exchange or broker.'
        WaitCondition: Order request is waiting to meet conditon
    EmailMappingResponse:
      title: Represents the email mapping for the customer in regards to the notification system
      type: object
      properties:
        Email:
          title: Email address
          type: string
        Identifier:
          title: Notification system identifier
          type: string
        Validated:
          title: Set to true if the email address has been validated.
          type: boolean
      additionalProperties: false
    EmailMappingResponseListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EmailMappingResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    EnrichedDataRequest:
      type: object
      properties:
        Bic:
          title: 'Bank indentifier code, can be string.empty'
          type: string
        ClearingCode:
          title: 'Clearing code, can be string.empty'
          type: string
        CountryCode:
          title: 'Country code, Mandatory in case of clearing code.'
          type: string
        CurrencyCode:
          title: Currency code
          type: string
        Iban:
          title: 'IBAN, can be string.empty'
          type: string
      additionalProperties: false
    EnrichmentResponse:
      type: object
      properties:
        Bic:
          title: BIC for given IBAN or Clearing code.
          type: string
        CountryCode:
          title: Country code.
          type: string
        ErrorText:
          title: Error detail text if something goes wrong or system is unable to enrich.
          type: string
        InstitutionAddress:
          title: Bank Address for given IBAN or Clearing code or BIC.
          type: string
        InstitutionName:
          title: Bank name for given IBAN or Clearing code or BIC.
          type: string
      additionalProperties: false
    EntryCost:
      title: Entry Cost
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    Enum.ClientType:
      title: Client type
      enum:
        - Client
        - House
      type: string
      x-enum-descriptions:
        House: House
        Client: Client
    Enum.ContractType:
      title: Contract Types
      enum:
        - Broker
        - Corporate
        - FinancialClient
        - IB
        - IB_IO
        - IB_POA
        - JointAccount
        - LocalAssetSolution
        - ManagedFund
        - MoneyManager
        - PrimeBrokerClient
        - Private
        - Reference
        - ReferringAgent
        - WhiteLabelClient
      type: string
      x-enum-descriptions:
        Private: Private
        Corporate: Corporate
        FinancialClient: Financial Client
        WhiteLabelClient: White Label Client
        IB_IO: IB-IO
        IB_POA: IB-POA
        PrimeBrokerClient: Prime Broker Client
        ReferringAgent: ReferringAgent
        Broker: Broker
        Reference: Saxo Reference
        IB: Saxo IB
        JointAccount: Joint Account
        LocalAssetSolution: Local Asset Solution
        MoneyManager: Money Manager
        ManagedFund: Managed Fund
    Enum.ContractTypeNullable:
      $ref: '#/components/schemas/Enum.ContractType'
    Enums.BuySell:
      title: 'Used to describe the direction of an order, action or trade.'
      enum:
        - Buy
        - Sell
      type: string
      x-enum-descriptions:
        Buy: Tax rule is applied on a buy.
        Sell: Tax rule is applied on a sell.
    Enums.BuySellNullable:
      $ref: '#/components/schemas/Enums.BuySell'
    ErrorInfo:
      type: object
      properties:
        ErrorCode:
          allOf:
            - $ref: '#/components/schemas/CreditCardErrorCode'
        Message:
          type: string
      additionalProperties: false
    ExchangeAssetTypes:
      type: object
      properties:
        AssetTypes:
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
        ExchangeId:
          type: string
      additionalProperties: false
    ExchangeFee:
      title: Exchange Fee
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    ExchangeFeeRules:
      title: Use to set configured exchange fee rule sets.
      type: object
      properties:
        Currency:
          title: Currency of fixed exchange fees
          type: string
        Maximum:
          title: Maxmimum fee value to be applied.
          type: number
        Minimum:
          title: Minimum fee value to be applied.
          type: number
        OrderAction:
          title: Determines the action basis which commission is applied.
          allOf:
            - $ref: '#/components/schemas/OrderActions'
        Type:
          title: Fee type.
          allOf:
            - $ref: '#/components/schemas/FeeTypes'
        Value:
          title: Fee value.
          type: number
      additionalProperties: false
    ExitCost:
      title: Exit Cost
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    Exposure:
      title: Exposure.
      type: object
      properties:
        Currency:
          title: Currency if the limit is a value.
          type: string
        Identifier:
          title: The exposure identifier.
          type: string
        Level:
          title: 'Value in number of units of the instrument (shares, lots, etc.).'
          allOf:
            - $ref: '#/components/schemas/ExposureLevel'
        RuleType:
          title: Exposure limit rule type.
          allOf:
            - $ref: '#/components/schemas/ExposureLimitRuleType'
        Value:
          title: The exposure value.
          type: number
      additionalProperties: false
    ExposureLevel:
      title: The ExposureLevel
      enum:
        - Asset
        - BaseContractGross
        - BaseContractNet
        - Currency
        - FxNOP
        - Instrument
        - Issuer
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: Unknown
        Currency: Exposure By Currency
        Instrument: Exposure By instrument
        Issuer: Exposure By issuer
        Asset: Exposure By asset
        BaseContractNet: Exposure By base contract net
        BaseContractGross: Exposure By base contract gross
        FxNOP: "FX Net Open Positions Value (combined negative \r\n            currency exposure across all currencies) the \r\n            client is limited to in a specified currency"
    ExposureLimitRuleType:
      title: Type of Rule
      enum:
        - Amount
        - Percentage
        - Value
      type: string
      x-enum-descriptions:
        Amount: Amount type
        Value: Value type
        Percentage: Percentage type
    Fee:
      title: Fee
      type: object
      properties:
        CurrencyCode:
          title: The currency of the Fee.
          type: string
        Value:
          title: Fee value.
          type: number
      additionalProperties: false
    FeeRule:
      title: Fee Rule.
      type: object
      properties:
        Currency:
          title: Custody fee currency.
          type: string
        FeePct:
          title: Custody fee as a percentage per year.
          type: number
        MaxValue:
          title: Commission applied only to trade amounts below this value.
          type: number
        MinValue:
          title: Commission applied only to trade amounts above this value.
          type: number
        Ordering:
          title: Ordering.
          type: integer
          format: int32
      additionalProperties: false
    FeeTypes:
      title: Exchange fee types
      enum:
        - Absolute
        - PerAction
        - PerLot
        - Percentage
      type: string
      x-enum-descriptions:
        Absolute: Absolute fee value
        PerLot: Per lot fee value.
        PerAction: Per action fee value.
        Percentage: Percentage fee value.
    Field:
      type: object
      properties:
        DisplayType:
          title: Determines the way UI control should behave.
          allOf:
            - $ref: '#/components/schemas/DisplayType'
        Name:
          title: Field information.
          allOf:
            - $ref: '#/components/schemas/FieldInfo'
        OptionSetKey:
          title: Option set key
          type: string
        Validations:
          title: Validations applied on field.
          type: array
          items:
            $ref: '#/components/schemas/ValidationConstraint'
        Value:
          title: Current value of the field. Use "ValueType" to determine the meaning of value.
          type: string
        ValueType:
          title: Determine how the "Value" and "OptionList" values be interpreted.
          allOf:
            - $ref: '#/components/schemas/ValueType'
      additionalProperties: false
    FieldData:
      title: Field details for update
      required:
        - Key
      type: object
      properties:
        Key:
          title: Represent the field identifier
          type: string
        Value:
          title: Represents the updated value from client.
          allOf:
            - $ref: '#/components/schemas/Object'
      additionalProperties: false
    FieldInfo:
      type: object
      properties:
        Key:
          title: Key identifier for the field name.
          type: string
        Value:
          title: Translated value for the Field display name
          type: string
      additionalProperties: false
    File:
      title: Attachment of note
      required:
        - FileName
        - MimeType
        - Data
      type: object
      properties:
        Data:
          title: Content or data of document in base64 format.
          type: string
        FileName:
          title: "File name\r\n            poa.pdf"
          type: string
        MimeType:
          title: Mime type
          type: string
      additionalProperties: false
    FileVersionInfo:
      type: object
      properties:
        Comments:
          type: string
        CompanyName:
          type: string
        FileBuildPart:
          type: integer
          format: int32
        FileDescription:
          type: string
        FileMajorPart:
          type: integer
          format: int32
        FileMinorPart:
          type: integer
          format: int32
        FileName:
          type: string
        FilePrivatePart:
          type: integer
          format: int32
        FileVersion:
          type: string
        InternalName:
          type: string
        IsDebug:
          type: boolean
        IsPatched:
          type: boolean
        IsPreRelease:
          type: boolean
        IsPrivateBuild:
          type: boolean
        IsSpecialBuild:
          type: boolean
        Language:
          type: string
        LegalCopyright:
          type: string
        LegalTrademarks:
          type: string
        OriginalFilename:
          type: string
        PrivateBuild:
          type: string
        ProductBuildPart:
          type: integer
          format: int32
        ProductMajorPart:
          type: integer
          format: int32
        ProductMinorPart:
          type: integer
          format: int32
        ProductName:
          type: string
        ProductPrivatePart:
          type: integer
          format: int32
        ProductVersion:
          type: string
        SpecialBuild:
          type: string
      additionalProperties: false
    Financing:
      title: Instrument financing conditions
      type: object
      properties:
        AskMarkUp:
          title: Percentage markup per year added to the Interbank interest rate for buy positions.
          type: number
        BidMarkDown:
          title: Percentage markup per year added to the Interbank interest rate for sell positions.
          type: number
        FixedRateAsk:
          title: A fixed financing rate for long positions.
          type: number
        FixedRateBid:
          title: A fixed financing rate for short positions.
          type: number
        InterbankRate:
          title: The interbank rate.
          allOf:
            - $ref: '#/components/schemas/InterbankRate'
      additionalProperties: false
    FinancingInterest:
      type: object
      properties:
        AskRate:
          title: OBSOLETE. Please use InterbankRate instead. This field will be removed from April 2022.
          type: number
          deprecated: true
          x-network-visibility: internal
        BidRate:
          title: OBSOLETE. Please use InterbankRate instead. This field will be removed from April 2022.
          type: number
          deprecated: true
          x-network-visibility: internal
        InterbankRate:
          title: The interbank rate.
          allOf:
            - $ref: '#/components/schemas/InterbankRate'
        Markup:
          title: Financing interest markup.
          type: number
        TradeDate:
          title: OBSOLETE. Please use InterbankRate instead. This field will be removed from April 2022.
          type: string
          format: date
          deprecated: true
          x-network-visibility: internal
          x-type-name: Date
      additionalProperties: false
    ForexPriceBand:
      title: Priceband information
      type: object
      properties:
        AutoExecuteEnabled:
          title: Indicates if autoexecute is enabled.
          type: boolean
        AutoQuoteEnabled:
          title: Indicates if autoquote is enabled
          type: boolean
        DisplayDecimals:
          title: The number of decimals used for display.
          type: integer
          format: int32
        MaxBand:
          title: The Maximum Band.
          type: number
        MinBand:
          title: The Minimum Band.
          type: number
        Spread:
          title: The spread.
          type: number
        SpreadType:
          title: The spread type.
          allOf:
            - $ref: '#/components/schemas/SpreadTypes'
        UpperBandLimit:
          title: The upper trade limit where the spread applies.
          type: number
      additionalProperties: false
    FundCost:
      title: Fund Cost.
      type: object
      properties:
        EntryCost:
          title: Commission paid for buying a fund.
          allOf:
            - $ref: '#/components/schemas/EntryCost'
        ExitCost:
          title: Commission paid for selling a fund.
          allOf:
            - $ref: '#/components/schemas/ExitCost'
        OnGoingCost:
          title: Fee paid for holding a position in a fund.
          allOf:
            - $ref: '#/components/schemas/OnGoingCost'
        SwitchCommission:
          title: Commission paid for a switch trade between two mutual funds.
          allOf:
            - $ref: '#/components/schemas/SwitchCommission'
      additionalProperties: false
    FundingSchedule:
      title: Funding schedule
      enum:
        - Annual
        - Lifetime
        - None
      type: string
      x-enum-descriptions:
        None: None
        Annual: Annual
        Lifetime: Lifetime
    GetCaseResponse:
      title: Get case response
      type: object
      properties:
        Case:
          title: Case details
          allOf:
            - $ref: '#/components/schemas/CaseDetails'
      additionalProperties: false
    HistoricDataRequest:
      title: The historic data request.
      required:
        - ClientKey
      type: object
      properties:
        AccountGroupKey:
          title: The key of the account group to which the resource belongs.
          minLength: 1
          type: string
          x-type-name: AccountGroupKey
        AccountKey:
          title: The key of the account to which the resource belongs.
          minLength: 1
          type: string
          x-type-name: AccountKey
        ClientKey:
          title: The key of the client to which the resource belongs.
          minLength: 1
          type: string
          x-type-name: ClientKey
      additionalProperties: false
    HoldingCost:
      title: Holding Cost.
      type: object
      properties:
        BorrowingCost:
          title: The borrowing costs as a percentage per year for holding short positions in single-stock CFDs.
          allOf:
            - $ref: '#/components/schemas/BorrowingCost'
        CarryingCost:
          title: 'For instruments where carrying costs are applied (futures, exchange traded options) , the percentage markup on the intebank interest rate applied for holding the position.'
          allOf:
            - $ref: '#/components/schemas/CarryingCost'
        HoldingFee:
          title: Holding fee if applied.
          allOf:
            - $ref: '#/components/schemas/HoldingFee'
        InterestFee:
          title: Interest for SRDs
          allOf:
            - $ref: '#/components/schemas/InterestFee'
        LoanInterestCost:
          title: Loan interest cost
          allOf:
            - $ref: '#/components/schemas/LoanInterestCost'
        OvernightFinancing:
          title: Financing charge markup.
          allOf:
            - $ref: '#/components/schemas/OvernightFinancing'
        RolloverFee:
          title: Rollover fee for SRDs - Charged if position is rolled over
          allOf:
            - $ref: '#/components/schemas/RolloverFee'
        SwapPoints:
          title: The swap points.
          allOf:
            - $ref: '#/components/schemas/SwapPoints'
        Tax:
          title: List of taxes applied.
          type: array
          items:
            $ref: '#/components/schemas/Tax'
        TomNext:
          title: OBSOLETE. Please use SwapPoints instead. This field will be removed from June 2022.
          allOf:
            - $ref: '#/components/schemas/TomNext'
          deprecated: true
          x-deprecated-date: '2022-06-01'
      additionalProperties: false
    HoldingFee:
      title: Holding Fee
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    HttpContent:
      type: object
      properties:
        Headers:
          type: array
          items:
            $ref: '#/components/schemas/StringIEnumerableKeyValuePair'
      additionalProperties: false
    HttpMethod:
      type: object
      properties:
        Delete:
          allOf:
            - $ref: '#/components/schemas/HttpMethod'
        Get:
          allOf:
            - $ref: '#/components/schemas/HttpMethod'
        Head:
          allOf:
            - $ref: '#/components/schemas/HttpMethod'
        Method:
          type: string
        Options:
          allOf:
            - $ref: '#/components/schemas/HttpMethod'
        Post:
          allOf:
            - $ref: '#/components/schemas/HttpMethod'
        Put:
          allOf:
            - $ref: '#/components/schemas/HttpMethod'
        Trace:
          allOf:
            - $ref: '#/components/schemas/HttpMethod'
      additionalProperties: false
    HttpRequestMessage:
      type: object
      properties:
        Content:
          allOf:
            - $ref: '#/components/schemas/HttpContent'
        Headers:
          type: array
          items:
            $ref: '#/components/schemas/StringIEnumerableKeyValuePair'
        Method:
          allOf:
            - $ref: '#/components/schemas/HttpMethod'
        Properties:
          type: array
          items:
            $ref: '#/components/schemas/StringObjectKeyValuePair'
        RequestUri:
          type: string
        Version:
          allOf:
            - $ref: '#/components/schemas/Version'
      additionalProperties: false
    HttpResponseMessage:
      type: object
      properties:
        Content:
          allOf:
            - $ref: '#/components/schemas/HttpContent'
        Headers:
          type: array
          items:
            $ref: '#/components/schemas/StringIEnumerableKeyValuePair'
        IsSuccessStatusCode:
          type: boolean
        ReasonPhrase:
          type: string
        RequestMessage:
          allOf:
            - $ref: '#/components/schemas/HttpRequestMessage'
        StatusCode:
          allOf:
            - $ref: '#/components/schemas/HttpStatusCode'
        Version:
          allOf:
            - $ref: '#/components/schemas/Version'
      additionalProperties: false
    HttpStatusCode:
      enum:
        - Accepted
        - Ambiguous
        - BadGateway
        - BadRequest
        - Conflict
        - Continue
        - Created
        - ExpectationFailed
        - Forbidden
        - Found
        - GatewayTimeout
        - Gone
        - HttpVersionNotSupported
        - InternalServerError
        - LengthRequired
        - MethodNotAllowed
        - Moved
        - MovedPermanently
        - MultipleChoices
        - NoContent
        - NonAuthoritativeInformation
        - NotAcceptable
        - NotFound
        - NotImplemented
        - NotModified
        - OK
        - PartialContent
        - PaymentRequired
        - PreconditionFailed
        - ProxyAuthenticationRequired
        - Redirect
        - RedirectKeepVerb
        - RedirectMethod
        - RequestEntityTooLarge
        - RequestTimeout
        - RequestUriTooLong
        - RequestedRangeNotSatisfiable
        - ResetContent
        - SeeOther
        - ServiceUnavailable
        - SwitchingProtocols
        - TemporaryRedirect
        - Unauthorized
        - UnsupportedMediaType
        - Unused
        - UpgradeRequired
        - UseProxy
      type: string
    IServiceCustomization:
      title: Information about how the services has been customized primarily through OpenApiStartup settings.
      type: object
      properties:
        Customizations:
          title: Gets the customizations.
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
      additionalProperties: false
    IbanAccount:
      type: object
      properties:
        AccountId:
          title: AccountId
          type: string
        Iban:
          title: The IBAN
          type: string
      additionalProperties: false
    IbanAccountListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/IbanAccount'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    IndicativeSpread:
      title: Indicative spread
      type: object
      properties:
        CalculationTime:
          title: The time of calculation
          type: string
          format: date-time
          x-type-name: UtcDateTime
        PipSize:
          title: The Pip Size
          type: number
        Tenors:
          title: The tenors available
          type: array
          items:
            $ref: '#/components/schemas/Tenor'
      additionalProperties: false
    InstrumentDetail:
      type: object
      properties:
        Currency:
          title: Currency
          type: string
        Description:
          title: Description
          type: string
        Exchange:
          title: Exchange
          type: string
        ExchangeText:
          title: ExchangeText
          type: string
        InstrumentSymbolCode:
          title: InstrumentSymbolCode
          type: string
        IsinCode:
          title: IsinCode
          type: string
        Price:
          title: Price
          type: number
        PurchaseDate:
          title: PurchaseDate
          type: string
          format: date
          x-type-name: Date
        Quantity:
          title: Quantity
          type: number
        Uic:
          title: Instrument Uic
          type: string
      additionalProperties: false
    InstrumentDetails:
      title: Instrument details
      type: object
      properties:
        AmountCurrency:
          title: Currency of the amount being listed.
          type: string
        AssetType:
          title: Asset type
          allOf:
            - $ref: '#/components/schemas/AssetType'
        ExerciseCutOffTime:
          title: The last time the option can be traded
          type: string
        ExpirationTime:
          title: The last time on the expiry date the option can be traded.
          type: string
        ExpiryDateTime:
          title: 'The moment that the instrument expires, specified in UTC time.'
          type: string
          format: date-time
          x-type-name: UtcDateTime
        InstrumentCurrency:
          title: Symbol currency
          type: string
        InstrumentSubType:
          title: Instrument sub type
          allOf:
            - $ref: '#/components/schemas/DisplayHintType'
        InstrumentSymbol:
          title: Symbol
          type: string
        IsShortTraded:
          title: Indicates if the instrument is short traded.
          type: boolean
        MaxAutoTradeSize:
          title: Maximum auto trade size
          type: number
        MaxStreamingAmountFarDate:
          title: Max streaming amount far date
          type: number
        MaxStreamingAmountNearDate:
          title: Max streaming amount near date
          type: number
        MinOrderSize:
          title: Min order size
          type: number
        MinOrderSizeCurrency:
          title: Min order size currency
          type: string
        MinimumLotSize:
          title: The minimum number of items of the instrument to buy.
          type: number
        MutualFund:
          title: Mutual fund details
          allOf:
            - $ref: '#/components/schemas/MutualFund'
        TradingDetails:
          title: Commission group data based on commission group id
          type: array
          items:
            $ref: '#/components/schemas/TradingDetail'
        TradingHour:
          title: Trading hour details
          allOf:
            - $ref: '#/components/schemas/InstrumentTradeSessions'
        Uic:
          title: Instrument Id
          type: integer
          format: int32
      additionalProperties: false
    InstrumentDetailsListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/InstrumentDetails'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    InstrumentDisplayAndFormat:
      title: 'Public data contract containing information about the instrument of a position, which is useful for display and formatting.'
      type: object
      properties:
        BarrierDecimals:
          title: Optional separate display information for option barrier prices
          type: integer
          format: int32
        BarrierFormat:
          title: Optional separate display information for option barrier prices
          allOf:
            - $ref: '#/components/schemas/PriceDisplayFormatTypeNullable'
        Currency:
          title: The ISO currency code of the instrument.
          type: string
        Decimals:
          title: "The resolution in which e.g. a price must be displayed and possibly edited.\r\n            Positive numbers are represents digits, and negative numbers represent fractions using this formula: 1/(2^x)."
          type: integer
          description: 'Decimals and DisplayDecimals have the same value. Moving forward, DisplayDecimals will be removed.'
          format: int32
        Description:
          title: 'Description of instrument (DAX Index - Nov 2013), in English.'
          type: string
        DisplayHint:
          title: Hint to the client application about how it should display the instrument.
          allOf:
            - $ref: '#/components/schemas/DisplayHintTypeNullable'
        Format:
          title: Format code specifying how price should be formatted.
          allOf:
            - $ref: '#/components/schemas/PriceDisplayFormatTypeNullable'
        NumeratorDecimals:
          title: 'Some fractional prices have decimals in the numerator, e.g. 2.5/32.  This is relevant for futures and cfds on futures.'
          type: integer
          format: int32
        OrderDecimals:
          title: The number of decimals trigger price for orders should be formatted with.
          type: integer
          format: int32
        StrikeDecimals:
          title: Optional separate display information for option strike prices
          type: integer
          format: int32
        StrikeFormat:
          title: Optional separate display information for option strike prices
          allOf:
            - $ref: '#/components/schemas/PriceDisplayFormatTypeNullable'
        Symbol:
          title: Symbol- A combination of letters used to uniquely identify a traded instrument. e.g. ODAX/X13C8950:xeur.
          type: string
      additionalProperties: false
    InstrumentMarginRequirement:
      type: object
      properties:
        Currency:
          title: Margin Currency
          type: string
        ExtraWeek:
          title: Extra Week Margin Requirement
          type: number
        Initial:
          title: Intial Margin Requirement
          type: number
        IntraWeek:
          title: Intra Week Margin Requirement
          type: number
        MarginType:
          title: Margin Requirement Type
          allOf:
            - $ref: '#/components/schemas/MarginType'
      additionalProperties: false
    InstrumentSession:
      title: Instrument session
      type: object
      properties:
        EndTime:
          title: UTC date and time of when the state ends
          type: string
          format: date-time
          x-type-name: UtcDateTime
        InstrumentSessionState:
          title: Gets the  for the specied  and
          allOf:
            - $ref: '#/components/schemas/InstrumentSessionState'
        StartTime:
          title: UTC date and time of when the state starts
          type: string
          format: date-time
          x-type-name: UtcDateTime
      additionalProperties: false
    InstrumentSessionState:
      title: The different states an instrument session can have
      enum:
        - Auction
        - AutomatedTrading
        - Break
        - CallAuctionTrading
        - Closed
        - Halt
        - PitTrading
        - PostAutomatedTrading
        - PostTrading
        - PreAutomatedTrading
        - PreTrading
        - Suspended
        - Undefined
      type: string
      x-enum-descriptions:
        Undefined: The state of the Exchange is unknown
        AutomatedTrading: Normal trading
        Closed: Closed for trading
        CallAuctionTrading: "Participants place orders to buy or sell units at certain buying or selling prices.\r\n            Orders collected during an auction are matched to form a contract"
        Break: Break in instrument opening hours
        PitTrading: Transactions are conducted in trading pits on the floor of the Exchange
        PostTrading: Extended trading session after normal opening hours
        PreTrading: Extended trading session before normal opening hours
        PostAutomatedTrading: Extended trading session after normal opening hours
        PreAutomatedTrading: Extended trading session before normal opening hours
        Suspended: Trading is suspended for an instrument
        Halt: Trading is halted for an instrument
        Auction: "Participants place orders to buy or sell units at certain buying or selling prices.\r\n            Orders collected during an auction are matched to form a contract"
    InstrumentTradeSessions:
      title: Represents instrument's trading sessions
      type: object
      properties:
        Sessions:
          title: Gets instrument's trade sessions
          type: array
          items:
            $ref: '#/components/schemas/InstrumentSession'
        TimeZone:
          title: Gets the time zone of the exchange an instrument is traded on.
          type: integer
          format: int32
        TimeZoneAbbreviation:
          title: Gets the time zone's abbreviation.
          type: string
        TimeZoneOffset:
          title: 'Gets the time zone offset, relative to UTC.'
          type: string
      additionalProperties: false
    IntentToInvest:
      enum:
        - _1000001_1500000_
        - _100001_200000_
        - _10001_50000_
        - _1500001_2000000_
        - _2000001_3000000_
        - _200001_300000_
        - _3000001_4000000_
        - _300001_400000_
        - _4000001_5000000_
        - _400001_500000_
        - _5000000_
        - _500001_750000_
        - _50001_100000_
        - _5000_
        - _5001_10000_
        - _750001_1000000_
      type: string
      x-enum-descriptions:
        _5000_: The 5000
        _5001_10000_: The 5001 10000
        _10001_50000_: The 10001 50000
        _50001_100000_: The 50001 100000
        _100001_200000_: The 100001 200000
        _200001_300000_: The 200001 300000
        _300001_400000_: The 300001 400000
        _400001_500000_: The 400001 500000
        _500001_750000_: The 500001 750000
        _750001_1000000_: The 750001 1000000
        _1000001_1500000_: The 1000001 1500000
        _1500001_2000000_: The 1500001 2000000
        _2000001_3000000_: The 2000001 3000000
        _3000001_4000000_: The 3000001 4000000
        _4000001_5000000_: The 4000001 5000000
        _5000000_: The 5000000
    InterbankRate:
      title: The Interbank rate
      type: object
      properties:
        AskRate:
          title: Ask rate for interbank.
          type: number
        BidRate:
          title: Bid rate for interbank.
          type: number
        TradeDate:
          title: Trade date.
          type: string
          format: date
          x-type-name: Date
      additionalProperties: false
    InterestFee:
      title: Interest fee (CRD)
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    InterestRule:
      title: Interest rule
      type: object
      properties:
        AccountCurrencyCode:
          title: The specific currency for which the rule applies or for any currency
          type: string
        CurrencyCode:
          title: The currency of Minimum Amount and Maximum Amount
          type: string
        InterestType:
          title: The interest type
          allOf:
            - $ref: '#/components/schemas/InterestType'
        MaxAmount:
          title: The maximum amount for which the rule apples to
          type: number
        MinAmount:
          title: The minimum amount for which the rule apples to
          type: number
        Rate:
          title: The Rate
          type: number
      additionalProperties: false
    InterestRuleListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/InterestRule'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    InterestType:
      title: Interest types
      enum:
        - Fixed
        - Floating
        - None
      type: string
      x-enum-descriptions:
        None: No clue
        Floating: Floating means that the provider interest rate is used +/- any markup as found in field Interest MarkUp. with floor setup in consideration.
        Fixed: Fixed means that the interest is taken from field Fixed Rate. It is a fixed interest  rate.
    IntermediaryBank:
      type: object
      properties:
        AccountNumber:
          title: Financial institution through which the transaction must pass to reach the account with institution.
          type: string
        Bic:
          title: Financial institution through which the transaction must pass to reach the account with institution.
          type: string
        ClearingCode:
          title: Financial institution through which the transaction must pass to reach the account with institution.
          type: string
      additionalProperties: false
    InternalComment:
      title: Internal comment in a case
      type: object
      properties:
        Comment:
          title: Internal comment
          type: string
        CreatedOn:
          title: DateTime of when the comment is created
          type: string
          format: date-time
          x-type-name: UtcDateTime
      additionalProperties: false
    InternalCosts:
      title: Internal Costs
      type: object
      properties:
        EligilbeForTraspaso:
          title: Indicates whether a given mutual fund can be used in a Spanish traspaso-trade for the purpose of deferring tax payment.
          type: boolean
        EntryCost:
          title: Indicates the entry cost.
          allOf:
            - $ref: '#/components/schemas/Models.EntryCost'
        ExitCost:
          title: Indicates the exit cost.
          allOf:
            - $ref: '#/components/schemas/Models.ExitCost'
        ManagementFeePct:
          title: Management fee paid for holding a position in a mutual fund.
          type: number
        OngoingCostCurrency:
          title: Currency of OnGoing cost.
          type: string
        OngoingCostPct:
          title: (Requires License) Fee paid for holding a position in a fund.
          type: number
        OngoingCostPerUnit:
          title: Fee paid per unit for holding a position in a fund.
          type: number
        SwitchCommissionPct:
          title: Commission paid for a switch trade between two mutual funds.
          type: number
        TrailingCommissionPct:
          title: Commission paid from the fund to Saxo.
          type: number
      additionalProperties: false
    IpoOrderStatus:
      title: Enum to represent IPO order statuses
      enum:
        - Abandoned
        - None
        - Offer
        - UnderAllocation
      type: string
      x-enum-descriptions:
        None: None
        Offer: IPO is in Subscription state
        UnderAllocation: IPO is in Under Allocation state
        Abandoned: IPO is in Abandoned state
    IpoOrderStatusNullable:
      $ref: '#/components/schemas/IpoOrderStatus'
    KeywordFilter:
      title: Keyword KeywordFilter
      type: object
      properties:
        Keyword:
          title: Keyword
          type: string
        Values:
          title: Values mapped to the Keyword
          type: array
          items:
            type: string
      additionalProperties: false
    Language:
      title: Specifies language code and name
      type: object
      properties:
        Code:
          title: Language code
          type: string
        Name:
          title: Language name
          type: string
      additionalProperties: false
    LegalEntityType:
      enum:
        - Association
        - Cooperative
        - Foundation
        - Fund
        - IncorporatedCompany
        - NonGovernmentalOrganizations
        - Partnership
        - SoleProprietorship
        - Trust
      type: string
      x-enum-descriptions:
        IncorporatedCompany: The incorporated company
        Partnership: The partnership
        SoleProprietorship: The sole proprietorship
        Fund: The fund
        Trust: The trust
        Foundation: The foundation
        Association: The association
        Cooperative: The cooperative
        NonGovernmentalOrganizations: The non governmental organizations
    LegalEntityTypeNullable:
      $ref: '#/components/schemas/LegalEntityType'
    LegalGuardian:
      type: object
      properties:
        LegalGuardianId:
          title: Legal Guardian Id
          type: string
        Name:
          title: Legal Guardian Name
          type: string
        RegisteredAddress:
          title: Legal Guardian Address
          allOf:
            - $ref: '#/components/schemas/LegalGuardianAddress'
      additionalProperties: false
    LegalGuardianAddress:
      type: object
      properties:
        BuildingName:
          title: Building name
          type: string
        City:
          title: City
          type: string
        CountryCode:
          title: Country code
          type: string
        CountryName:
          title: Country name
          type: string
        Floor:
          title: Floor number
          type: string
        LocalArea:
          title: Local area name
          type: string
        PoBox:
          title: Post office box
          type: string
        PostalCode:
          title: Postal Code
          type: string
        PostalDistrict:
          title: Postal district
          type: string
        Side:
          title: Side
          type: string
        State:
          title: State
          type: string
        StreetName:
          title: Street name
          type: string
        Unit:
          title: Building complex unit number
          type: string
      additionalProperties: false
    Level:
      title: A subscription level along with possible classifications for this level.
      type: object
      properties:
        AvailableActions:
          title: Available actions that the client can perform
          type: array
          items:
            $ref: '#/components/schemas/ServiceUserAction'
        LevelType:
          title: Type of level
          allOf:
            - $ref: '#/components/schemas/LevelType'
        SubscriptionClassifications:
          title: Contains a list of all possible subscription classifications including price
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionClassification'
      additionalProperties: false
    LevelType:
      title: Data Level
      enum:
        - Delayed
        - Level1
        - Level2
        - None
      type: string
      x-enum-descriptions:
        None: None -
        Delayed: Delayed data
        Level1: Level 1 data
        Level2: Level 2 data
    LinkedIndividual:
      type: object
      properties:
        ContactInfo:
          title: Client contact information.
          allOf:
            - $ref: '#/components/schemas/PiiClientContactInfo'
        ContactName:
          title: Name of the contact.
          type: string
        Gender:
          title: Client gender.
          type: string
        PersonalIdExpiryDate:
          title: Personal identifier expiry date.
          type: string
          format: date
          x-type-name: Date
        PersonalIdType:
          title: Client personal Id.
          allOf:
            - $ref: '#/components/schemas/PersonalIdTypeNullable'
        RegisteredAddress:
          title: Client registered address.
          allOf:
            - $ref: '#/components/schemas/PiiClientRegisteredAddress'
        Role:
          title: Client role.
          type: string
        TaxId:
          title: Client tax Id.
          type: string
      additionalProperties: false
    LinkedIndividualListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/LinkedIndividual'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    LoanInterest:
      type: object
      properties:
        InterbankRate:
          title: Interbank rate.
          allOf:
            - $ref: '#/components/schemas/InterbankRate'
        Markup:
          title: Interest Markup.
          type: number
      additionalProperties: false
    LoanInterestCost:
      title: Loan interest cost
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    LocalizedInfo:
      title: Represents instrument types parameters.
      type: object
      properties:
        Key:
          title: Key identifier for the value.
          type: string
        Value:
          title: "A string value that represents the localized text. If the key is not found in specific language, it will be text of default language.\r\n            If the key is not found at all in localization resources, then key will be used in value itself."
          type: string
      additionalProperties: false
    LocalizedInfoListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/LocalizedInfo'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    LogEntryType:
      title: Grouping of all of the different activity log types.
      enum:
        - BackOfficeTransfer
        - Chat
        - Corrections
        - DisclaimerActions
        - InternalInformation
        - NonTradingActivity
        - Notifications
        - OrderActivity
        - Orders
        - Security
        - System
        - TradeActivity
        - Trades
      type: string
      x-enum-descriptions:
        Trades: Trades.
        TradeActivity: Trade Activity.
        Chat: Chat.
        Security: Security.
        Orders: Activity related to handling of the orders.
        OrderActivity: Activity related to placing orders.
        Corrections: Adjustments made to the account by the end of day processing. Typical examples include tom/next roll of Forex positions.
        System: System activities.
        BackOfficeTransfer: BackOffice operations.
        InternalInformation: Internal.
        NonTradingActivity: 'Non trading client activity, such as changes to user settings or acceptance of disclaimers or warnings.'
        Notifications: 'Notifications, such as price alerts being triggered.'
        DisclaimerActions: Disclaimer actions.
      x-enum-network-visibility:
        Chat: internal
        Security: internal
        System: internal
        BackOfficeTransfer: internal
        InternalInformation: internal
      x-type-warning: FlaggableEnum
    LogRequest:
      title: Use this class to pass additional data for logging.
      required:
        - AppName
        - Message
        - Severity
      type: object
      properties:
        AppName:
          title: App Name to log
          type: string
        Data:
          title: Additional data to log.
          type: array
          items:
            $ref: '#/components/schemas/ObjectObjectKeyValuePair'
        Iitech:
          title: Message severity.
          type: array
          items:
            $ref: '#/components/schemas/ObjectObjectKeyValuePair'
        Message:
          title: Message to log.
          type: string
        Severity:
          title: Message severity.
          allOf:
            - $ref: '#/components/schemas/MessageSeverity'
      additionalProperties: false
    LookupFieldGroup:
      title: Lookup FieldGroup
      enum:
        - ClientPlans
      type: string
      x-enum-descriptions:
        ClientPlans: Client Plans
      x-type-warning: FlaggableEnum
    LookupResponse:
      title: Lookup Response
      type: object
      properties:
        OptionType:
          title: Type of filter option
          type: string
        Values:
          title: Lookup values associated with filter option
          type: array
          items:
            $ref: '#/components/schemas/LocalizedInfo'
      additionalProperties: false
    LookupResponseListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/LookupResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    ManagementFee:
      title: Management fee
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    MarginRequirement:
      title: Margin requirement
      type: object
      properties:
        Currency:
          title: Margin currency.
          type: string
        ExtraWeek:
          title: Extra week margin requirement.
          type: number
        ExtraWeekPct:
          title: Extra week Pct margin requirement.
          type: number
        Initial:
          title: Initial margin requirement.
          type: number
        InitialPct:
          title: Initial margin requirement percentage
          type: number
        IntraWeek:
          title: Intra week margin requirement.
          type: number
        IntraWeekPct:
          title: Intra week margin requirement percentage
          type: number
        Maintenance:
          title: "SaxoInternal - Maintenance margin requirement.\r\n            Note : Use IntraWeek, as Maintenance is going to be decomissioned."
          type: number
          deprecated: true
          x-deprecated-date: '2022-01-01'
          x-network-visibility: internal
        MaintenancePct:
          title: "SaxoInternal - Maintenance margin requirement percentage\r\n            Note : Use IntraWeekPct, as Maintenance is going to be decomissioned."
          type: number
          deprecated: true
          x-deprecated-date: '2022-01-01'
          x-network-visibility: internal
        MarginType:
          title: Indicates if the margin is in percentage or in absolute value.
          allOf:
            - $ref: '#/components/schemas/MarginType'
      additionalProperties: false
    MarginSchedule:
      title: Margin schedule data.
      type: object
      properties:
        CutoffTimeInMinutes:
          title: Cut off time in minutes.
          type: integer
          format: int32
        IntradayMarginPct:
          title: Intraday margin percentage.
          type: number
        TimeSlots:
          title: Time slots.
          type: array
          items:
            $ref: '#/components/schemas/MarginScheduleTimeSlot'
        TimeZoneAbbreviation:
          title: The time zone abbreviation.
          type: string
        TimeZoneOffset:
          title: Time zone offset.
          type: string
      additionalProperties: false
    MarginScheduleTimeSlot:
      title: Margin schedule time slot.
      type: object
      properties:
        EndTime:
          title: End time
          type: string
          format: date-time
          x-type-name: UtcDateTime
        StartTime:
          title: Start time
          type: string
          format: date-time
          x-type-name: UtcDateTime
      additionalProperties: false
    MarginTierEntry:
      title: Margin tier entry
      type: object
      properties:
        ExtraWeekMarginRate:
          title: "Rate of nominal value required on the client’s account in order to \r\n            hold a position in the instrument over weekends and holidays. \r\n            A rate of 0.2, means 20%."
          type: number
        InitialMarginRate:
          title: "Rate of nominal value required on the client’s account in order to\r\n            open a position in the instrument. \r\n            A rate of 0.2, means 20%."
          type: number
        IntraWeekMarginRate:
          title: "Rate of nominal value required on the client’s account in order to\r\n            hold a position in the instrument over the week. \r\n            A rate of 0.2, means 20%."
          type: number
        TierLowerBound:
          title: The tier lower band.
          type: number
      additionalProperties: false
    MarginTierRequirement:
      title: Margin tier requirement
      type: object
      properties:
        Entries:
          title: Margin tier entries.
          type: array
          items:
            $ref: '#/components/schemas/MarginTierEntry'
        TierCurrency:
          title: Tier currency.
          type: string
      additionalProperties: false
    MarginType:
      title: Margin value type
      enum:
        - Absolute
        - Percentage
      type: string
      x-enum-descriptions:
        Percentage: The margin is specified in percent.
        Absolute: 'The margin is specified in an absolute value, in the instrument currency.'
    MembershipPoint:
      title: Membership point
      type: object
      properties:
        Date:
          title: Date of the occurrence
          type: string
          format: date
          x-type-name: Date
        IsExpired:
          title: Indicates whether points expired or not
          type: boolean
        Points:
          title: Points at the given date
          type: integer
          format: int64
      additionalProperties: false
    MembershipPointActivityResponse:
      title: Membership Point Activity Response
      type: object
      properties:
        Amount:
          title: Trade amount
          type: number
        AssetType:
          title: AssetType of instrument traded
          allOf:
            - $ref: '#/components/schemas/AssetTypeNullable'
        Date:
          title: Activity Date
          type: string
          format: date
          x-type-name: Date
        Description:
          title: Description for activity
          type: string
        DisplayAndFormat:
          title: Display and format
          allOf:
            - $ref: '#/components/schemas/InstrumentDisplayAndFormat'
        ExpiryDate:
          title: Points expiry date
          type: string
          format: date
          x-type-name: Date
        IsExpired:
          title: Indicates whether points expired or not
          type: boolean
        MembershipPointId:
          title: Membership Point Id
          type: integer
          format: int64
        PointSourceType:
          title: Point source Type
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        Points:
          title: Points earned
          type: integer
          format: int64
        Uic:
          title: Uic of instrument traded
          type: integer
          format: int32
      additionalProperties: false
    MembershipPointActivityResponseListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/MembershipPointActivityResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    Menu:
      title: Represents menu leaf
      type: object
      properties:
        Items:
          title: Represents sub menus
          type: array
          items:
            $ref: '#/components/schemas/MenuItem'
      additionalProperties: false
    MenuItem:
      title: Menu item
      type: object
      properties:
        Description:
          title: Description of the menu item
          type: string
        FullName:
          title: Full name of the menu item
          type: string
        Items:
          title: List of child menu items
          type: array
          items:
            $ref: '#/components/schemas/MenuItem'
        ModuleId:
          title: ID of the module the specific menu item belongs to
          type: string
        Name:
          title: Name of the menu item
          type: string
        Url:
          title: The url the menu item points at
          type: string
      additionalProperties: false
    MessageSeverity:
      title: The message severity.
      enum:
        - Debug
        - Error
        - Fatal
        - Info
        - Trace
        - Warning
      type: string
      x-enum-descriptions:
        Trace: Trace
        Debug: Debug
        Info: Info
        Warning: Warning
        Error: Error
        Fatal: Fatal
    Model.CaseStatus:
      title: Case Status
      enum:
        - Cancelled
        - Closed
        - Open
      type: string
      x-enum-descriptions:
        Open: Open
        Closed: Closed
        Cancelled: Cancelled
    Model.CaseSummary:
      title: The case details
      type: object
      properties:
        CaseId:
          title: The caseId
          type: string
        CaseStatus:
          title: The case status.
          allOf:
            - $ref: '#/components/schemas/Model.CaseStatus'
        CreatedDate:
          title: The case creation date.
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Deadline:
          title: The deadline by which this case should be resolved.
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Description:
          title: The case description.
          type: string
        HasAttachment:
          title: Indicates whether this case has attachements
          type: boolean
        HasNote:
          title: Indicates that whether there are notes attached to this case.
          type: boolean
        ModifiedDate:
          title: The case's last modification date and time
          type: string
          format: date-time
          x-type-name: UtcDateTime
        NotifyClient:
          title: Indicates that the client should be emailed about changes to the case.
          type: boolean
        SubjectId:
          title: The subject which this case belongs to.
          type: string
        TicketNumber:
          title: The case's ticket number.
          type: string
        Title:
          title: The case title
          type: string
      additionalProperties: false
    Model.CaseSummaryListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Model.CaseSummary'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    ModelStateDictionary:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    Models.Activity:
      title: "Represents an entry in the trading system activity Log.\r\n            Not all fields are filled in for all activity log types.\r\n            NOTE:We have deliberately not added the logtype and all of the P1... Px parameters as they are not directly \r\n            needed for activityLog DISPLAY, and we do not have a good way of providing the client application with enough information\r\n            that they can make sense of these."
      type: object
      properties:
        AccountId:
          title: The id of the account to which this activity entry is related
          type: string
        AppId:
          title: ID of app that caused activity.
          type: integer
          format: int32
        ClientId:
          title: The id of the client to which this activity entry is related
          type: string
        CorrelationKey:
          title: CorrelationKey
          type: string
        Created:
          title: Date of the activity log entry
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Description:
          title: 'Textual description of the activity log entry, which can be displayed to an end user'
          type: string
        GeoLocation:
          title: 'Location of client at the time of activity. May not be present. Usually in format: City, Country.'
          type: string
        IpAddress:
          title: IP address of client at the time of activity. May not be present.
          type: string
        LogId:
          title: Activity Log Entry Id
          type: string
        PostingId:
          title: Either OrderId or PositionId
          type: string
        UserId:
          title: The id of the user to which this activity is related
          type: string
      additionalProperties: false
    Models.CarryingCost:
      title: Carrying Cost.
      type: object
      properties:
        FixedRate:
          title: A fixed or minimum monthly carrying cost.
          type: number
        InterbankRate:
          title: The interbank rate.
          allOf:
            - $ref: '#/components/schemas/InterbankRate'
        MarkUpRate:
          title: The carrying cost percentage markup on the Interbank rate.
          type: number
      additionalProperties: false
    Models.ClientSearchCriteria:
      type: object
      properties:
        AccountId:
          title: Search where AccountId starts with
          type: string
        ClientId:
          title: Search where clientId starts with
          type: string
        ClientName:
          title: Search where clientName starts with
          type: string
        Operator:
          title: 'Search operator: ''AND'' \ ''OR'''
          allOf:
            - $ref: '#/components/schemas/Operator'
      additionalProperties: false
    Models.ClientSearchResponse:
      type: object
      properties:
        AccountIds:
          type: array
          items:
            type: string
        Accounts:
          type: array
          items:
            $ref: '#/components/schemas/AccountResponse'
        ClientId:
          type: string
        ClientKey:
          type: string
        ClientName:
          type: string
        DefaultAccountId:
          type: string
        LegalAssetTypes:
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
      additionalProperties: false
    Models.ClientSearchResponseListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Models.ClientSearchResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    Models.CustodyFee:
      title: Custody fee.
      type: object
      properties:
        FeeCurrency:
          title: Fee currency.
          type: string
        FeeRules:
          title: Fee rules.
          type: array
          items:
            $ref: '#/components/schemas/FeeRule'
        MaxFeeAmount:
          title: Maximum monthly Custody fee that will be charged.
          type: number
        MinFeeAmount:
          title: Minimum monthly custody fee that will be charged.
          type: number
      additionalProperties: false
    Models.EntryCost:
      type: object
      properties:
        CostPct:
          title: The entry cost.
          type: number
        CostPerUnit:
          title: Cost paid per unit for position entry in a fund.
          type: number
        Currency:
          title: Currency of entry cost.
          type: string
      additionalProperties: false
    Models.ExitCost:
      type: object
      properties:
        CostPct:
          title: The exit cost.
          type: number
        CostPerUnit:
          title: Fee paid per unit for position exit in a fund.
          type: number
        Currency:
          title: Currency of exit cost.
          type: string
      additionalProperties: false
    Models.HoldingFee:
      title: Holding Fee.
      type: object
      properties:
        CategoryFee:
          title: "SaxoInternal - Holding fee instrument category.\r\n             Note : Use Value instead of CategoryFee, as CategoryFee is going to be decomissioned."
          type: number
          deprecated: true
          x-deprecated-date: '2022-01-01'
          x-network-visibility: internal
        EndPeriodInDays:
          title: Maximum days to hold the option before the Holding fee value applies.
          type: integer
          format: int32
        FromPeriodInDays:
          title: Minimum days to hold the option before the Holding fee value applies
          type: integer
          format: int32
        Value:
          title: Holding fee value.
          type: number
      additionalProperties: false
    Models.InstrumentDetail:
      title: Instrument details
      required:
        - AssetType
        - Uic
        - Price
        - Quantity
      type: object
      properties:
        AssetType:
          title: Asset type
          allOf:
            - $ref: '#/components/schemas/Models.TransferableAssetType'
        Price:
          title: Price
          type: number
        PurchaseDate:
          title: Purchase date of instrument
          type: string
          format: date
          x-type-name: Date
        Quantity:
          title: Quantity
          type: number
        Uic:
          title: Uic
          type: integer
          format: int32
      additionalProperties: false
    Models.OrderActivitiesResponse:
      type: object
      properties:
        AccountId:
          title: Account Id
          type: string
        ActivityTime:
          title: Time of the activity.
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Amount:
          title: Order amount
          type: number
        AssetType:
          title: AssetType of instrument traded (enum)
          allOf:
            - $ref: '#/components/schemas/AssetTypeNullable'
        AveragePrice:
          title: The average price of the
          type: number
        BuySell:
          title: Buy or Sell
          allOf:
            - $ref: '#/components/schemas/BuySellNullable'
        CashAmount:
          title: Order cash amount
          type: number
        ClientId:
          title: Client Id
          type: string
        CorrelationKey:
          title: 'Correlationkey, relating orders for better visual correlation)'
          type: string
        DisplayAndFormat:
          title: Includes Symbol and formatting info. (standard object also used in most other service groups)
          allOf:
            - $ref: '#/components/schemas/InstrumentDisplayAndFormat'
        Duration:
          title: Order duration
          allOf:
            - $ref: '#/components/schemas/Domain.OrderDuration'
        ExecutionPrice:
          title: Execution price of this particular fill (if multiple fills)
          type: number
        ExternalReference:
          title: The Client order reference id.
          type: string
        FillAmount:
          title: The amount of the current fill
          type: number
        FilledAmount:
          title: Amount currently filled
          type: number
        HandledBy:
          title: Would be either UserId if initiated by a known user or System if handled by the system.
          type: string
        LogId:
          title: Order log id. The caller can expect that LogIds will be in time sequence so that an entry with LogId=x+1 will be entered into the log after an entry with LogId=x.
          type: string
        MultilegOrderId:
          title: Multileg Order Id
          type: string
        OrderId:
          title: Order Id
          type: string
        OrderRelation:
          title: Relation to other active orders.
          allOf:
            - $ref: '#/components/schemas/OpenOrderRelation'
        OrderType:
          title: The OrderType (enum)
          allOf:
            - $ref: '#/components/schemas/OpenOrderType'
        PositionId:
          title: 'Id of position created, if order is filled (partially filled)'
          type: string
        Price:
          title: Order price.
          type: number
        PutCall:
          title: Put/Call (if order on option)
          allOf:
            - $ref: '#/components/schemas/PutCallNullable'
        RelatedOrders:
          title: Id's of one or more related orders.
          type: array
          items:
            type: string
        RelatedPositionId:
          title: Id of position to which this order is related.
          type: string
        SleepingOrderCondition:
          title: Order condition
          allOf:
            - $ref: '#/components/schemas/OrderCondition'
        Status:
          title: OrderStatusType example Placed/Working/Fill/Cancelled
          allOf:
            - $ref: '#/components/schemas/OrderLogStatusNullable'
        StopLimitPrice:
          title: Secondary price level for StopLimit orders.
          type: number
        SubStatus:
          title: The OrderSubStatus identifies the sub status of an order.
          allOf:
            - $ref: '#/components/schemas/Domain.OrderSubStatus'
        Uic:
          title: Uic of instrument traded
          type: integer
          format: int32
        UserId:
          title: User Id
          type: string
      additionalProperties: false
    Models.OrderActivitiesResponseListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Models.OrderActivitiesResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    Models.OrderActivityFieldGroup:
      enum:
        - DisplayAndFormat
      type: string
      x-enum-descriptions:
        DisplayAndFormat: Display and Format.
      x-type-warning: FlaggableEnum
    Models.OrderEntryType:
      enum:
        - All
        - Last
      type: string
      x-enum-descriptions:
        Last: 'EntryType:- Last: Only return the latest state of an order.'
        All: 'EntryType:- All: Return all entries pertaining to any order.'
    Models.OrderEntryTypeNullable:
      $ref: '#/components/schemas/Models.OrderEntryType'
    Models.PiiClientContactInfo:
      title: Contact
      type: object
      properties:
        FaxNumber:
          title: Fax
          type: string
        FourthEmail:
          title: Fourth email
          type: string
        MobileNumber:
          title: Mobile phone
          type: string
        PhoneNumber:
          title: Phone
          type: string
        PrimaryEmail:
          title: Primary email
          type: string
        SecondaryEmail:
          title: Secondary email
          type: string
        SecondaryPhoneNumber:
          title: Secondary phone
          type: string
        ThirdEmail:
          title: Third email
          type: string
      additionalProperties: false
    Models.PiiClientRegisteredAddress:
      title: Address
      type: object
      properties:
        BuildingName:
          title: Building Name
          type: string
        BuildingNo:
          title: Building No
          type: string
        City:
          title: City
          type: string
        Country:
          title: Country
          type: string
        Floor:
          title: Floor
          type: string
        LocalArea:
          title: Local Area
          type: string
        PostOfficeBox:
          type: string
        SideDoor:
          title: Post office box
          type: string
        StateOrProvince:
          title: Side Door
          type: string
        Street:
          title: State/province
          type: string
        Unit:
          title: Unit
          type: string
        ZipCode:
          title: ZIP/postal code
          type: string
      additionalProperties: false
    Models.Platform:
      title: Platform (or Application)
      enum:
        - ClientStation
        - MyAccount
      type: string
      x-enum-descriptions:
        MyAccount: MyAccount
    Models.Question:
      title: The question.
      required:
        - QuestionId
        - QuestionOptions
      type: object
      properties:
        Answer:
          title: Number range value of answer
          type: string
        DataType:
          title: Data type of Question
          allOf:
            - $ref: '#/components/schemas/QuestionDataType'
        NumberRangeOptions:
          title: Number Range Option of question
          allOf:
            - $ref: '#/components/schemas/NumberRangeOptions'
        QuestionId:
          title: ID of the question
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
        QuestionOptions:
          title: List of options (answers) to specific question
          type: array
          items:
            $ref: '#/components/schemas/QuestionOption'
        QuestionText:
          title: Actual question
          type: string
      additionalProperties: false
    Models.RolloverFee:
      title: SRD rollover fee - Charged if position is rolled over
      type: object
      properties:
        Currency:
          title: Currency
          type: string
        MinRollover:
          title: Minimum rollover fee applied
          type: number
        RolloverPct:
          title: Rollover fee for the rolled over position
          type: number
      additionalProperties: false
    Models.ServiceFee:
      title: Service fee.
      type: object
      properties:
        FeePct:
          title: Service fee as a percentage per month.
          type: number
      additionalProperties: false
    Models.SwapPoints:
      type: object
      properties:
        AskPoint:
          title: Swap ask point.
          type: number
        BidPoint:
          title: TSwap bid point.
          type: number
        Date:
          title: Date on which swap point been calculated..
          type: string
          format: date
          x-type-name: Date
        Markup:
          title: Interest markup.
          type: number
        TimeZoneAbbreviation:
          title: Time zone abbreviation.
          type: string
        TimeZoneOffset:
          title: Time zone offset.
          type: string
      additionalProperties: false
    Models.Tax:
      title: Tax details.
      type: object
      properties:
        BuySell:
          title: "If absent, the tax applies to both the buy and the sell side. \r\n            If present, the value indicates what side of a trade the tax applies to."
          allOf:
            - $ref: '#/components/schemas/Enums.BuySellNullable'
        CalculationTriggerType:
          title: Calculation trigger type of applied tax.
          allOf:
            - $ref: '#/components/schemas/CalculationTriggerType'
        CalculationType:
          title: Calculation type of applied tax.
          allOf:
            - $ref: '#/components/schemas/CalculationType'
        CostCategory:
          title: Cost category
          allOf:
            - $ref: '#/components/schemas/TransactionCostCategoryNullable'
        CostDescription:
          title: Additional cost description
          type: string
        Currency:
          title: Currency in which tax value is calculated.
          type: string
        Description:
          title: Type of applicable tax.
          type: string
        MaxTradeValue:
          title: Maximum trade value on which tax is applied.
          type: number
        MinTradeValue:
          title: Minimum trade value on which tax is applied.
          type: number
        Value:
          title: Value of tax applied based on CalculationType.
          type: number
      additionalProperties: false
    Models.TransferDetails:
      title: Whole account transfer details
      required:
        - InstrumentDetails
        - ClientDetails
        - TransferType
      type: object
      properties:
        ClientDetails:
          title: Client details
          allOf:
            - $ref: '#/components/schemas/ClientDetail'
        InstrumentDetails:
          title: Instrument details
          type: array
          items:
            $ref: '#/components/schemas/Models.InstrumentDetail'
        TransferType:
          title: 'Transfer type, in or out of Saxo Bank'
          allOf:
            - $ref: '#/components/schemas/TransferType'
      additionalProperties: false
    Models.TransferableAssetType:
      title: The possible AssetTypes for which you can transfer in or out.
      enum:
        - Bond
        - CompanyWarrant
        - Etc
        - Etf
        - Etn
        - Fund
        - Rights
        - Stock
      type: string
      x-enum-descriptions:
        Stock: Stock
        Bond: Bond
        Etf: Exchange traded fund.
        Etc: Etc
        Etn: Etn
        Fund: Fund
        Rights: Rights
        CompanyWarrant: 'Unlisted warrant issued by a corporation, often physically settled.'
    MultiLegOrderDetails:
      title: Multi leg order details
      type: object
      properties:
        Amount:
          title: Amount
          type: number
        BuySell:
          title: Buy Sell
          allOf:
            - $ref: '#/components/schemas/BuySellNullable'
        ContractOptionStrategy:
          title: ContractOptionStrategy of a multileg order selected at the time of placing the order
          allOf:
            - $ref: '#/components/schemas/ContractOptionStrategyNullable'
        Description:
          title: Overall description of a multi leg order representing the order along with its strategy
          type: string
        LegCount:
          title: Leg Count
          type: integer
          format: int32
        MultiLegOrderId:
          title: Multi leg order id
          type: string
        Price:
          title: Price
          type: number
      additionalProperties: false
    MutualFund:
      title: Mutual fund details
      type: object
      properties:
        AssetTypeClassification:
          title: Asset type classification
          type: string
        FundCountry:
          title: Fund country
          type: string
        FundCountryCode:
          title: Fund country code
          type: string
      additionalProperties: false
    Note:
      title: Note in a case
      type: object
      properties:
        Attachment:
          title: Attachment
          allOf:
            - $ref: '#/components/schemas/File'
        CreatedOn:
          title: DateTime when the note was created
          type: string
          format: date-time
          x-type-name: UtcDateTime
        NoteOrigin:
          title: Note Origin
          allOf:
            - $ref: '#/components/schemas/NoteOrigin'
        NoteText:
          title: Note text
          type: string
        NoteTitle:
          title: Title of note
          type: string
      additionalProperties: false
    NoteDetails:
      title: 'Represents a case note. A case note could be either a pure note, or a note with an attachment.'
      type: object
      properties:
        CreatedDate:
          title: Note Creation time
          type: string
          format: date-time
          x-type-name: UtcDateTime
        FileId:
          title: FileId
          type: string
        FileName:
          title: File name
          type: string
        FileSize:
          title: File size in bytes
          type: integer
          format: int32
        Note:
          title: Note text
          type: string
        Title:
          title: Title
          type: string
      additionalProperties: false
    NoteOrigin:
      enum:
        - Client
        - Other
        - Partner
      type: string
      x-enum-descriptions:
        Other: Other
        Client: Client
        Partner: Partner
    NullableTMAssessmentElement:
      type: object
      properties:
        Description:
          title: Description
          type: string
        Id:
          title: Id
          type: string
        Name:
          title: Name
          type: string
        Rating:
          title: 'Target Market Assessment Rating. For Risk Assementment, this is numeric and boolean for other assessment categories.'
          type: integer
          format: int32
      additionalProperties: false
    NumberRangeOptions:
      title: The number range options.
      type: object
      properties:
        Maximum:
          title: Maximum value for range
          type: number
        Minimum:
          title: Mininum value for range
          type: number
      additionalProperties: false
    OAuth2AppWithAppApprovalForUser:
      title: Information about an application.
      type: object
      properties:
        AppId:
          title: ID of app.
          type: integer
          format: int32
        ApprovalLevelAccepted:
          title: The level of approval level accepted
          allOf:
            - $ref: '#/components/schemas/AppApprovalLevelNullable'
        ApprovalLevelModifiedTimestamp:
          title: Time when approval level was modified
          type: string
          format: date-time
          x-type-name: UtcDateTime
        ApprovalLevelRequired:
          title: The level of approval level required
          allOf:
            - $ref: '#/components/schemas/AppApprovalLevel'
        Description:
          title: Short text describing app.
          type: string
        HasOwnMifidFlow:
          title: Does app has it's own mifid flow?
          type: boolean
        Name:
          title: Name of app.
          type: string
        NeedsAppApproval:
          title: Does app need approval?
          type: boolean
        PreApproved:
          title: Is app preapproved and doesn't need explicit approval by user?
          type: boolean
      additionalProperties: false
    Object:
      type: object
      additionalProperties: false
    ObjectObjectKeyValuePair:
      type: object
      properties:
        Key:
          allOf:
            - $ref: '#/components/schemas/Object'
        Value:
          allOf:
            - $ref: '#/components/schemas/Object'
      additionalProperties: false
    Office:
      type: object
      properties:
        Id:
          title: Office id
          type: integer
          format: int32
        Name:
          title: Office name
          type: string
        RegionId:
          title: Region id where the office belongs
          type: integer
          format: int32
        RegionName:
          title: Region name where the office belongs
          type: string
      additionalProperties: false
    OfficeInformation:
      type: object
      properties:
        ClosingOffice:
          allOf:
            - $ref: '#/components/schemas/Office'
      additionalProperties: false
    OnGoingCost:
      title: Ongoing Cost
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    OpenOrderDuration:
      title: Order durations
      enum:
        - AtTheClose
        - AtTheOpening
        - DayOrder
        - FillOrKill
        - GoodForPeriod
        - GoodTillCancel
        - GoodTillDate
        - ImmediateOrCancel
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: Unspecified duration
        GoodTillCancel: Good Till Cancel - working until explicitly cancelled
        DayOrder: Day order - working in all session until trade date roll
        FillOrKill: Fill or kill
        ImmediateOrCancel: Fill or fill partially and cancel remaining
        AtTheOpening: Working at the opening auction only
        AtTheClose: Working at the closing auction only
        GoodTillDate: Working untill specified date
        GoodForPeriod: Working for specified period
    OpenOrderDurationNullable:
      $ref: '#/components/schemas/OpenOrderDuration'
    OpenOrderRelation:
      title: Description of the order relation
      enum:
        - IfDoneMaster
        - IfDoneSlave
        - IfDoneSlaveOco
        - Oco
        - StandAlone
      type: string
      x-enum-descriptions:
        StandAlone: '0: Standalone. No relations to other orders.'
        Oco: '1: One cancels other. Relation between two orders. When one is filled, the other is cancelled.'
        IfDoneMaster: "2: If done master. Relation between two or three orders.\r\n            The slave orders are released only if the master order is filled."
        IfDoneSlave: '3: If done slave. Relation between two orders. The other is always IfDoneMaster.'
        IfDoneSlaveOco: "4: If done slave OCO. Relation between three orders. \r\n            One is always IfDoneMaster and the other is always also IfDoneSlaveOCO. \r\n            The OCO relation is between the two slave orders."
    OpenOrderType:
      title: Open order type enum
      enum:
        - Algorithmic
        - BreakoutTrigger
        - CallLimit
        - CallStop
        - DealCapture
        - GuaranteedStop
        - Limit
        - LimitTrigger
        - Market
        - MarketDefault
        - MarketExpiry
        - MarketRollover
        - MarketStopOut
        - PeggedToMid
        - PreviouslyQuoted
        - Stop
        - StopIfBid
        - StopIfOffered
        - StopIfTraded
        - StopLimit
        - StopTrigger
        - Switch
        - Traspaso
        - TraspasoIn
        - TraspasoOut
        - Unknown
      type: string
      x-enum-deprecated:
        - StopIfBid
        - StopIfOffered
      x-enum-descriptions:
        Unknown: '0: Unspecified'
        Market: '1: Market order'
        Limit: '2: Limit order'
        StopIfBid: '3: Stop if bid price = stop price'
        StopIfOffered: '4: Stop if ask price = stop price'
        StopIfTraded: '5: Stop if actually traded at stop price'
        Stop: "6: Stop at price\r\n            Stop If Offered for buy orders\r\n            Stop If Bid for sell orders"
        StopLimit: '7: Stop Limit'
        MarketStopOut: '8: Market order that is placed by Bank in respons to a stop-out margin call.'
        CallLimit: "12: This order type is monitored by the OOM as a regular limit order.\r\n            Hittime is assigned but order is never executed."
        CallStop: "13: This order type is monitored by the OOM as a regular stop order.\r\n            Hittime is assigned but order is never executed."
        MarketExpiry: "14: This order type is placed by the Cfd Future Expiry Service. It can be placed\r\n            even after instrument expiry and the order monitor will execute it even after\r\n            instrument expiry."
        Algorithmic: "15: Algorithmic order. \r\n            Only applies to external orders, when the broker supports various algorithmic strategies."
        PreviouslyQuoted: "16: Order on Previous Quote.\r\n            Only applies for B2BExecutionReports for Fx DMA Clients"
        MarketDefault: "17: Market order that is placed by Bank in response to close out stock options \r\n            for the clients who can default."
        PeggedToMid: '18: Pegged To Mid order'
        Switch: '19: Switch order, Sell X and Buy Y with one order.'
        Traspaso: '20: A special type of switch order.'
        TraspasoOut: '21: A Traspaso order initiated from an external trading system.'
        TraspasoIn: '22: A Traspaso In order initiated from an external trading system.'
        MarketRollover: '23: Market Rollover order that is placed by Bank to automate the process of closing out open positions in soon to expire contracts in favour of contracts with later expiration dates'
        GuaranteedStop: '24: Stop at price - no slippage'
        LimitTrigger: '25: Similar to Limit order type but used only with Trigger orders'
        StopTrigger: '26: Similar to Stop order type but used only with Trigger orders'
        BreakoutTrigger: '27: A Breakout Order (Trigger order with up and down prices)'
        DealCapture: Order Contains Deal capture
    Operator:
      enum:
        - AND
        - OR
      type: string
    Option:
      type: object
      properties:
        Key:
          title: Key identifier for the list option.
          type: string
        Value:
          title: Translated value for the list option.
          type: string
      additionalProperties: false
    OptionEventType:
      title: The option event type.
      enum:
        - BinaryCall
        - BinaryPut
        - Call
        - KnockInCall
        - KnockInPut
        - KnockOutCall
        - KnockOutPut
        - NoTouch
        - OneTouch
        - Put
        - Unknown
      type: string
      x-enum-descriptions:
        Call: Call option exercised
        Put: Put option exercised
        KnockInCall: Fx Knock-In call option exercised
        KnockInPut: Fx Knok-in put option exercies
        KnockOutCall: Fx Knock-Out call option exercised
        KnockOutPut: Fx Knock-Out call option exercised
        BinaryCall: Fx Binary call option exercised
        BinaryPut: Fx Binary put option exercised
        OneTouch: Fx One touch option exercised
        NoTouch: Fx No touch option exercised
        Unknown: Unknown option event type
    OptionEventTypeNullable:
      $ref: '#/components/schemas/OptionEventType'
    OptionRootExchangeFee:
      type: object
      properties:
        Currency:
          title: Currency of fixed exchange fees
          type: string
        MaximumAmount:
          title: Exchange fee maximum amount.
          type: number
        MinimumAmount:
          title: Exchange fee minimum amount.
          type: number
        OrderAction:
          title: Determines the action basis which commission is applied.
          allOf:
            - $ref: '#/components/schemas/OrderActions'
        PerAction:
          title: Exchange fee per trade.
          type: number
        PerLot:
          title: Exchange fee per lot traded.
          type: number
        Percentage:
          title: Exchange fee % of the traded value.
          type: number
      additionalProperties: false
    OptionSet:
      title: Option Sets
      type: object
      properties:
        Key:
          title: Key
          type: string
        Options:
          title: Options list
          type: array
          items:
            $ref: '#/components/schemas/Option'
      additionalProperties: false
    OrderActions:
      title: Order Actions.
      enum:
        - AlgorithmicOrder
        - EtoAll
        - EtoAssign
        - EtoDelivery
        - EtoExercise
        - EtoExpiry
        - ExecuteOrder
        - SRDRollover
      type: string
      x-enum-descriptions:
        ExecuteOrder: On execute order.
        AlgorithmicOrder: On execution of algorithmic order.
        EtoExercise: EtoExercise
        EtoAssign: EtoAssign
        EtoDelivery: EtoDelivery
        EtoExpiry: EtoExpiry
        EtoAll: EtoAll
        SRDRollover: SRD rollover fee
    OrderActivitiesResponse:
      title: Order activities response
      type: object
      properties:
        AccountId:
          title: Account Id
          type: string
        ActivityId:
          title: Order log id. The caller can expect that LogIds will be in time sequence so that an entry with LogId=x+1 will be entered into the log after an entry with LogId=x.
          type: string
        ActivityTime:
          title: Time of the activity.
          type: string
          format: date-time
          x-type-name: UtcDateTime
        AdviceNote:
          title: The Advice to the client.
          type: string
        AlgoOrderTradingStrategy:
          title: AlgoOrderTradingStrategy
          type: string
        AllocationKeyId:
          title: Allocation Key Id
          type: string
        AllocationKeyName:
          title: Allocation Key Name
          type: string
        Amount:
          title: Order amount
          type: number
        AssetType:
          title: AssetType of instrument traded (enum)
          allOf:
            - $ref: '#/components/schemas/AssetTypeNullable'
        AveragePrice:
          title: The average price of the
          type: number
        BuySell:
          title: Buy or Sell
          allOf:
            - $ref: '#/components/schemas/BuySellNullable'
        CancelReason:
          title: Order Cancel Reason
          allOf:
            - $ref: '#/components/schemas/OrderCancelReasonNullable'
        CashAmount:
          title: Cash amount
          type: number
        ClientId:
          title: Client Id
          type: string
        ClientName:
          title: Client name associated with the order
          type: string
        ClientNote:
          title: The specific text instructions for the Trading Desk to better understand IAM users intentions for staging the order.
          type: string
        CorrelationKey:
          title: 'Correlationkey, relating orders for better visual correlation)'
          type: string
        DealCapture:
          title: 'Deal capture information, applicable only for deal capture orders'
          allOf:
            - $ref: '#/components/schemas/DealCapture'
        Direction:
          title: Direction
          allOf:
            - $ref: '#/components/schemas/TradePerspectiveNullable'
        DisplayAndFormat:
          title: Includes Symbol and formatting info. (standard object also used in most other service groups)
          allOf:
            - $ref: '#/components/schemas/InstrumentDisplayAndFormat'
        Duration:
          title: Order duration
          allOf:
            - $ref: '#/components/schemas/OrderDuration'
        ExecutionPrice:
          title: Execution price of this particular fill (if multiple fills)
          type: number
        ExternalReference:
          title: The Client order reference id.
          type: string
        FillAmount:
          title: The amount of the current fill
          type: number
        FilledAmount:
          title: Amount currently filled
          type: number
        FinancingLevel:
          title: Financing Level
          type: number
        FxForwardValueDate:
          title: FxForward Value Date
          type: string
          format: date
          x-type-name: Date
        HandledBy:
          title: Would be either UserId if initiated by a known user or System if handled by the system.
          type: string
        IpoFinancingAmountPct:
          title: The FinanceAmountPct while placing the IPO Order
          type: number
        IpoOrderStatus:
          title: Initial public offering order status
          allOf:
            - $ref: '#/components/schemas/IpoOrderStatusNullable'
        IpoSubscriptionFee:
          title: Subscription Fees while placing the IPO Order
          type: number
        IsSecondCurrencyOrder:
          title: Is Second Currency Order
          type: boolean
        LastMkt:
          title: Trading venue where trade has happened
          type: string
        LowerBarrier:
          title: Lower Barrier
          type: number
        LowerStrike:
          title: Lower Strike
          type: number
        MultiLegOrderDetails:
          title: Multi leg order details
          allOf:
            - $ref: '#/components/schemas/MultiLegOrderDetails'
        MultilegOrderId:
          title: Multileg Order Id
          type: string
        NearLegValueDate:
          title: Near Leg value date
          type: string
          format: date
          x-type-name: Date
        OrderId:
          title: Order Id
          type: string
        OrderRelation:
          title: Relation to other active orders.
          allOf:
            - $ref: '#/components/schemas/OpenOrderRelation'
        OrderState:
          title: "The Client Order State is prepared with combination of Order Status and Substate. The Order State will be always 'Working' except combination of following Status:\r\n            Order Status 'Cancelled' and Substatus 'Confirmed' is mapped with 'Cancelled'.\r\n            Order Status 'Expired' is mapped with 'Expired'.\r\n            Order status 'FinalFill'is mapped with 'Traded'."
          allOf:
            - $ref: '#/components/schemas/OrderStateNullable'
          x-network-visibility: internal
        OrderType:
          title: The OrderType (enum)
          allOf:
            - $ref: '#/components/schemas/PlaceableOrderType'
        ParentInstrumentInfo:
          title: Instrument info of originally placed order
          allOf:
            - $ref: '#/components/schemas/ParentInstrumentInfo'
        ParentOrderInfo:
          title: 'Parent order specific information, currently having execution price information related to future strategy orders only.'
          allOf:
            - $ref: '#/components/schemas/ParentOrderInfo'
        PositionId:
          title: 'Id of position created, if order is filled (partially filled)'
          type: string
        Price:
          title: Order price.
          type: number
        PutCall:
          title: Put/Call (if order on option)
          allOf:
            - $ref: '#/components/schemas/PutCallNullable'
        RelatedOrderIds:
          title: Id's of one or more related orders.
          type: array
          items:
            type: string
        RelatedPositionId:
          title: Id of position to which this order is related.
          type: string
        SecondCurrencyAmount:
          title: Second Currency Amount
          type: number
        Status:
          title: OrderStatusType example Placed/Working/Fill/Cancelled
          allOf:
            - $ref: '#/components/schemas/OrderStatusNullable'
        StopLimitPrice:
          title: Secondary price level for StopLimit orders.
          type: number
        SubStatus:
          title: The OrderSubStatus identifies the sub status of an order.
          allOf:
            - $ref: '#/components/schemas/OrderSubStatus'
        Uic:
          title: Uic of instrument traded
          type: integer
          format: int32
        UpperBarrier:
          title: Upper Barrier
          type: number
        UpperStrike:
          title: Upper Strike
          type: number
        UserId:
          title: User Id
          type: string
        ValueDate:
          title: Value Date.
          type: string
          format: date
          x-type-name: Date
        WithAdvice:
          title: Indicates whether trade is placed with advice to client
          type: boolean
      additionalProperties: false
    OrderActivitiesResponseListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/OrderActivitiesResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    OrderActivityFieldGroup:
      title: Order Activity Field group
      enum:
        - DisplayAndFormat
      type: string
      x-enum-descriptions:
        DisplayAndFormat: Display and Format.
      x-type-warning: FlaggableEnum
    OrderCancelReason:
      title: Enum to represent order cancel reason
      enum:
        - CancelledByDealer
      type: string
      x-enum-descriptions:
        CancelledByDealer: "Cancel Reason Execution Denied(1041) has been applied on Ipo Order fee when ipo order being locked \r\n            cannot pass margin precheck(no enough cash balance).In that case dealer/trading system can cancel \r\n            the ipo orders that can be shown as \"CancelledByDealer\""
    OrderCancelReasonNullable:
      $ref: '#/components/schemas/OrderCancelReason'
    OrderCondition:
      type: object
      properties:
        BreakoutTriggerDownPrice:
          title: Breakout Trigger Down Price
          type: number
        BreakoutTriggerUpPrice:
          title: Breakout Trigger Up Price
          type: number
        BuySell:
          title: Buy or Sell
          allOf:
            - $ref: '#/components/schemas/BuySellNullable'
        ConditionId:
          title: Order condition Id
          type: string
        Duration:
          title: Order duration
          allOf:
            - $ref: '#/components/schemas/Domain.OrderDuration'
        OrderType:
          title: The OrderType (enum)
          allOf:
            - $ref: '#/components/schemas/OpenOrderType'
        Price:
          title: Order price.
          type: number
        Status:
          title: OrderStatusType example Placed/Working/Fill/Cancelled
          allOf:
            - $ref: '#/components/schemas/OrderLogStatusNullable'
        SubStatus:
          title: The OrderSubStatus identifies the sub status of an order.
          allOf:
            - $ref: '#/components/schemas/Domain.OrderSubStatus'
        Symbol:
          title: Symbol
          type: string
        TrailingStopDistanceToMarket:
          title: Trailing Stop Distance To Market
          type: number
        TriggerPriceType:
          title: Trigger Price Type
          allOf:
            - $ref: '#/components/schemas/TriggerPriceTypeNullable'
        Uic:
          title: Uic of instrument traded
          type: integer
          format: int32
      additionalProperties: false
    OrderDuration:
      title: Order Duration
      type: object
      properties:
        DurationType:
          title: The Order Type.
          allOf:
            - $ref: '#/components/schemas/OpenOrderDurationNullable'
        ExpirationDate:
          title: 'The ExpirationDate, if the Order Type is GTD.'
          type: string
          format: date-time
          x-type-name: UtcDateTime
        ExpirationDateContainsTime:
          title: 'In some instance, GTD orders are allowed to include an expiration time. This field indicates if the ExpirationDate can contain a time component.'
          type: boolean
      additionalProperties: false
    OrderEntryType:
      title: Order event type
      enum:
        - All
        - Last
      type: string
      x-enum-descriptions:
        Last: 'EntryType:- Last: Only return the latest state of an order.'
        All: 'EntryType:- All: Return all entries pertaining to any order.'
    OrderEntryTypeNullable:
      $ref: '#/components/schemas/OrderEntryType'
    OrderLogStatus:
      enum:
        - Cancelled
        - Changed
        - DoneForDay
        - Expired
        - Fill
        - FinalFill
        - Placed
        - Working
      type: string
      x-enum-descriptions:
        Placed: New order placement.
        Working: System or dealer initiated order placement in external OMS of existing order.
        Changed: Order change.
        Cancelled: Order cancel initiated by client or dealer.
        Fill: Order fill - (Also used for trade on quote in OrderLog)
        FinalFill: Order fill - final fill of an open order.
        DoneForDay: Order is done for day in external OMS.
        Expired: Order has expired.
    OrderLogStatusNullable:
      $ref: '#/components/schemas/OrderLogStatus'
    OrderState:
      title: Order state prepared with order status and sub status
      enum:
        - Cancelled
        - Expired
        - Traded
        - WaitCondition
        - Working
      type: string
      x-enum-descriptions:
        Working: Working
        Traded: Traded
        Cancelled: Cancelled
        Expired: Expired
        WaitCondition: Wait condition
      x-type-warning: FlaggableEnum
    OrderStateNullable:
      $ref: '#/components/schemas/OrderState'
    OrderStatus:
      title: Order status
      enum:
        - Cancelled
        - Changed
        - DoneForDay
        - Expired
        - Fill
        - FinalFill
        - Placed
        - Working
      type: string
      x-enum-descriptions:
        Placed: New order placement.
        Working: System or dealer initiated order placement in external OMS of existing order.
        Changed: Order change.
        Cancelled: Order cancel initiated by client or dealer.
        Fill: Order fill - (Also used for trade on quote in OrderLog)
        FinalFill: Order fill - final fill of an open order.
        DoneForDay: Order is done for day in external OMS.
        Expired: Order has expired.
    OrderStatusNullable:
      $ref: '#/components/schemas/OrderStatus'
    OrderSubStatus:
      title: The OrderSubStatus identifies the sub status of an order.
      enum:
        - Confirmed
        - Rejected
        - Requested
        - RouteRequestPending
        - RouteRequested
        - WaitCondition
      type: string
      x-enum-descriptions:
        Requested: Order request received by a client or dealer facing service.
        RouteRequested: Order request is routed to exchange/broker interface (a.k.a. STP server).
        RouteRequestPending: Order request is pending at exchange/broker.
        Confirmed: 'Order request is confirmed by the order manager, exchange or broker.'
        Rejected: 'Order request is rejected by client facing service, order manager or externally by exchange or broker.'
        WaitCondition: Order request is waiting to meet conditon
    Origin:
      title: Case origin
      enum:
        - Email
        - Phone
        - System
        - Web
      type: string
      x-enum-descriptions:
        Phone: Phone
        Email: Email
        Web: Web
        System: Saxo System
    OriginNullable:
      $ref: '#/components/schemas/Origin'
    OvernightFinancing:
      title: Overnight Financing
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    OwnerAddress:
      type: object
      properties:
        Address:
          title: Address
          type: string
        AddressExt:
          title: Address ext
          type: string
        BuildingName:
          title: Building name
          type: string
        City:
          title: City
          type: string
        CityNew:
          title: City new
          type: string
        CoName:
          title: Care-of (c/o) name.
          type: string
        CounterpartType:
          title: The Counterpart type
          type: string
        Country:
          title: Country
          type: string
        CountryIsoCode:
          title: Country ISO code.
          type: string
        CountryIsoName:
          title: Country ISO name.
          type: string
        DisplayableAddress:
          title: Address that is easy to display
          type: array
          items:
            type: string
        Email:
          title: Owner's email
          type: string
        Fax:
          title: Fax
          type: string
        Floor:
          title: Floor number
          type: string
        LocalArea:
          title: Local area name.
          type: string
        Number:
          title: Street number.
          type: string
        OwnerName:
          title: Owner's name
          type: string
        Phone:
          title: Owner's phone number
          type: string
        PoBox:
          title: Post office box.
          type: string
        PostalCode:
          title: Postal Code
          type: string
        PostalDistrict:
          title: Postal district.
          type: string
        Side:
          title: Side
          type: string
        State:
          title: State.
          type: string
        StreetName:
          title: Street name.
          type: string
        TaxId:
          title: Tax ID
          type: string
        Unit:
          title: Building complex unit number
          type: string
      additionalProperties: false
    PIIUpdateRequestStatus:
      title: Last update request status
      enum:
        - NoRenewalEntityExists
        - RenewalEntityInProcessAwaitingCrmUserInput
        - RenewalEntityInProcessAwaitingCustomerInput
        - RenewalEntityProcessed
      type: string
      x-enum-descriptions:
        NoRenewalEntityExists: No renewal entity exists.
        RenewalEntityInProcessAwaitingCustomerInput: Renewal entity in process awaiting customer input.
        RenewalEntityInProcessAwaitingCrmUserInput: Renewal entity in process awaiting crm user input.
        RenewalEntityProcessed: Renewal entity processed.
    ParentInstrumentInfo:
      title: Parent instrument information of an order to identify FutureStrategy orders
      type: object
      properties:
        AssetType:
          title: Parent AssetType value of an order to identify FutureStrategy orders
          allOf:
            - $ref: '#/components/schemas/AssetTypeNullable'
        BuySell:
          title: Parent BuySell value of an order to identify FutureStrategy orders
          allOf:
            - $ref: '#/components/schemas/BuySellNullable'
        Uic:
          title: Parent Uic value of an order to identify FutureStrategy orders
          type: integer
          format: int32
      additionalProperties: false
    ParentOrderInfo:
      title: Contains parent order specific information
      type: object
      properties:
        ParentAveragePrice:
          title: The difference of execution price of two legs for Traded events (currently relevant for future strategy orders only)
          type: number
      additionalProperties: false
    PaymentProvider:
      enum:
        - Ideal
        - Paytrail
        - Trustly
        - WeCollect
        - WorldPay
      type: string
      x-enum-descriptions:
        WorldPay: Worldpay payment provider
        WeCollect: Wecollect payment provider
        Paytrail: Paytrail payment provider
        Trustly: Trustly payment provider
        Ideal: Ideal
    PaymentProviderNullable:
      $ref: '#/components/schemas/PaymentProvider'
    PerformanceResponse:
      title: Client performance response
      type: object
      properties:
        DailySeries:
          title: Daily series for the requested period
          type: array
          items:
            $ref: '#/components/schemas/MembershipPoint'
        MonthlySeries:
          title: Monthly series for the requested period
          type: array
          items:
            $ref: '#/components/schemas/MembershipPoint'
        YearlySeries:
          title: Yearly series for the requested period
          type: array
          items:
            $ref: '#/components/schemas/MembershipPoint'
      additionalProperties: false
    PersonalIdType:
      enum:
        - DriversLicenseNumber
        - NIFID
        - NationalIdentityCard
        - NationalMedicalCard
        - NorwegianPersonNumber
        - Other
        - PassportNumber
        - TaxIdNumber
      type: string
      x-enum-descriptions:
        PassportNumber: Passportnumber
        DriversLicenseNumber: Drivers license number
        NationalIdentityCard: National identity card
        TaxIdNumber: Tax id number
        Other: Other type
        NIFID: NIFID Type
        NorwegianPersonNumber: Norwegian person number
        NationalMedicalCard: National medical card
    PersonalIdTypeNullable:
      $ref: '#/components/schemas/PersonalIdType'
    PiiClientBankInformation:
      type: object
      properties:
        AccountNumber:
          title: Bank account number
          type: string
        AccountTypeCode:
          title: Account type code
          type: string
        BankName:
          title: Bank name
          type: string
        BranchCode:
          title: Bank branch code
          type: string
        ClearingCode:
          title: Clearing code
          type: string
        Name:
          title: Bank name
          type: string
      additionalProperties: false
    PiiClientContactInfo:
      type: object
      properties:
        FaxNumber:
          title: Client Contact fax number.
          type: string
        FourthEmail:
          title: Client Contact fourth email.
          type: string
        MobileNumber:
          title: Client Contact mobile number.
          type: string
        PhoneNumber:
          title: Client Contact phone number.
          type: string
        PrimaryEmail:
          title: Client Contact primary email.
          type: string
        SecondaryEmail:
          title: Client Contact secondary email.
          type: string
        SecondaryPhoneNumber:
          title: Client Contact phone number.
          type: string
        ThirdEmail:
          title: Client Contact third email.
          type: string
      additionalProperties: false
    PiiClientDetails:
      type: object
      properties:
        AliasFirstName:
          title: Contact's first name.
          type: string
        AliasLastName:
          title: Contact's last name.
          type: string
        AliasName:
          title: Alias Name
          type: string
        ClientId:
          title: Client Id
          type: string
        DateOfBirth:
          title: Contact's birthdate.
          type: string
        FullName:
          title: Combined first and last name.
          type: string
        Gender:
          title: Contact's gender.
          type: string
        MaidenName:
          title: Maiden Name
          type: string
        MaritalStatus:
          title: Marital status of the contact.
          type: string
        OriginalScriptFirstName:
          title: Original Script First Name
          type: string
        OriginalScriptLastName:
          title: Original Script Last Name
          type: string
        OriginalScriptName:
          title: Original Script Name
          type: string
        PiiClientBankInformation:
          title: Bank details
          allOf:
            - $ref: '#/components/schemas/PiiClientBankInformation'
        PiiClientContactInfo:
          title: Contact details.
          allOf:
            - $ref: '#/components/schemas/Models.PiiClientContactInfo'
        PiiClientIdInfo:
          title: Client IDs
          allOf:
            - $ref: '#/components/schemas/PiiClientIdInfo'
        PiiClientRegisteredAddress:
          title: Address details.
          allOf:
            - $ref: '#/components/schemas/Models.PiiClientRegisteredAddress'
        PiiClientRegisteredOriginalScriptAddress:
          title: Registered original script address
          allOf:
            - $ref: '#/components/schemas/PiiClientRegisteredOriginalScriptAddress'
        PiiEmploymentStatusInfo:
          title: Employment details.
          allOf:
            - $ref: '#/components/schemas/PiiEmploymentStatusInfo'
        PiiIncomeInfo:
          title: Income details.
          allOf:
            - $ref: '#/components/schemas/PiiIncomeInfo'
        PiiJapanLocalInfo:
          title: Local information (JP)
          allOf:
            - $ref: '#/components/schemas/PiiJapanLocalInfo'
        PiiNationalityAndCitizenshipInfo:
          title: Nationality and Citizenship details.
          allOf:
            - $ref: '#/components/schemas/PiiNationalityAndCitizenshipInfo'
        PiiSingaporeLocalInfo:
          title: Local information (SG) details.
          allOf:
            - $ref: '#/components/schemas/PiiSingaporeLocalInfo'
        PiiStatusInfo:
          title: Status information.
          allOf:
            - $ref: '#/components/schemas/PiiStatusInfo'
        PiiUkLocalInfo:
          title: Uk Client Local Info
          allOf:
            - $ref: '#/components/schemas/PiiUkLocalInfo'
        PiiWealthInfo:
          title: Wealth related details.
          allOf:
            - $ref: '#/components/schemas/PiiWealthInfo'
        PiiWorkStatusInfo:
          title: Work Status details.
          allOf:
            - $ref: '#/components/schemas/PiiWorkStatusInfo'
        RegisteredAddressCoName:
          title: 'Registered Address: CO Name (former CO Address)'
          type: string
        SubscriberName:
          title: Subscriber Name - Service Billing
          type: string
        Title:
          title: Contact name's title.
          type: string
      additionalProperties: false
    PiiClientIdInfo:
      title: IDs
      type: object
      properties:
        BillPaymentReference:
          title: Bill payment reference
          type: string
        CprNumber:
          title: CPR number
          type: string
        JapanMyNumber:
          title: My Number for Japan
          type: string
        NorwegianPersonNumber:
          title: Norwegian Person number.
          type: string
        PersonalId:
          title: Personal ID
          type: string
        TaxIdNif:
          title: NIF Tax ID
          type: string
        TaxIdTin:
          title: Tax ID replacing the TIN (Personal ID)
          type: string
        TypeOfId:
          title: 'Type of ID #'
          type: string
        UsTaxId:
          title: US Tax ID
          type: string
        UsTaxIdType:
          title: US Tax ID Type (Individual Types)
          type: string
      additionalProperties: false
    PiiClientRegisteredAddress:
      type: object
      properties:
        BuildingName:
          title: Client Registered Address building name.
          type: string
        BuildingNo:
          title: Client Registered Address building number.
          type: string
        City:
          title: Client Registered Address city.
          type: string
        Country:
          title: Client Registered Address country.
          type: string
        Floor:
          title: Client Registered Address floor.
          type: string
        LocalArea:
          title: Client Registered Address local area.
          type: string
        PostOfficeBox:
          title: Client Registered Address post office box.
          type: string
        SideDoor:
          title: Client Registered Address side door.
          type: string
        StateOrProvince:
          title: Client Registered Address state or province.
          type: string
        Street:
          title: Client Registered Address street.
          type: string
        Unit:
          title: Client Registered Address unit.
          type: string
        ZipCode:
          title: Client Registered Address zip code.
          type: string
      additionalProperties: false
    PiiClientRegisteredOriginalScriptAddress:
      type: object
      properties:
        BuildingName:
          title: Building name
          type: string
        BuildingNo:
          title: Building number
          type: string
        City:
          title: City name
          type: string
        CoName:
          title: Care-of (c/o) name.
          type: string
        Country:
          title: Country name
          type: string
        Floor:
          title: Floor number
          type: string
        LocalArea:
          title: Local area name
          type: string
        PostOfficeBox:
          title: Post office box
          type: string
        SideDoor:
          title: Side door
          type: string
        StateOrProvince:
          title: State or province
          type: string
        Street:
          title: Street name
          type: string
        Unit:
          title: Building complex unit number
          type: string
        ZipCode:
          title: Zip code
          type: string
      additionalProperties: false
    PiiEmploymentStatusInfo:
      title: Employment
      type: object
      properties:
        EmployerAddress:
          title: Employer address
          type: string
        EmployerName:
          title: Employer name
          type: string
        EmploymentFunctions:
          title: Employment functions
          type: string
        IsWorkingInPoliticalPublicOffice:
          title: Has the customer's occupation been "Political/Public office" within the last year? Selected during 2x Onboarding.
          type: boolean
        IsWorkingInPrivateCompanyExecutiveManagement:
          title: 'Has the customer''s occupation been "Private company, Executive Management/Board" within the last year? Selected during Onboarding.'
          type: boolean
        IsWorkingInPrivateCompanyOther:
          title: 'Has the customer''s occupation been "Private company, other" within the last year? Selected during Onboarding.'
          type: boolean
        IsWorkingInPublicSectorOrStateExecutiveBoard:
          title: 'Has the customer''s occupation been "Public sector/state, Executive Management/Board" within the last year? Selected during Onboarding.'
          type: boolean
        IsWorkingInPublicSectorOrStateOther:
          title: 'Has the customer''s occupation been "Public sector/state, other" within the last year? Selected during Onboarding.'
          type: boolean
        OccupationalBackground:
          title: Occupational Background
          type: string
        PositionTitle:
          title: Position title
          type: string
        WorkStatusInfo:
          title: Work status
          type: string
      additionalProperties: false
    PiiIncomeInfo:
      title: Income
      type: object
      properties:
        DividendsInterestFromOwnCompany:
          title: Dividends/interest from own company.
          type: boolean
        DividendsInterestFromStocksBonds:
          title: Dividends/interests from stocks/bonds etc.
          type: boolean
        Others:
          title: Others (secondary income)
          type: boolean
        Royalties:
          title: Royalties (secondary income)
          type: boolean
        SalaryAfterTax:
          title: Salary after tax
          type: string
        SecondaryIncome:
          title: Secondary income
          type: string
        TotalSecondaryIncome:
          title: Total Amount of secondary sources of income
          type: string
      additionalProperties: false
    PiiJapanLocalInfo:
      title: Local information (JP)
      type: object
      properties:
        AnnualIncomeIn10000Jpy:
          title: 'Japan: Annual Income (in 10 000 JPY)'
          type: string
        CommodityFuturesTradingExpInYears:
          title: 'Japan: Commodity Futures Trade Experience (years)'
          type: integer
          format: int32
        FinancialAssetsIn10000Jpy:
          title: 'Japan: Financial Assets (10 000 JPY)'
          type: integer
          format: int32
        ForeignExchangeMarginTradingExpInYears:
          title: 'Japan: Foreign Exchange Margin Trade Experience (years)'
          type: integer
          format: int32
        InsiderAffiliatedCorporateCheck:
          title: 'Japan: Insider Affiliated Corporate Check'
          type: boolean
        InsiderAffiliatedCorporateName:
          title: 'Japan: Insider Affiliated Corporate Name'
          type: string
        InsiderAffiliatedDepartmentAndPosition:
          title: 'Japan: Insider Affiliated Department and Position'
          type: string
        InsiderBelongCorporateCheck:
          title: 'Japan: Insider Belong Corporate Check'
          type: boolean
        InsiderBelongCorporateName:
          title: 'Japan: Insider Belong Corporate Name'
          type: string
        InsiderInformationCorporateCheck:
          title: 'Japan: Insider Information Corporate Check'
          type: boolean
        InsiderInformationCorporateName:
          title: 'Japan: Insider Information Corporate Name'
          type: string
        InsiderMainStockHolderCorporateCheck:
          title: 'Japan: Insider Main Stockholder Corporate Check'
          type: boolean
        InsiderMainStockHolderCorporateName:
          title: 'Japan: Insider Main Stockholder Corporate Name'
          type: string
        InsiderRelativeCorporateCheck:
          title: 'Japan: Insider Relative Corporate Check'
          type: boolean
        InsiderRelativeCorporateName:
          title: 'Japan: Insider Relative Corporate Name'
          type: string
        InsiderRelativeDepartmentAndPosition:
          title: 'Japan: Insider Relative Department and Position'
          type: string
        InsiderResignedCorporateCheck:
          title: 'Japan: Insider Resigned Corporate Check'
          type: boolean
        InsiderResignedCorporateName:
          title: 'Japan: Insider Resigned Corporate Name'
          type: string
        InsiderResignedDepartmentAndLastPosition:
          title: 'Japan: Insider Resigned Department and Last Position'
          type: string
        JobInformation:
          title: 'Japan: Job Information (Occupation)'
          type: string
        LetterAddressType:
          title: 'Japan: Letter address type'
          type: string
        LetterOfAuthorization:
          title: QI - Letter of Authorization
          type: string
        MarginTradingExpInYears:
          title: 'Japan: Margin Trading Experience (years)'
          type: integer
          format: int32
        MyNumberVerifiedDate:
          title: 'Date on which my Number is to simplify administrative procedures by assigning everyone a single number to be used for social security, tax records, and disaster.'
          type: string
          format: date
          x-type-name: Date
        StockIndexFuturesTradingExpInYears:
          title: 'Japan: Stock Index Futures Trade Experience (years)'
          type: integer
          format: int32
        TaxPrefecture:
          title: Tax prefecture per 1st of Jan
          type: string
        TaxPrefectureValidYear:
          title: Tax Prefecture Valid  Year
          type: integer
          format: int32
        UsTaxDocumentation:
          title: US Tax Documentation
          type: string
      additionalProperties: false
    PiiNationalityAndCitizenshipInfo:
      title: Nationality and Citizenship
      type: object
      properties:
        CountryOfBirth:
          title: Country of Birth
          type: string
        IsUsCitizen:
          title: US Citizen
          type: boolean
        IsUsReportable:
          title: US Reportable
          type: boolean
        IsUsTaxLiable:
          title: US Tax Liable
          type: boolean
        Nationality:
          title: Nationality
          type: string
        PlaceOfBirth:
          title: Place of Birth
          type: string
        UsTaxExpiryYear:
          title: US Tax Expiry Year
          type: integer
          format: int32
      additionalProperties: false
    PiiSingaporeLocalInfo:
      title: Local information (SG)
      type: object
      properties:
        AnnualIncome:
          title: SG Annual Income (SGD)
          type: string
        Classification:
          title: SG Classification
          type: string
        HasRwsAcknowledgement:
          title: SG RWS Acknowledgement
          type: boolean
        InvestorProfile:
          title: SG Singapore Investor Profile
          type: string
        IsClassificationRequired:
          title: SG Classification Required
          type: boolean
        IsEducationalQualificationSatisfied:
          title: SG Educational Qualification Satisfied
          type: boolean
        IsSingaporePermanentResident:
          title: SG Permanent Resident
          type: boolean
        LastClassificationDate:
          title: SG Last Classification Date
          type: string
        NetWorth:
          title: SG Net Worth (SGD)
          type: string
        OnlineEducationModulePassed:
          title: SG Online Education Modules Passed
          type: string
      additionalProperties: false
    PiiStatusInfo:
      title: Status
      type: object
      properties:
        IsSaxoEmployee:
          title: If the contact is a Saxo Bank Group Employee or not
          type: boolean
        MarketingConsent:
          title: Marketing Consent
          type: boolean
        OnlineTradingExperience:
          title: Online Trading Experience
          type: string
        ServiceLanguage:
          title: Relation between Language and Contact
          type: string
      additionalProperties: false
    PiiUkLocalInfo:
      type: object
      properties:
        AnnualIncomeAfterTax:
          title: Annual Income After Tax
          type: number
        EstimatedValueOfSavingsAndInvestments:
          title: Estimated Value Of Savings And Investments
          type: number
        MonthlyIncomeAfterTax:
          title: Monthly Income After Tax
          type: number
        MonthlyOutgoing:
          title: Monthly Outgoing
          type: number
      additionalProperties: false
    PiiWealthInfo:
      title: Wealth
      type: object
      properties:
        Inheritance:
          title: Inheritance
          type: boolean
        InvestableAssets:
          title: Investable assets
          type: string
        NetWorth:
          title: Net Worth
          type: string
        OtherSourceOfWealth:
          title: Others source of wealth
          type: boolean
        ProfitFromSellingOwnCompany:
          title: Profit from selling own company
          type: boolean
        RoyalitiesSourceOfWealth:
          title: Royalties source of wealth
          type: boolean
        SavingFromSalaryPension:
          title: Savings from salary/pension
          type: boolean
        SourceOfWealth:
          title: Source of wealth
          type: string
        TradingProfit:
          title: Trading profit
          type: boolean
      additionalProperties: false
    PiiWorkStatusInfo:
      title: Work Status
      type: object
      properties:
        IsDiplomat:
          title: Diplomat
          type: boolean
        IsEmployed:
          title: Employed
          type: boolean
        IsFinancialSectorEmployee:
          type: boolean
        IsRetired:
          title: Has the customer's occupation been "Retired" within the last year? Selected during Onboarding.
          type: boolean
        IsSelfEmployed:
          title: Has the customer's occupation been "Self employed" within the last year? Selected during Onboarding.
          type: boolean
        IsStudent:
          title: Has the customer's occupation been "Student" within the last year? Selected during Onboarding.
          type: boolean
        IsUnemployed:
          title: Has the customer's occupation been "Unemployed" within the last year? Selected during Onboarding.
          type: boolean
        Occupation:
          title: Occupation
          type: string
      additionalProperties: false
    PlaceableOrderType:
      title: Placeable Order Type
      enum:
        - Algorithmic
        - DealCapture
        - GuaranteedStop
        - Limit
        - Market
        - PreviouslyQuoted
        - Stop
        - StopIfTraded
        - StopLimit
        - Switch
        - TrailingStop
        - TrailingStopIfTraded
        - Traspaso
        - TraspasoIn
      type: string
      x-enum-descriptions:
        Market: Market Order.
        Limit: Limit Order.
        StopIfTraded: Stop if traded.
        Stop: Stop Order.
        StopLimit: Stop Limit Order.
        TrailingStopIfTraded: Trailing stop if traded.
        TrailingStop: Trailing stop.
        Algorithmic: Algo order.
        Switch: 'Switch order, Sell X and Buy Y with one order.'
        Traspaso: Traspaso. Specific type of switch order. Only available on select MutualFunds.
        TraspasoIn: TraspasoIn. Specific type of switch order
        GuaranteedStop: Order Type currently not supported.
        PreviouslyQuoted: Order on Previous Quote. Only applies for B2BExecutionReports for Fx DMA Clients
        DealCapture: "Deal Capture Order. Specify to capture trades, which are already registered on\r\n            Exchange, into Saxo System. Currently supported for selected partners only."
    Platform:
      title: Platform (or Application)
      enum:
        - MyAccount
        - MyProfile
        - WebConnect
      type: string
      x-enum-descriptions:
        MyAccount: MyAccount
        WebConnect: WebConnect
        MyProfile: MyProfile
    PointActivityFieldGroup:
      title: Membership point field group
      enum:
        - DisplayAndFormat
      type: string
      x-enum-descriptions:
        DisplayAndFormat: Display and format
    PortfolioBasedMargin:
      type: object
      properties:
        ExtremeStressFactor:
          title: Extreme Stress Factor
          type: number
        Initial:
          title: Intial Margin Requirement
          type: number
        IntraWeek:
          title: Intra Week Margin Requirement
          type: number
        LiquidityThresholdAmount:
          title: Liquidity Threshold Amount
          type: number
        LiquidityThresholdCurrency:
          title: Liquidity Threshold Currency
          type: string
        VolatilityAddOn:
          title: Volatility AddOn
          type: number
        VolatilityStress:
          title: Volatility Stress
          type: number
      additionalProperties: false
    PreviewRequest:
      title: 'Specifies parameters for a transaction request, so the service can return a preview of the associated charges'
      required:
        - CardDefinitionId
        - PaymentId
        - AccountKey
        - Amount
        - Currency
        - IssuerCountryCode
      type: object
      properties:
        AccountKey:
          title: The account to transfer to.
          minLength: 1
          type: string
          x-type-name: AccountKey
        Amount:
          title: The ammount to transfer
          type: number
        CardDefinitionId:
          title: The card definition id
          type: string
        Currency:
          title: The currency to transfer the amount in.
          type: string
        IsAutoTrading:
          title: 'If the account is an AutoTrading account, this has to be set as true'
          type: boolean
        IssuerCountryCode:
          title: The creditcard issuer country
          type: string
        PaymentId:
          title: The payment id to use.
          type: string
        RegisteredCardId:
          title: 'If using a existing card, this should be set.'
          type: string
      additionalProperties: false
    PreviewResponse:
      title: Contains a preview of what charges and deposits will take place if the client goes ahead with the transaction.
      type: object
      properties:
        Amount:
          title: The amount in FromCurrency to transfer
          type: number
        AmountToCharge:
          title: 'The total amoun to charge to the cards, in account currency.'
          type: number
        AmountToDeposit:
          title: The amount to that will be deposited intor the account account after fee's are deducted.
          type: number
        DisplayFeeDisclaimer:
          title: Display fee disclaimer or not.
          type: boolean
        ExchangeRate:
          title: The exchange rate used for the transaction.
          type: number
        FromCurrency:
          title: The currency of the card to transfer from
          type: string
        ToCurrency:
          title: The currency of the account to transfer to
          type: string
        TransactionFee:
          title: The transaction fee payed in ToCurrency
          type: number
        TransferredFromCardAmount:
          title: Amount in CNY passed to WeCollect PSP. Other than china unionpay this value will be null.
          type: number
        TransferredFromCardCurrency:
          title: "In case of china unionpay card type this value will be CNY as we pass\r\n            amount in CNY to WeCollect payment service provider."
          type: string
      additionalProperties: false
    PriceDisplayFormatType:
      title: The format modifiers in which e.g. a price must be displayed and possibly edited.
      enum:
        - AllowDecimalPips
        - Fractions
        - ModernFractions
        - Normal
        - Percentage
      type: string
      x-enum-descriptions:
        Normal: No special display format for this price.
        Fractions: Decimals are denoted in as a fractions. Common for commodity futures. PriceDecimals indicated the nominator.
        ModernFractions: 'Special US Bonds futures fractional format (1/32s or 1/128s without nominator). If PriceDecimals = -5 then the nominator is 32, else 128.'
        Percentage: 'Display as percentage, e.g. 12.34%.'
        AllowDecimalPips: "Display the last digit as a smaller than the rest of the numbers. Note that this digit is not included in the number of decimals, effectively\r\n            increasing the number of decimals by one. E.g. 12.345 when Decimals is 2 and DisplayFormat is AllowDecimalPips."
    PriceDisplayFormatTypeNullable:
      $ref: '#/components/schemas/PriceDisplayFormatType'
    ProcessInfo:
      title: Data contract for process status
      type: object
      properties:
        HostName:
          title: Name of computer process is running on
          type: string
        Id:
          title: Process Id
          type: integer
          format: int32
        PeakWorkingSet:
          title: Maximum memory usage(in Bytes)
          type: integer
          format: int64
        ProcessTimePercent:
          title: Measurement of CPU Utilization Percentage based on .net process values
          type: number
        ProcessTimePercentPerformanceCounter:
          title: Measurement of CPU Utilization Percentage based on performance counter
          type: number
        StartTime:
          title: The time the process was started
          type: string
        Threads:
          title: Number of operating system threads running in process
          type: integer
          format: int32
        WorkingSet:
          title: Current memory usage (in Bytes)
          type: integer
          format: int64
      additionalProperties: false
    Product:
      title: Represents the classification for a group of products
      required:
        - Qualified
      type: object
      properties:
        AssetTypes:
          title: Asset Types related to the product area
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
        Name:
          title: The product name
          type: string
        ProductAreaId:
          title: Identifier for the product area
          type: integer
          format: int32
        Qualified:
          title: If the product is qualified or not
          type: boolean
        Questionnaire:
          title: Questionnaire for the product. Only for professional
          allOf:
            - $ref: '#/components/schemas/Questionnaire'
      additionalProperties: false
    ProductAreaResponse:
      title: The product area response.
      type: object
      properties:
        AssetTypes:
          title: Asset types belonging to corresponding product area
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
        Complexity:
          title: Complexity
          allOf:
            - $ref: '#/components/schemas/AssetComplexityNullable'
        ProductAreaId:
          title: Product Area ID
          type: integer
          format: int32
        ProductAreaName:
          title: Product Area Name
          type: string
      additionalProperties: false
    ProductareaAcceptRequest:
      title: Specifies that the client has seen the Riskwarning for the specified product areas.
      required:
        - ClientHasSeenRiskWarning
      type: object
      properties:
        AcceptWithConsent:
          title: Indicates if the risk warning has been accepted with written consent by user (i.e. Auriga user)
          type: boolean
        ClientHasSeenRiskWarning:
          title: Client has seen the risk warning related to trading inappropriate products.
          type: boolean
        ProductAreaIds:
          title: List of Product areas the client has seen the risk warning for.
          type: array
          items:
            type: integer
            format: int32
        SsoSessionId:
          title: Optionally specify session ID from SSO.
          type: string
          description: 'SSO uses a "composite id", consisting of both a guid and an integer.'
      additionalProperties: false
    Profile:
      title: The client profile
      enum:
        - None
        - Private
        - Professional
        - SemiProfessional
      type: string
      x-enum-descriptions:
        None: None
        Private: Private investor
        Professional: Professional investor
        SemiProfessional: Semi professional investor
    PutCall:
      title: "Specifies type of option. \r\n             Note: The Put/Call numerical values are not the same as defined in the enum _ClmFeedPutCallTypes\r\n                   enum _ClmFeedPutCallTypes { ClmFeedCall = 1, ClmFeedPut = 2 } \r\n            \r\n             (This enum defines a none (unspecified) value that is not defined in _PutCallTypes)"
      enum:
        - Call
        - None
        - Put
      type: string
      x-enum-descriptions:
        None: Not specified.
        Put: Put.
        Call: Call.
    PutCallNullable:
      $ref: '#/components/schemas/PutCall'
    Question:
      title: A single question within a Classification Questionnaire
      required:
        - QuestionId
      type: object
      properties:
        AnswerText:
          title: Answer Value
          type: string
        AnswerType:
          title: Answer Type
          allOf:
            - $ref: '#/components/schemas/AnswerType'
        Confirmed:
          title: If the question/terms have been accepted/confirmed by the user
          type: boolean
        QuestionId:
          title: Id of the Question
          type: string
        Text:
          title: The actual question text
          type: string
      additionalProperties: false
    QuestionDataType:
      title: The question data type.
      enum:
        - NumberRange
        - Options
      type: string
      x-enum-descriptions:
        Options: Options
        NumberRange: Number range
    QuestionOption:
      title: Represents an option to select as a potential answer to a question.
      required:
        - QuestionOptionId
        - Selected
      type: object
      properties:
        QuestionOptionId:
          title: ID of the specific option
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
        Selected:
          title: If the option has been selected or not
          type: boolean
        Text:
          title: Option text aka the answer
          type: string
      additionalProperties: false
    QuestionSection:
      title: Represents a section of questions
      required:
        - Questions
      type: object
      properties:
        AssetTypes:
          title: 'AssetType(s), nullable'
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
        Description:
          title: Section Description
          type: string
        Name:
          title: Name of the question section
          type: string
        Questions:
          title: List of questions belonging to the question section
          type: array
          items:
            $ref: '#/components/schemas/Models.Question'
        RenderType:
          title: List how section should be rendered.
          allOf:
            - $ref: '#/components/schemas/QuestionSectionRenderType'
        Title:
          title: Title of the question section
          type: string
      additionalProperties: false
    QuestionSectionRenderType:
      title: The question section render type.
      enum:
        - Default
        - RenderAllQuestionsInSectionAsTable
      type: string
      x-enum-descriptions:
        Default: Default
        RenderAllQuestionsInSectionAsTable: Render all questions in section as table
    QuestionSetType:
      title: The question set type.
      type: object
      properties:
        QuestionSetTypeId:
          title: The question set type ID
          type: string
        QuestionSetTypeName:
          title: The question set type name
          type: string
      additionalProperties: false
    QuestionSetTypePagedResult:
      type: object
      properties:
        Data:
          title: Gets or sets the page of results.
          type: array
          items:
            $ref: '#/components/schemas/QuestionSetType'
        NextId:
          title: Gets or sets the unique id of the next
          type: string
        TotalCount:
          title: "Gets or sets the total number of items in the \r\n            queried data set."
          type: integer
          format: int64
      additionalProperties: false
    Questionnaire:
      title: Represents Questionnaire related to product.
      required:
        - Questions
      type: object
      properties:
        Acknowledge:
          title: Acknowledge text
          type: string
        Questions:
          title: List of questions
          type: array
          items:
            $ref: '#/components/schemas/Question'
        Statement:
          title: Questionnaire statement text
          type: string
      additionalProperties: false
    Questionset:
      title: The questionset.
      required:
        - QuestionnaireTestId
        - QuestionSections
      type: object
      properties:
        Description:
          title: Description text
          type: string
        Name:
          title: 'Test name, may include version number'
          type: string
        PublishedDate:
          title: The publish date of the test
          type: string
          format: date
          x-type-name: Date
        QuestionSections:
          title: List of all the question sections
          type: array
          items:
            $ref: '#/components/schemas/QuestionSection'
        QuestionnaireTestId:
          title: The ID of the specific test
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
        Title:
          title: Title of the test
          type: string
      additionalProperties: false
    RegulatedBroker:
      type: object
      properties:
        AccountNumber:
          title: Regulated broker account.
          type: string
        Name:
          title: Regulated broker name
          type: string
      additionalProperties: false
    RelationshipManager:
      type: object
      properties:
        Email:
          title: Email of the person
          type: string
        Name:
          title: Name of the person
          type: string
        Office:
          title: Office details of the person
          allOf:
            - $ref: '#/components/schemas/Office'
      additionalProperties: false
    RenewalDataRequest:
      required:
        - RenewalEntityId
        - FieldData
      type: object
      properties:
        Documents:
          title: Renewal documents
          type: array
          items:
            $ref: '#/components/schemas/RenewalDocument'
        FieldData:
          title: This represent the update to the PII data of the client.
          type: array
          items:
            $ref: '#/components/schemas/FieldData'
        RenewalEntityId:
          title: Renewal Identifier.
          type: string
      additionalProperties: false
    RenewalDetails:
      type: object
      properties:
        OptionSets:
          title: OptionSets details
          type: array
          items:
            $ref: '#/components/schemas/OptionSet'
        RenewalEntityId:
          title: Renewal entity identifier.
          type: string
        Sections:
          title: List of sections.
          type: array
          items:
            $ref: '#/components/schemas/Section'
        State:
          title: Personal information renewal data update request status.
          allOf:
            - $ref: '#/components/schemas/PIIUpdateRequestStatus'
      additionalProperties: false
    RenewalDocument:
      title: Renewal Documents.
      type: object
      properties:
        Data:
          title: Base 64 encoded data
          type: string
        MimeType:
          title: Mime type
          type: string
        Name:
          title: Document name
          type: string
        Type:
          title: Renewal document types
          allOf:
            - $ref: '#/components/schemas/RenewalDocumentType'
      additionalProperties: false
    RenewalDocumentType:
      title: Renewal file types.
      enum:
        - AccountViewToIb
        - GeneralBusinessTerms
        - Other
        - PowerOfAttorney
        - ProofOfIdentity
        - ProofOfResidence
        - SourceOfFunds
        - TermsAndConditions
      type: string
      x-enum-descriptions:
        ProofOfIdentity: Proof of identity.
        ProofOfResidence: Proof of residence.
        SourceOfFunds: Source of funds.
        TermsAndConditions: Terms and conditions.
        GeneralBusinessTerms: General business terms.
        PowerOfAttorney: Power of attorney.
        AccountViewToIb: Account view to IB.
        Other: Other.
    RequestWithdrawalAccountNumberBeneficiaryBank:
      title: Request for withdrawal using Accuntnumber and Beneficiary Bank
      required:
        - AccountNumber
        - BeneficiaryName
        - BeneficiaryAddress
        - BeneficiaryCityAndPostcode
        - BeneficiaryCountry
        - AccountKey
        - Amount
        - Currency
      type: object
      properties:
        AccountKey:
          title: The account identifier in key format from which to transfer money from.
          minLength: 1
          type: string
          x-type-name: AccountKey
        AccountNumber:
          title: Destination Accountnumber.
          type: string
        AdvancedOptions:
          title: Advanced options.
          allOf:
            - $ref: '#/components/schemas/AdvancedOptions'
        Amount:
          title: The amount to be withdrawn.
          type: number
        BeneficiaryAddress:
          title: Address of the beneficiary
          type: string
        BeneficiaryCityAndPostcode:
          title: City and post(al) code of the beneficiary
          type: string
        BeneficiaryCountry:
          title: Country of the beneficiary
          type: string
        BeneficiaryInstructionId:
          title: Beneficiary instruction id
          pattern: ^\d*$
          type: string
          x-network-visibility: internal
        BeneficiaryName:
          title: Address of the beneficiary
          type: string
        ClearingCode:
          title: Clearing code.
          type: string
        Currency:
          title: The currency the amount is in.
          type: string
        IsAutoTrading:
          title: 'If the account is an AutoTrading account, this has to be set as true'
          type: boolean
          deprecated: true
          x-deprecated-date: '2022-01-01'
          x-network-visibility: internal
        MessageToBeneficiary:
          title: Comments by user that where he/she want money or any free text.
          type: string
        ReceivingCountryCode:
          title: Country ISO code of the receiver
          type: string
        RequestingSystem:
          title: System that requests the withdrawal
          allOf:
            - $ref: '#/components/schemas/RequestingSystem'
          x-network-visibility: internal
        Swift:
          title: Swift/BIC code of receiver bank
          type: string
        WithdrawalReasonId:
          title: Withdrawal Reason Id
          type: integer
          format: int32
          x-network-visibility: internal
      additionalProperties: false
    RequestWithdrawalAccountNumberSwift:
      title: Request for withdrawal using Accuntnumber and Swift
      required:
        - AccountNumber
        - AccountKey
        - Amount
        - Currency
      type: object
      properties:
        AccountKey:
          title: The account identifier in key format from which to transfer money from.
          minLength: 1
          type: string
          x-type-name: AccountKey
        AccountNumber:
          title: Destination Accountnumber.
          type: string
        AdvancedOptions:
          title: Advanced options.
          allOf:
            - $ref: '#/components/schemas/AdvancedOptions'
        Amount:
          title: The amount to be withdrawn.
          type: number
        BeneficiaryInstructionId:
          title: Beneficiary instruction id
          pattern: ^\d*$
          type: string
          x-network-visibility: internal
        ClearingCode:
          title: Clearing code.
          type: string
        Currency:
          title: The currency the amount is in.
          type: string
        IsAutoTrading:
          title: 'If the account is an AutoTrading account, this has to be set as true'
          type: boolean
          deprecated: true
          x-deprecated-date: '2022-01-01'
          x-network-visibility: internal
        MessageToBeneficiary:
          title: Comments by user that where he/she want money or any free text.
          type: string
        ReceivingCountryCode:
          title: Country ISO code of the receiver
          type: string
        RequestingSystem:
          title: System that requests the withdrawal
          allOf:
            - $ref: '#/components/schemas/RequestingSystem'
          x-network-visibility: internal
        Swift:
          title: Swift/BIC code of receiver bank
          type: string
        WithdrawalReasonId:
          title: Withdrawal Reason Id
          type: integer
          format: int32
          x-network-visibility: internal
      additionalProperties: false
    RequestWithdrawalIbanBeneficiaryBank:
      title: Request withdrawal using Iban and Beneficiary Bank
      required:
        - Iban
        - BeneficiaryName
        - BeneficiaryAddress
        - BeneficiaryCityAndPostcode
        - BeneficiaryCountry
        - AccountKey
        - Amount
        - Currency
      type: object
      properties:
        AccountKey:
          title: The account identifier in key format from which to transfer money from.
          minLength: 1
          type: string
          x-type-name: AccountKey
        AdvancedOptions:
          title: Advanced options.
          allOf:
            - $ref: '#/components/schemas/AdvancedOptions'
        Amount:
          title: The amount to be withdrawn.
          type: number
        BeneficiaryAddress:
          title: Address of the beneficiary
          type: string
        BeneficiaryCityAndPostcode:
          title: City and post(al) code of the beneficiary
          type: string
        BeneficiaryCountry:
          title: Country of the beneficiary
          type: string
        BeneficiaryInstructionId:
          title: Beneficiary instruction id
          pattern: ^\d*$
          type: string
          x-network-visibility: internal
        BeneficiaryName:
          title: Address of the beneficiary
          type: string
        ClearingCode:
          title: Clearing code.
          type: string
        Currency:
          title: The currency the amount is in.
          type: string
        Iban:
          title: Iban code.
          type: string
        IsAutoTrading:
          title: 'If the account is an AutoTrading account, this has to be set as true'
          type: boolean
          deprecated: true
          x-deprecated-date: '2022-01-01'
          x-network-visibility: internal
        MessageToBeneficiary:
          title: Comments by user that where he/she want money or any free text.
          type: string
        ReceivingCountryCode:
          title: Country ISO code of the receiver
          type: string
        RequestingSystem:
          title: System that requests the withdrawal
          allOf:
            - $ref: '#/components/schemas/RequestingSystem'
          x-network-visibility: internal
        Swift:
          title: Swift/BIC code of receiver bank
          type: string
        WithdrawalReasonId:
          title: Withdrawal Reason Id
          type: integer
          format: int32
          x-network-visibility: internal
      additionalProperties: false
    RequestWithdrawalIbanSwift:
      title: Request for Withdrawal using Swift or IBAN
      required:
        - Iban
        - AccountKey
        - Amount
        - Currency
      type: object
      properties:
        AccountKey:
          title: The account identifier in key format from which to transfer money from.
          minLength: 1
          type: string
          x-type-name: AccountKey
        AdvancedOptions:
          title: Advanced options.
          allOf:
            - $ref: '#/components/schemas/AdvancedOptions'
        Amount:
          title: The amount to be withdrawn.
          type: number
        BeneficiaryInstructionId:
          title: Beneficiary instruction id
          pattern: ^\d*$
          type: string
          x-network-visibility: internal
        ClearingCode:
          title: Clearing code.
          type: string
        Currency:
          title: The currency the amount is in.
          type: string
        Iban:
          title: Iban code.
          type: string
        IsAutoTrading:
          title: 'If the account is an AutoTrading account, this has to be set as true'
          type: boolean
          deprecated: true
          x-deprecated-date: '2022-01-01'
          x-network-visibility: internal
        MessageToBeneficiary:
          title: Comments by user that where he/she want money or any free text.
          type: string
        ReceivingCountryCode:
          title: Country ISO code of the receiver
          type: string
        RequestingSystem:
          title: System that requests the withdrawal
          allOf:
            - $ref: '#/components/schemas/RequestingSystem'
          x-network-visibility: internal
        Swift:
          title: Swift/BIC code of receiver bank
          type: string
        WithdrawalReasonId:
          title: Withdrawal Reason Id
          type: integer
          format: int32
          x-network-visibility: internal
      additionalProperties: false
    RequestedPlan:
      title: Requested Client Plan
      type: object
      properties:
        Id:
          title: Plan Id
          type: string
        Name:
          title: Plan Name
          type: string
        StartDate:
          title: Plan Start Date
          type: string
          format: date
          x-type-name: Date
      additionalProperties: false
    RequestingSystem:
      enum:
        - CCM
        - CashSystem
        - ClientPortal
        - ClientStation1
        - ClientStation2
        - OWM
        - Unknown
        - WebConnect
        - WebTrader
      type: string
      x-enum-descriptions:
        Unknown: The unknown
        ClientStation2: The client station2
        WebTrader: The web trader
        CashSystem: The cash system
        ClientStation1: The client station1
        CCM: The CCM
        WebConnect: The web connect
        ClientPortal: The client portal
        OWM: The owm
    ResponseFilterRegistration:
      title: Response filter/contract type registration.
      type: object
      properties:
        Contract:
          title: Contract type for which a response filter was registered.
          type: string
        Processor:
          title: ResponseFilterProcessor type handling contract.
          type: string
      additionalProperties: false
    RightsRestrictions:
      title: Rights and restriction
      type: object
      properties:
        AccountId:
          title: Internal account Id
          type: string
        ClientId:
          title: Client Id
          type: string
        Description:
          title: Name/Description of Rights and Restrictions
          type: string
        EndDate:
          title: End date for Rights and Restrictions
          type: string
          format: date
          x-type-name: Date
        ExternalAccountId:
          title: External account id
          type: string
        InstrumentDescription:
          title: Instrument description
          type: string
        InstrumentSymbolCode:
          title: Instrument symbol code
          type: string
        IsRightHolderRequire:
          title: Signifies if right holder is required
          type: boolean
        Quantity:
          title: Quantity of instrument
          type: number
        Reason:
          title: Reason for Rights and Restrictions
          type: string
        RegistrationDate:
          title: Registration date of Rights and Restrictions
          type: string
          format: date
          x-type-name: Date
        RestrictionId:
          title: Restriction id
          type: string
        StartDate:
          title: Start date for Rights and Restrictions
          type: string
          format: date
          x-type-name: Date
      additionalProperties: false
    RightsRestrictionsListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/RightsRestrictions'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    RolloverFee:
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/RolloverFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    RolloverFeeRule:
      type: object
      properties:
        Currency:
          title: Currency
          type: string
        Markup:
          title: Markup
          type: number
        NumberOfRollovers:
          title: The number of rollovers.
          type: integer
          format: int32
        Pct:
          title: Percentage
          type: number
        Value:
          title: Value
          type: number
      additionalProperties: false
    Rule:
      title: Rule
      enum:
        - DayTradingNotAllowed
        - ExchangeFeeConstituents
        - NoMoreBuyOnExchange
        - NoMoreBuyOnInstrument
        - OrderAmendmentNotAllowed
      type: string
      x-enum-descriptions:
        NoMoreBuyOnInstrument: Exchange does not permit BUY orders on this symbol for today.
        NoMoreBuyOnExchange: No more BUY orders allowed in the market today as the market daily quota is completely used.
        OrderAmendmentNotAllowed: 'This market does not permit amending orders which are accepted by market. So, please cancel and re-enter, if the original attributes of the order need to be changed.'
        DayTradingNotAllowed: This market does not permit selling on the same day of buying (day trading is not allowed).
        ExchangeFeeConstituents: 'A cumulative exchange fee is applicable on all transactions. Following fees are applicable on market value, China Clear Transfer Fee 0.2 bp | HKSCC Transfer Fee 0.2 bp | CSRC Securities Management Fee 0.2 bp | Handling Fee 0.487 bp. Total fee will be 1.087 bp of market.'
    SalesTrader:
      type: object
      properties:
        Email:
          title: Email of the person
          type: string
        Name:
          title: Name of the person
          type: string
        Office:
          title: Office details of the person
          allOf:
            - $ref: '#/components/schemas/Office'
      additionalProperties: false
    SaveDocument:
      required:
        - DocumentTypes
        - Name
        - Data
      type: object
      properties:
        Data:
          title: Document data in Base64 encoded string
          type: string
        DocumentTypes:
          title: Document types
          type: array
          items:
            $ref: '#/components/schemas/DocumentType'
        ExpiryDate:
          title: Expiry date
          type: string
          format: date
          x-type-name: Date
        IsSigned:
          title: Is signed document
          type: boolean
        IsUserDocument:
          title: Is user document
          type: boolean
        Name:
          title: Document name with extension
          type: string
      additionalProperties: false
    SaveDocumentRequest:
      title: Save document request
      required:
        - Documents
      type: object
      properties:
        Documents:
          title: Request documents
          type: array
          items:
            $ref: '#/components/schemas/SaveDocument'
      additionalProperties: false
    SaxoDetails:
      title: Saxo Bank details needed for the transfer
      required:
        - AccountKey
      type: object
      properties:
        AccountKey:
          title: Identifier of the client's account at Saxo Bank
          type: string
      additionalProperties: false
    ScheduledContractOptionTradingCondition:
      type: object
      properties:
        ContractOptionTradingCondition:
          title: Contract Option Trading Conditions
          allOf:
            - $ref: '#/components/schemas/ContractOptionTradingConditions'
        ScheduledDate:
          title: Scheduled date for changes
          type: string
      additionalProperties: false
    ScheduledInstrumentTradingConditons:
      type: object
      properties:
        CollateralValue:
          title: The percentage of the instrument collateral value that can be used for margin trading.
          type: number
        InitialCollateralValue:
          title: Initial Collateral Value for margin lending type account
          type: number
        InstrumentMarginRequirements:
          title: "The margin requirements for the instrument.\r\n            A margin requirement indicates the money reserved on the client’s account to cover a potential loss."
          type: array
          items:
            $ref: '#/components/schemas/InstrumentMarginRequirement'
        InterestRateInstrumentMarginRequirement:
          title: The base rate (1Y) interest rate margin requirement for the instrument.
          allOf:
            - $ref: '#/components/schemas/InstrumentMarginRequirement'
        MaintenanceCollateralValue:
          title: Maintenance Collateral Value for margin lending type account
          type: number
        MarginTierRequirement:
          title: "A margin tier expresses how much money is reserved on a client’s account to cover a potential loss. \r\n            The tiers are expressed in the exposure to the instrument across positions. \r\n            Values can vary depending on when the position is being held."
          allOf:
            - $ref: '#/components/schemas/MarginTierRequirement'
        PortfolioBasedMargin:
          title: Portfolio Based Margin
          allOf:
            - $ref: '#/components/schemas/PortfolioBasedMargin'
        Rating:
          title: Risk Rating.
          type: number
      additionalProperties: false
    ScheduledTradingConditions:
      type: object
      properties:
        ScheduledDate:
          title: Scheduled date for changes
          type: string
        TradingCondition:
          title: Trading conditions
          allOf:
            - $ref: '#/components/schemas/ScheduledInstrumentTradingConditons'
      additionalProperties: false
    ScheduledTradingConditionsFieldGroup:
      title: Enum ScheduledTradingConditionFieldGroup
      enum:
        - ScheduledTradingConditions
      type: string
      x-enum-descriptions:
        ScheduledTradingConditions: Scheduled Trading Conditions
      x-type-warning: FlaggableEnum
    SearchCriteriaFieldGroups:
      title: Specifies the field groups required in the response.
      enum:
        - Accounts
        - Default
        - Users
      type: string
      x-enum-descriptions:
        Default: The default value. The search response will not contain Accounts info if nothing is provided in the FieldGroups field.
        Accounts: Accounts field in the response will only be displayed if field group is Accounts.
        Users: Users field in the response will only be displayed if FiledGroups list contains Users.
    SearchFieldGroups:
      title: Specifies the field groups required in the response.
      enum:
        - Accounts
        - All
        - Users
      type: string
      x-enum-descriptions:
        Accounts: Accounts field in the response will only be displayed if field group is Accounts.
        Users: Users field in the response will only be displayed if FiledGroups list contains Users.
        All: Users and Accounts field in the response will  be displayed if FiledGroups list contains All.
      x-type-warning: FlaggableEnum
    SearchFieldGroupsNullable:
      $ref: '#/components/schemas/SearchFieldGroups'
    Section:
      type: object
      properties:
        DisplayType:
          title: Determines the way UI control should behave.
          allOf:
            - $ref: '#/components/schemas/DisplayType'
        Fields:
          title: List of fields.
          type: array
          items:
            $ref: '#/components/schemas/Field'
        Name:
          title: Section details.
          allOf:
            - $ref: '#/components/schemas/SectionInfo'
        Sections:
          title: List of sections.
          type: array
          items:
            $ref: '#/components/schemas/Section'
        Template:
          title: Default Template
          allOf:
            - $ref: '#/components/schemas/Section'
        Validations:
          title: Validations applied on Section.
          type: array
          items:
            $ref: '#/components/schemas/ValidationConstraint'
      additionalProperties: false
    SectionInfo:
      type: object
      properties:
        Key:
          title: Section key
          type: string
        Value:
          title: Translated value for the Section display name.
          type: string
      additionalProperties: false
    SecurityActivitySearchRequest:
      required:
        - ClientKey
      type: object
      properties:
        ClientKey:
          title: Client key
          minLength: 1
          type: string
          x-type-name: ClientKey
        From:
          title: From datetime in UTC
          type: string
          format: date-time
          x-type-name: UtcDateTime
        To:
          title: To datetime in UTC
          type: string
          format: date-time
          x-type-name: UtcDateTime
      additionalProperties: false
    SecurityDetails:
      title: Details for one security to get transferred.
      required:
        - Price
        - Quantity
        - Uic
      type: object
      properties:
        Price:
          title: The price per security
          type: number
        PurchaseDate:
          title: Purchase date of instrument
          type: string
          format: date
          x-type-name: Date
        Quantity:
          title: Quantity of security to transfer
          type: number
        Uic:
          title: Uic of the security
          type: string
      additionalProperties: false
    SecurityTransferReportData:
      type: object
      properties:
        AccountId:
          title: Account ID
          type: string
        AccountManager:
          title: Account Manager
          type: string
        BrokerContact:
          title: Broker Contact
          type: string
        BrokerMail:
          title: Broker Mail
          type: string
        BrokerName:
          title: Broker Name
          type: string
        BrokerPhone:
          title: Broker Phone
          type: string
        ClientAccountAtBroker:
          title: Client Account At Broker
          type: string
        ClientId:
          title: Client Id
          type: string
        ClientName:
          title: Client Name
          type: string
        InstrumentDetails:
          title: Instrument Details List
          type: array
          items:
            $ref: '#/components/schemas/InstrumentDetail'
        SubmissionDate:
          title: Submission Date
          type: string
          format: date
          x-type-name: Date
        TransferType:
          title: Transfer Type
          allOf:
            - $ref: '#/components/schemas/SecurityTransferType'
      additionalProperties: false
    SecurityTransferResponse:
      title: Response for security transfer
      type: object
      properties:
        TransferReferenceId:
          title: Unique transaction id for the transfer
          type: string
      additionalProperties: false
    SecurityTransferType:
      title: Which direction should the securites be transferred.
      enum:
        - TransferIn
        - TransferOut
      type: string
      x-enum-descriptions:
        TransferIn: Transfer securities from external broker to Saxo Bank
        TransferOut: Transfer securities Saxo Bank to external broker
    Segment:
      title: Segment of client
      enum:
        - Classic
        - Platinum
        - Premium
        - Vip
      type: string
      x-enum-descriptions:
        Classic: Classic
        Premium: Premium
        Platinum: Platinum
        Vip: Vip
    SegmentNullable:
      $ref: '#/components/schemas/Segment'
    ServerStatus:
      title: Data contract for server status.
      type: object
      properties:
        AppPoolId:
          title: Gets the current app pool id.
          type: string
        ApplicationName:
          title: Name of service group (host assembly)
          type: string
        ApplicationVersion:
          title: Version of service group (host assembly)
          type: string
        BuildTime:
          title: Gets the build time of the current assembly.
          type: string
        Created:
          title: UtcDateTime stamp for when this object was created.
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Customization:
          title: Information about how the services has been customized primarily through OpenApiStartup settings.
          allOf:
            - $ref: '#/components/schemas/IServiceCustomization'
        Dependencies:
          title: Information about the service dependencies.
          type: array
          items:
            $ref: '#/components/schemas/DependencyInfo'
        DeployTime:
          title: Gets the datetime of deployment (last modified).
          type: string
        DiskDrives:
          title: DiskDrives (drive space in GB)
          type: array
          items:
            $ref: '#/components/schemas/DiskDrive'
        FrameworkVersion:
          title: Version of OpenAI Framework in use
          type: string
        InternalInformation:
          title: InternalInformation
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
        LeasePeriod:
          title: The lease period (expiry) of the authentication token.
          type: integer
          format: int32
        LoadedAssemblies:
          title: 'Loaded assemblies, full'
          type: array
          items:
            $ref: '#/components/schemas/FileVersionInfo'
        LoadedAssembliesVersions:
          title: Loaded assemblies and versions
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
        LogicalProcessors:
          title: Information about number of logical processors on the box
          type: integer
          format: int32
        MachineUptime:
          title: Ticks since the machine was started.
          type: integer
          format: int64
        MachineUptimeText:
          title: Ticks since the machine was started in text.
          type: string
        NetFrameworkVersion:
          title: Version of .NET Framework in use
          type: string
        OSVersion:
          title: Version of server hosting Operating System.
          type: string
        PerformanceCounters:
          title: Values of performance counters reported by the servicegroup
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
        Process:
          title: Information about current process.
          allOf:
            - $ref: '#/components/schemas/ProcessInfo'
        ResponseFilters:
          title: Lists registered response filter/contract types.
          type: array
          items:
            $ref: '#/components/schemas/ResponseFilterRegistration'
        RouteTable:
          title: Gets or the route table.
          type: array
          items:
            $ref: '#/components/schemas/ApiGroupInfo'
        RunningIdentity:
          title: Identity in which the application is running.
          type: string
        SystemEnvironment:
          title: "SystemEnvironment is read from configuration and has to be one of the following:\r\n            \"Dev(elopment)\", \"Test\", \"Sim(ulation)\" or \"Live\"."
          type: string
        SystemUptime:
          title: Ticks since the service group was started.
          type: integer
          format: int64
        SystemUptimeText:
          title: Ticks since the service group was started in text.
          type: string
        TimeSpentMs:
          title: Time spent in ms to generate the status information.
          type: number
        ToolId:
          title: System ToolId (hard coded as 40 for OpenApi). See Iit.FrontOffice.Trading.Public.ToolId enum for full definition.
          type: integer
          format: int32
        WebAPIVersion:
          title: Version of WebAPI in use
          type: string
      additionalProperties: false
    Service:
      title: Represents a Service
      type: object
      properties:
        ExchangeAssetTypes:
          title: A list if asset types and exchanges for the service.
          type: array
          items:
            $ref: '#/components/schemas/ExchangeAssetTypes'
        Levels:
          title: A list of possible subscription levels
          type: array
          items:
            $ref: '#/components/schemas/Level'
        RestrictedCountries:
          title: Restricted countries
          type: array
          items:
            $ref: '#/components/schemas/Subscriptions.Country'
        ServiceId:
          title: The ID of the service
          type: string
        ServiceName:
          title: The name of the service
          type: string
        ServiceType:
          title: The type of service
          allOf:
            - $ref: '#/components/schemas/ServiceType'
      additionalProperties: false
    ServiceFee:
      title: ServiceFee
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    ServiceListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Service'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    ServiceType:
      title: Enum of possible service types
      enum:
        - Futures
        - News
        - Research
        - Stocks
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: Unknown
        Stocks: Stocks
        Futures: Futures
        News: News
        Research: Research
    ServiceUserAction:
      title: What is the caller allowed to do with this subscription
      enum:
        - None
        - Prolong
        - ProlongAgreement
        - Subscribe
        - Unsubscribe
        - ViewSubscription
      type: string
      x-enum-descriptions:
        None: No action available
        Subscribe: Allowed to subscribe
        Unsubscribe: Allowed to unsubscribe
        Prolong: Allowed to prolong a subscription
        ProlongAgreement: Allowed to prolong an agreement
        ViewSubscription: Allowed to view a subscription
    SettlementMarket:
      title: Settlement market
      type: object
      properties:
        Description:
          title: Description
          type: string
        SettlementMarketId:
          title: Settlement market id
          type: string
      additionalProperties: false
    SettlementStyle:
      enum:
        - CashDelivery
        - PhysicalDelivery
      type: string
      x-enum-descriptions:
        CashDelivery: Cash settled
        PhysicalDelivery: Physical delivery.
    SettlementStyleNullable:
      $ref: '#/components/schemas/SettlementStyle'
    Spread:
      title: Spread
      type: object
      properties:
        DisplayDecimals:
          title: The number of decimals used for display.
          type: integer
          format: int32
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    SpreadTypes:
      title: The spread types available.
      enum:
        - Target
        - Variable
      type: string
      x-enum-descriptions:
        Variable: Spread is variable
        Target: Spread is a target spread
    StoredCard:
      title: Stored Credit Card details for display to user.
      type: object
      properties:
        CardDefinitionId:
          title: The card definition id
          type: string
        CardNumber:
          title: 'The Card Number, we will only show first 6  didgits and last 4 didgits'
          type: string
        IssuerCountry:
          title: The creditcard issuer country
          type: string
        RegisteredCardId:
          title: The Registered Card Id
          type: string
      additionalProperties: false
    StringIEnumerableKeyValuePair:
      type: object
      properties:
        Key:
          type: string
        Value:
          type: array
          items:
            type: string
      additionalProperties: false
    StringObjectKeyValuePair:
      type: object
      properties:
        Key:
          type: string
        Value:
          allOf:
            - $ref: '#/components/schemas/Object'
      additionalProperties: false
    StringStringKeyValuePair:
      type: object
      properties:
        Key:
          type: string
        Value:
          type: string
      additionalProperties: false
    Subscription:
      title: Subscription
      type: object
      properties:
        AvailableActions:
          title: Available actions that the client can performe
          type: array
          items:
            $ref: '#/components/schemas/ServiceUserAction'
        From:
          title: Subscription start date
          type: string
          format: date-time
          x-type-name: UtcDateTime
        LevelType:
          title: Type of level
          allOf:
            - $ref: '#/components/schemas/LevelType'
        ServiceId:
          title: Service ID
          type: string
        SubscriptionClassification:
          title: Contains a subscription classification including price
          allOf:
            - $ref: '#/components/schemas/SubscriptionClassification'
        SubscriptionId:
          title: Subscription Id
          type: string
        To:
          title: Subscription end date
          type: string
          format: date-time
          x-type-name: UtcDateTime
      additionalProperties: false
    SubscriptionClassification:
      title: Subscription classification
      type: object
      properties:
        Classification:
          title: Classification
          allOf:
            - $ref: '#/components/schemas/Profile'
        Price:
          title: Price
          allOf:
            - $ref: '#/components/schemas/SubscriptionPrice'
      additionalProperties: false
    SubscriptionInfoFilter:
      title: Represents subscription filters for querying the subscription diagnostics endpoint.
      type: object
      properties:
        ApplicationId:
          title: Restricts the subscriptions to an application if specified.
          minimum: 1
          type: integer
          format: int32
          x-type-name: ApplicationId
        ContextId:
          title: Restricts the subscriptions to a streaming session if specified along with a session id.
          type: string
        Publisher:
          title: Restricts the subscriptions to a publisher if specified.
          type: string
        SessionId:
          title: Restricts the subscriptions to a session if specified.
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
          x-type-name: SessionId
        UserId:
          title: Restricts the subscriptions to a MITS user if specified.
          allOf:
            - $ref: '#/components/schemas/UserIdNullable'
      additionalProperties: false
    SubscriptionListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Subscription'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    SubscriptionPrice:
      title: The price of a service subscription
      type: object
      properties:
        Currency:
          title: Currency of cost
          type: string
        Value:
          title: Cost
          type: number
      additionalProperties: false
    SubscriptionRequest:
      title: "Subscription request. These are the answers provided on an agreement form.\r\n            The subscription is assigned to the currently logged in user."
      required:
        - ServiceId
        - LevelType
      type: object
      properties:
        AgreementValues:
          title: Array of agreement values
          type: array
          items:
            $ref: '#/components/schemas/AgreementValue'
        From:
          title: A UtcDateTime
          type: string
          format: date-time
          x-type-name: UtcDateTime
        LevelType:
          title: Subscription level
          allOf:
            - $ref: '#/components/schemas/LevelType'
        ServiceId:
          title: The service ID
          type: string
        UserKey:
          title: 'User Identifier Key: If specified will subscribe for specified user'
          minLength: 1
          type: string
          x-type-name: UserKey
      additionalProperties: false
    SubscriptionResponse:
      title: Subscription response
      type: object
      properties:
        SubscriptionId:
          title: Subscription ID
          type: string
      additionalProperties: false
    SubscriptionValues:
      title: Subscription values
      type: object
      properties:
        AgreementValues:
          title: 'Agreement values, pre-filled or entered by the user.'
          type: array
          items:
            $ref: '#/components/schemas/AgreementValue'
        From:
          title: From date
          type: string
          format: date-time
          x-type-name: UtcDateTime
        To:
          title: To date
          type: string
          format: date-time
          x-type-name: UtcDateTime
      additionalProperties: false
    Subscriptions.Country:
      title: Country
      type: object
      properties:
        CountryId:
          title: Country ID
          type: string
        CountryName:
          title: Country name
          type: string
      additionalProperties: false
    SwapPoints:
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    SwitchCommission:
      title: Switch Commission
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    TMAssessment:
      title: Target market assessment
      type: object
      properties:
        AbilityToBearLosses:
          title: Ability to bear losses
          type: array
          items:
            $ref: '#/components/schemas/TMOutlookTMAssessmentElement'
        ClientType:
          title: Client Type
          type: array
          items:
            $ref: '#/components/schemas/TMOutlookTMAssessmentElement'
        EfficiencyProfile:
          title: Efficiency Profile
          type: array
          items:
            $ref: '#/components/schemas/TMOutlookTMAssessmentElement'
        InvestmentHorizon:
          title: Investment Horizon
          type: array
          items:
            $ref: '#/components/schemas/TMOutlookTMAssessmentElement'
        KnowledgeAndExperiences:
          title: Knowledge and experiences
          type: array
          items:
            $ref: '#/components/schemas/TMOutlookTMAssessmentElement'
        Risk:
          title: Risk
          allOf:
            - $ref: '#/components/schemas/NullableTMAssessmentElement'
      additionalProperties: false
    TMOutlook:
      title: 'Based on Assessment Rating/Value, Outlook is decided. Assessment is bool value'
      enum:
        - Negative
        - Neutral
        - Positive
      type: string
      x-enum-descriptions:
        Neutral: When Assessment Value is null Then Outlook Neutral
        Positive: When Assessment Value is true/1 Then Outlook Positive
        Negative: When Assessment Value is false/0 Then Outlook Negative
    TMOutlookTMAssessmentElement:
      type: object
      properties:
        Description:
          title: Description
          type: string
        Id:
          title: Id
          type: string
        Name:
          title: Name
          type: string
        Rating:
          title: 'Target Market Assessment Rating. For Risk Assementment, this is numeric and boolean for other assessment categories.'
          allOf:
            - $ref: '#/components/schemas/TMOutlook'
      additionalProperties: false
    TMRiskElement:
      title: Different possible risk reward profiles
      type: object
      properties:
        Description:
          title: Description
          type: string
        Id:
          title: Id
          type: string
        Name:
          title: Name
          type: string
        Range:
          title: Possible values for Risk assessment for giveen category
          type: array
          items:
            type: integer
            format: int32
      additionalProperties: false
    Tax:
      title: Tax
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/TaxRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    TaxRule:
      type: object
      properties:
        BuySell:
          title: To identify if tax is buy or sell.
          allOf:
            - $ref: '#/components/schemas/Enums.BuySellNullable'
        CalculationType:
          title: Calculation type of applied tax.
          allOf:
            - $ref: '#/components/schemas/CalculationType'
        Currency:
          title: Currency
          type: string
        Description:
          title: Type of applicable tax.
          type: string
        Markup:
          title: Markup
          type: number
        Pct:
          title: Percentage
          type: number
        Value:
          title: Value
          type: number
      additionalProperties: false
    Tenor:
      title: Tenor
      type: object
      properties:
        Period:
          title: "Period, \r\n            example: 1W = 1 week\r\n                     1M = 1 month\r\n                     1Y = 1 year"
          type: string
        Spread:
          title: The spread
          type: number
      additionalProperties: false
    TermsAndConditions:
      title: The terms and conditions.
      type: object
      properties:
        AutoTradingTermsAndConditionsStatus:
          title: Auto trading terms and conditions status
          allOf:
            - $ref: '#/components/schemas/AutoTradingTermsAndConditionsStatus'
      additionalProperties: false
    TicketFee:
      title: Ticket Fee
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    TimeFieldGroup:
      title: Performance FieldGroup
      enum:
        - All
        - Daily
        - Monthly
        - Yearly
      type: string
      x-enum-descriptions:
        Daily: Daily performance
        Monthly: Monthly performance
        Yearly: Yearly performance
        All: All performance
      x-type-warning: FlaggableEnum
    ToOpenOrClose:
      title: ToOpenOrClose
      enum:
        - ToClose
        - ToOpen
      type: string
      x-enum-descriptions:
        ToOpen: Order/Position is ToOpen
        ToClose: Order/Position is ToClose
    TomNext:
      title: TomNext
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    Trade:
      title: The trade.
      type: object
      properties:
        AccountCurrency:
          title: The account currency
          type: string
        AccountCurrencyDecimals:
          title: The amount of decimals used by the account currency
          type: integer
          format: int32
        AccountId:
          title: AccountId
          type: string
        AdjustedTradeDate:
          title: 'The ActualTradeDate is the intended trade date of a trade. E.g. In the case of corrections this date will refer back to the TradeDate of the original trade being corrected, else it defaults to TradeDate.'
          type: string
          format: date
          x-type-name: Date
        Amount:
          title: The amount bought or sold
          type: number
        AssetType:
          title: AssetType
          allOf:
            - $ref: '#/components/schemas/AssetTypeNullable'
        Barrier1:
          title: Lower barrier
          type: number
        Barrier2:
          title: Upper barrier
          type: number
        BookedAmountAccountCurrency:
          title: Booked amount in account currency
          type: number
        BookedAmountClientCurrency:
          title: Booked amount in client currency
          type: number
        BookedAmountUSD:
          title: Booked amount in USD
          type: number
        CaEventId:
          title: Id of the corporate action event giving rise to the trade.
          type: string
        CaEventTypeId:
          title: Id of the corporate action type.
          type: string
        CaEventTypeName:
          title: The name of the corporate action type.
          type: string
        ClientCurrency:
          title: The client currency
          type: string
        Direction:
          title: Direction
          allOf:
            - $ref: '#/components/schemas/TradePerspective'
        ExchangeDescription:
          title: Description of exchange
          type: string
        ExpiryDate:
          title: ExpiryDate
          type: string
          format: date
          x-type-name: Date
        FinancingLevel:
          title: Financing Level
          type: number
        ISINCode:
          title: Instrument ISIN Code
          type: string
          x-network-visibility: internal
        IndexRatio:
          title: Index Ratio
          type: number
        InitialMargin:
          title: Initial Margin
          type: number
        InstrumentCategoryCode:
          title: Category Code of the Instrument
          type: string
        InstrumentCurrencyDecimal:
          title: The amount of decimals used by the instrument currency
          type: integer
          format: int32
        InstrumentDescription:
          title: Instrument
          type: string
        InstrumentSectorName:
          title: Sector name of the instrument
          type: string
        InstrumentSectorTypeId:
          title: Sector type Id of instrument
          type: integer
          format: int32
        InstrumentSymbol:
          title: The instrument code
          type: string
        IssuerName:
          title: Issuer Name
          type: string
        MaintenanceMargin:
          title: Margin for maintenance
          type: number
        Mnemonic:
          title: Mnemonic
          type: string
        OptionEventType:
          title: 'Option type event, e.g call, put etc.'
          allOf:
            - $ref: '#/components/schemas/OptionEventTypeNullable'
        OrderId:
          title: OrderID
          type: string
        Price:
          title: The price in instrument currency
          type: number
        ResidualValue:
          title: Residual Value
          type: number
        RootInstrumentSectorName:
          title: Top Level Sector name of the instrument
          type: string
        RootInstrumentSectorTypeId:
          title: Top Level Sector Id of the instrument
          type: integer
          format: int32
        SpreadCostAccountCurrency:
          title: Spread added by counterpart in Account Currency
          type: number
        SpreadCostClientCurrency:
          title: Spread added by counterpart in Client Currency
          type: number
        SpreadCostUSD:
          title: Spread added by counterpart in USD
          type: number
        StopLoss:
          title: Knockout value for MiniFuture turbo instruments
          type: number
        Strike:
          title: 'Strike price for options: StockOptions, StockIndexOptions, FuturesOptions and FxVanillaOptions'
          type: number
        Strike2:
          title: Strike2
          type: number
        ToOpenOrClose:
          title: 'ToOpenOrClose: Relevant for StockOptions, StockIndexOptions and FuturesOptions'
          allOf:
            - $ref: '#/components/schemas/ToOpenOrClose'
        ToolId:
          title: Id of the system creating this trade.
          type: string
        TradeBarrierEventStatus:
          title: Trade barrier event status
          type: boolean
        TradeDate:
          title: Date of Trade
          type: string
          format: date
          x-type-name: Date
        TradeEventType:
          title: 'Trade type event,e.g bought, sold etc.'
          allOf:
            - $ref: '#/components/schemas/TradeEventType'
        TradeExecutionTime:
          title: Time the trade was executed
          type: string
          format: date-time
          x-type-name: UtcDateTime
        TradeId:
          title: TradeID
          type: string
        TradeType:
          title: The type of the trade.
          allOf:
            - $ref: '#/components/schemas/TradeType'
        TradedValue:
          title: The traded value ((price * amount*unitsize)*-1) in instrument currency
          type: number
        Uic:
          title: Uic of instrument
          type: integer
          format: int32
        UnderlyingInstrumentDescription:
          title: Description of underlying instrument
          type: string
        UnderlyingInstrumentSymbol:
          title: Symbol of underlying instrument
          type: string
        ValueDate:
          title: Trade value date
          type: string
          format: date
          x-type-name: Date
        Venue:
          title: Venue
          type: string
      additionalProperties: false
    TradeCost:
      title: Trade cost
      type: object
      properties:
        Long:
          title: Cost if long trade
          allOf:
            - $ref: '#/components/schemas/Cost'
        Short:
          title: Cost if short trade
          allOf:
            - $ref: '#/components/schemas/Cost'
      additionalProperties: false
    TradeEventType:
      title: The trade event type.
      enum:
        - Bought
        - Sold
        - TransferIn
        - TransferOut
        - Unknown
      type: string
      x-enum-descriptions:
        TransferOut: Position transferred out
        TransferIn: Position transferred in
        Bought: Position bought
        Sold: Position sold
        Unknown: Unknown trade event type
    TradeListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Trade'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    TradePerspective:
      title: TradePerspective (Long/Short/Put/Call/Long/Bull/Bear) of the instrument
      enum:
        - Bear
        - Bull
        - Call
        - Long
        - None
        - Put
        - Short
      type: string
      x-enum-descriptions:
        None: Not specified.
        Call: Put.
        Put: Call.
        Long: Long.
        Short: Short.
        Bull: Bull.
        Bear: Bear.
    TradePerspectiveNullable:
      $ref: '#/components/schemas/TradePerspective'
    TradeType:
      title: Specifies under what conditions an order should be triggered.
      enum:
        - Assignment
        - AutoAssignment
        - AutoExcercise
        - Expiry
        - Limit
        - LimitNotice
        - Market
        - MarketStopOut
        - NotAvailable
        - Stop
        - StopBid
        - StopLimit
        - StopNotice
        - StopOffer
        - StopTraded
      type: string
      x-enum-descriptions:
        Market: Market Order
        Limit: Limit Order
        StopBid: Stop Bid Order
        StopOffer: Stop Offer Order
        StopTraded: Stop Traded Order
        Stop: Stop Order
        StopLimit: Stop Limit Order
        MarketStopOut: Market (Stop Out)
        LimitNotice: The limit notice
        StopNotice: The stop notice
        Assignment: The assignment
        AutoAssignment: The automatic assignment
        AutoExcercise: The automatic excercise
        Expiry: The expiry
    TradingCondition:
      type: object
      properties:
        CommissionGroupName:
          title: Name of the commission group.
          type: string
        PartnerRiskProfile:
          title: The partner risk profile.
          type: string
      additionalProperties: false
    TradingConditionCostResponse:
      type: object
      properties:
        AccountCurrency:
          title: 'Currency of the selected account, used when listing currency conversion fees for the selected instrument back to the account currency.'
          type: string
        AccountID:
          title: Unique ID of the account.
          type: string
        Amount:
          title: Number of instrument.
          type: number
        AssetType:
          title: Asset Type
          allOf:
            - $ref: '#/components/schemas/AssetType'
        Cost:
          title: Trade Cost for the instrument.
          allOf:
            - $ref: '#/components/schemas/TradeCost'
        CostCalculationAssumptions:
          title: Calculation Assumptions
          type: array
          items:
            $ref: '#/components/schemas/CostAssumption'
        DisplayAndFormat:
          title: Includes Symbol and formatting info. (standard object also used in most other service groups)
          allOf:
            - $ref: '#/components/schemas/InstrumentDisplayAndFormat'
        HoldingPeriodInDays:
          title: Holding period in days.
          type: integer
          format: int32
        Instrument:
          title: Description of instrument.
          type: string
        Price:
          title: Price of instrument.
          type: number
        Uic:
          title: Instrument UIC.
          type: integer
          format: int32
      additionalProperties: false
    TradingConditionCostResponseListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/TradingConditionCostResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    TradingConditionFieldGroup:
      title: Enum TradingConditionFieldGroup
      enum:
        - DisplayAndFormat
      type: string
      x-enum-descriptions:
        DisplayAndFormat: Display and Format.
      x-type-warning: FlaggableEnum
    TradingConditionsResponse:
      title: Contains trading conditions that apply to the instrument
      type: object
      properties:
        AccountCurrency:
          title: 'Currency of the selected account, used when listing currency conversion fees for the selected instrument back to the account currency.'
          type: string
        AccumulatedVolume:
          title: The Accumulated FX volume calculated on the basis of discount profile period(Currently defaults to one month).
          type: number
        AmountCurrency:
          title: Currency of the amount being listed.
          type: string
        AmountOutstanding:
          title: (Requires License) Outstanding debt of the bond.
          type: number
        ApplicableFxCommissionRate:
          title: The applicable commission rate for FX
          type: number
        AssetType:
          title: Asset Type
          allOf:
            - $ref: '#/components/schemas/AssetType'
        AssetTypeClassification:
          title: Code indicating a mutual fund's classification. (Only available for instruments with AssetType = MutualFund).
          type: string
        BondType:
          title: The type of bond.
          allOf:
            - $ref: '#/components/schemas/BondTypeNullable'
        BorrowingRate:
          title: The borrowing costs as a percentage per year for holding short positions in single-stock CFDs.
          type: number
        CarryingCost:
          title: 'For instruments where carrying costs are applied (futures, exchange traded options) , the percentage markup on the interbank interest rate applied for holding the position.'
          allOf:
            - $ref: '#/components/schemas/Models.CarryingCost'
        CollateralValue:
          title: The percentage of the instrument collateral value that can be used for margin trading.
          type: number
        CommissionLimits:
          title: The commission structure for the selected instrument.
          type: array
          items:
            $ref: '#/components/schemas/CommissionLimit'
        Coupon:
          title: (Requires License) The coupon value of the instrument.
          type: number
        CouponDistributionFrequency:
          title: (Requires License) Frequency of coupon distribution
          allOf:
            - $ref: '#/components/schemas/CouponFrequencyNullable'
        CouponFixToFloatDate:
          title: (Requires License) Date when coupon will change from Fix to Float
          type: string
          format: date
          x-type-name: Date
        CouponFixingFrequency:
          title: (Requires License) The frequency with which the floating rate changes.
          allOf:
            - $ref: '#/components/schemas/CouponFrequencyNullable'
        CouponFormula:
          title: (Requires License) Formula used to compute coupon value (ReferenceRate +/- Margin)
          type: string
        CouponType:
          title: (Requires License) Fixed or floating rate coupon.
          allOf:
            - $ref: '#/components/schemas/BondsCouponTypeNullable'
        CurrencyCutSpreadRate:
          title: Conversion fee markup to the FX rate between the instrument and account currency.
          type: number
        CurrentForexSpread:
          title: Current forex spread.
          type: number
          x-network-visibility: internal
        CustodyFees:
          title: Custody fee per year for holding cash positions.
          allOf:
            - $ref: '#/components/schemas/Models.CustodyFee'
        DeflationFloorProtectionType:
          title: 'Deflation floor protection, applicable only for Inflation Linked Bonds.'
          allOf:
            - $ref: '#/components/schemas/Domain.LocalizedInfo'
        ExchangeFee:
          title: OBSOLETE Please use ExchangeFeeRules instead. This field will be removed from June 2022.
          allOf:
            - $ref: '#/components/schemas/Fee'
          deprecated: true
          x-deprecated-date: '2022-01-01'
        ExchangeFeeRules:
          title: Exchange fee rules if applied separately.
          type: array
          items:
            $ref: '#/components/schemas/ExchangeFeeRules'
        ExposureLimits:
          title: The maximum allowed exposure to the instrument.
          type: array
          items:
            $ref: '#/components/schemas/Exposure'
        FinanceInterestMarkUp:
          title: OBSOLETE Use FinancingInterest instead. This field will be removed from June 2022.
          type: number
          deprecated: true
          x-deprecated-date: '2022-06-01'
        Financing:
          title: Financing charge markup.
          allOf:
            - $ref: '#/components/schemas/Financing'
        FinancingInterest:
          title: Financing interest.
          allOf:
            - $ref: '#/components/schemas/FinancingInterest'
        FirstCouponDate:
          title: (Requires License) Date of next coupon payment.
          type: string
          format: date
          x-type-name: Date
        ForexPriceBands:
          title: Forex pricebands.
          type: array
          items:
            $ref: '#/components/schemas/ForexPriceBand'
        FundCountry:
          title: The country where a mutual fund is listed. (Only available for instruments with AssetType = MutualFund).
          type: string
        FundCountryCode:
          title: Fund Country Code. (Only available for instruments with AssetType = MutualFund).
          type: string
        FxForwardMaxOrderAutoPlaceAmount:
          title: Indicates the maximum amount where orders of fx forwards are accepted.
          type: number
        FxForwardMaxStreamingAmount:
          title: Indicates the highest amount for which streaming prices for fx forwards can be expected.
          type: number
        FxSpotMaxOrderAutoPlaceAmount:
          title: Indicates the maximum amount where orders of fx spot are accepted.
          type: number
        FxSpotMaxStreamingAmount:
          title: Indicates the highest amount for which streaming prices for fx spot can be expected.
          type: number
        HasKID:
          title: Whether the funds has an associated KID.
          type: boolean
        HoldingFee:
          title: Holding fee if applied.
          allOf:
            - $ref: '#/components/schemas/Models.HoldingFee'
        IndexRatio:
          title: (Requires License) Interest Charged when MarginLending is used
          type: number
        IndicativeSpread:
          title: "The spread used for fx forwards is indicative and depends on how far in the future the value date of the forward is. \r\n            The different time horizon is called tenors and this collection shows a current snapshot of the spreads for the different tenors."
          allOf:
            - $ref: '#/components/schemas/IndicativeSpread'
        InitialCollateralValue:
          title: Initial Collateral Value for margin lending type account
          type: number
        InstrumentCurrency:
          title: Instrument Currency.
          type: string
        InstrumentMarginRequirements:
          title: "The margin requirements for the instrument.\r\n            A margin requirement indicates the money reserved on the client’s account to cover a potential loss."
          type: array
          items:
            $ref: '#/components/schemas/InstrumentMarginRequirement'
        InterestPerDay:
          title: Interest charged per day for SRDs
          allOf:
            - $ref: '#/components/schemas/Financing'
        InterestRateInstrumentMarginRequirement:
          title: The base rate (1Y) interest rate margin requirement for the instrument.
          allOf:
            - $ref: '#/components/schemas/InstrumentMarginRequirement'
        InterestRateMarginRequirement:
          title: OBSOLETE Use InterestRateInstrumentMarginRequirement instead. This field will be removed from Jan 2022.
          allOf:
            - $ref: '#/components/schemas/MarginRequirement'
          deprecated: true
          x-deprecated-date: '2022-01-01'
        InternalCosts:
          title: "Internal costs are costs charged by a fund, but not booked by Saxo. \r\n            They are simply running costs at the fund’s end for holding a position in the fund."
          allOf:
            - $ref: '#/components/schemas/InternalCosts'
        IsBaseContractOnlineTradeable:
          title: 'Some instruments are tradable, but not through the API. This value indicates that a dealer is needed to manually place the trade.'
          type: boolean
        IsShortTraded:
          title: Indicates if the instrument is short traded.
          type: boolean
        IsSrdEligible:
          title: Is eligible for SRD
          type: boolean
        IsTradable:
          title: Instrument is currently tradeable or not.
          type: boolean
        IssueDate:
          title: (Requires License) Bond issue date.
          type: string
          format: date
          x-type-name: Date
        IssuePrice:
          title: (Requires License) Bond issue price.
          type: number
        IssueVolume:
          title: (Requires License) The volume issued of a bond.
          type: number
        IssuerName:
          title: (Requires License) The name of the entity that has issued this bond.
          type: string
        LastCouponDate:
          title: (Requires License) Last coupon date of bond.
          type: string
          format: date
          x-type-name: Date
        LoanInterest:
          title: Loan interest.
          allOf:
            - $ref: '#/components/schemas/LoanInterest'
        LoanInterestCharge:
          title: OBSOLETE Use LoanInterest instead. This field will be removed from June 2022.
          type: number
          deprecated: true
          x-deprecated-date: '2022-06-01'
        MaintenanceCollateralValue:
          title: Maintenance Collateral Value for margin lending type account
          type: number
        MarginRequirements:
          title: OBSOLETE Use InstrumentMarginRequirements instead. This field will be removed from Jan 2022.
          type: array
          items:
            $ref: '#/components/schemas/MarginRequirement'
          deprecated: true
          x-deprecated-date: '2022-01-01'
        MarginSchedule:
          title: A margin schedule is an indication of the change in margin requirement rules as they change during a day.
          allOf:
            - $ref: '#/components/schemas/MarginSchedule'
        MarginTierRequirement:
          title: "A margin tier expresses how much money is reserved on a client’s account to cover a potential loss. \r\n            The tiers are expressed in the exposure to the instrument across positions. \r\n            Values can vary depending on when the position is being held."
          allOf:
            - $ref: '#/components/schemas/MarginTierRequirement'
        Maturity:
          title: (Requires License) The maturity date of a bond.
          type: string
          format: date
          x-type-name: Date
        MaxAutoExecute:
          title: "Indicates the maximum amount or number of contracts that are automatically accepted. \r\n            Relevant for fx (spot and options), cfds and mutual funds. \r\n            The value is not set for all instruments."
          type: number
        MaxOrderAutoPlaceAmount:
          title: OBSOLETE Use FxSpotMaxOrderAutoPlaceAmount or FxForwardMaxOrderAutoPlaceAmount instead. This field will be removed from Jan 2022.
          type: number
          deprecated: true
          x-deprecated-date: '2022-01-01'
        MaxStreamingAmount:
          title: OBSOLETE Use FxSpotMaxStreamingAmount or FxForwardMaxStreamingAmount instead. This field will be removed from Jan 2022.
          type: number
          deprecated: true
          x-deprecated-date: '2022-01-01'
        MaxStreamingAmountFarDate:
          title: Max streaming amount for far dates for an fx forward.
          type: number
        MaxStreamingAmountNearDate:
          title: Max streaming amount for near dates for an fx forward.
          type: number
        MaximumCollateralAmount:
          title: The maximum collateral value that we offer for a single share for margin lending type account
          type: number
        MaximumCollateralAmountCurrency:
          title: The currency of MaximumCollateralAmount value
          type: string
        MaximumCouponRate:
          title: (Requires License) Maximum coupon rate (applicable for capped FRN’s)
          type: number
        MinOrderSize:
          title: "The minimum size of an order. For FX that is the nominal size of the resulting position (i.e. 5,000 USD for EURUSD).\r\n            For listed products it is the value of the resulting position calculated in the instruments currency as a function of its price. \r\n            Mutual Funds are special in that the order size can be denoted in a different currency than that of the instrument. \r\n            That currency can be found in MinOrderSizeCurrency field."
          type: number
        MinOrderSizeCurrency:
          title: Currency in which min order size is mentioned.
          type: string
        MinimumCouponRate:
          title: (Requires License) Minimum coupon rate (applicable for floored FRN’s)
          type: number
        Notes:
          title: (Requires License) Instrument notes.
          type: array
          items:
            type: string
        PortfolioBasedMargin:
          title: Portfoilio based margin
          allOf:
            - $ref: '#/components/schemas/PortfolioBasedMargin'
        PriceUnitDisplayName:
          title: The price unit display name.
          type: string
        Rating:
          title: Risk Rating.
          type: number
        RiskIndicator:
          title: Risk Indicator
          type: number
        RolloverFee:
          title: Rollover fee for SRDs - Charged if position is rolled over
          allOf:
            - $ref: '#/components/schemas/Models.RolloverFee'
        Rules:
          title: Rule set for trading.
          type: array
          items:
            $ref: '#/components/schemas/Rule'
        ScheduledTradingConditions:
          title: Scheduled Trading Conditions
          type: array
          items:
            $ref: '#/components/schemas/ScheduledTradingConditions'
        ServiceFee:
          title: Service Fee
          allOf:
            - $ref: '#/components/schemas/Models.ServiceFee'
          x-network-visibility: internal
        SpreadAsLowAs:
          title: Lowest possible spread. Value only relevant for fx.
          type: number
        SwapInterestMarkUp:
          title: OBSOLETE Use SwapPoints instead. This field will be removed from June 2022.
          type: number
          deprecated: true
          x-deprecated-date: '2022-06-01'
        SwapPoints:
          title: Swap points per day.
          allOf:
            - $ref: '#/components/schemas/Models.SwapPoints'
        Taxes:
          title: (Requires License) List of taxes applied.
          type: array
          items:
            $ref: '#/components/schemas/Models.Tax'
        TicketFee:
          title: "A ticket fee is a charge for doing a trade. \r\n            Ticket fees are for fx (both spot and options). \r\n            A ticket fee is applied if below the TicketFeeThreshold."
          allOf:
            - $ref: '#/components/schemas/Fee'
        TicketFeeThreshold:
          title: The commission threshold.
          type: number
        Uic:
          title: Instrument unique identifier
          type: integer
          format: int32
      additionalProperties: false
    TradingCost:
      title: Trading Cost.
      type: object
      properties:
        Commissions:
          title: The commission structure for the selected instrument.
          type: array
          items:
            $ref: '#/components/schemas/Commision'
        ConversionCost:
          title: Currency Conversion Cost
          allOf:
            - $ref: '#/components/schemas/ConversionCost'
        CustodyFee:
          title: Custody fee per year for holding cash positions.
          allOf:
            - $ref: '#/components/schemas/CustodyFee'
        ExchangeFee:
          title: Exchange fee if applied separately.
          allOf:
            - $ref: '#/components/schemas/ExchangeFee'
        ManagementFee:
          title: Management fee for model managed accounts
          allOf:
            - $ref: '#/components/schemas/ManagementFee'
          x-network-visibility: internal
        ServiceFee:
          title: Service fee per year for holding cash positions.
          allOf:
            - $ref: '#/components/schemas/ServiceFee'
        Spread:
          title: "The spread used for fx forwards is indicative and depends on how far in the future the value date of the forward is. \r\n            The different time horizon is called tenors and this collection shows a current snapshot of the spreads for the different tenors."
          allOf:
            - $ref: '#/components/schemas/Spread'
        TicketFee:
          title: "A ticket fee is a charge for doing a trade. \r\n            Ticket fees are for fx (both spot and options). \r\n            A ticket fee is applied if below the TicketFeeThreshold."
          allOf:
            - $ref: '#/components/schemas/TicketFee'
      additionalProperties: false
    TradingDetail:
      title: Commission group details per CommissionGroupId
      type: object
      properties:
        ClientPlanId:
          title: Client Plan Id
          type: string
        CommissionLimits:
          title: Commission Limits
          type: array
          items:
            $ref: '#/components/schemas/CommissionLimit'
        CommissiongroupId:
          title: Commission group id
          type: integer
          format: int32
        ForexPriceBands:
          title: Forex pricebands.
          type: array
          items:
            $ref: '#/components/schemas/ForexPriceBand'
        HoldingFee:
          title: Instrument holding fee
          allOf:
            - $ref: '#/components/schemas/Models.HoldingFee'
        IndicativeSpread:
          title: Indicative spread
          allOf:
            - $ref: '#/components/schemas/IndicativeSpread'
      additionalProperties: false
    TrailingCommission:
      title: Trailing Commission
      type: object
      properties:
        Pct:
          title: Fee in Percentage.
          type: number
        Rule:
          title: Fee Rule
          allOf:
            - $ref: '#/components/schemas/BaseFeeRule'
        Value:
          title: Fee Value.
          type: number
      additionalProperties: false
    TransactionCostCategory:
      title: Tax Cost category
      enum:
        - AdditionalTransactionCost
        - Tax
      type: string
      x-enum-descriptions:
        Tax: Cost is of tax type
        AdditionalTransactionCost: Cost is a additonal cost over transaction
    TransactionCostCategoryNullable:
      $ref: '#/components/schemas/TransactionCostCategory'
    TransactionOptions:
      title: 'List of available payment options, including possibly stored cards.'
      type: object
      properties:
        CardDefinitions:
          title: Available card types.
          type: array
          items:
            $ref: '#/components/schemas/CardDefinition'
        Countries:
          title: Credit Card issuer countries accepted.
          type: array
          items:
            $ref: '#/components/schemas/CreditCard.Country'
        Currencies:
          title: Currencies available for executing the transaction.
          type: array
          items:
            type: string
        IsAddNewCardAllowed:
          title: Shows enabled/disabled option for Add new card.
          type: boolean
        MaximumAllowedStoredCards:
          title: Shows the max limit for stored cards
          type: integer
          format: int32
        PaymentId:
          title: 'The current payment id, this should be included in all subsequent requests.'
          type: string
        RestrictedCardDefinitions:
          title: Cards that are not available for specific countries.
          type: array
          items:
            $ref: '#/components/schemas/CardDefinition'
        StoredCards:
          title: Cards used and stored in previous transactions.
          type: array
          items:
            $ref: '#/components/schemas/StoredCard'
        SubsidiaryAddress:
          title: Address of Saxo subsidiary where client belong.
          type: string
      additionalProperties: false
    TransactionRequest:
      title: Specifies request to be communicated to 3rd party payment provider to initate transaction.
      required:
        - PaymentId
        - IssuerCountryCode
        - IsRecurringPayment
        - SuccessUrl
        - FailureUrl
      type: object
      properties:
        FailureUrl:
          title: The url the 3rd party payment service should redirect to when the payment has failed to complete.
          type: string
        InstallationId:
          title: "Installation Id required to say WorldPay that which page they will display to user to enter credit/debit card details.\r\n            As GO has two themes black and white so we need to send this Id to WorldPay and on the basis of this Id worldPay will display\r\n            black/white page."
          type: string
        IsRecurringPayment:
          title: "When true, a registerd card will be used\r\n            NOTE: This doesnt make sence, we shouldnt have to supply this since they should have it from the get fee, \r\n            comunicating with PAL to get some clarity."
          type: boolean
        IssuerCountryCode:
          title: The creditcard issuer country
          type: string
        PaymentId:
          title: The current payment id
          type: string
        SuccessUrl:
          title: The url the 3rd party payment service should redirect to when the payment has successfully completed.
          type: string
      additionalProperties: false
    TransactionResponse:
      title: Response from posting a transaction request
      type: object
      properties:
        CupPostData:
          title: "Holds the POST request data in the form of key/value if user used the China unionpay\r\n            card type. Need this data to post to WeCollect PSP."
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
        Is3DSecureScheme:
          title: If card is 3D secure then this property will have value true.
          type: boolean
        Method:
          title: "Indicate what is action method. Now we have two payment service provider (PSP) and both require\r\n            diffrent type of method"
          type: string
        RedirectUrl:
          title: The url to 3rd party payment service where the client can continue the flow.
          type: string
        Secure3DPostData:
          title: "If card is 3D secure then UI need to send user to 3D authentication page\r\n            with the data stored in Secure3DPostData dictionary as hidden variable."
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
      additionalProperties: false
    TransactionResult:
      title: Subset of all possible transaction results.
      enum:
        - AmountBelowLimit
        - AmountExceedsLimit
        - DeclinedByIssuer
        - DuplicatedPayment
        - OK
        - SumOverPeriodExceedsLimit
        - SystemError
        - TransactionDeclined
        - UnableToProcessTransaction
      type: string
      x-enum-descriptions:
        OK: OK
        UnableToProcessTransaction: We are unable to process your transaction.
        AmountBelowLimit: The amount is below the per transaction limit. Please try a higher amount.
        AmountExceedsLimit: The amount exceeds the per transaction limit. Please try a lower amount.
        SumOverPeriodExceedsLimit: The running sum of deposits over the last period exceeds the allowed limit.
        TransactionDeclined: 'The transaction was declined – please try another card, or contact Customer Service.'
        DuplicatedPayment: This payment has already been submitted for processing – please await the payment result.
        DeclinedByIssuer: The transaction was declined by your issuer. Please try another card or contact your issuer.
        SystemError: CreditCard system error
    TransactionStatusRequest:
      title: Parameters needed to identify the status for a particular transaction.
      required:
        - RedirectUrl
      type: object
      properties:
        MerchantData:
          title: Merchant data sent by card issuer bank.
          type: string
        PageResponse:
          title: Token as a page response sent by card issuer bank.
          type: string
        PaymentProvider:
          title: Payment provider for payment service
          allOf:
            - $ref: '#/components/schemas/PaymentProviderNullable'
        RedirectUrl:
          title: "Redirect Url when user will be redirected from payment \r\n            service provider to Saxo environment."
          type: string
      additionalProperties: false
    TransactionStatusResponse:
      title: 'Status of transaction, whether completed, failed or in progress.'
      type: object
      properties:
        Account:
          title: The account transfered to.
          type: string
        AccountAmount:
          title: 'The amount to be transfered, excluding fees in the account currency.'
          type: number
        Amount:
          title: 'Amount to be transfered in the currency selected, excluding fees.'
          type: number
        AmountToTransfer:
          title: The amount to transfer.
          type: number
        CardDescription:
          title: The card description.
          type: string
        ExchangeRate:
          title: The exchange rate.
          type: number
        Fee:
          title: The fee payed
          type: number
        FromCurrency:
          title: The currency transfered from (card currency).
          type: string
        PaymentId:
          title: The payment ID.
          type: string
        ToCurrency:
          title: The currency transfered to (account currency).
          type: string
        TransactionResult:
          title: Current or end result of the transaction
          allOf:
            - $ref: '#/components/schemas/TransactionResult'
      additionalProperties: false
    TransferDetails:
      title: Transfer details needed for the transfer
      required:
        - SaxoDetails
        - BrokerDetails
        - TransferType
        - AssetType
        - SecuritiesTransferDetails
      type: object
      properties:
        AssetType:
          title: The asset type
          allOf:
            - $ref: '#/components/schemas/TransferableAssetType'
        BrokerDetails:
          title: The client's broker details
          allOf:
            - $ref: '#/components/schemas/BrokerDetails'
        BrokerSsi:
          title: The broker details
          allOf:
            - $ref: '#/components/schemas/BrokerSsiDetails'
        SaxoDetails:
          title: The client's Saxo Bank details
          allOf:
            - $ref: '#/components/schemas/SaxoDetails'
        SecuritiesTransferDetails:
          title: The securities details
          type: array
          items:
            $ref: '#/components/schemas/SecurityDetails'
        SettlementDate:
          title: The settlement date
          type: string
          format: date
          x-type-name: Date
        TradeDate:
          title: The agreed trade date
          type: string
          format: date
          x-type-name: Date
        TransferType:
          title: 'Transfer type, in or out of Saxo Bank'
          allOf:
            - $ref: '#/components/schemas/SecurityTransferType'
      additionalProperties: false
    TransferRequest:
      title: Transfer details needed for the transfer
      required:
        - FromAccountKey
        - ToAccountKey
        - Amount
        - Currency
      type: object
      properties:
        Amount:
          title: The amount
          type: number
        Currency:
          title: The currency
          type: string
        FromAccountKey:
          title: Source account
          minLength: 1
          type: string
          x-type-name: AccountKey
        IsAutoTrading:
          title: "SaxoInternal - If any of FromAccountKey or ToAccountKey refer to an AutoTrading account, then IsAutoTrading must be set to true. Otherwise the transfer will be rejected.\r\n            Note : IsAutoTrading is going to be decomissioned, removed the dependency of IsAutoTrading bool to validate request."
          type: boolean
          deprecated: true
          x-deprecated-date: '2022-01-01'
          x-network-visibility: internal
        ToAccountKey:
          title: Destination account
          minLength: 1
          type: string
          x-type-name: AccountKey
        WithdrawalReasonId:
          title: Withdrawal Reason Id
          type: integer
          format: int32
      additionalProperties: false
    TransferResult:
      title: Result of InterAccount transfer operation
      type: object
      properties:
        Commission:
          title: Commission charged to transfer amount
          type: number
        FromAccountAmount:
          title: Amount from the sender account
          type: number
        FromAccountCurrency:
          title: Currency from the sender account
          type: string
        ToAccountAmount:
          title: Amount to the receiver account
          type: number
        ToAccountCurrency:
          title: Currency to the receiver account
          type: string
      additionalProperties: false
    TransferType:
      title: Which direction should the account be transferred.
      enum:
        - TransferIn
        - TransferOut
      type: string
      x-enum-descriptions:
        TransferIn: Transfer securities from external account to Saxo Bank
        TransferOut: Transfer securities Saxo Bank to external account
    TransferableAssetType:
      title: The possible AssetTypes for which you can transfer in or out.
      enum:
        - Bond
        - CertificateBonus
        - CertificateCappedBonus
        - CertificateCappedCapitalProtected
        - CertificateCappedOutperformance
        - CertificateConstantLeverage
        - CertificateDiscount
        - CertificateExpress
        - CertificateTracker
        - CertificateUncappedCapitalProtection
        - CertificateUncappedOutperformance
        - CompanyWarrant
        - Etc
        - Etf
        - Etn
        - Fund
        - MiniFuture
        - Rights
        - Stock
        - Warrant
        - WarrantDoubleKnockOut
        - WarrantKnockOut
        - WarrantOpenEndKnockOut
        - WarrantSpread
      type: string
      x-enum-descriptions:
        Stock: Stock
        Bond: Bond
        Etf: Exchange traded fund.
        Etc: Etc
        Etn: Etn
        Fund: Fund
        Rights: Rights
        Warrant: Warrant
        MiniFuture: MiniFuture
        WarrantSpread: WarrantSpread
        WarrantKnockOut: WarrantKnockOut
        WarrantOpenEndKnockOut: WarrantOpenEndKnockOut
        WarrantDoubleKnockOut: WarrantDoubleKnockOut
        CertificateTracker: CertificateTracker
        CertificateUncappedCapitalProtection: CertificateUncappedCapitalProtection
        CertificateCappedCapitalProtected: CertificateCappedCapitalProtected
        CertificateDiscount: CertificateDiscount
        CertificateUncappedOutperformance: CertificateUncappedOutperformance
        CertificateCappedOutperformance: CertificateCappedOutperformance
        CertificateBonus: CertificateBonus
        CertificateCappedBonus: CertificateCappedBonus
        CertificateExpress: CertificateExpress
        CertificateConstantLeverage: CertificateConstantLeverage
        CompanyWarrant: 'Unlisted warrant issued by a corporation, often physically settled.'
    TransferredInstrumentDetail:
      title: Details of the Instrument transferred with WAT
      type: object
      properties:
        Currency:
          title: Currency
          type: string
        Description:
          title: Description
          type: string
        Exchange:
          title: Exchange
          type: string
        ExchangeText:
          title: ExchangeText
          type: string
        InstrumentSymbolCode:
          title: InstrumentSymbolCode
          type: string
        IsinCode:
          title: IsinCode
          type: string
        Price:
          title: Price
          type: number
        PurchaseDate:
          title: PurchaseDate
          type: string
          format: date
          x-type-name: Date
        Quantity:
          title: Quantity
          type: number
        Uic:
          title: Instrument Uic
          type: string
      additionalProperties: false
    TriggerPriceType:
      enum:
        - Ask
        - Bid
        - Close
        - LastTraded
        - Open
      type: string
      x-enum-descriptions:
        LastTraded: Last traded price.
        Open: Open price.
        Close: Closing price.
        Bid: Bid price.
        Ask: Ask price.
    TriggerPriceTypeNullable:
      $ref: '#/components/schemas/TriggerPriceType'
    UpdateAppApprovalLevelModel:
      title: Update app approval level
      required:
        - Level
      type: object
      properties:
        Level:
          title: App approval level
          allOf:
            - $ref: '#/components/schemas/AppApprovalLevel'
      additionalProperties: false
    UpdateCaseCommand:
      required:
        - NotifyClient
      type: object
      properties:
        NotifyClient:
          title: Inidcates that client should be notified about updates to the case
          type: boolean
      additionalProperties: false
    UpdateCaseRequest:
      title: Request to update a case
      type: object
      properties:
        CaseStatus:
          title: Status of case
          allOf:
            - $ref: '#/components/schemas/UpdateCaseStatusNullable'
        CaseType:
          title: Type of case
          allOf:
            - $ref: '#/components/schemas/CaseTypeNullable'
        Description:
          title: Description of case
          type: string
        FollowUpDueDate:
          title: Follow up due date of case
          type: string
          format: date-time
          x-type-name: UtcDateTime
        HandledByPartner:
          title: Represents if the case is handled by partner
          type: boolean
        IsEscalated:
          title: Represents if the case is escalated
          type: boolean
        ShowInPortal:
          title: Represents if the case should be shown in portal
          type: boolean
        Title:
          title: Title of case
          type: string
      additionalProperties: false
    UpdateCaseStatus:
      title: Valid case status to update a case
      enum:
        - ExternallyPending
        - InProgress
        - InternallyPending
      type: string
      x-enum-descriptions:
        InProgress: Case is in progress
        ExternallyPending: Case is externally pending
        InternallyPending: Case is internally pending
    UpdateCaseStatusNullable:
      $ref: '#/components/schemas/UpdateCaseStatus'
    UpdateClientPlanRequest:
      title: Update Client Plan
      required:
        - ClientKey
        - ClientPlanId
      type: object
      properties:
        ClientKey:
          title: Client Identifier to update client plan
          minLength: 1
          type: string
          x-type-name: ClientKey
        ClientPlanId:
          title: Client Plan Id
          type: string
      additionalProperties: false
    UpdateFundingLimitRequest:
      title: Update funding limit request
      required:
        - MaxFundingLimit
      type: object
      properties:
        MaxFundingLimit:
          title: Funding limit to be updated
          type: number
      additionalProperties: false
    UserId:
      minimum: 1
      type: integer
      format: int32
    UserIdNullable:
      $ref: '#/components/schemas/UserId'
    UserInfo:
      type: object
      properties:
        UserId:
          title: User Id
          type: string
        UserKey:
          title: User Key
          type: string
        UserName:
          title: User Name
          type: string
      additionalProperties: false
    ValidationConstraint:
      type: object
      properties:
        CompareType:
          title: Compare Type
          allOf:
            - $ref: '#/components/schemas/ConditionalConstraintCompareTypeNullable'
        ConditionalFieldName:
          title: Conditional Field Name
          type: string
        TriggerFieldName:
          title: Trigger Field Name
          type: string
        TriggerFieldValue:
          title: Trigger Field Value
          type: string
        Type:
          title: Type of validation
          allOf:
            - $ref: '#/components/schemas/ValidationType'
        Value:
          title: Value
          type: string
      additionalProperties: false
    ValidationRequest:
      type: object
      properties:
        Bic:
          title: Bic code
          type: string
        ClearingCode:
          title: Clearing code
          type: string
        CountryCode:
          title: Country code
          type: string
        Iban:
          title: Iban
          type: string
      additionalProperties: false
    ValidationResponse:
      title: The validation response
      type: object
      properties:
        IsOk:
          title: Is it OK
          type: boolean
        Message:
          title: 'If it is not OK, message will contain why'
          type: string
      additionalProperties: false
    ValidationType:
      title: Validation type for field.
      enum:
        - AtLeastOneGroupedValueSelected
        - Hidden
        - Mandatory
        - MaxNoOfElements
        - NumMaxValue
        - NumMinValue
        - ReadOnly
        - ReadWrite
        - RegularExpression
        - TextMaxLength
        - TextMinLength
      type: string
      x-enum-descriptions:
        Mandatory: Mandatory
        RegularExpression: Regular Expression
        TextMinLength: TextMinLength
        TextMaxLength: TextMaxLength
        NumMinValue: NumMinValue
        NumMaxValue: NumMaxValue
        AtLeastOneGroupedValueSelected: AtLeastOneGroupedValueSelected
        ReadOnly: ReadOnly
        Hidden: Hidden
        MaxNoOfElements: MaxNoOfElements
        ReadWrite: ReadWrite
    ValueType:
      title: Determine how the "Value" and "OptionList" values be interpreted.
      enum:
        - Bool
        - DateTime
        - DocumentList
        - Int
        - OptionListKey
        - Section
        - String
      type: string
      x-enum-descriptions:
        Int: Integer
        String: String
        DateTime: DateTime
        Bool: Boolean
        OptionListKey: Option List
        Section: Section
        DocumentList: Document list.
    Version:
      type: object
      properties:
        Build:
          type: integer
          format: int32
        Major:
          type: integer
          format: int32
        MajorRevision:
          type: integer
          format: int32
        Minor:
          type: integer
          format: int32
        MinorRevision:
          type: integer
          format: int32
        Revision:
          type: integer
          format: int32
      additionalProperties: false
    WholeAccountTransferReportData:
      title: Details of the Whole Account Transfer
      type: object
      properties:
        AccountIDInSaxo:
          title: Account ID In Saxo
          type: string
        ClientId:
          title: Client Id
          type: string
        ClientName:
          title: Client Name
          type: string
        ExternalAccountId:
          title: External Account Id
          type: string
        InstrumentDetails:
          title: Instrument Details List
          type: array
          items:
            $ref: '#/components/schemas/TransferredInstrumentDetail'
        SettlementMarketId:
          title: Settlement Market Id
          type: string
        SubmissionDate:
          title: Submission Date
          type: string
          format: date
          x-type-name: Date
        TransferType:
          title: Transfer Type
          allOf:
            - $ref: '#/components/schemas/TransferType'
      additionalProperties: false
    WholeAccountTransferResponse:
      title: Whole account transfer response
      type: object
      properties:
        TransferReferenceId:
          title: Transfer reference id
          type: string
      additionalProperties: false
    WireTransferResponse:
      type: object
      properties:
        BrokerInfo:
          title: 'Broker (in case of broker funding) details like Account, Iban etc.'
          allOf:
            - $ref: '#/components/schemas/BrokerInformation'
        ClientDetails:
          title: 'Client details like name, address, Iban etc.'
          allOf:
            - $ref: '#/components/schemas/ClientBankDetails'
        CurrencyCode:
          title: Transaction Currency
          type: string
        IntermediaryBank:
          title: 'Intermediary bank details like BIC, Name and Address'
          allOf:
            - $ref: '#/components/schemas/BankDetails'
        IsBrokerFunding:
          title: If broker funding the value will be true else false.
          type: boolean
        MaxFundingLimit:
          title: Max Funding allowed per year
          type: number
        NetFundedAmount:
          title: Net funded amount
          type: number
        ReceivingBank:
          title: 'Receiving bank details like BIC, Name and Address'
          allOf:
            - $ref: '#/components/schemas/BankDetails'
        RemainingFundingLimit:
          title: Remaining allowed fund for rest of the year
          type: number
        RemainingFundingTax:
          title: Remaining Funding Tax
          type: number
        RemitterInfo:
          title: 'In case of Broker broker funding, details like name, address, Iban etc.'
          allOf:
            - $ref: '#/components/schemas/ClientBankDetails'
        SubsidiaryId:
          title: Legal/subsidiary Id under client has created.
          type: string
        SubsidiaryName:
          title: Legal/subsidiary name under client has created.
          type: string
        VirtualAccountId:
          title: Virtual AccountId
          type: string
      additionalProperties: false
    WithdrawalResponse:
      title: Response to withdrawal request
      type: object
      properties:
        CutExchangeRate:
          title: Cut exchange rate.
          type: number
        OutgoingRequestId:
          title: Outgoing request Id created.
          type: integer
          format: int32
      additionalProperties: false
    WorldPayOrderInformation:
      type: object
      properties:
        Mac:
          type: string
        OrderKey:
          type: string
        PaymentAmount:
          type: string
        PaymentCurrency:
          type: string
        PaymentStatus:
          type: string
      additionalProperties: false
    WorldPayResponseOrder:
      type: object
      properties:
        OrderKey:
          type: string
        WorldPayStatus:
          allOf:
            - $ref: '#/components/schemas/WorldPayStatusTypes'
      additionalProperties: false
    WorldPayStatusTypes:
      enum:
        - Cancelled_By_Shopper
        - Error
        - Exception
        - Failure
        - Pending
        - SessionExpired
        - Success
      type: string
    WorldPayTransactionInformations:
      type: object
      properties:
        Error:
          type: string
        Order:
          allOf:
            - $ref: '#/components/schemas/WorldPayResponseOrder'
        WorldPayOrderInformation:
          allOf:
            - $ref: '#/components/schemas/WorldPayOrderInformation'
      additionalProperties: false
    WorldPayTransactionRequest:
      title: Specifies request to be communicated to 3rd party payment provider to initate transaction.
      required:
        - PaymentId
        - IssuerCountryCode
        - IsRecurringPayment
      type: object
      properties:
        InstallationId:
          title: "Installation Id required to say WorldPay that which page they will display to user to enter credit/debit card details.\r\n            As GO has two themes black and white so we need to send this Id to WorldPay and on the basis of this Id worldPay will display\r\n            black/white page."
          type: string
        IsRecurringPayment:
          title: "When true, a registerd card will be used\r\n            NOTE: This doesnt make sence, we shouldnt have to supply this since they should have it from the get fee, \r\n            comunicating with PAL to get some clarity."
          type: boolean
        IssuerCountryCode:
          title: The creditcard issuer country
          type: string
        PaymentId:
          title: The current payment id
          type: string
        RegisteredCardId:
          title: The creditcard identifier
          type: string
      additionalProperties: false
    WorldPayTransactionResponse:
      type: object
      properties:
        Country:
          title: The country
          type: string
        CupPostData:
          title: "Holds the POST request data in the form of key/value if user used the China unionpay\r\n            card type. Need this data to post to WeCollect PSP."
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
        Is3DSecureScheme:
          title: If card is 3D secure then this property will have value true.
          type: boolean
        Language:
          title: The language
          type: string
        Method:
          title: "Indicate what is action method. Now we have two payment service provider (PSP) and both require\r\n            diffrent type of method"
          type: string
        PreferedPaymentMethod:
          title: The prefered payment method
          type: string
        Secure3DPostData:
          title: "If card is 3D secure then UI need to send user to 3D authentication page\r\n            with the data stored in Secure3DPostData dictionary as hidden variable."
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
        Url:
          title: The redirect url for the transaction.
          type: string
      additionalProperties: false
  responses:
    BadRequest:
      description: One or more of the provided parameters are invalid.
      content:
        application/json:
          schema:
            required:
              - ErrorCode
              - Message
            type: object
            properties:
              ErrorCode:
                enum:
                  - InvalidRequest
                type: string
                x-enum-descriptions:
                  InvalidRequest: Default error code returned when it cannot be determined which part of the request is malformed.
              Message:
                type: string
              ModelState:
                $ref: '#/components/schemas/ModelStateDictionary'
    ServiceUnavailable:
      description: Service Unavailable.
    TooManyRequests:
      description: The request was rejected due to rate limit being exceeded.
    Unauthorized:
      description: Indicates that the request was rejected because the 'Authorization' header was missing in the request or contained an invalid security token.
  parameters:
    XInternalIP:
      name: X-Internal-IP
      in: header
      description: Required header for access to network internal endpoints.
      required: true
      schema:
        enum:
          - '1'
        type: string
  securitySchemes:
    OpenApiJWTSecurityScheme:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OpenApiOAuthSecurityScheme:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://idp.blue.sso.sys.dom/authorize
          tokenUrl: https://idp.blue.sso.sys.dom/token
          scopes: { }
tags:
  - name: Apps
    description: Endpoints for retrieving app data.
  - name: Audit - Activities
    description: End point for accessing the trading system activity log.
  - name: Audit - OrderActivities
    description: End point for querying order activities
  - name: Cash Management – CreditCard
    description: This endpoint provides the functionality necessary to accept client funding via credit chard.
  - name: CashManagement - Beneficiary Instructions
    description: Endpoints for beneficiary instructions
  - name: 'CashManagement - Bic, Iban, CountryCode and ClearingCode Validation'
    description: This endpoint provides the functionality which a client application can use to provide user feedback during operations related to cash management operations.
  - name: CashManagement - Cash Withdrawal
    description: This endpoint provides the functionality necessary to allow a client to withdraw money from his account
  - name: CashManagement - Inter Account Transfer
    description: This endpoint provides the functionality necessary for a client to transfer money between different accounts all belonging to the same client.
  - name: CashManagement - WireTransfers
    description: Get wiretransfer instructions for specified client and account
  - name: ClientInfo
    description: End point for accessing summary information for a specified client.
  - name: ClientPlans
    description: Get available client plans or update client plan
  - name: Historical Report Data - Aggregated amounts
    description: Aggregated Amounts Report Data.
  - name: Historical Report Data - Bookings
    description: Bookings Report Data.
  - name: Historical Report Data - Closed positions
    description: Closed Positions Report Data.
  - name: Historical Report Data - Trades
    description: Trades Report Data.
  - name: Log
    description: End point for logging messages and custom data.
  - name: MiFID - AppropriatenessTest
    description: "Endpoint for getting and submitting Mifid Appropriateness test answers for the authenticated user.\r\n            \r\nTests are versioned, with the AppropriatenessTestId being the version number.\r\n\r\nWhen Getting the appropriateness test resource, you will get the most recent version of the test. \r\n            The response object will contain all of the text and structure necessary to display a complete questionnaire. If the user has previously answered (some of) the\r\n            questions in this version of the appropriateness test, these answers will be included in the response object as well.\r\n\r\nWhen Updating the appropriateness test resource, you will be posting the complete set of answers to the test. \r\n            You are not creating a new test, you are simply updating the most recent test for this particular user, hence the Update (PUT) does not return a new test id."
  - name: MiFID - Classification
    description: "Endpoint for getting and submitting Mifid Product Classification test answers for the authenticated user.\r\n            \r\nTests are versioned, with the ProductClassifcationTestId being the version number.\r\n\r\nWhen Getting the classification test resource, you will get the most recent version of the test. \r\n            The response object will contain all of the text and structure necessary to display a complete questionnaire. If the user has previously answered (some of) the\r\n            questions in this version of the test, these answers will be included in the response object as well.\r\n\r\nWhen Updating the test resource, you must only post answers related to the product areas, for which the client has classified as 'professional'. \r\n            You are not creating a new test, you are simply updating the most recent test for this particular user, hence the Update (PUT) does not return a new test id."
  - name: MiFID - Classification Status
    description: Endpoint for getting the Mifid Classification Status. For each product group this returns the classification and appropriateness.
  - name: MiFID - Product Areas
    description: Endpoint for getting Mifid Product Areas for the authenticated users.
  - name: MiFID - Risk Warning
    description: Endpoint for submitting Mifid warning acceptance.
  - name: Platforms - Access Features
    description: Contains endpoint to get accessible features based on account type
  - name: Platforms - Auto Trading Terms and Conditions
    description: Gets terms and conditions of Auto trading.
  - name: Platforms - Disclaimers
    description: Endpoint for accessing menu definitions for an assortment of Saxo Applications. This endpoint is only available for Saxo Applications
  - name: Platforms - Menus
    description: Endpoint for accessing menu definitions for an assortment of Saxo Applications. This endpoint is only available for Saxo Applications
  - name: Questionnaires - Question Sets
    description: Get all valid Question sets.
  - name: Questionnaires - QuestionSetTypes
    description: Get Question set types.
  - name: Securities Transfer
    description: Allows a user to provide a list of securities to be transfereed into or out of Saxo Bank
  - name: Subscription Billing - Agreements
    description: "An agreement is a combination of a template and the values filled into this template.\r\n             \r\n\r\n*   The template provides enough information that the UI can display the subscription agreement form.\r\n*   The subscription values represent the information submitted by the user."
  - name: Subscription Billing - Billing Details
    description: Get billing details.
  - name: Subscription Billing - Services
    description: Returns a list of services which a user can subscribe to.
  - name: Subscription Billing - Subscriptions
  - name: Support - Cases
    description: Endpoints to support upload and retrieval of client support cases
  - name: Target market assessment
    description: Endpoints for target market assessment
  - name: Trading Conditions
    description: Provides trading conditions for regular instruments
  - name: Trading Conditions - Account
  - name: Trading Conditions - Contract Option
    description: Provides trading conditions for contract options
  - name: Trading Conditions - Cost
    description: Provides pre-trade cost illustration for regular instruments
  - name: Trading Conditions - InterestProfile
    description: Provides interest profiles.
  - name: URM Membership Points
    description: Membership Point controller
  - name: Whole Account Transfer
    description: Allows a user to request whole account transfers