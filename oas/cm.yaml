openapi: 3.0.1
info:
  title: Services.ClientManagement
  description: The Client Management service group provides services to signup and manage leads and clients.
  version: 1.1.561+60a2d2f806
  x-framework-version: 23.0.7+00747832fc
  x-machine: DEVOAWEB11-DK1
servers:
  - url: https://blue.openapi.sys.dom/openapi
paths:
  '/cm/diagnostics/users}':
    get:
      operationId: cm_users
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  '/cm/diagnostics/subscriptions}':
    get:
      operationId: cm_subscriptions
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
        - name: ApplicationId
          in: query
          schema:
            allOf:
              - minimum: 1
                type: integer
                format: int32
                x-type-name: ApplicationId
          example: "193"
        - name: ContextId
          in: query
          schema:
            type: string
          example: "3879ab7f-b82b-4d5b-8056-4f3f96e21b09"
        - name: Publisher
          in: query
          schema:
            type: string
          example: "3879ab7f-b82b-4d5b-8056-4f3f96e21b09"
        - name: SessionId
          in: query
          schema:
            allOf:
              - pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
                type: string
                x-type-name: SessionId
          example: "2c0cfcaa-1e34-4e64-a9a4-09c2a64e1c0d"
        - name: UserId
          in: query
          schema:
            allOf:
              - $ref: '#/components/schemas/UserIdNullable'
          example: 1209828118
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  '/cm/diagnostics/publishers}':
    get:
      operationId: cm_publishers
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  '/cm/v1/clientrenewals/feedback}':
    get:
      tags:
        - Client Renewals
      summary: Get renewal feedback details for the passed Client/User or logged in user
      description: Get renewal feedback details for the passed Client/User or logged in user
      operationId: ClientRenewalGetRenewalFeedbackData
      parameters:
        - name: ClientKey
          in: query
          description: ClientKey of the user for which renewal feedback is requested
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: ClientKey
          example: d2-PzdC5wIPy1284wD-rRA==
        - name: UserKey
          in: query
          description: UserKey of the user for which renewal feedback is requested
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: UserKey
          example: d2-PzdC5wIPy1284wD-rRA==
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenewalFeedbackData'
              example: {
  "PendingReasons": [
    {
      "Message": "Photo is not clear. Please provide clear scan copy.",
      "PendingField": "PoiStatus",
      "Reasons": [
        "NameMismatch",
        "CertificationNotvalid",
        "OtherClientContactNeeded",
        "NotReadable"
      ]
    },
    {
      "Message": "There is an address mismatch as per Client Application Form and National IC. So, kindly confirm on which address you are residing for more than 6 months.",
      "PendingField": "PorStatus",
      "Reasons": [
        "CertificationNotvalid",
        "OtherClientContactNeeded",
        "NotReadable"
      ]
    }
  ],
  "RenewalStatus": "Pending"
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - ClientRenewalFeedbackDataNotFound
                    type: string
                    x-enum-descriptions:
                      ClientRenewalFeedbackDataNotFound: Renewal feedback data not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - ClientRenewalFeedbackDataNotFound
                      - ClientRenewalFeedbackInvalidParameters
                    type: string
                    x-enum-descriptions:
                      ClientRenewalFeedbackInvalidParameters: Invalid parameters passed for renewal feedback update.
                      ClientRenewalFeedbackDataNotFound: Renewal feedback data not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    post:
      tags:
        - Client Renewals
      summary: Submit renewal feedback data
      description: Submit renewal feedback data
      operationId: ClientRenewalSubmitRenewalFeedbakData
      parameters:
        - name: ClientKey
          in: query
          description: ClientKey of the user for which renewal feedback is to be submitted
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: ClientKey
          example: d2-PzdC5wIPy1284wD-rRA==
        - name: UserKey
          in: query
          description: UserKey of the user for which renewal feedback is to be submitted
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: UserKey
          example: d2-PzdC5wIPy1284wD-rRA==
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenewalFeedbackRequest'
            example: {
  "Documents": [
    {
      "Data": "iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4",
      "MimeType": "application/pdf",
      "Name": "abc.pdf",
      "Type": "ProofOfIdentity"
    }
  ],
  "FeedbackComment": "Test feedback comment"
}
      responses:
        '201':
          description: Created
        '204':
          description: Indicates that the request was performed correctly.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - ClientRenewalFeedbackInvalidFileExtension
                      - ClientRenewalFeedbackInvalidParameters
                      - ClientRenewalInvalidDataFormat
                    type: string
                    x-enum-descriptions:
                      ClientRenewalFeedbackInvalidParameters: Invalid parameters passed for renewal feedback update.
                      ClientRenewalInvalidDataFormat: Invalid base64 data for document.
                      ClientRenewalFeedbackInvalidFileExtension: Renewal feedback invalid file extension.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/clientrenewals/instance}':
    get:
      tags:
        - Client Renewals
      summary: Get renewal instance id
      description: Get renewal instance id for the logged in user
      operationId: ClientRenewalGetRenewalInstanceId
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenewalInstance'
              example: {
  "InstanceId": "B80F32BA-4FDA-49B7-9B53-637F84932672"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/clientrenewals/pending}':
    get:
      tags:
        - Client Renewals
      summary: 'Gets renewal status for clients, under logged user or the passed owner'
      description: 'Gets renewal status for clients, under logged user or the passed owner'
      operationId: ClientRenewalGetRenewalStatuses
      parameters:
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 1000
        - name: MustRenewBy
          in: query
          description: 'Optional, Date till which the pending renewals should be returned, default value is 30 days from today'
          schema:
            allOf:
              - type: string
                format: date
                x-type-name: Date
          example: '2020-12-31T00:00:00.0000000+00:00'
        - name: OwnerKey
          in: query
          description: 'Optional, ClientKey of the owner, whose subclient''s renewal status is needed'
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: ClientKey
          example: d2-PzdC5wIPy1284wD-rRA==
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RenewalStatusDataListResult'
              example: {
  "__count": 2,
  "Data": [
    {
      "ClientId": "2147279170",
      "ClientKey": "7m4I|vtYLUnEGg77o9uQhw==",
      "RenewalBy": "2022-04-27",
      "RenewalStatus": "Waiting"
    },
    {
      "ClientId": "2147279171",
      "ClientKey": "27KN2aJ-338aeKnLTNOyCw==",
      "RenewalBy": "2022-05-07"
    }
  ]
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - ClientRenewalStatusNotFound
                    type: string
                    x-enum-descriptions:
                      ClientRenewalStatusNotFound: Renewal statuses not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cm/v1/clientrenewals/{RenewalEntityId}':
    post:
      tags:
        - Client Renewals
      summary: 'Submit renewal for processing, no further updates could be made post this call'
      description: 'Submit renewal for processing, no further updates could be made post this call'
      operationId: ClientRenewalSubmitClientRenewal
      parameters:
        - name: RenewalEntityId
          in: path
          description: Renewal entity identifier
          required: true
          schema:
            type: string
          example: 7526324
      responses:
        '201':
          description: Created
        '204':
          description: Indicates that the request was performed correctly.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - ClientRenewalInvalidRenewalEntityId
                      - ClientRenewalInvalidSubmit
                      - ClientRenewalInvalidUpdate
                      - ClientRenewalNotFound
                    type: string
                    x-enum-descriptions:
                      ClientRenewalInvalidSubmit: Renewal already submitted.
                      ClientRenewalNotFound: Renewal not found.
                      ClientRenewalInvalidUpdate: Invalid renewal update request.
                      ClientRenewalInvalidRenewalEntityId: Renewal entity id must be a valid integer
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    patch:
      tags:
        - Client Renewals
      summary: Update Renewal Data/Documents for the given renewal entity
      description: Update Renewal Data/Documents for the given renewal entity
      operationId: ClientRenewalUpdateClientRenewalData
      parameters:
        - name: RenewalEntityId
          in: path
          description: Renewal entity identifier
          required: true
          schema:
            type: string
          example: 7526324
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenewalRequest'
            example: {
  "Documents": [
    {
      "Data": "iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4",
      "MimeType": "application/pdf",
      "Name": "ProofOfIdentity.pdf",
      "Type": "ProofOfIdentity"
    },
    {
      "Data": "iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4",
      "MimeType": "application/msword",
      "Name": "ProofOfResidency.doc",
      "Type": "ProofOfResidency"
    }
  ],
  "RenewalData": {
    "AustraliaData": {
      "AnnualIncome": "3",
      "NetWorth": "5"
    },
    "FinlandData": {
      "EuroClearSectorCode": "144200"
    },
    "GlobalFinancialInformation": {
      "AnnualIncomeAfterTax": {
        "Amount": 100020,
        "AmountDescription": "Exact",
        "CurrencyCode": "DKK"
      },
      "IntendToInvest": {
        "Amount": 1000000,
        "AmountDescription": "AboveThisAmount",
        "CurrencyCode": "DKK"
      },
      "InvestableAsset": {
        "Amount": 1000000,
        "AmountDescription": "Rounded",
        "CurrencyCode": "DKK"
      }
    },
    "HongkongData": {
      "NetWorthInUsd": "2",
      "TotalEstimatedAnnualIncomeInUsd": "4"
    },
    "JapanData": {
      "AnnualIncomeJpy": "3",
      "NetWorthJpy": "5",
      "TickerCodes": [
        "6234",
        "0392",
        "1025"
      ]
    },
    "PersonalInformation": {
      "AdditionalNationalities": [
        {
          "CountryCode": "UK",
          "NationalId": "38992710",
          "NationalIdType": 4
        }
      ],
      "AdditionalTaxableCountries": [
        {
          "CountryCode": "SG",
          "TaxId": "1231314",
          "TinNotAvailable": false
        }
      ],
      "AliasFirstName": "Alice",
      "AliasLastName": "Joe",
      "CityOfBirth": "Test Birth City",
      "ContactInformation": {
        "EmailAddress": "email1_9534299@email.com",
        "MobileNumber": {
          "CountryCode": "DK",
          "Number": "5236254126"
        },
        "PrimaryPhoneNumber": {
          "CountryCode": "DK",
          "Number": "355354654"
        },
        "SecondaryPhoneNumber": {
          "CountryCode": "DK",
          "Number": "989899797"
        }
      },
      "CountryOfBirth": "DK",
      "DateOfBirth": "1992-04-07",
      "EmploymentInformation": {
        "EmployerName": "Test Employer",
        "NatureOfBusiness": "10",
        "OccupationTypes": [
          "1",
          "2",
          "3"
        ],
        "Position": "Test Position"
      },
      "FirstName": "First9534299",
      "LastName": "Last9534299",
      "NationalityCode": "DK",
      "OriginalScriptFirstName": "比",
      "OriginalScriptLastName": "伊",
      "OtherAddress": {
        "BuildingName": "Test Building",
        "BuildingNumber": "420",
        "City": "Test Address City",
        "CoName": "CO Test",
        "CountryOfResidenceCode": "IN",
        "Floor": "5",
        "LocalArea": "Local Test Area",
        "PostalCode": "123466",
        "PostBoxOffice": "212313",
        "SideDoor": "Test SideDoor",
        "State": "Test State",
        "StreetName": "Test Street",
        "Unit": "Unit 10"
      },
      "PersonalId": "4499647",
      "PersonalIdExpirationDate": "2025-01-01",
      "PersonalIdType": "1",
      "PoliticallyExposedInformation": {
        "PepRelatedPersonName": "Fred XXX",
        "PepRelatedPersonPosition": "Director",
        "PepType": "2",
        "RelationToPep": "5"
      },
      "PoliticallyExposedPerson": true,
      "ResidentialAddress": {
        "BuildingName": "Test Building",
        "BuildingNumber": "420",
        "City": "Test Address City",
        "CoName": "CO Test",
        "CountryOfResidenceCode": "IN",
        "Floor": "5",
        "LocalArea": "Local Test Area",
        "PostalCode": "123466",
        "PostBoxOffice": "212313",
        "SideDoor": "Test SideDoor",
        "State": "Test State",
        "StreetName": "Test Street",
        "Unit": "Unit 10"
      },
      "TaxId": "5454898",
      "TinMissingReason": "100000003",
      "TinNotAvailable": true
    },
    "ProfileInformation": {
      "AnnualIncomeInformation": {
        "AnnualSalaryAfterTax": "11",
        "SecondaryIncomeOther": "1",
        "SecondarySourcesOfIncome": [
          "3"
        ],
        "SecondarySourcesOfIncomeTotal": "9"
      },
      "InvestableAssets": {
        "IntendToInvest": "13",
        "PrimarySourcesOfWealth": [
          "2",
          "3"
        ],
        "SourceOfWealthOther": "Other Wealth",
        "ValueOfCashAndSecurities": "11"
      },
      "TradingProfile": {
        "SoleBoOfAssets": false
      }
    },
    "RegulatoryInformation": {
      "FatcaDeclaration": {
        "UnitedStatesCitizen": true,
        "UnitedStatesTaxId": "456123",
        "UnitedStatesTaxLiable": true
      }
    },
    "SingaporeData": {
      "AnnualIncomeSgd": "3",
      "NetWorthSgd": "5"
    },
    "SwitzerlandData": {
      "AnnualIncomeChf": "3",
      "NetWorthChf": "5"
    },
    "UkData": {
      "EstimatedSavingAndInvestmentGbp": "14500",
      "MonthlyIncomeAfterTaxGbp": "42000"
    }
  }
}
      responses:
        '204':
          description: Indicates that the request was performed correctly.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - ClientRenewalInvalidDataFormat
                      - ClientRenewalInvalidInstanceId
                      - ClientRenewalInvalidRenewalEntityId
                      - ClientRenewalInvalidUpdate
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      ClientRenewalInvalidDataFormat: Invalid base64 data for document.
                      ClientRenewalInvalidUpdate: Invalid renewal update request.
                      ClientRenewalInvalidInstanceId: InstanceId is not a valid Guid.
                      ClientRenewalInvalidRenewalEntityId: Renewal entity id must be a valid integer
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cm/v1/clientrenewals}':
    get:
      tags:
        - Client Renewals
      summary: Get Renewal Data for the passed Client/User or logged in user. Priority is given to userKey over clientKey.
      description: Get Renewal Data for the passed Client/User or logged in user
      operationId: ClientRenewalGetClientRenewalData
      parameters:
        - name: ClientKey
          in: query
          description: ClientKey of the primary user for which renewal is requested
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: ClientKey
          example: d2-PzdC5wIPy1284wD-rRA==
        - name: UserKey
          in: query
          description: UserKey of the user for which renewal is requested
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: UserKey
          example: d2-PzdC5wIPy1284wD-rRA==
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientRenewal'
              example: {
  "AssetTypeSolution": "ISA",
  "CustomerType": "Primary",
  "RenewalBy": "2022-04-27",
  "RenewalData": {
    "AustraliaData": {
      "AnnualIncome": "3",
      "NetWorth": "5"
    },
    "FinlandData": {
      "EuroClearSectorCode": "144200"
    },
    "GlobalFinancialInformation": {
      "AnnualIncomeAfterTax": {
        "Amount": 100020,
        "AmountDescription": "Exact",
        "CurrencyCode": "DKK"
      },
      "IntendToInvest": {
        "Amount": 1000000,
        "AmountDescription": "AboveThisAmount",
        "CurrencyCode": "DKK"
      },
      "InvestableAsset": {
        "Amount": 1000000,
        "AmountDescription": "Rounded",
        "CurrencyCode": "DKK"
      }
    },
    "HongkongData": {
      "NetWorthInUsd": "2",
      "TotalEstimatedAnnualIncomeInUsd": "4"
    },
    "JapanData": {
      "AnnualIncomeJpy": "3",
      "NetWorthJpy": "5",
      "TickerCodes": [
        "6234",
        "0392",
        "1025"
      ]
    },
    "PersonalInformation": {
      "AdditionalNationalities": [
        {
          "CountryCode": "UK",
          "NationalId": "38992710",
          "NationalIdType": 4
        }
      ],
      "AdditionalTaxableCountries": [
        {
          "CountryCode": "SG",
          "TaxId": "1231314",
          "TinNotAvailable": false
        }
      ],
      "AliasFirstName": "Alice",
      "AliasLastName": "Joe",
      "CityOfBirth": "Test Birth City",
      "ContactInformation": {
        "EmailAddress": "email1_9534299@email.com",
        "MobileNumber": {
          "CountryCode": "DK",
          "Number": "5236254126"
        },
        "PrimaryPhoneNumber": {
          "CountryCode": "DK",
          "Number": "355354654"
        },
        "SecondaryPhoneNumber": {
          "CountryCode": "DK",
          "Number": "989899797"
        }
      },
      "CountryOfBirth": "DK",
      "DateOfBirth": "1992-04-07",
      "EmploymentInformation": {
        "EmployerName": "Test Employer",
        "NatureOfBusiness": "10",
        "OccupationTypes": [
          "1",
          "2",
          "3"
        ],
        "Position": "Test Position"
      },
      "FirstName": "First9534299",
      "LastName": "Last9534299",
      "NationalityCode": "DK",
      "OriginalScriptFirstName": "比",
      "OriginalScriptLastName": "伊",
      "OtherAddress": {
        "BuildingName": "Test Building",
        "BuildingNumber": "420",
        "City": "Test Address City",
        "CoName": "CO Test",
        "CountryOfResidenceCode": "IN",
        "Floor": "5",
        "LocalArea": "Local Test Area",
        "PostalCode": "123466",
        "PostBoxOffice": "212313",
        "SideDoor": "Test SideDoor",
        "State": "Test State",
        "StreetName": "Test Street",
        "Unit": "Unit 10"
      },
      "PersonalId": "4499647",
      "PersonalIdExpirationDate": "2025-01-01",
      "PersonalIdType": "1",
      "PoliticallyExposedInformation": {
        "PepRelatedPersonName": "Fred XXX",
        "PepRelatedPersonPosition": "Director",
        "PepType": "2",
        "RelationToPep": "5"
      },
      "PoliticallyExposedPerson": true,
      "ResidentialAddress": {
        "BuildingName": "Test Building",
        "BuildingNumber": "420",
        "City": "Test Address City",
        "CoName": "CO Test",
        "CountryOfResidenceCode": "IN",
        "Floor": "5",
        "LocalArea": "Local Test Area",
        "PostalCode": "123466",
        "PostBoxOffice": "212313",
        "SideDoor": "Test SideDoor",
        "State": "Test State",
        "StreetName": "Test Street",
        "Unit": "Unit 10"
      },
      "TaxId": "5454898",
      "TinMissingReason": "100000003",
      "TinNotAvailable": true
    },
    "ProfileInformation": {
      "AnnualIncomeInformation": {
        "AnnualSalaryAfterTax": "11",
        "SecondaryIncomeOther": "1",
        "SecondarySourcesOfIncome": [
          "3"
        ],
        "SecondarySourcesOfIncomeTotal": "9"
      },
      "InvestableAssets": {
        "IntendToInvest": "13",
        "PrimarySourcesOfWealth": [
          "2",
          "3"
        ],
        "SourceOfWealthOther": "Other Wealth",
        "ValueOfCashAndSecurities": "11"
      },
      "TradingProfile": {
        "SoleBoOfAssets": false
      }
    },
    "RegulatoryInformation": {
      "FatcaDeclaration": {
        "UnitedStatesCitizen": true,
        "UnitedStatesTaxId": "456123",
        "UnitedStatesTaxLiable": true
      }
    },
    "SingaporeData": {
      "AnnualIncomeSgd": "3",
      "NetWorthSgd": "5"
    },
    "SwitzerlandData": {
      "AnnualIncomeChf": "3",
      "NetWorthChf": "5"
    },
    "UkData": {
      "EstimatedSavingAndInvestmentGbp": "14500",
      "MonthlyIncomeAfterTaxGbp": "42000"
    }
  },
  "RenewalEntityId": "9534299",
  "RenewalStatus": "Waiting",
  "RenewalStatusByUsers": [
    {
      "CustomerRenewalStatus": "New",
      "FullName": "First9534299 Last9534299",
      "RelationshipRole": "Owner",
      "UserId": 9534299,
      "UserKey": "d2-PzdC5wIPy1284wD-rRA=="
    }
  ]
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - ClientRenewalDataNotFound
                    type: string
                    x-enum-descriptions:
                      ClientRenewalDataNotFound: PII data not found in CRM.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cm/v1/leadsignups/activities/tasks}':
    post:
      tags:
        - Lead Signups
      summary: Create a follow up task
      description: Creates a follow up task regarding an applicant. The applicant must already exist as a client in the system.
      operationId: LeadSignupV1CreateTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientManagementTask'
            example: {
  "AssignTo": {
    "Name": "XYZ",
    "Type": "User"
  },
  "Duration": "10.00:00:00",
  "RegardingClientId": "123456",
  "ScheduledStart": "2022-04-07T11:05:38.307088Z",
  "Subject": "My Task Subject 2022-04-07 11:05:38"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientManagementTaskResponse'
              example: {
  "ClientManagementTaskId": "c8570881-030c-45ee-bf17-56de4c7752b6"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/registrations}':
    get:
      tags:
        - Lead Signups
      summary: Get registrations
      description: Gets all registrations for a specific e-mail address.
      operationId: LeadSignupV1GetRegistrations
      parameters:
        - name: Email
          in: query
          description: The e-mail address used to match registrations
          required: true
          schema:
            type: string
          example: someone@example.org
        - name: OwnerId
          in: query
          description: The owner ID the existence should be checked against.
          required: true
          schema:
            type: string
          example: 23
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponseListResult'
              example: {
  "Data": [
    {
      "ClientId": "238482",
      "ClientKey": "5DG7K1P5cqYBZ77tl7Af4w=="
    }
  ],
  "MaxRows": 214
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/simpleregistrations}':
    post:
      tags:
        - Lead Signups
      summary: Create a simple registration
      description: A simple registration consists of a notification of interest in a particular subject and basic contact details.
      operationId: LeadSignupV1CreateSimpleRegistration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleRegistration'
            example: {
  "CountryOfResidenceCode": "DK",
  "Email": "john.doe_229259138@example.org",
  "LanguageCode": "da",
  "Name": "John Doe",
  "OwnerId": "123456",
  "Phone": {
    "CountryCode": "DK",
    "Number": "32323232"
  }
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleRegistrationResponse'
              example: {
  "ClientId": "ClientId43f14653-24d1-4469-bf60-0ac9ba11366c",
  "ClientKey": "da814ec9-cf73-4617-8459-a8fb62bc83e6",
  "ContactId": "ContactId248b170f-cfb5-490d-881c-9383e89c620e"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/{SignupId/questionaire/{QuestionaireId/answers}':
    put:
      tags:
        - Lead Signups
      summary: Submit a set of answers for a questionaire
      description: Saves a set of answers to questions in a questionaire for a specific onboarding application.
      operationId: LeadSignupV1SaveQuestionaireAnswers
      parameters:
        - name: Culture
          in: query
          description: ISO 639-1 culture of the questionaire (defaults to english 'en').
          schema:
            type: string
          example: en
        - name: QuestionaireId
          in: path
          description: 'Unique ID of the questionaire, which the answers are for.'
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
        - name: SignupId
          in: path
          description: 'ID of onboarding application, to save answers for.'
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AnswerSet'
            example: {
  "Choices": [
    {
      "QuestionId": "c0a9fe0b-a122-e211-a766-00155d01b869",
      "QuestionOptionId": "c3a9fe0b-a122-e211-a766-00155d01b869"
    }
  ]
}
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/{SignupId/questionaire}':
    get:
      tags:
        - Lead Signups
      summary: Get questionaire for a signup
      description: "Gets a set of questions, divided into sections with potential options, for a questionaire.\r\n            Only available in areas where compliance laws requires the client to answer questions."
      operationId: LeadSignupV1GetQuestionaire
      parameters:
        - name: Culture
          in: query
          description: Optional ISO 639-1 culture code to retrieve questions in - defaults to english ('en').
          schema:
            type: string
          example: de
        - name: SignupId
          in: path
          description: 'ID of onboarding application, to get questionaire for.'
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionSet'
              example: {
  "Culture": "en",
  "Description": "",
  "FooterText": "",
  "Id": "bea9fe0b-a122-e211-a766-00155d01b869",
  "Sections": [
    {
      "Description": "Description of first section.",
      "Questions": [
        {
          "Alignment": "BelowQuestionSingleLine",
          "DisplayAs": "DropDown",
          "Name": "Amount of Experience",
          "QuestionId": "c0a9fe0b-a122-e211-a766-00155d01b869",
          "QuestionOptions": [
            {
              "IsSelected": false,
              "OptionId": "c2a9fe0b-a122-e211-a766-00155d01b869",
              "Text": "Less than 1 year"
            },
            {
              "IsSelected": false,
              "OptionId": "c3a9fe0b-a122-e211-a766-00155d01b869",
              "Text": "1 to 5 years"
            },
            {
              "IsSelected": false,
              "OptionId": "c4a9fe0b-a122-e211-a766-00155d01b869",
              "Text": "More than 5 years"
            }
          ],
          "QuestionText": "How long have you continuosly traded financial products on an execution-only basis?"
        },
        {
          "Alignment": "BelowQuestionSingleLine",
          "DisplayAs": "RadioButtons",
          "Name": "Qualification",
          "QuestionId": "c5a9fe0b-a122-e211-a766-00155d01b869",
          "QuestionOptions": [
            {
              "IsSelected": false,
              "OptionId": "c7a9fe0b-a122-e211-a766-00155d01b869",
              "Text": "Yes"
            },
            {
              "IsSelected": false,
              "OptionId": "c8a9fe0b-a122-e211-a766-00155d01b869",
              "Text": "No"
            }
          ],
          "QuestionText": "Do you have an industry recognized qualification for the type of trading that you intend to carry out with us?"
        },
        {
          "Alignment": "BelowQuestionSingleLine",
          "DisplayAs": "RadioButtons",
          "Name": "Work in financial sector",
          "QuestionId": "c9a9fe0b-a122-e211-a766-00155d01b869",
          "QuestionOptions": [
            {
              "IsSelected": false,
              "OptionId": "cba9fe0b-a122-e211-a766-00155d01b869",
              "Text": "Yes"
            },
            {
              "IsSelected": false,
              "OptionId": "cca9fe0b-a122-e211-a766-00155d01b869",
              "Text": "No"
            }
          ],
          "QuestionText": "Do you work, or have you worked in the financial services sector for at least one year in a professional position that requires knowledge of the nature of risk involved in the type of trading that you intend to carry out with us?"
        }
      ],
      "SectionId": "bfa9fe0b-a122-e211-a766-00155d01b869",
      "Title": "First Section"
    },
    {
      "Description": "",
      "Questions": [
        {
          "Alignment": "BesideQuestion",
          "DisplayAs": "DropDown",
          "Name": "FX Rolling Spot",
          "QuestionId": "cea9fe0b-a122-e211-a766-00155d01b869",
          "QuestionOptions": [
            {
              "IsSelected": false,
              "OptionId": "d0a9fe0b-a122-e211-a766-00155d01b869",
              "Text": "0"
            },
            {
              "IsSelected": false,
              "OptionId": "d1a9fe0b-a122-e211-a766-00155d01b869",
              "Text": "1-36"
            },
            {
              "IsSelected": false,
              "OptionId": "d2a9fe0b-a122-e211-a766-00155d01b869",
              "Text": "More than 36"
            }
          ],
          "QuestionText": "FX Rolling Spot"
        },
        {
          "Alignment": "BesideQuestion",
          "DisplayAs": "DropDown",
          "Name": "Options & Futures",
          "QuestionId": "d3a9fe0b-a122-e211-a766-00155d01b869",
          "QuestionOptions": [
            {
              "IsSelected": false,
              "OptionId": "d5a9fe0b-a122-e211-a766-00155d01b869",
              "Text": "0"
            },
            {
              "IsSelected": false,
              "OptionId": "d6a9fe0b-a122-e211-a766-00155d01b869",
              "Text": "1-36"
            },
            {
              "IsSelected": false,
              "OptionId": "d7a9fe0b-a122-e211-a766-00155d01b869",
              "Text": "More than 36"
            }
          ],
          "QuestionText": "Options & Futures"
        },
        {
          "Alignment": "BesideQuestion",
          "DisplayAs": "DropDown",
          "Name": "Contracts for Difference",
          "QuestionId": "d8a9fe0b-a122-e211-a766-00155d01b869",
          "QuestionOptions": [
            {
              "IsSelected": false,
              "OptionId": "daa9fe0b-a122-e211-a766-00155d01b869",
              "Text": "0"
            },
            {
              "IsSelected": false,
              "OptionId": "dba9fe0b-a122-e211-a766-00155d01b869",
              "Text": "1-36"
            },
            {
              "IsSelected": false,
              "OptionId": "dca9fe0b-a122-e211-a766-00155d01b869",
              "Text": "More than 36"
            }
          ],
          "QuestionText": "Contracts for Difference"
        },
        {
          "Alignment": "BesideQuestion",
          "DisplayAs": "DropDown",
          "Name": "Financial Spread Bets",
          "QuestionId": "dda9fe0b-a122-e211-a766-00155d01b869",
          "QuestionOptions": [
            {
              "IsSelected": false,
              "OptionId": "dfa9fe0b-a122-e211-a766-00155d01b869",
              "Text": "0"
            },
            {
              "IsSelected": false,
              "OptionId": "e0a9fe0b-a122-e211-a766-00155d01b869",
              "Text": "1-36"
            },
            {
              "IsSelected": false,
              "OptionId": "e1a9fe0b-a122-e211-a766-00155d01b869",
              "Text": "More than 36"
            }
          ],
          "QuestionText": "Financial Spread Bets"
        }
      ],
      "SectionId": "cda9fe0b-a122-e211-a766-00155d01b869",
      "Title": "How many times have you traded the following products on an execution only basis over the last 12 months?"
    }
  ]
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/createdemoaccount/{SignupId/{SkipMailSending}':
    post:
      tags:
        - Lead Signups
      summary: Create a demo account
      description: Creates a demo account account from a signup.
      operationId: LeadSignupV1CreateDemoAccount
      parameters:
        - name: SignupId
          in: path
          description: Unique ID of the onboarding application to accept.
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
        - name: SkipMailSending
          in: path
          description: Specifies whether a welcome email should be sent to the client or not
          required: true
          schema:
            type: boolean
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DemoResult'
              example: {
  "CreationResult": "Ok"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/{SignupId/saveassessmentresult}':
    put:
      tags:
        - Lead Signups
      description: Save Assessment Results to CRM
      operationId: LeadSignupV1SaveAssessmentResult
      parameters:
        - name: SignupId
          in: path
          description: Unique ID of the onboarding application to accept.
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveAssessmentResultRequest'
            example: {
  "AssessmentResult": 198,
  "Comment": "Comment619d8f5a-c708-4443-b2bb-76360927d29f",
  "Documents": [
    {
      "DocumentType": "IdPassport",
      "FileData": "PEJhc2U2NCBlbmNvZGVkIGRhdGEgZm9yIGEgcGFzc3BvcnQgSlBFRyBpbWFnZT4=",
      "FileName": "Passport.jpg"
    }
  ]
}
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptTermsAndConditionsCodeResult'
              example: {
  "Message": "Messagee05fc0fa-e4e9-4ff1-be66-f0f03fa2fb7d",
  "Status": "Ok"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/{SignupId/accepttermsandconditions/{AcceptanceMethod}':
    put:
      tags:
        - Lead Signups
      description: Automatically accepts the terms and conditions
      operationId: LeadSignupV1AcceptTermsAndConditions
      parameters:
        - name: AcceptanceMethod
          in: path
          description: 'The method used to accept the T and C (either in-flow, signicat/NemId or signicat/BankID)'
          required: true
          schema:
            type: string
        - name: SignupId
          in: path
          description: Unique ID of the onboarding application to accept.
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupDocumentation'
            example: {
  "Documents": [
    {
      "DocumentType": "IdPassport",
      "FileData": "PEJhc2U2NCBlbmNvZGVkIGRhdGEgZm9yIGEgcGFzc3BvcnQgSlBFRyBpbWFnZT4=",
      "FileName": "Passport.jpg"
    },
    {
      "DocumentType": "ProofOfResidency",
      "FileData": "PEJhc2U2NCBlbmNvZGVkIGRhdGEgb2ZyIGEgYmFuayBzdGF0ZW1lbnQgUERGIGZpbGU+",
      "FileName": "Bank Statement.pdf"
    }
  ],
  "NotUserDocuments": false,
  "SendUploadConfirmationToCustomer": true
}
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AcceptTermsAndConditionsCodeResult'
              example: {
  "Message": "Messagee05fc0fa-e4e9-4ff1-be66-f0f03fa2fb7d",
  "Status": "Ok"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/{SignupId/duediligence}':
    put:
      tags:
        - Lead Signups
      summary: Create or partly approve Due Diligence
      description: Creates or approves due diligence for a lead/client in CRM.
      operationId: PUT_LeadSignupV1AutoApproveDueDiligence
      parameters:
        - name: SignupId
          in: path
          description: Unique ID of the onboarding application to accept.
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetDueDiligenceInfoRequest'
            example: {
  "AutoCompleteSettings": {
    "AutoApproveDueDiligence": false
  },
  "CreateSettings": {
    "CreateDueDiligence": true
  },
  "PartialDueDiligenceSettings": {
    "ContactDueDiligenceOptions": {
      "AmlApproved": "Approved",
      "ContactDueDiligenceApprovalComment": "ContactDueDiligenceApprovalCommentc6ddd651-884d-4994-b65f-25ecef0b40e0",
      "ContactDueDiligenceApproved": "Approved",
      "ContactRisk": "NotEvaluated",
      "PassportIdApproved": "Pending",
      "PorApproved": "NotRequired"
    },
    "DueDiligenceOptions": {
      "AmlApproved": "Approved",
      "ApprovedThirdPartyAuthorization": "FP2",
      "CafStatusApproved": "Approved",
      "ComplianceApproved": "Pending",
      "ContractRisk": "High",
      "CreditCardFirstFundingApproved": "Pending",
      "DueDiligenceApprovalComment": "DueDiligenceApprovalComment0293c766-d3f1-40df-881d-be1a8f20b198",
      "DueDiligenceApproved": "Pending",
      "IsExternalProviderPending": false,
      "PiiApproved": "Pending",
      "TermsUploadedApproved": "Approved"
    },
    "SetPartialDueDiligenceInfo": true
  },
  "SignupId": "3b6f83ed-3746-40c1-8758-787c3caef31c"
}
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DueDiligenceResult'
              example: {}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/{SignupId/duediligence/{DdMethod}':
    put:
      tags:
        - Lead Signups
      summary: Auto Approve Due Diligence
      description: Automatically approves due diligence for a lead/client in CRM.
      operationId: LeadSignupV1AutoApproveDueDiligence
      parameters:
        - name: DdMethod
          in: path
          description: Create DD (0) or Approve DD(1)?
          required: true
          schema:
            maximum: 255
            minimum: 0
            type: integer
        - name: SignupId
          in: path
          description: Unique ID of the onboarding application to accept.
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DueDiligenceResult'
              example: {}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/{SignupId/converttoclient/{SkipSendTcMail/{SkipSendFundingMail/{AutoApproveDueDiligence/{FirstFundingWithCreditCardAllowed/{AwaitAccountCreation}':
    put:
      tags:
        - Lead Signups
      summary: Convert lead to client
      description: Automatically converts a lead to a client in CRM.
      operationId: LeadSignupV1AutoConvertToClient
      parameters:
        - name: AutoApproveDueDiligence
          in: path
          description: Approve the DD?
          required: true
          schema:
            type: boolean
        - name: AwaitAccountCreation
          in: path
          description: Run async or not
          required: true
          schema:
            type: boolean
        - name: FirstFundingWithCreditCardAllowed
          in: path
          description: Allowed to fund with credit card?
          required: true
          schema:
            type: boolean
        - name: SignupId
          in: path
          description: Unique ID of the onboarding application to accept.
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
        - name: SkipSendFundingMail
          in: path
          description: Don't send funding instructions mail?
          required: true
          schema:
            type: boolean
        - name: SkipSendTcMail
          in: path
          description: Don't send terms and conditions mail?
          required: true
          schema:
            type: boolean
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AutoConversionResult'
              example: {
  "AccountDetails": {
    "BackOfficeAccountType": "BackOfficeAccountTypef1ea2918-16cb-4175-b78e-5fbf89f7ea3c",
    "CurrencyIsoCode": "CurrencyIsoCodeac3456a2-e42d-4685-8478-d90571946d0c",
    "Iban": "Iban32f6a326-b95b-4843-8f74-65349cb1c949",
    "VirtualAccountNumber": "VirtualAccountNumberbfe8f264-6dbc-4161-abb6-c836ab006d97"
  },
  "Accounts": [
    {
      "BackOfficeAccountType": "BackOfficeAccountTypebfceedd8-3d8c-4bcd-aa42-8e58965737ab",
      "CurrencyIsoCode": "CurrencyIsoCode7dda3c0e-52ac-475b-8a0b-ee0af7f805f6",
      "Iban": "Iban13135ec7-bad9-4f41-977d-f9b50bd9faad",
      "VirtualAccountNumber": "VirtualAccountNumbercd3c2548-65ca-4358-92a4-647d64ddebc0"
    }
  ],
  "AutoConvertToClientStatus": "InProgress"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/{SignupId/accept}':
    put:
      tags:
        - Lead Signups
      summary: Accept onboarding application
      description: Accepts an existing onboarding application.
      operationId: LeadSignupV1AcceptSignup
      parameters:
        - name: SignupId
          in: path
          description: Unique ID of the onboarding application to accept.
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/{SignupId/cancel}':
    delete:
      tags:
        - Lead Signups
      summary: Cancel onboarding application
      description: Cancels an existing onboarding application.
      operationId: LeadSignupV1CancelSignup
      parameters:
        - name: SignupId
          in: path
          description: Unique ID of the onboarding application to cancel.
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/submitted/{SignupId}':
    put:
      tags:
        - Lead Signups
      summary: Submit onboarding application
      description: Submits an application as the final step of the onboarding process.
      operationId: LeadSignupV1SubmitSignup
      parameters:
        - name: ClientIp
          in: query
          description: Query parameter containing the IP address of the requesting client.
          required: true
          schema:
            type: string
          example: 193.130.234.23
        - name: SignupId
          in: path
          description: Unique ID of the onboarding application.
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitSignupCommand'
            example: {
  "BusinessContext": {
    "AccountType": "Trading",
    "BusinessLine": "SaxoTrading",
    "FlowType": "OpenAccount2X",
    "OwnerId": 1
  },
  "EmailAddress": "EmailAddresse20c6350-2b7b-455f-b09c-52209bdef282",
  "Password": "Passworddce81e32-8d5b-4a0e-89df-8dda854707f7",
  "SignupData": {
    "AdditionalInformation": {
      "EmploymentDetails": {
        "EmploymentInformation": {
          "EmployerAddress": "Denmark",
          "EmployerName": "Great Products Inc.",
          "JobTitle": "Sales Manager",
          "NatureOfBusiness": "Merchandise",
          "TenureStartYear": 1982
        },
        "EmploymentStatus": "Employment"
      },
      "FinancialDetails": {
        "AnnualSalaryAfterTaxId": 2,
        "EstimatedSavingsAndInvestments": 25000.0,
        "InvestableAssetsId": 2,
        "MonthlyIncomeAfterTax": 7500.0,
        "MonthlyOutgoings": 5500.0,
        "PrimarySourcesOfWealthIds": [
          1
        ],
        "SecondarySourcesOfIncomeIds": [
          1,
          3
        ],
        "TotalAmountOfSecondarySourcesOfIncomeId": 2
      },
      "SkipMailSending": false,
      "SourceOfFunds": {
        "Employment": true,
        "Inheritance": false,
        "Other": true,
        "OtherInformation": "Gifts",
        "Pension": false,
        "SavingsAndInvestment": true,
        "SelfEmployed": false
      }
    },
    "Address": {
      "BuildingNo": "25",
      "City": "Horsham",
      "CountryCode": "AU",
      "County": "Wimmera",
      "Floor": "2",
      "PostalCode": "3400",
      "State": "VIC",
      "Street": "Francis Rd",
      "Unit": "405"
    },
    "BankInformation": {
      "BeneficiaryAccountNumber": "BeneficiaryAccountNumber851589ba-0d28-445e-a4a2-63265a41bec9",
      "BeneficiaryAccountTypeCode": "BeneficiaryAccountTypeCode7fd5b39f-8155-4a07-b370-b677c091ad6b",
      "BeneficiaryBankName": "BeneficiaryBankNameba4d9592-c8cf-4469-9216-32c018bda8fa",
      "BeneficiaryBic": "BeneficiaryBic4b9f27d8-06df-482b-8c75-50313fe4a480",
      "BeneficiaryBranchCode": "BeneficiaryBranchCode6ac5721e-8fa0-4cf5-a287-346d5dee7ffb",
      "BeneficiaryClearingCode": "BeneficiaryClearingCoded6e5c412-009d-43cd-8156-008b7a42d10d",
      "BeneficiaryIban": "BeneficiaryIbane9e3027a-da04-449d-8df3-24614395f15e",
      "BeneficiaryName": "BeneficiaryName0fabe253-7d32-40f5-a795-c956af589705",
      "ReceivingCountryIsoCode": "ReceivingCountryIsoCode4c3736e3-69ed-4276-aebb-1fbce0b68da8"
    },
    "Communications": [],
    "Contact": {
      "AdditionalNationalityCodes": [
        "DNK"
      ],
      "CountryOfBirthCode": "AU",
      "CountryOfResidenceCode": "AU",
      "CountyOfBirth": "Wimmera",
      "DateOfBirth": "1965-10-04T00:00:00",
      "DeclaredBankrupt": "NotSet",
      "FirstName": "Peter",
      "Gender": "Male",
      "LastName": "Habel",
      "MaritalStateId": 2,
      "MarriedName": "Bush",
      "NameOfRelatedEmployee": "Jon",
      "NationalityCode": "AU",
      "NativeLanguageCode": "en",
      "PersonalId": "1234567890",
      "PersonalIdExpirationDate": "1965-10-04T00:00:00",
      "PersonalIdPlaceOfRelease": "test",
      "PersonalIdReleaseDate": "1965-10-04T00:00:00",
      "PersonalIdType": "PassportNumber",
      "RelatedToSaxoEmployee": "NotSet",
      "RelationToSaxoEmployee": "Friend",
      "TinNotAvailable": "NotSet",
      "TitleId": 1,
      "W8BenDiscrepancy": "NotSet"
    },
    "CorrespondenceAddressInfo": {
      "BuildingNo": "25",
      "City": "Horsham",
      "CountryCode": "AU",
      "County": "Wimmera",
      "Floor": "2",
      "PostalCode": "3400",
      "State": "VIC",
      "Street": "Francis Rd",
      "Unit": "405"
    },
    "Declaration": {
      "ConsentSource": "True",
      "ExemptionFromObligationInterestTaxId": 1,
      "ExemptionFromStockDividendTaxId": 1,
      "FrenchTaxableResident": "False",
      "MarketingConsent": "True",
      "NotPoliticallyExposedPerson": "True",
      "RiskDisclosure": "False",
      "SaxoBankGroupConsent": "True",
      "TaxDeductionOption": "False",
      "TradeWithOwnFunds": "True"
    },
    "FatcaDeclaration": {
      "IsUsCitizen": "False",
      "IsUsTaxLiable": "False",
      "UsProducts": "False"
    },
    "GlobalFinancialInformation": {
      "AnnualIncomeAfterTax": {
        "Amount": 78,
        "AmountDescription": "Exact",
        "CurrencyCode": "CurrencyCodee65acd9b-61a2-48d0-afed-fc808fd61705"
      },
      "IntendToInvest": {
        "Amount": 45,
        "AmountDescription": "Rounded",
        "CurrencyCode": "CurrencyCode58b0fe8d-5736-4293-93db-d200dc517efa"
      },
      "InvestableAsset": {
        "Amount": 73,
        "AmountDescription": "AboveThisAmount",
        "CurrencyCode": "CurrencyCode158d95d8-866c-486b-ba7b-c64a4aa32d15"
      }
    },
    "KnowledgeOfFinancialInstruments": "UnderstandBasicsOfFinancialInstruments",
    "NordNetFirstFunding": "NotAllowed",
    "PreviousAddress": {
      "BuildingNo": "25",
      "City": "Horsham",
      "CountryCode": "AU",
      "County": "Wimmera",
      "Floor": "2",
      "PostalCode": "3400",
      "State": "VIC",
      "Street": "Francis Rd",
      "Unit": "405"
    },
    "ProductTradingExperience": [
      "TurbosAndWarrants"
    ],
    "SignupFlowData": {
      "AssessmentResult": "Unknown",
      "AutoDueDiligenceResult": "Unknown",
      "CcFirstFundingAllowed": false,
      "ChoiceOfAccountId": 0,
      "DemoAccountAllowed": false,
      "DemoAccountRequested": false,
      "EmailAddressVerified": false,
      "FallbackFlow": false,
      "FundingAsVerification": "NotSet",
      "LeadOrigin": "Unknown",
      "ReadyForFunding": false,
      "SkipEmailVerification": false
    },
    "TradingProfile": {
      "AnnualIncomeId": 1,
      "FinancialSectorEmployee": "NotSet",
      "FirstFundingAmount": 0.0,
      "IntendToInvest2Id": 0,
      "IntendToInvestId": 0,
      "InvestableAssetsId": 0,
      "OccupationId": 0,
      "PartnerInterestedInId": 0,
      "PurposeAndScopeId": 0,
      "TradesPerMonthId": 0,
      "TradesPerYearId": 0,
      "TradingExperienceId": 0
    }
  }
}
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResult'
              example: {
  "BusinessContext": {
    "AccountType": "Trading",
    "BusinessLine": "SaxoTrading",
    "FlowType": "OpenAccount2X",
    "OwnerId": 1
  },
  "ClientId": "3094385",
  "EmailAddress": "someone@iitest.dk",
  "EmailVerificationToken": "37c46c30-c59b-413d-99a0-c30d9b45641e",
  "FlowState": "VerificationPending",
  "SignupData": {
    "AdditionalInformation": {
      "EmploymentDetails": {
        "EmploymentInformation": {
          "EmployerAddress": "Denmark",
          "EmployerName": "Great Products Inc.",
          "JobTitle": "Sales Manager",
          "NatureOfBusiness": "Merchandise",
          "TenureStartYear": 1982
        },
        "EmploymentStatus": "Employment"
      },
      "FinancialDetails": {
        "AnnualSalaryAfterTaxId": 2,
        "EstimatedSavingsAndInvestments": 25000.0,
        "InvestableAssetsId": 2,
        "MonthlyIncomeAfterTax": 7500.0,
        "MonthlyOutgoings": 5500.0,
        "PrimarySourcesOfWealthIds": [
          1
        ],
        "SecondarySourcesOfIncomeIds": [
          1,
          3
        ],
        "TotalAmountOfSecondarySourcesOfIncomeId": 2
      },
      "SkipMailSending": false,
      "SourceOfFunds": {
        "Employment": true,
        "Inheritance": false,
        "Other": true,
        "OtherInformation": "Gifts",
        "Pension": false,
        "SavingsAndInvestment": true,
        "SelfEmployed": false
      }
    },
    "Address": {
      "BuildingNo": "25",
      "City": "Horsham",
      "CountryCode": "AU",
      "County": "Wimmera",
      "Floor": "2",
      "PostalCode": "3400",
      "State": "VIC",
      "Street": "Francis Rd",
      "Unit": "405"
    },
    "Communications": [],
    "Contact": {
      "AdditionalNationalityCodes": [
        "DNK"
      ],
      "CountryOfBirthCode": "AU",
      "CountryOfResidenceCode": "AU",
      "CountyOfBirth": "Wimmera",
      "DateOfBirth": "1965-10-04T00:00:00",
      "DeclaredBankrupt": "NotSet",
      "FirstName": "Peter",
      "Gender": "Male",
      "LastName": "Habel",
      "MaritalStateId": 2,
      "MarriedName": "Bush",
      "NameOfRelatedEmployee": "Jon",
      "NationalityCode": "AU",
      "NativeLanguageCode": "en",
      "PersonalId": "1234567890",
      "PersonalIdExpirationDate": "1965-10-04T00:00:00",
      "PersonalIdPlaceOfRelease": "test",
      "PersonalIdReleaseDate": "1965-10-04T00:00:00",
      "PersonalIdType": "PassportNumber",
      "RelatedToSaxoEmployee": "NotSet",
      "RelationToSaxoEmployee": "Friend",
      "TinNotAvailable": "NotSet",
      "TitleId": 1,
      "W8BenDiscrepancy": "NotSet"
    },
    "Declaration": {
      "ConsentSource": "True",
      "ExemptionFromObligationInterestTaxId": 1,
      "ExemptionFromStockDividendTaxId": 1,
      "FrenchTaxableResident": "False",
      "MarketingConsent": "True",
      "NotPoliticallyExposedPerson": "True",
      "RiskDisclosure": "False",
      "SaxoBankGroupConsent": "True",
      "TaxDeductionOption": "False",
      "TradeWithOwnFunds": "True"
    },
    "FatcaDeclaration": {
      "IsUsCitizen": "False",
      "IsUsTaxLiable": "False",
      "UsProducts": "False"
    },
    "SignupFlowData": {
      "AssessmentResult": "Unknown",
      "AutoDueDiligenceResult": "Unknown",
      "CcFirstFundingAllowed": false,
      "ChoiceOfAccountId": 0,
      "DemoAccountAllowed": false,
      "DemoAccountRequested": false,
      "EmailAddressVerified": false,
      "FallbackFlow": false,
      "FundingAsVerification": "NotSet",
      "LeadOrigin": "Unknown",
      "ReadyForFunding": false,
      "SkipEmailVerification": false
    },
    "TradingProfile": {
      "AnnualIncomeId": 1,
      "FinancialSectorEmployee": "NotSet",
      "FirstFundingAmount": 0.0,
      "IntendToInvest2Id": 0,
      "IntendToInvestId": 0,
      "InvestableAssetsId": 0,
      "OccupationId": 0,
      "PartnerInterestedInId": 0,
      "PurposeAndScopeId": 0,
      "TradesPerMonthId": 0,
      "TradesPerYearId": 0,
      "TradingExperienceId": 0
    }
  },
  "SignupId": "7075f471-b9d2-4d94-b5e2-43f1362274b2"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidOrMissingIpAddress
                    type: string
                    x-enum-descriptions:
                      InvalidOrMissingIpAddress: Client IP address is missing from the query-string or is invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - IdentityNotFound
                    type: string
                    x-enum-descriptions:
                      IdentityNotFound: The identity of signup could not be found
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/compliancescreeningofclient/{ClientId}':
    get:
      tags:
        - Lead Signups
      description: Performs a compliance screening on the signup/customer identified by the client id.
      operationId: LeadSignupV1ComplianceScreeningOfClient
      parameters:
        - name: ClientId
          in: path
          description: Client Id in MS CRM
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceScreeningResult'
              example: {
  "FoundMatches": true,
  "Message": "Messagef6e1a887-81ab-41ea-8c26-c6a0890b69df",
  "ScreeningResult": false
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/riskassessment/{ClientId}':
    get:
      tags:
        - Lead Signups
      description: Performs a risk assessment on the signup/customer identified by the client id.
      operationId: LeadSignupV1RiskAssessment
      parameters:
        - name: ClientId
          in: path
          description: Client Id in MS CRM
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RiskAssessmentResult'
              example: {
  "AllowAsClient": false,
  "IsStpAllowed": true,
  "PreValidationPassed": true,
  "RiskAssessmentCompleted": false
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/sendonboardingemail/{ClientId/{TemplateId/{SignupId}':
    put:
      tags:
        - Lead Signups
      description: Sends email from CRM.
      operationId: LeadSignupV1SendOnboardingEmail
      parameters:
        - name: ClientId
          in: path
          required: true
          schema:
            type: string
        - name: SignupId
          in: path
          required: true
          schema:
            allOf:
              - pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
                type: string
        - name: TemplateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailResult'
              example: {
  "MailSent": true,
  "StatusMessage": "StatusMessage02e1c737-7445-4119-833a-8debb7d28400"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/getemailtemplates}':
    get:
      tags:
        - Lead Signups
      description: Gets email templates from CRM.
      operationId: LeadSignupV1GetEmailTemplates
      parameters:
        - name: AccountType
          in: query
          schema:
            type: string
        - name: BusinessLine
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EmailTemplateResult'
              example: {
  "Result": false,
  "Templates": [
    {
      "Id": 175,
      "Name": "Named4d098d0-431c-453c-b2bf-b57a5887d037"
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/compliancescreening/{Name/{Gender/{Country/{DateOfBirth}':
    get:
      tags:
        - Lead Signups
      description: Performs a compliance screening for user data (collected data).
      operationId: LeadSignupV1ComplianceScreening
      parameters:
        - name: Country
          in: path
          description: User's country of residence
          required: true
          schema:
            type: string
        - name: DateOfBirth
          in: path
          description: User's date of birth
          required: true
          schema:
            type: string
        - name: Gender
          in: path
          description: The user's gender
          required: true
          schema:
            $ref: '#/components/schemas/Gender'
        - name: Name
          in: path
          description: User's name
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ComplianceScreeningResult'
              example: {
  "FoundMatches": true,
  "Message": "Messagef6e1a887-81ab-41ea-8c26-c6a0890b69df",
  "ScreeningResult": false
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/{SignupId/{ClientId/identitycheck}':
    put:
      tags:
        - Lead Signups
      description: 'Performs an identity check for the signup, create a URU authentication report and saves this to CFS.'
      operationId: LeadSignupV1IdentityCheck
      parameters:
        - name: AuthID
          in: query
          description: AuthenticationID to call Incremental Verification
          schema:
            allOf:
              - pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
                type: string
        - name: ClientId
          in: path
          description: Unique ID for the client.
          required: true
          schema:
            type: string
        - name: SignupId
          in: path
          description: Unique ID of the onboarding application.
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
        - name: UruProfileId
          in: query
          description: Profile id against identity check should be done.
          schema:
            allOf:
              - pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
                type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ID3CheckSubmitSignupCommand'
            example: {
  "BankingDetails": {
    "AccountNumber": "AccountNumber08fe7209-c893-476e-9baa-53943d6cf880",
    "SortCode": "SortCode2909f6f5-426d-4b9b-b330-e386386e95bc"
  },
  "BusinessContext": {
    "AccountType": "Trading",
    "BusinessLine": "SaxoTrading",
    "FlowType": "OpenAccount2X",
    "OwnerId": 1
  },
  "EmailAddress": "EmailAddress070d357f-40f4-4ea1-9597-6a7dd483ee2a",
  "Password": "Passwordc4e41d39-17e8-461d-8f6c-341a50ae84e1",
  "SignupData": {
    "AdditionalInformation": {
      "EmploymentDetails": {
        "EmploymentInformation": {
          "EmployerAddress": "Denmark",
          "EmployerName": "Great Products Inc.",
          "JobTitle": "Sales Manager",
          "NatureOfBusiness": "Merchandise",
          "TenureStartYear": 1982
        },
        "EmploymentStatus": "Employment"
      },
      "FinancialDetails": {
        "AnnualSalaryAfterTaxId": 2,
        "EstimatedSavingsAndInvestments": 25000.0,
        "InvestableAssetsId": 2,
        "MonthlyIncomeAfterTax": 7500.0,
        "MonthlyOutgoings": 5500.0,
        "PrimarySourcesOfWealthIds": [
          1
        ],
        "SecondarySourcesOfIncomeIds": [
          1,
          3
        ],
        "TotalAmountOfSecondarySourcesOfIncomeId": 2
      },
      "SkipMailSending": false,
      "SourceOfFunds": {
        "Employment": true,
        "Inheritance": false,
        "Other": true,
        "OtherInformation": "Gifts",
        "Pension": false,
        "SavingsAndInvestment": true,
        "SelfEmployed": false
      }
    },
    "Address": {
      "BuildingNo": "25",
      "City": "Horsham",
      "CountryCode": "AU",
      "County": "Wimmera",
      "Floor": "2",
      "PostalCode": "3400",
      "State": "VIC",
      "Street": "Francis Rd",
      "Unit": "405"
    },
    "BankInformation": {
      "BeneficiaryAccountNumber": "BeneficiaryAccountNumber5778f690-70f0-47c1-9812-97d3d2735292",
      "BeneficiaryAccountTypeCode": "BeneficiaryAccountTypeCodeb7ebd55d-a3d3-4c66-b098-f87d59317e38",
      "BeneficiaryBankName": "BeneficiaryBankName556ae089-4193-488a-8ee7-92f5860f843d",
      "BeneficiaryBic": "BeneficiaryBic62ab9a56-cb9b-4e53-8066-6973d8387237",
      "BeneficiaryBranchCode": "BeneficiaryBranchCodef7723f9c-18f5-498b-b953-e24dacd037c4",
      "BeneficiaryClearingCode": "BeneficiaryClearingCode5e8b275a-d4ec-4826-b883-b07a0b8157b3",
      "BeneficiaryIban": "BeneficiaryIban3dd10fc6-c2c7-4c4d-8f0b-de5d970a0ae7",
      "BeneficiaryName": "BeneficiaryName16bc16c6-bbfc-4ade-a6a0-0b3ccfaad3ee",
      "ReceivingCountryIsoCode": "ReceivingCountryIsoCode9d8cda1e-ace5-4fd9-9740-9b8d17f0a33a"
    },
    "Communications": [],
    "Contact": {
      "AdditionalNationalityCodes": [
        "DNK"
      ],
      "CountryOfBirthCode": "AU",
      "CountryOfResidenceCode": "AU",
      "CountyOfBirth": "Wimmera",
      "DateOfBirth": "1965-10-04T00:00:00",
      "DeclaredBankrupt": "NotSet",
      "FirstName": "Peter",
      "Gender": "Male",
      "LastName": "Habel",
      "MaritalStateId": 2,
      "MarriedName": "Bush",
      "NameOfRelatedEmployee": "Jon",
      "NationalityCode": "AU",
      "NativeLanguageCode": "en",
      "PersonalId": "1234567890",
      "PersonalIdExpirationDate": "1965-10-04T00:00:00",
      "PersonalIdPlaceOfRelease": "test",
      "PersonalIdReleaseDate": "1965-10-04T00:00:00",
      "PersonalIdType": "PassportNumber",
      "RelatedToSaxoEmployee": "NotSet",
      "RelationToSaxoEmployee": "Friend",
      "TinNotAvailable": "NotSet",
      "TitleId": 1,
      "W8BenDiscrepancy": "NotSet"
    },
    "CorrespondenceAddressInfo": {
      "BuildingNo": "25",
      "City": "Horsham",
      "CountryCode": "AU",
      "County": "Wimmera",
      "Floor": "2",
      "PostalCode": "3400",
      "State": "VIC",
      "Street": "Francis Rd",
      "Unit": "405"
    },
    "Declaration": {
      "ConsentSource": "True",
      "ExemptionFromObligationInterestTaxId": 1,
      "ExemptionFromStockDividendTaxId": 1,
      "FrenchTaxableResident": "False",
      "MarketingConsent": "True",
      "NotPoliticallyExposedPerson": "True",
      "RiskDisclosure": "False",
      "SaxoBankGroupConsent": "True",
      "TaxDeductionOption": "False",
      "TradeWithOwnFunds": "True"
    },
    "FatcaDeclaration": {
      "IsUsCitizen": "False",
      "IsUsTaxLiable": "False",
      "UsProducts": "False"
    },
    "GlobalFinancialInformation": {
      "AnnualIncomeAfterTax": {
        "Amount": 176,
        "AmountDescription": "Exact",
        "CurrencyCode": "CurrencyCodea4e36510-73af-473e-98f5-b274678fec5d"
      },
      "IntendToInvest": {
        "Amount": 5,
        "AmountDescription": "Rounded",
        "CurrencyCode": "CurrencyCodedc22b7fd-7ba4-488c-80e0-b25439ca3a0f"
      },
      "InvestableAsset": {
        "Amount": 11,
        "AmountDescription": "AboveThisAmount",
        "CurrencyCode": "CurrencyCoded236460c-34f8-45b4-a40e-7384c5bcdcf1"
      }
    },
    "KnowledgeOfFinancialInstruments": "VeryLimitedKnowledgeOfFinancialInstruments",
    "NordNetFirstFunding": "Allowed",
    "PreviousAddress": {
      "BuildingNo": "25",
      "City": "Horsham",
      "CountryCode": "AU",
      "County": "Wimmera",
      "Floor": "2",
      "PostalCode": "3400",
      "State": "VIC",
      "Street": "Francis Rd",
      "Unit": "405"
    },
    "ProductTradingExperience": [
      "CFD"
    ],
    "SignupFlowData": {
      "AssessmentResult": "Unknown",
      "AutoDueDiligenceResult": "Unknown",
      "CcFirstFundingAllowed": false,
      "ChoiceOfAccountId": 0,
      "DemoAccountAllowed": false,
      "DemoAccountRequested": false,
      "EmailAddressVerified": false,
      "FallbackFlow": false,
      "FundingAsVerification": "NotSet",
      "LeadOrigin": "Unknown",
      "ReadyForFunding": false,
      "SkipEmailVerification": false
    },
    "TradingProfile": {
      "AnnualIncomeId": 1,
      "FinancialSectorEmployee": "NotSet",
      "FirstFundingAmount": 0.0,
      "IntendToInvest2Id": 0,
      "IntendToInvestId": 0,
      "InvestableAssetsId": 0,
      "OccupationId": 0,
      "PartnerInterestedInId": 0,
      "PurposeAndScopeId": 0,
      "TradesPerMonthId": 0,
      "TradesPerYearId": 0,
      "TradingExperienceId": 0
    }
  }
}
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityCheckResultCodeResult'
              example: {
  "AuthID": "21b63b63-8f8e-45d8-bd53-2ea4e2daf07a",
  "Code": "Referred",
  "Score": 91
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/{SignupId/{ClientId/identitycheck/idmatrix}':
    put:
      tags:
        - Lead Signups
      description: 'Performs an identity check for the signup using IDMatrix services, create a verification report and saves this to CFS.'
      operationId: LeadSignupV1IdMatrixIdentityCheck
      parameters:
        - name: ClientId
          in: path
          description: Unique ID for the client.
          required: true
          schema:
            type: string
        - name: SignupId
          in: path
          description: Unique ID of the onboarding application.
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSignupCommand'
            example: {
  "BusinessContext": {
    "AccountType": "Trading",
    "BusinessLine": "SaxoTrading",
    "FlowType": "OpenAccount2X",
    "OwnerId": 1
  },
  "EmailAddress": "EmailAddresse1cb42d9-ee00-49e7-b9f0-73beffc71555",
  "Password": "Password6792f436-b1cc-4b81-b62f-700560d66bca",
  "SignupData": {
    "AdditionalInformation": {
      "EmploymentDetails": {
        "EmploymentInformation": {
          "EmployerAddress": "Denmark",
          "EmployerName": "Great Products Inc.",
          "JobTitle": "Sales Manager",
          "NatureOfBusiness": "Merchandise",
          "TenureStartYear": 1982
        },
        "EmploymentStatus": "Employment"
      },
      "FinancialDetails": {
        "AnnualSalaryAfterTaxId": 2,
        "EstimatedSavingsAndInvestments": 25000.0,
        "InvestableAssetsId": 2,
        "MonthlyIncomeAfterTax": 7500.0,
        "MonthlyOutgoings": 5500.0,
        "PrimarySourcesOfWealthIds": [
          1
        ],
        "SecondarySourcesOfIncomeIds": [
          1,
          3
        ],
        "TotalAmountOfSecondarySourcesOfIncomeId": 2
      },
      "SkipMailSending": false,
      "SourceOfFunds": {
        "Employment": true,
        "Inheritance": false,
        "Other": true,
        "OtherInformation": "Gifts",
        "Pension": false,
        "SavingsAndInvestment": true,
        "SelfEmployed": false
      }
    },
    "Address": {
      "BuildingNo": "25",
      "City": "Horsham",
      "CountryCode": "AU",
      "County": "Wimmera",
      "Floor": "2",
      "PostalCode": "3400",
      "State": "VIC",
      "Street": "Francis Rd",
      "Unit": "405"
    },
    "BankInformation": {
      "BeneficiaryAccountNumber": "BeneficiaryAccountNumber939cd073-7451-4ddd-8338-e9c128cd556a",
      "BeneficiaryAccountTypeCode": "BeneficiaryAccountTypeCodef6d99463-e61c-4af1-b531-72320d498f40",
      "BeneficiaryBankName": "BeneficiaryBankName9a59c4d6-c87d-4762-beed-ac1b351d497a",
      "BeneficiaryBic": "BeneficiaryBic29895943-4d8a-4f93-8f49-62b28bcbc1d0",
      "BeneficiaryBranchCode": "BeneficiaryBranchCode46feb3ec-8903-48b5-9732-9328d5330a53",
      "BeneficiaryClearingCode": "BeneficiaryClearingCode2bb2cd4e-9464-49d1-aa5a-01445f2544e2",
      "BeneficiaryIban": "BeneficiaryIban308f11ef-e492-4b10-a234-688744410cf9",
      "BeneficiaryName": "BeneficiaryName57507a04-6674-4c04-a97b-b6f1a3859d3a",
      "ReceivingCountryIsoCode": "ReceivingCountryIsoCodedf719d5f-7292-4994-917e-2ea9a375e01d"
    },
    "Communications": [],
    "Contact": {
      "AdditionalNationalityCodes": [
        "DNK"
      ],
      "CountryOfBirthCode": "AU",
      "CountryOfResidenceCode": "AU",
      "CountyOfBirth": "Wimmera",
      "DateOfBirth": "1965-10-04T00:00:00",
      "DeclaredBankrupt": "NotSet",
      "FirstName": "Peter",
      "Gender": "Male",
      "LastName": "Habel",
      "MaritalStateId": 2,
      "MarriedName": "Bush",
      "NameOfRelatedEmployee": "Jon",
      "NationalityCode": "AU",
      "NativeLanguageCode": "en",
      "PersonalId": "1234567890",
      "PersonalIdExpirationDate": "1965-10-04T00:00:00",
      "PersonalIdPlaceOfRelease": "test",
      "PersonalIdReleaseDate": "1965-10-04T00:00:00",
      "PersonalIdType": "PassportNumber",
      "RelatedToSaxoEmployee": "NotSet",
      "RelationToSaxoEmployee": "Friend",
      "TinNotAvailable": "NotSet",
      "TitleId": 1,
      "W8BenDiscrepancy": "NotSet"
    },
    "CorrespondenceAddressInfo": {
      "BuildingNo": "25",
      "City": "Horsham",
      "CountryCode": "AU",
      "County": "Wimmera",
      "Floor": "2",
      "PostalCode": "3400",
      "State": "VIC",
      "Street": "Francis Rd",
      "Unit": "405"
    },
    "Declaration": {
      "ConsentSource": "True",
      "ExemptionFromObligationInterestTaxId": 1,
      "ExemptionFromStockDividendTaxId": 1,
      "FrenchTaxableResident": "False",
      "MarketingConsent": "True",
      "NotPoliticallyExposedPerson": "True",
      "RiskDisclosure": "False",
      "SaxoBankGroupConsent": "True",
      "TaxDeductionOption": "False",
      "TradeWithOwnFunds": "True"
    },
    "FatcaDeclaration": {
      "IsUsCitizen": "False",
      "IsUsTaxLiable": "False",
      "UsProducts": "False"
    },
    "GlobalFinancialInformation": {
      "AnnualIncomeAfterTax": {
        "Amount": 14,
        "AmountDescription": "Exact",
        "CurrencyCode": "CurrencyCodea531862d-9734-4fae-85be-8edf7e723225"
      },
      "IntendToInvest": {
        "Amount": 36,
        "AmountDescription": "Rounded",
        "CurrencyCode": "CurrencyCode56993214-dfe6-46c7-9464-06cd2991a858"
      },
      "InvestableAsset": {
        "Amount": 4,
        "AmountDescription": "AboveThisAmount",
        "CurrencyCode": "CurrencyCode0da7051f-f3bf-4833-b5ac-501074cffc84"
      }
    },
    "KnowledgeOfFinancialInstruments": "UnderstandBasicsOfFinancialInstruments",
    "NordNetFirstFunding": "Allowed",
    "PreviousAddress": {
      "BuildingNo": "25",
      "City": "Horsham",
      "CountryCode": "AU",
      "County": "Wimmera",
      "Floor": "2",
      "PostalCode": "3400",
      "State": "VIC",
      "Street": "Francis Rd",
      "Unit": "405"
    },
    "ProductTradingExperience": [
      "FuturesAndOptions"
    ],
    "SignupFlowData": {
      "AssessmentResult": "Unknown",
      "AutoDueDiligenceResult": "Unknown",
      "CcFirstFundingAllowed": false,
      "ChoiceOfAccountId": 0,
      "DemoAccountAllowed": false,
      "DemoAccountRequested": false,
      "EmailAddressVerified": false,
      "FallbackFlow": false,
      "FundingAsVerification": "NotSet",
      "LeadOrigin": "Unknown",
      "ReadyForFunding": false,
      "SkipEmailVerification": false
    },
    "TradingProfile": {
      "AnnualIncomeId": 1,
      "FinancialSectorEmployee": "NotSet",
      "FirstFundingAmount": 0.0,
      "IntendToInvest2Id": 0,
      "IntendToInvestId": 0,
      "InvestableAssetsId": 0,
      "OccupationId": 0,
      "PartnerInterestedInId": 0,
      "PurposeAndScopeId": 0,
      "TradesPerMonthId": 0,
      "TradesPerYearId": 0,
      "TradingExperienceId": 0
    }
  }
}
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IdentityCheckResultCodeResult'
              example: {
  "AuthID": "21b63b63-8f8e-45d8-bd53-2ea4e2daf07a",
  "Code": "Referred",
  "Score": 91
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/{SignupId/documentation}':
    put:
      tags:
        - Lead Signups
      summary: Attach documentation to an onboarding application
      description: Attach one or more base64 encoded documents to an onboarding application.
      operationId: LeadSignupV1AttachSignupDocumentation
      parameters:
        - name: SignupId
          in: path
          description: Unique ID of the onboarding application to attach documentation to.
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupDocumentation'
            example: {
  "Documents": [
    {
      "DocumentType": "IdPassport",
      "FileData": "PEJhc2U2NCBlbmNvZGVkIGRhdGEgZm9yIGEgcGFzc3BvcnQgSlBFRyBpbWFnZT4=",
      "FileName": "Passport.jpg"
    },
    {
      "DocumentType": "ProofOfResidency",
      "FileData": "PEJhc2U2NCBlbmNvZGVkIGRhdGEgb2ZyIGEgYmFuayBzdGF0ZW1lbnQgUERGIGZpbGU+",
      "FileName": "Bank Statement.pdf"
    }
  ],
  "NotUserDocuments": false,
  "SendUploadConfirmationToCustomer": true
}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - EmptyPayload
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                      EmptyPayload: No documents were included in the payload in the request to attach signup documents!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/{ClientId/ssi}':
    put:
      tags:
        - Lead Signups
      summary: Update Ssi information
      description: Creates or Updates an Ssi for a client.
      operationId: LeadSignupV1UpdateSsiInformation
      parameters:
        - name: ClientId
          in: path
          description: Client Id of the onboarding application.
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SsiRequest'
            example: {
  "BeneficiaryAccountNumber": "BeneficiaryAccountNumbera0f0b373-f858-417f-9551-babc292e7f3f",
  "BeneficiaryAccountTypeCode": "BeneficiaryAccountTypeCode23bb3d5e-c1d1-4a22-b41c-dbb5bd7b1fde",
  "BeneficiaryBankName": "BeneficiaryBankName1955a714-c039-4f3f-b737-503877e232d4",
  "BeneficiaryBic": "BeneficiaryBicd392ac45-b0ca-4c04-bdb2-c7cee92c7c5c",
  "BeneficiaryBranchCode": "BeneficiaryBranchCodefab116be-4ae5-4a64-9eae-0a6c3fd541f4",
  "BeneficiaryClearingCode": "BeneficiaryClearingCode8a80f8c4-728f-4643-b1bf-8a464370c242",
  "BeneficiaryIban": "BeneficiaryIban158acef9-273a-4518-8324-b86303d14916",
  "BeneficiaryName": "BeneficiaryName5237819a-5e1e-440b-8565-c3ea2610c64d",
  "ClientId": "ClientId52f4cb1b-d4b8-41b9-bf78-13750f3afd4e",
  "CurrencyIsoCode": "CurrencyIsoCode0cca5e56-cb53-4cba-b6cf-ab4eb6fa1c3a",
  "Key": "7f6346a8-caba-4223-b4b3-954ee1d1765c",
  "ReceivingCountryIsoCode": "ReceivingCountryIsoCode7abf6c99-098e-4f1b-bc8a-8ab5bcb029bf",
  "SsiName": "SsiName7353c97b-1e56-414a-8646-4c77f4bf0a6c"
}
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SsiResult'
              example: {
  "Key": "e885c877-5298-4ffd-bb24-d2d157fe1845",
  "Message": "Messageb4edbd66-a2b7-4cb0-953e-6933e8b78349",
  "Success": true
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/verified/{VerificationToken}':
    get:
      tags:
        - Lead Signups
      summary: Get onboarding application based on verification token
      description: "Gets data for an existing onboarding application based on a pre-issued verification token, which\r\n            has been sent to the user, as part of a link to continue the signup process."
      operationId: GET_LeadSignupV1GetSignup
      parameters:
        - name: ClientIp
          in: query
          description: Query parameter containing the IP address of the requesting client.
          required: true
          schema:
            type: string
        - name: VerificationToken
          in: path
          description: Base URI parameter containing a token to verify the in-progress onboarding signup application.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResult'
              example: {
  "BusinessContext": {
    "AccountType": "Trading",
    "BusinessLine": "SaxoTrading",
    "FlowType": "OpenAccount2X",
    "OwnerId": 1
  },
  "ClientId": "3094385",
  "EmailAddress": "someone@iitest.dk",
  "EmailVerificationToken": "37c46c30-c59b-413d-99a0-c30d9b45641e",
  "FlowState": "VerificationPending",
  "SignupData": {
    "AdditionalInformation": {
      "EmploymentDetails": {
        "EmploymentInformation": {
          "EmployerAddress": "Denmark",
          "EmployerName": "Great Products Inc.",
          "JobTitle": "Sales Manager",
          "NatureOfBusiness": "Merchandise",
          "TenureStartYear": 1982
        },
        "EmploymentStatus": "Employment"
      },
      "FinancialDetails": {
        "AnnualSalaryAfterTaxId": 2,
        "EstimatedSavingsAndInvestments": 25000.0,
        "InvestableAssetsId": 2,
        "MonthlyIncomeAfterTax": 7500.0,
        "MonthlyOutgoings": 5500.0,
        "PrimarySourcesOfWealthIds": [
          1
        ],
        "SecondarySourcesOfIncomeIds": [
          1,
          3
        ],
        "TotalAmountOfSecondarySourcesOfIncomeId": 2
      },
      "SkipMailSending": false,
      "SourceOfFunds": {
        "Employment": true,
        "Inheritance": false,
        "Other": true,
        "OtherInformation": "Gifts",
        "Pension": false,
        "SavingsAndInvestment": true,
        "SelfEmployed": false
      }
    },
    "Address": {
      "BuildingNo": "25",
      "City": "Horsham",
      "CountryCode": "AU",
      "County": "Wimmera",
      "Floor": "2",
      "PostalCode": "3400",
      "State": "VIC",
      "Street": "Francis Rd",
      "Unit": "405"
    },
    "Communications": [],
    "Contact": {
      "AdditionalNationalityCodes": [
        "DNK"
      ],
      "CountryOfBirthCode": "AU",
      "CountryOfResidenceCode": "AU",
      "CountyOfBirth": "Wimmera",
      "DateOfBirth": "1965-10-04T00:00:00",
      "DeclaredBankrupt": "NotSet",
      "FirstName": "Peter",
      "Gender": "Male",
      "LastName": "Habel",
      "MaritalStateId": 2,
      "MarriedName": "Bush",
      "NameOfRelatedEmployee": "Jon",
      "NationalityCode": "AU",
      "NativeLanguageCode": "en",
      "PersonalId": "1234567890",
      "PersonalIdExpirationDate": "1965-10-04T00:00:00",
      "PersonalIdPlaceOfRelease": "test",
      "PersonalIdReleaseDate": "1965-10-04T00:00:00",
      "PersonalIdType": "PassportNumber",
      "RelatedToSaxoEmployee": "NotSet",
      "RelationToSaxoEmployee": "Friend",
      "TinNotAvailable": "NotSet",
      "TitleId": 1,
      "W8BenDiscrepancy": "NotSet"
    },
    "Declaration": {
      "ConsentSource": "True",
      "ExemptionFromObligationInterestTaxId": 1,
      "ExemptionFromStockDividendTaxId": 1,
      "FrenchTaxableResident": "False",
      "MarketingConsent": "True",
      "NotPoliticallyExposedPerson": "True",
      "RiskDisclosure": "False",
      "SaxoBankGroupConsent": "True",
      "TaxDeductionOption": "False",
      "TradeWithOwnFunds": "True"
    },
    "FatcaDeclaration": {
      "IsUsCitizen": "False",
      "IsUsTaxLiable": "False",
      "UsProducts": "False"
    },
    "SignupFlowData": {
      "AssessmentResult": "Unknown",
      "AutoDueDiligenceResult": "Unknown",
      "CcFirstFundingAllowed": false,
      "ChoiceOfAccountId": 0,
      "DemoAccountAllowed": false,
      "DemoAccountRequested": false,
      "EmailAddressVerified": false,
      "FallbackFlow": false,
      "FundingAsVerification": "NotSet",
      "LeadOrigin": "Unknown",
      "ReadyForFunding": false,
      "SkipEmailVerification": false
    },
    "TradingProfile": {
      "AnnualIncomeId": 1,
      "FinancialSectorEmployee": "NotSet",
      "FirstFundingAmount": 0.0,
      "IntendToInvest2Id": 0,
      "IntendToInvestId": 0,
      "InvestableAssetsId": 0,
      "OccupationId": 0,
      "PartnerInterestedInId": 0,
      "PurposeAndScopeId": 0,
      "TradesPerMonthId": 0,
      "TradesPerYearId": 0,
      "TradingExperienceId": 0
    }
  },
  "SignupId": "7075f471-b9d2-4d94-b5e2-43f1362274b2"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidOrMissingIpAddress
                      - InvalidOrMissingVerificationToken
                    type: string
                    x-enum-descriptions:
                      InvalidOrMissingVerificationToken: Verification token is missing from the uri or is invalid!
                      InvalidOrMissingIpAddress: Client IP address is missing from the query-string or is invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: No onboarding application found for the specified verification token!
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/{SignupId}':
    get:
      tags:
        - Lead Signups
      summary: Get onboarding application
      description: Gets data for an existing onboarding application.
      operationId: LeadSignupV1GetSignup
      parameters:
        - name: SignupId
          in: path
          description: Unique ID of the onboarding application.
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResult'
              example: {
  "BusinessContext": {
    "AccountType": "Trading",
    "BusinessLine": "SaxoTrading",
    "FlowType": "OpenAccount2X",
    "OwnerId": 1
  },
  "ClientId": "3094385",
  "EmailAddress": "someone@iitest.dk",
  "EmailVerificationToken": "37c46c30-c59b-413d-99a0-c30d9b45641e",
  "FlowState": "VerificationPending",
  "SignupData": {
    "AdditionalInformation": {
      "EmploymentDetails": {
        "EmploymentInformation": {
          "EmployerAddress": "Denmark",
          "EmployerName": "Great Products Inc.",
          "JobTitle": "Sales Manager",
          "NatureOfBusiness": "Merchandise",
          "TenureStartYear": 1982
        },
        "EmploymentStatus": "Employment"
      },
      "FinancialDetails": {
        "AnnualSalaryAfterTaxId": 2,
        "EstimatedSavingsAndInvestments": 25000.0,
        "InvestableAssetsId": 2,
        "MonthlyIncomeAfterTax": 7500.0,
        "MonthlyOutgoings": 5500.0,
        "PrimarySourcesOfWealthIds": [
          1
        ],
        "SecondarySourcesOfIncomeIds": [
          1,
          3
        ],
        "TotalAmountOfSecondarySourcesOfIncomeId": 2
      },
      "SkipMailSending": false,
      "SourceOfFunds": {
        "Employment": true,
        "Inheritance": false,
        "Other": true,
        "OtherInformation": "Gifts",
        "Pension": false,
        "SavingsAndInvestment": true,
        "SelfEmployed": false
      }
    },
    "Address": {
      "BuildingNo": "25",
      "City": "Horsham",
      "CountryCode": "AU",
      "County": "Wimmera",
      "Floor": "2",
      "PostalCode": "3400",
      "State": "VIC",
      "Street": "Francis Rd",
      "Unit": "405"
    },
    "Communications": [],
    "Contact": {
      "AdditionalNationalityCodes": [
        "DNK"
      ],
      "CountryOfBirthCode": "AU",
      "CountryOfResidenceCode": "AU",
      "CountyOfBirth": "Wimmera",
      "DateOfBirth": "1965-10-04T00:00:00",
      "DeclaredBankrupt": "NotSet",
      "FirstName": "Peter",
      "Gender": "Male",
      "LastName": "Habel",
      "MaritalStateId": 2,
      "MarriedName": "Bush",
      "NameOfRelatedEmployee": "Jon",
      "NationalityCode": "AU",
      "NativeLanguageCode": "en",
      "PersonalId": "1234567890",
      "PersonalIdExpirationDate": "1965-10-04T00:00:00",
      "PersonalIdPlaceOfRelease": "test",
      "PersonalIdReleaseDate": "1965-10-04T00:00:00",
      "PersonalIdType": "PassportNumber",
      "RelatedToSaxoEmployee": "NotSet",
      "RelationToSaxoEmployee": "Friend",
      "TinNotAvailable": "NotSet",
      "TitleId": 1,
      "W8BenDiscrepancy": "NotSet"
    },
    "Declaration": {
      "ConsentSource": "True",
      "ExemptionFromObligationInterestTaxId": 1,
      "ExemptionFromStockDividendTaxId": 1,
      "FrenchTaxableResident": "False",
      "MarketingConsent": "True",
      "NotPoliticallyExposedPerson": "True",
      "RiskDisclosure": "False",
      "SaxoBankGroupConsent": "True",
      "TaxDeductionOption": "False",
      "TradeWithOwnFunds": "True"
    },
    "FatcaDeclaration": {
      "IsUsCitizen": "False",
      "IsUsTaxLiable": "False",
      "UsProducts": "False"
    },
    "SignupFlowData": {
      "AssessmentResult": "Unknown",
      "AutoDueDiligenceResult": "Unknown",
      "CcFirstFundingAllowed": false,
      "ChoiceOfAccountId": 0,
      "DemoAccountAllowed": false,
      "DemoAccountRequested": false,
      "EmailAddressVerified": false,
      "FallbackFlow": false,
      "FundingAsVerification": "NotSet",
      "LeadOrigin": "Unknown",
      "ReadyForFunding": false,
      "SkipEmailVerification": false
    },
    "TradingProfile": {
      "AnnualIncomeId": 1,
      "FinancialSectorEmployee": "NotSet",
      "FirstFundingAmount": 0.0,
      "IntendToInvest2Id": 0,
      "IntendToInvestId": 0,
      "InvestableAssetsId": 0,
      "OccupationId": 0,
      "PartnerInterestedInId": 0,
      "PurposeAndScopeId": 0,
      "TradesPerMonthId": 0,
      "TradesPerYearId": 0,
      "TradingExperienceId": 0
    }
  },
  "SignupId": "7075f471-b9d2-4d94-b5e2-43f1362274b2"
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - ApplicationDoesNotExist
                    type: string
                    x-enum-descriptions:
                      ApplicationDoesNotExist: An onboarding application with the specified ID does not exist.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    put:
      tags:
        - Lead Signups
      summary: Update onboarding application
      description: Updates an existing onboarding application.
      operationId: LeadSignupV1UpdateSignup
      parameters:
        - name: SignupId
          in: path
          description: Unique ID of the onboarding application.
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
        - name: UpdateAdditionalInfo
          in: query
          description: "Optional query-parameter indicating whether additional information, contained\r\n            in the SignupData, should be updated as well."
          schema:
            type: boolean
          example: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateSignupCommand'
            example: {
  "BusinessContext": {
    "AccountType": "Trading",
    "BusinessLine": "SaxoTrading",
    "FlowType": "OpenAccount2X",
    "OwnerId": 1
  },
  "EmailAddress": "EmailAddresse1cb42d9-ee00-49e7-b9f0-73beffc71555",
  "Password": "Password6792f436-b1cc-4b81-b62f-700560d66bca",
  "SignupData": {
    "AdditionalInformation": {
      "EmploymentDetails": {
        "EmploymentInformation": {
          "EmployerAddress": "Denmark",
          "EmployerName": "Great Products Inc.",
          "JobTitle": "Sales Manager",
          "NatureOfBusiness": "Merchandise",
          "TenureStartYear": 1982
        },
        "EmploymentStatus": "Employment"
      },
      "FinancialDetails": {
        "AnnualSalaryAfterTaxId": 2,
        "EstimatedSavingsAndInvestments": 25000.0,
        "InvestableAssetsId": 2,
        "MonthlyIncomeAfterTax": 7500.0,
        "MonthlyOutgoings": 5500.0,
        "PrimarySourcesOfWealthIds": [
          1
        ],
        "SecondarySourcesOfIncomeIds": [
          1,
          3
        ],
        "TotalAmountOfSecondarySourcesOfIncomeId": 2
      },
      "SkipMailSending": false,
      "SourceOfFunds": {
        "Employment": true,
        "Inheritance": false,
        "Other": true,
        "OtherInformation": "Gifts",
        "Pension": false,
        "SavingsAndInvestment": true,
        "SelfEmployed": false
      }
    },
    "Address": {
      "BuildingNo": "25",
      "City": "Horsham",
      "CountryCode": "AU",
      "County": "Wimmera",
      "Floor": "2",
      "PostalCode": "3400",
      "State": "VIC",
      "Street": "Francis Rd",
      "Unit": "405"
    },
    "BankInformation": {
      "BeneficiaryAccountNumber": "BeneficiaryAccountNumber939cd073-7451-4ddd-8338-e9c128cd556a",
      "BeneficiaryAccountTypeCode": "BeneficiaryAccountTypeCodef6d99463-e61c-4af1-b531-72320d498f40",
      "BeneficiaryBankName": "BeneficiaryBankName9a59c4d6-c87d-4762-beed-ac1b351d497a",
      "BeneficiaryBic": "BeneficiaryBic29895943-4d8a-4f93-8f49-62b28bcbc1d0",
      "BeneficiaryBranchCode": "BeneficiaryBranchCode46feb3ec-8903-48b5-9732-9328d5330a53",
      "BeneficiaryClearingCode": "BeneficiaryClearingCode2bb2cd4e-9464-49d1-aa5a-01445f2544e2",
      "BeneficiaryIban": "BeneficiaryIban308f11ef-e492-4b10-a234-688744410cf9",
      "BeneficiaryName": "BeneficiaryName57507a04-6674-4c04-a97b-b6f1a3859d3a",
      "ReceivingCountryIsoCode": "ReceivingCountryIsoCodedf719d5f-7292-4994-917e-2ea9a375e01d"
    },
    "Communications": [],
    "Contact": {
      "AdditionalNationalityCodes": [
        "DNK"
      ],
      "CountryOfBirthCode": "AU",
      "CountryOfResidenceCode": "AU",
      "CountyOfBirth": "Wimmera",
      "DateOfBirth": "1965-10-04T00:00:00",
      "DeclaredBankrupt": "NotSet",
      "FirstName": "Peter",
      "Gender": "Male",
      "LastName": "Habel",
      "MaritalStateId": 2,
      "MarriedName": "Bush",
      "NameOfRelatedEmployee": "Jon",
      "NationalityCode": "AU",
      "NativeLanguageCode": "en",
      "PersonalId": "1234567890",
      "PersonalIdExpirationDate": "1965-10-04T00:00:00",
      "PersonalIdPlaceOfRelease": "test",
      "PersonalIdReleaseDate": "1965-10-04T00:00:00",
      "PersonalIdType": "PassportNumber",
      "RelatedToSaxoEmployee": "NotSet",
      "RelationToSaxoEmployee": "Friend",
      "TinNotAvailable": "NotSet",
      "TitleId": 1,
      "W8BenDiscrepancy": "NotSet"
    },
    "CorrespondenceAddressInfo": {
      "BuildingNo": "25",
      "City": "Horsham",
      "CountryCode": "AU",
      "County": "Wimmera",
      "Floor": "2",
      "PostalCode": "3400",
      "State": "VIC",
      "Street": "Francis Rd",
      "Unit": "405"
    },
    "Declaration": {
      "ConsentSource": "True",
      "ExemptionFromObligationInterestTaxId": 1,
      "ExemptionFromStockDividendTaxId": 1,
      "FrenchTaxableResident": "False",
      "MarketingConsent": "True",
      "NotPoliticallyExposedPerson": "True",
      "RiskDisclosure": "False",
      "SaxoBankGroupConsent": "True",
      "TaxDeductionOption": "False",
      "TradeWithOwnFunds": "True"
    },
    "FatcaDeclaration": {
      "IsUsCitizen": "False",
      "IsUsTaxLiable": "False",
      "UsProducts": "False"
    },
    "GlobalFinancialInformation": {
      "AnnualIncomeAfterTax": {
        "Amount": 14,
        "AmountDescription": "Exact",
        "CurrencyCode": "CurrencyCodea531862d-9734-4fae-85be-8edf7e723225"
      },
      "IntendToInvest": {
        "Amount": 36,
        "AmountDescription": "Rounded",
        "CurrencyCode": "CurrencyCode56993214-dfe6-46c7-9464-06cd2991a858"
      },
      "InvestableAsset": {
        "Amount": 4,
        "AmountDescription": "AboveThisAmount",
        "CurrencyCode": "CurrencyCode0da7051f-f3bf-4833-b5ac-501074cffc84"
      }
    },
    "KnowledgeOfFinancialInstruments": "UnderstandBasicsOfFinancialInstruments",
    "NordNetFirstFunding": "Allowed",
    "PreviousAddress": {
      "BuildingNo": "25",
      "City": "Horsham",
      "CountryCode": "AU",
      "County": "Wimmera",
      "Floor": "2",
      "PostalCode": "3400",
      "State": "VIC",
      "Street": "Francis Rd",
      "Unit": "405"
    },
    "ProductTradingExperience": [
      "FuturesAndOptions"
    ],
    "SignupFlowData": {
      "AssessmentResult": "Unknown",
      "AutoDueDiligenceResult": "Unknown",
      "CcFirstFundingAllowed": false,
      "ChoiceOfAccountId": 0,
      "DemoAccountAllowed": false,
      "DemoAccountRequested": false,
      "EmailAddressVerified": false,
      "FallbackFlow": false,
      "FundingAsVerification": "NotSet",
      "LeadOrigin": "Unknown",
      "ReadyForFunding": false,
      "SkipEmailVerification": false
    },
    "TradingProfile": {
      "AnnualIncomeId": 1,
      "FinancialSectorEmployee": "NotSet",
      "FirstFundingAmount": 0.0,
      "IntendToInvest2Id": 0,
      "IntendToInvestId": 0,
      "InvestableAssetsId": 0,
      "OccupationId": 0,
      "PartnerInterestedInId": 0,
      "PurposeAndScopeId": 0,
      "TradesPerMonthId": 0,
      "TradesPerYearId": 0,
      "TradingExperienceId": 0
    }
  }
}
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResult'
              example: {
  "BusinessContext": {
    "AccountType": "Trading",
    "BusinessLine": "SaxoTrading",
    "FlowType": "OpenAccount2X",
    "OwnerId": 1
  },
  "ClientId": "3094385",
  "EmailAddress": "someone@iitest.dk",
  "EmailVerificationToken": "37c46c30-c59b-413d-99a0-c30d9b45641e",
  "FlowState": "VerificationPending",
  "SignupData": {
    "AdditionalInformation": {
      "EmploymentDetails": {
        "EmploymentInformation": {
          "EmployerAddress": "Denmark",
          "EmployerName": "Great Products Inc.",
          "JobTitle": "Sales Manager",
          "NatureOfBusiness": "Merchandise",
          "TenureStartYear": 1982
        },
        "EmploymentStatus": "Employment"
      },
      "FinancialDetails": {
        "AnnualSalaryAfterTaxId": 2,
        "EstimatedSavingsAndInvestments": 25000.0,
        "InvestableAssetsId": 2,
        "MonthlyIncomeAfterTax": 7500.0,
        "MonthlyOutgoings": 5500.0,
        "PrimarySourcesOfWealthIds": [
          1
        ],
        "SecondarySourcesOfIncomeIds": [
          1,
          3
        ],
        "TotalAmountOfSecondarySourcesOfIncomeId": 2
      },
      "SkipMailSending": false,
      "SourceOfFunds": {
        "Employment": true,
        "Inheritance": false,
        "Other": true,
        "OtherInformation": "Gifts",
        "Pension": false,
        "SavingsAndInvestment": true,
        "SelfEmployed": false
      }
    },
    "Address": {
      "BuildingNo": "25",
      "City": "Horsham",
      "CountryCode": "AU",
      "County": "Wimmera",
      "Floor": "2",
      "PostalCode": "3400",
      "State": "VIC",
      "Street": "Francis Rd",
      "Unit": "405"
    },
    "Communications": [],
    "Contact": {
      "AdditionalNationalityCodes": [
        "DNK"
      ],
      "CountryOfBirthCode": "AU",
      "CountryOfResidenceCode": "AU",
      "CountyOfBirth": "Wimmera",
      "DateOfBirth": "1965-10-04T00:00:00",
      "DeclaredBankrupt": "NotSet",
      "FirstName": "Peter",
      "Gender": "Male",
      "LastName": "Habel",
      "MaritalStateId": 2,
      "MarriedName": "Bush",
      "NameOfRelatedEmployee": "Jon",
      "NationalityCode": "AU",
      "NativeLanguageCode": "en",
      "PersonalId": "1234567890",
      "PersonalIdExpirationDate": "1965-10-04T00:00:00",
      "PersonalIdPlaceOfRelease": "test",
      "PersonalIdReleaseDate": "1965-10-04T00:00:00",
      "PersonalIdType": "PassportNumber",
      "RelatedToSaxoEmployee": "NotSet",
      "RelationToSaxoEmployee": "Friend",
      "TinNotAvailable": "NotSet",
      "TitleId": 1,
      "W8BenDiscrepancy": "NotSet"
    },
    "Declaration": {
      "ConsentSource": "True",
      "ExemptionFromObligationInterestTaxId": 1,
      "ExemptionFromStockDividendTaxId": 1,
      "FrenchTaxableResident": "False",
      "MarketingConsent": "True",
      "NotPoliticallyExposedPerson": "True",
      "RiskDisclosure": "False",
      "SaxoBankGroupConsent": "True",
      "TaxDeductionOption": "False",
      "TradeWithOwnFunds": "True"
    },
    "FatcaDeclaration": {
      "IsUsCitizen": "False",
      "IsUsTaxLiable": "False",
      "UsProducts": "False"
    },
    "SignupFlowData": {
      "AssessmentResult": "Unknown",
      "AutoDueDiligenceResult": "Unknown",
      "CcFirstFundingAllowed": false,
      "ChoiceOfAccountId": 0,
      "DemoAccountAllowed": false,
      "DemoAccountRequested": false,
      "EmailAddressVerified": false,
      "FallbackFlow": false,
      "FundingAsVerification": "NotSet",
      "LeadOrigin": "Unknown",
      "ReadyForFunding": false,
      "SkipEmailVerification": false
    },
    "TradingProfile": {
      "AnnualIncomeId": 1,
      "FinancialSectorEmployee": "NotSet",
      "FirstFundingAmount": 0.0,
      "IntendToInvest2Id": 0,
      "IntendToInvestId": 0,
      "InvestableAssetsId": 0,
      "OccupationId": 0,
      "PartnerInterestedInId": 0,
      "PurposeAndScopeId": 0,
      "TradesPerMonthId": 0,
      "TradesPerYearId": 0,
      "TradingExperienceId": 0
    }
  },
  "SignupId": "7075f471-b9d2-4d94-b5e2-43f1362274b2"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups}':
    post:
      tags:
        - Lead Signups
      summary: Create onboarding application
      description: Creates a new onboarding application for an applicant.
      operationId: LeadSignupV1CreateSignup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSignupCommand'
            example: {
  "BusinessContext": {
    "AccountType": "Trading",
    "BusinessLine": "SaxoTrading",
    "FlowType": "OpenAccount2X",
    "OwnerId": 1
  },
  "EmailAddress": "somebody@iitest.dk",
  "SignupId": "00000000-0000-0000-0000-000000000000"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResult'
              example: {
  "BusinessContext": {
    "AccountType": "Trading",
    "BusinessLine": "SaxoTrading",
    "FlowType": "OpenAccount2X",
    "OwnerId": 1
  },
  "ClientId": "3094385",
  "EmailAddress": "someone@iitest.dk",
  "EmailVerificationToken": "37c46c30-c59b-413d-99a0-c30d9b45641e",
  "FlowState": "VerificationPending",
  "SignupData": {
    "AdditionalInformation": {
      "EmploymentDetails": {
        "EmploymentInformation": {
          "EmployerAddress": "Denmark",
          "EmployerName": "Great Products Inc.",
          "JobTitle": "Sales Manager",
          "NatureOfBusiness": "Merchandise",
          "TenureStartYear": 1982
        },
        "EmploymentStatus": "Employment"
      },
      "FinancialDetails": {
        "AnnualSalaryAfterTaxId": 2,
        "EstimatedSavingsAndInvestments": 25000.0,
        "InvestableAssetsId": 2,
        "MonthlyIncomeAfterTax": 7500.0,
        "MonthlyOutgoings": 5500.0,
        "PrimarySourcesOfWealthIds": [
          1
        ],
        "SecondarySourcesOfIncomeIds": [
          1,
          3
        ],
        "TotalAmountOfSecondarySourcesOfIncomeId": 2
      },
      "SkipMailSending": false,
      "SourceOfFunds": {
        "Employment": true,
        "Inheritance": false,
        "Other": true,
        "OtherInformation": "Gifts",
        "Pension": false,
        "SavingsAndInvestment": true,
        "SelfEmployed": false
      }
    },
    "Address": {
      "BuildingNo": "25",
      "City": "Horsham",
      "CountryCode": "AU",
      "County": "Wimmera",
      "Floor": "2",
      "PostalCode": "3400",
      "State": "VIC",
      "Street": "Francis Rd",
      "Unit": "405"
    },
    "Communications": [],
    "Contact": {
      "AdditionalNationalityCodes": [
        "DNK"
      ],
      "CountryOfBirthCode": "AU",
      "CountryOfResidenceCode": "AU",
      "CountyOfBirth": "Wimmera",
      "DateOfBirth": "1965-10-04T00:00:00",
      "DeclaredBankrupt": "NotSet",
      "FirstName": "Peter",
      "Gender": "Male",
      "LastName": "Habel",
      "MaritalStateId": 2,
      "MarriedName": "Bush",
      "NameOfRelatedEmployee": "Jon",
      "NationalityCode": "AU",
      "NativeLanguageCode": "en",
      "PersonalId": "1234567890",
      "PersonalIdExpirationDate": "1965-10-04T00:00:00",
      "PersonalIdPlaceOfRelease": "test",
      "PersonalIdReleaseDate": "1965-10-04T00:00:00",
      "PersonalIdType": "PassportNumber",
      "RelatedToSaxoEmployee": "NotSet",
      "RelationToSaxoEmployee": "Friend",
      "TinNotAvailable": "NotSet",
      "TitleId": 1,
      "W8BenDiscrepancy": "NotSet"
    },
    "Declaration": {
      "ConsentSource": "True",
      "ExemptionFromObligationInterestTaxId": 1,
      "ExemptionFromStockDividendTaxId": 1,
      "FrenchTaxableResident": "False",
      "MarketingConsent": "True",
      "NotPoliticallyExposedPerson": "True",
      "RiskDisclosure": "False",
      "SaxoBankGroupConsent": "True",
      "TaxDeductionOption": "False",
      "TradeWithOwnFunds": "True"
    },
    "FatcaDeclaration": {
      "IsUsCitizen": "False",
      "IsUsTaxLiable": "False",
      "UsProducts": "False"
    },
    "SignupFlowData": {
      "AssessmentResult": "Unknown",
      "AutoDueDiligenceResult": "Unknown",
      "CcFirstFundingAllowed": false,
      "ChoiceOfAccountId": 0,
      "DemoAccountAllowed": false,
      "DemoAccountRequested": false,
      "EmailAddressVerified": false,
      "FallbackFlow": false,
      "FundingAsVerification": "NotSet",
      "LeadOrigin": "Unknown",
      "ReadyForFunding": false,
      "SkipEmailVerification": false
    },
    "TradingProfile": {
      "AnnualIncomeId": 1,
      "FinancialSectorEmployee": "NotSet",
      "FirstFundingAmount": 0.0,
      "IntendToInvest2Id": 0,
      "IntendToInvestId": 0,
      "InvestableAssetsId": 0,
      "OccupationId": 0,
      "PartnerInterestedInId": 0,
      "PurposeAndScopeId": 0,
      "TradesPerMonthId": 0,
      "TradesPerYearId": 0,
      "TradingExperienceId": 0
    }
  },
  "SignupId": "7075f471-b9d2-4d94-b5e2-43f1362274b2"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/flowdata/{BusinessLine/{FlowType/{AccountType/{OwnerId}':
    get:
      tags:
        - Lead Signups
      summary: Get a list of properties for an onboarding flow
      description: Gets data for a list of properties for an onboarding flow.
      operationId: LeadSignupV1GetFlowPropertiesData
      parameters:
        - name: AccountType
          in: path
          description: Account type.
          required: true
          schema:
            title: Account type.
            allOf:
              - $ref: '#/components/schemas/Signup.AccountType'
          example: "Trading"
        - name: BusinessLine
          in: path
          description: Business line.
          required: true
          schema:
            title: Business line.
            allOf:
              - $ref: '#/components/schemas/Model.BusinessLine'
          example: "SaxoTrading"
        - name: FlowType
          in: path
          description: Flow type.
          required: true
          schema:
            title: Flow type.
            allOf:
              - $ref: '#/components/schemas/Model.FlowType'
          example: "OpenAccount2X"
        - name: OwnerId
          in: path
          description: Id the owner of the flow.
          required: true
          schema:
            title: Id the owner of the flow.
            type: integer
            format: int32
          example: 122
        - name: PropertyNames
          in: query
          description: Comma separated list of property names to get flow data for.
          required: true
          schema:
            title: Comma separated list of property names to get flow data for.
            type: string
          example: "3879ab7f-b82b-4d5b-8056-4f3f96e21b09"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlowPropertiesResult'
              example: [
  {
    "PropertyName": "annualincome",
    "Values": [
      {
        "DisplayConstraint": "Display",
        "Text": "=< 25.000 €",
        "Value": "1"
      },
      {
        "DisplayConstraint": "Display",
        "Text": "Between 25.000 and 50.000 €",
        "Value": "2"
      },
      {
        "DisplayConstraint": "Display",
        "Text": "Between 50.000 and 75.000 €",
        "Value": "3"
      }
    ]
  },
  {
    "PropertyName": "currencies",
    "Values": [
      {
        "DisplayConstraint": "Display",
        "Text": "AED",
        "Value": "AED"
      },
      {
        "DisplayConstraint": "Display",
        "Text": "EUR",
        "Value": "EUR"
      },
      {
        "DisplayConstraint": "Display",
        "Text": "GBP",
        "Value": "GBP"
      }
    ]
  }
]
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/leadsignups/flowdata/{BusinessLine/{FlowType/{AccountType/{OwnerId/{PropertyName}':
    get:
      tags:
        - Lead Signups
      summary: Get property for an onboarding flow
      description: Gets data for a specific property for an onboarding flow.
      operationId: LeadSignupV1GetFlowPropertyData
      parameters:
        - name: AccountType
          in: path
          description: Account type.
          required: true
          schema:
            title: Account type.
            allOf:
              - $ref: '#/components/schemas/Signup.AccountType'
          example: "Trading"
        - name: BusinessLine
          in: path
          description: Business line.
          required: true
          schema:
            title: Business line.
            allOf:
              - $ref: '#/components/schemas/Model.BusinessLine'
          example: "SaxoTrading"
        - name: FlowType
          in: path
          description: Flow type.
          required: true
          schema:
            title: Flow type.
            allOf:
              - $ref: '#/components/schemas/Model.FlowType'
          example: "OpenAccount2X"
        - name: OwnerId
          in: path
          description: Id the owner of the flow.
          required: true
          schema:
            title: Id the owner of the flow.
            type: integer
            format: int32
          example: 122
        - name: PropertyName
          in: path
          description: Name of a specific flow property to get data for.
          required: true
          schema:
            title: Name of a specific flow property to get data for.
            type: string
          example: "3879ab7f-b82b-4d5b-8056-4f3f96e21b09"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/FlowPropertyResult'
              example: [
  {
    "DisplayConstraint": "Display",
    "Text": "AED",
    "Value": "AED"
  },
  {
    "DisplayConstraint": "Display",
    "Text": "EUR",
    "Value": "EUR"
  },
  {
    "DisplayConstraint": "Display",
    "Text": "GBP",
    "Value": "GBP"
  }
]
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/accounts/features}':
    get:
      tags:
        - Accounts
      description: Get allowed feature id\type values
      operationId: AccountsGetFeatureOptionsAsync
      parameters:
        - name: ClientKey
          in: query
          description: Client key to fetch feature options.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: AbSTLYSoo499JZpp|ckGFw==
        - name: OptionType
          in: query
          schema:
            $ref: '#/components/schemas/OptionTypeNullable'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeatureDetails'
              example: {
  "FeatureTypes": [
    {
      "FeatureValues": [
        {
          "Id": "3",
          "Name": "Model Managed"
        },
        {
          "Id": "5",
          "Name": "Self Periodic Investment"
        }
      ],
      "Id": "6",
      "Name": "Management Type"
    }
  ]
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - AllowedValuesNotFound
                    type: string
                    x-enum-descriptions:
                      AllowedValuesNotFound: Allowed values not found
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/accounts}':
    post:
      tags:
        - Accounts
      description: Create an account for the client based on template id.
      operationId: AccountsCreateAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Models.CreateAccount'
            example: {
  "AccountDetails": [
    {
      "AccountRiskProfileId": 2,
      "Currency": "DKK",
      "Features": [
        {
          "FeatureTypeId": "2",
          "FeatureValue": "3"
        },
        {
          "FeatureTypeId": "1",
          "FeatureValue": "1"
        }
      ],
      "MaxCreditLine": 22000.0,
      "TemplateId": "323",
      "Transferred": true
    },
    {
      "AccountRiskProfileId": 1,
      "Currency": "USD",
      "Features": [
        {
          "FeatureTypeId": "2",
          "FeatureValue": "3"
        }
      ],
      "MaxCreditLine": 10000.0,
      "TemplateId": "60",
      "Transferred": false
    }
  ],
  "ClientKey": "BxS0VWLta8lJ3SBpjGBQjw=="
}
      responses:
        '201':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDetailsListResult'
              example: {
  "__count": 1,
  "Data": [
    {
      "AccountId": "2147279960",
      "AccountKey": "BxS0VWLta8lJ3SBpjGBQjw==",
      "Currency": "EUR",
      "Status": "Completed",
      "TemplateId": "323"
    }
  ]
}
        '202':
          description: Indicates that the request was accepted.
        '500':
          description: Internal Server Error
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                      - InvalidTemplateId
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                      InvalidTemplateId: Invalid Template Id
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    patch:
      tags:
        - Accounts
      description: Update accounts based on AccountKey
      operationId: AccountsUpdateAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAccount'
            example: {
  "AccountDetails": [
    {
      "AccountGroupIds": [
        1,
        13,
        20
      ],
      "AccountKey": "7wfA7-TCgQ0ygd||aOXY0w==",
      "AccountRiskProfileId": 1,
      "Features": [
        {
          "FeatureTypeId": "2",
          "FeatureValue": "3"
        }
      ],
      "MaxCreditLine": 20000.0,
      "Transferred": true
    }
  ]
}
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdatedAccountDetailsListResult'
              example: {
  "__count": 1,
  "Data": [
    {
      "AccountId": "2147279960",
      "AccountKey": "7wfA7-TCgQ0ygd||aOXY0w==",
      "Status": "Completed"
    }
  ]
}
        '200':
          description: Indicates that the account has been updated successfully.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/accounts/templates}':
    get:
      tags:
        - Accounts
      description: Get accounts template id’s based on choice of accounts.
      operationId: AccountsGet
      parameters:
        - name: ChoiceOfAccount
          in: query
          description: Comma Seprated Choice Of Account
          required: true
          schema:
            title: Comma Seprated Choice Of Account
            type: string
          example: "3879ab7f-b82b-4d5b-8056-4f3f96e21b09"
        - name: ClientKey
          in: query
          description: Client Key
          required: true
          schema:
            title: Client Key
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: "8a791099-8b53-43c1-ad22-7c83082bcf6a"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountTemplateListResult'
              example: {
  "__count": 1,
  "Data": [
    {
      "ChoiceOfAccount": "55",
      "TemplateId": "323"
    }
  ]
}
        '500':
          description: Internal Server Error
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidChoiceOfAccount
                      - InvalidInput
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                      InvalidChoiceOfAccount: Invalid Choice Of Account
                      InvalidInput: Invalid Input
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/resetpasswordrequest}':
    post:
      tags:
        - Users
      summary: Request a password reset
      description: Requests a password reset for a user
      operationId: UsersResetPasswordResetPassword
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IBPasswordResetRequest'
            example: {
  "Email": "user@domain.com",
  "Language": "zh-cn",
  "UserId": 8235162
}
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - EmailAddressInvalid
                    type: string
                    x-enum-descriptions:
                      EmailAddressInvalid: E-mail address is invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFound
                    type: string
                    x-enum-descriptions:
                      NotFound: ''
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cm/online}':
    post:
      operationId: cm_online
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-application-visibility: saxo-only
      x-network-visibility: internal
  '/cm/v1/certificates/{SerialNumber}':
    delete:
      tags:
        - Certificates
      summary: Revokes a certificate with the serial number .
      description: Revokes a certificate with the serial number .
      operationId: CBADeleteCertificateAsync
      parameters:
        - name: SerialNumber
          in: path
          description: The serial number of the certificate that needs to be revoked
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/certificates/{UserKey}':
    post:
      tags:
        - Certificates
      summary: Create a new certificate for the user specified by
      description: Create a new certificate for the user specified by
      operationId: CBACreateCertificateAsync
      parameters:
        - name: UserKey
          in: path
          description: The user to which the certificate should be issued
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: UserKey
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCertificateResponse'
              example: {
  "CertificatePFX": "CertificatePFX34c1d8a2-2120-4578-9172-170ae8d8f828",
  "Expiry": "2021-04-14T15:47:00.501673Z",
  "Password": "Password25a1639d-b978-4fb4-9471-f8c2571dbfe9",
  "SerialNumber": "SerialNumberd43965a5-2253-4934-b9c2-665e7aa3a349",
  "Thumbprint": "Thumbprintc7b39fef-f38b-46cc-bfbf-e545e78ee67b",
  "ValidFrom": "2023-04-02T20:45:42.822287Z"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/certificates/{ClientKey/{UserKey}':
    get:
      tags:
        - Certificates
      summary: Gets all certificates for all users under a given client
      description: Gets all certificates for all users under a given client
      operationId: CBAGetCertificatesAsync
      parameters:
        - name: ClientKey
          in: path
          description: The client for which certificates of users should be returned
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: UserKey
          in: path
          description: The (optional) user for which certificates should be returned
          required: true
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: UserKey
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCertificateResponse'
              example: [
  {
    "Expiry": "2021-09-15T17:29:35.502757Z",
    "Revoked": "2020-05-15T16:39:39.614528Z",
    "SerialNumber": "SerialNumber2412b3ad-c81a-495b-9469-b9155bd234cb",
    "State": "Expired",
    "Thumbprint": "Thumbprintba163f22-3f89-4799-971e-93fc1a8b9766",
    "UserId": 0,
    "UserKey": "4OyD0bTs==",
    "ValidFrom": "2023-10-15T19:51:14.21691Z"
  }
]
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/certificates/all/{ClientKey/{UserKey}':
    get:
      tags:
        - Certificates
      summary: Gets all certificates for all users under a given client
      description: Gets all certificates for all users under a given client
      operationId: CBAGetAllCertificatesAsync
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
        - name: ClientKey
          in: path
          description: The client for which certificates of users should be returned
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: UserKey
          in: path
          description: The (optional) user for which certificates should be returned
          required: true
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: UserKey
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCertificateResponse'
              example: [
  {
    "Expiry": "2021-09-15T17:29:35.502757Z",
    "Revoked": "2020-05-15T16:39:39.614528Z",
    "SerialNumber": "SerialNumber2412b3ad-c81a-495b-9469-b9155bd234cb",
    "State": "Expired",
    "Thumbprint": "Thumbprintba163f22-3f89-4799-971e-93fc1a8b9766",
    "UserId": 0,
    "UserKey": "4OyD0bTs==",
    "ValidFrom": "2023-10-15T19:51:14.21691Z"
  }
]
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
      x-network-visibility: internal
  '/cm/v1/certificates/me/{SerialNumber}':
    delete:
      tags:
        - Certificates
      summary: Revokes a certificate for calling user.
      description: Revokes a certificate for calling user.
      operationId: CBADeleteMyCertificateAsync
      parameters:
        - name: SerialNumber
          in: path
          description: The serial number of the certificate that should be revoked
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/certificates/me}':
    get:
      tags:
        - Certificates
      summary: Retrieves information about all certificates issued to calling user
      description: Retrieves information about all certificates issued to calling user
      operationId: CBAGetMyCertificatesAsync
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetCertificateResponse'
              example: [
  {
    "Expiry": "2021-09-15T17:29:35.502757Z",
    "Revoked": "2020-05-15T16:39:39.614528Z",
    "SerialNumber": "SerialNumber2412b3ad-c81a-495b-9469-b9155bd234cb",
    "State": "Expired",
    "Thumbprint": "Thumbprintba163f22-3f89-4799-971e-93fc1a8b9766",
    "UserId": 0,
    "UserKey": "4OyD0bTs==",
    "ValidFrom": "2023-10-15T19:51:14.21691Z"
  }
]
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    post:
      tags:
        - Certificates
      summary: Creates a new certificate for calling user
      description: Creates a new certificate for calling user
      operationId: CBACreateMyCertificateAsync
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateCertificateResponse'
              example: {
  "CertificatePFX": "CertificatePFX34c1d8a2-2120-4578-9172-170ae8d8f828",
  "Expiry": "2021-04-14T15:47:00.501673Z",
  "Password": "Password25a1639d-b978-4fb4-9471-f8c2571dbfe9",
  "SerialNumber": "SerialNumberd43965a5-2253-4934-b9c2-665e7aa3a349",
  "Thumbprint": "Thumbprintc7b39fef-f38b-46cc-bfbf-e545e78ee67b",
  "ValidFrom": "2023-04-02T20:45:42.822287Z"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/companyrenewals}':
    get:
      tags:
        - Company Renewals
      summary: Get Company Renewal Data for the logged in client
      description: Get Company Renewal Data for the logged in client
      operationId: CompanyRenewalGetCompanyRenewalData
      parameters:
        - name: ClientKey
          in: query
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: ClientKey
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyRenewal'
              example: {
  "CompanyData": {
    "AuthorizedSignatories": [
      {
        "ComparisonStatus": "Changed",
        "Data": {
          "CountryCode": "DK",
          "FirstName": "",
          "LastName": "",
          "MiddleName": ""
        }
      }
    ],
    "DirectorsData": {
      "DirectorCompanies": [
        {
          "ComparisonStatus": "FullMatch",
          "Data": {
            "CompanyName": "",
            "CountryCode": "DK",
            "DirectorOfCompany": ""
          }
        }
      ],
      "DirectorContacts": [
        {
          "ComparisonStatus": "FullMatch",
          "Data": {
            "CountryCode": "DK",
            "DirectorOfCompany": "",
            "FirstName": "",
            "LastName": "",
            "MiddleName": ""
          }
        }
      ]
    },
    "GeneralData": {
      "ContactInfo": {
        "PrimaryEmailAddress": {
          "ComparisonStatus": "FullMatch",
          "Data": "email@acme.com"
        },
        "PrimaryPhoneNumber": {
          "ComparisonStatus": "FullMatch",
          "Data": {
            "CountryCode": "DK",
            "Number": "355354654"
          }
        }
      },
      "CountryCode": {
        "ComparisonStatus": "FullMatch",
        "Data": "DK"
      },
      "NACECodes": {
        "ComparisonStatus": "FullMatch",
        "Data": [
          ""
        ]
      },
      "Tin": {
        "ComparisonStatus": "FullMatch",
        "Data": ""
      },
      "TinNotAvailable": false,
      "Vat": {
        "ComparisonStatus": "FullMatch",
        "Data": ""
      },
      "VatNotEligible": false
    },
    "IdentityData": {
      "BvdId": "",
      "CompanyName": {
        "ComparisonStatus": "Changed",
        "Data": "ACME Corp."
      },
      "LeiCode": {
        "ComparisonStatus": "FullMatch",
        "Data": ""
      },
      "LeiCodeAnnualRenewalDate": {
        "ComparisonStatus": "FullMatch",
        "Data": "2024-04-07"
      },
      "NationalId": {
        "ComparisonStatus": "FullMatch",
        "Data": ""
      },
      "PartyId": 2147279170
    },
    "ShareholdersData": {
      "BeneficialOwners": [
        {
          "ComparisonStatus": "FullMatch",
          "Data": {
            "CountryCode": "DK",
            "FirstName": "",
            "LastName": "",
            "MiddleName": "",
            "OwnershipPct": 30.0,
            "OwnsCompany": ""
          }
        }
      ],
      "CorporateShareholders": [
        {
          "ComparisonStatus": "FullMatch",
          "Data": {
            "CompanyName": "",
            "CountryCode": "",
            "OwnershipPct": 10.0,
            "OwnsCompany": ""
          }
        }
      ]
    }
  },
  "RenewalDetails": {
    "RenewalStatus": "New",
    "RenewalTriggers": [
      "TimeTrigger"
    ]
  }
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - CompanyRenewalNotFound
                    type: string
                    x-enum-descriptions:
                      CompanyRenewalNotFound: Company renewal not found
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    patch:
      tags:
        - Company Renewals
      summary: Update Company Renewal Data for the logged in client
      description: Update Company Renewal Data for the logged in client
      operationId: CompanyRenewalUpdateCompanyRenewalData
      parameters:
        - name: ClientKey
          in: query
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: ClientKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CompanyRenewalRequest'
            example: {
  "CompanyData": {
    "AuthorizedSignatories": [
      {
        "CountryCode": "DK",
        "FirstName": "",
        "LastName": "",
        "MiddleName": ""
      }
    ],
    "DirectorsData": {
      "DirectorCompanies": [
        {
          "CompanyName": "",
          "CountryCode": "DK",
          "DirectorOfCompany": ""
        }
      ],
      "DirectorContacts": [
        {
          "CountryCode": "DK",
          "DirectorOfCompany": "",
          "FirstName": "",
          "LastName": "",
          "MiddleName": ""
        }
      ]
    },
    "GeneralData": {
      "ContactInfo": {
        "PrimaryEmailAddress": "PrimaryEmailAddress3f244f72-ac4d-4b14-b4b4-99b41ceda2ab",
        "PrimaryPhoneNumber": {
          "CountryCode": "DK",
          "Number": "355354654"
        }
      },
      "CountryCode": "CountryCode70036691-b8f9-47a4-9913-3e91e2fc2614",
      "NACECodes": [
        "6e153cd8-12b9-4ad6-b0a1-4830363a980e"
      ],
      "Tin": "Tin5d6f3376-f83c-435d-b52d-697af0cac562",
      "TinNotAvailable": true,
      "Vat": "Vatdad32d32-1dd8-4f40-9a60-e5520854a20c",
      "VatNotEligible": false
    },
    "IdentityData": {
      "BvdId": "BvdId64c1355b-a14f-4456-b4b2-7b537627014f",
      "CompanyName": "CompanyName2f595c28-d07d-414a-aa66-1bc152e39674",
      "LeiCode": "LeiCode479932e3-5bf0-4c6b-b453-a6080fdd018b",
      "LeiCodeAnnualRenewalDate": "2020-12-03",
      "NationalId": "NationalId619837d8-9005-4c2e-a3fa-66da30e1b788"
    },
    "ShareholdersData": {
      "BeneficialOwners": [
        {
          "CountryCode": "DK",
          "FirstName": "",
          "LastName": "",
          "MiddleName": "",
          "OwnershipPct": 30.0,
          "OwnsCompany": ""
        }
      ],
      "CorporateShareholders": [
        {
          "CompanyName": "",
          "CountryCode": "",
          "OwnershipPct": 10.0,
          "OwnsCompany": ""
        }
      ]
    }
  },
  "DirectorHierarchyRejected": false,
  "DirectorHierarchyRejectionNote": "DirectorHierarchyRejectionNotea694ea63-d8f3-4f55-b300-d8962c6e2851",
  "OwnerHierarchyRejected": true,
  "OwnerHierarchyRejectionNote": "OwnerHierarchyRejectionNote397ba90f-f584-46de-a924-0aff34e3bdd3"
}
      responses:
        '204':
          description: Indicates that the request was performed correctly.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - CompanyRenewalBadRequest
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                      CompanyRenewalBadRequest: Company renewal invalid request
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/offline}':
    post:
      operationId: cm_offline
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      requestBody:
        content:
          application/json:
            schema:
              type: string
            example: "00:00:00.0000128"
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-application-visibility: saxo-only
      x-network-visibility: internal
  '/cm/v1/users/contact}':
    get:
      tags:
        - Users
      summary: Gets logged in user's Contact details
      description: Gets logged in user's Contact details
      operationId: UsersV1GetUserContactDetails
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContactDetail'
              example: {
  "ContactId": "ContactId0d77f855-ef00-442a-a6b3-2c72570dbaec",
  "FullName": "FullName411485bd-58c8-4cd2-8467-42de7519cfb2",
  "MarketingConsent": false,
  "PrimaryEmail": "PrimaryEmailf29e1fbd-a8cb-4a55-9825-dbf683f0a7a3",
  "ReferralId": "ReferralIde56caea9-44af-4674-9865-0edd95a00935"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    patch:
      tags:
        - Users
      summary: Update logged in user's Contact details like marketing consent
      description: Update logged in user's Contact details like marketing consent
      operationId: UsersV1UpdateMarketingConsent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateContactDetails'
            example: {
  "MarketingConsent": true
}
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/uploaddocuments/{OpportunityId}':
    put:
      tags:
        - Users
      description: Uploads documents for the opportunity to CRM
      operationId: UsersV1UploadDocuments
      parameters:
        - name: OpportunityId
          in: path
          description: ID for the opportunity in CRM.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupUploadDocumentation'
            example: {
  "Documents": [
    {
      "Comments": "Comments173d1c9f-3f9b-4556-8538-3fbb35060551",
      "DocumentType": "OtherDdDocs",
      "ExpirationDate": "2023-06-05T16:50:44.0547817",
      "FileData": "FileData9406d7a7-24d2-4883-a2fc-a5d4bf4fc017",
      "FileName": "FileName46772336-8a23-4324-b2b2-d54f2adb02a0"
    }
  ],
  "FeedbackComment": "FeedbackCommentdbe9330f-3bb2-4047-8f10-f2c156e99cb3",
  "FeedbackLoopToken": "5f47213f-a943-46b7-99df-d71926b3b663"
}
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/feedbackloopinfo/{OpportunityId/{FeedbackLoopToken}':
    get:
      tags:
        - Users
      description: Gets Feedback Loop info from CRM
      operationId: UsersV1GetFeedbackLoopInfo
      parameters:
        - name: FeedbackLoopToken
          in: path
          description: Token issued by CRM
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
        - name: OpportunityId
          in: path
          description: ID for the opportunity in CRM.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FeedbackLoopInfo'
              example: {
  "CustomerMetadata": {
    "CountryOfResidenceCode": "CountryOfResidenceCode1c9d5b0a-2118-41c0-9a79-43754b8a1713",
    "ServiceLanguageCode": "ServiceLanguageCodef3c6e505-2441-417b-b2fe-2f09997fce74"
  },
  "MissingDocumentData": {
    "CafStatus": {
      "AppendixToCaf": true,
      "CommissionGroupParentId": false,
      "DuplicateAccount": false,
      "Fatca": true,
      "FeedbackStatus": "Pending",
      "IdVerificationFailure": true,
      "MarketRiskApprovalRequired": true,
      "MissingAddress": false,
      "MissingBaseCurrency": true,
      "MissingEmail": false,
      "MissingName": true,
      "MissingPage": false,
      "MissingPhone": true,
      "MissingSignature": false,
      "NameMismatchNotComplete": false,
      "NationalityMifid": true,
      "PageUnreadable": true,
      "ProductAssessmentQuestionaire": true,
      "SignatureMismatch": false,
      "SoleTraderConfirmation": false,
      "SourceOfFund": true,
      "SourceOfSecondaryIncome": false,
      "Tin": false,
      "TradingObjectives": true
    },
    "OtherDocumentStatus": {
      "FeedbackStatus": "Pending",
      "NoDocumentRequired": true,
      "OtherClientContactNeeded": false,
      "SecondaryIncome": false,
      "SourceOfFunds": true,
      "TextToDcfNoDocumentRequired": "TextToDcfNoDocumentRequired2b51ee54-2d85-4646-b107-3443df780018",
      "TextToDcfUploadPage": "TextToDcfUploadPage548accdf-2638-4782-afdd-a2612022c536",
      "W8BenPrivate": true
    },
    "PoiStatus": {
      "Expired": false,
      "FeedbackStatus": "Approved",
      "IncompleteScanCopyPhotoNotClear": true,
      "Missing": false,
      "MissingBackSide": true,
      "MissingDob": false,
      "MissingExpiryDate": true,
      "MissingPob": false,
      "MissingSignature": true,
      "MissingTranslation": false,
      "NotAcceptable": true,
      "NotCertified": true,
      "NotReadable": false,
      "OtherClientContactNeeded": true,
      "SecondaryPoi": false,
      "TextToDcfUploadPage": "TextToDcfUploadPage5e2f9ee6-946c-4cc7-b7a8-6c17dc47023c"
    },
    "PorStatus": {
      "AddressMismatch": true,
      "FeedbackStatus": "Approved",
      "IssuedInDifferentCountry": false,
      "Missing": true,
      "MissingAddress": false,
      "MissingExpiryDate": false,
      "MissingIssueDate": true,
      "MissingName": true,
      "MissingTranslation": false,
      "NameMismatch": true,
      "NotAccepted": false,
      "NotCertified": true,
      "NotReadable": false,
      "OtherClientContactNeeded": false,
      "Outdated": true,
      "TextToDcfUploadPage": "TextToDcfUploadPage6c376d57-1796-4dc1-8edf-3da8873ef68a"
    },
    "SecondPoiStatus": {
      "FeedbackStatus": "Pending",
      "OtherClientContactNeeded": false
    },
    "SecondPorStatus": {
      "FeedbackStatus": "Pending",
      "OtherClientContactNeeded": true
    },
    "SubAccountStatus": {
      "FeedbackStatus": "Pending",
      "Missing": false,
      "OldVersion": true,
      "SubaccountForm": false
    },
    "ThirdPartyAuthStatus": {
      "ClientPersonalIdNumberMissingIncorrect": true,
      "CompanyRegistrationMissingIncorrect": false,
      "FeedbackStatus": "Approved",
      "IncompleteMissing": false,
      "IncorrectPoaDocument": false,
      "MissingPaymentSchedule": true,
      "NameMismatch": true,
      "SignatureMismatchMissing": true,
      "TypeOfPoaDocsOptionMissing": false
    },
    "ThirdPorStatus": {
      "FeedbackStatus": "Approved",
      "OtherClientContactNeeded": false
    }
  }
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/scrambleclients}':
    get:
      tags:
        - Users
      summary: Get scrambled clients
      description: Gets the scrambled client list for specified period
      operationId: UsersV1GetScrambledClients
      parameters:
        - name: FromDate
          in: query
          description: from date.
          schema:
            allOf:
              - type: string
        - name: PageNumber
          in: query
          description: page number.
          schema:
            allOf:
              - type: integer
                format: int32
        - name: ToDate
          in: query
          description: to date.
          schema:
            allOf:
              - type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScrambleClientsResult'
              example: {
  "CurrentPage": 142,
  "ScrambledClients": [
    {
      "ClientId": "ClientId9c7dbf6f-a463-46a3-a27e-07ee7538b9b9",
      "ScrambledDate": "2021-11-05T18:36:50.9801682"
    }
  ],
  "TotalPages": 226
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/companyinformation/general/{CompanyId/{CountryCode}':
    get:
      tags:
        - Users
      summary: Get information for a company based on Company Id and country ISO code
      description: Gets the information for the company identified by the Company Id and the country
      operationId: UsersV1GetCompanyInformation
      parameters:
        - name: CompanyId
          in: path
          description: ID identifying the Company
          required: true
          schema:
            type: string
        - name: CountryCode
          in: path
          description: ISO Country Code for the Company
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompanyData'
              example: {
  "CompanyIdentity": {
    "LEI": "LEI95e29554-c360-4fa7-8858-91c6fbca525b",
    "Name": "Name315d9da5-d959-446f-b730-bd8a5f287dd1",
    "NationalId": "NationalId20c3a94f-4ab9-40de-9b4b-a8eb6be9f420"
  },
  "GeneralData": {
    "Address": {
      "City": "Cityf7c6994f-6ca3-4bed-92a8-e20b26f02b92",
      "Country": {
        "IsoCode": "IsoCode0774b698-d294-439d-affe-f9f3b64d9093",
        "Name": "Namea87f8cfd-98e2-47ca-81fa-01589931d23a"
      },
      "PostCode": "PostCode81689502-a38c-44d3-8186-ee607f02a075",
      "State": "State7570c838-3b99-4306-94e2-2aba932c2133",
      "Street": "Street5f2b92c5-16b9-49b3-a5ef-6fbcda963618",
      "Type": "None"
    },
    "Directors": [
      {
        "Address": {
          "City": "Citye8e27d9a-ef87-44df-8749-3b938c25f667",
          "Country": {
            "IsoCode": "IsoCode0e6e0c80-0bf9-47fa-8ddc-67846ef034d9",
            "Name": "Name68252036-7f53-4dbc-855b-22219ef2be66"
          },
          "PostCode": "PostCodeab64b49b-fcb5-486c-a4fb-cb8ac6359ebb",
          "State": "State526bdd5e-d319-4c62-bfb8-fe21eda28687",
          "Street": "Street2bc74ec2-0365-4238-ab1f-4cf63bf3b89f",
          "Type": "None"
        },
        "Email": "Email88f5e622-e301-4d92-9d53-2bcd2940b21a",
        "FirstName": "FirstName4af047a6-5b8f-4e64-b34b-873a352d6ad5",
        "FullName": "FullNamebc68c984-5d34-40d3-aa29-8c6a7e7f3972",
        "LastName": "LastName78a90a4c-8bfc-458c-befd-f7bb9184b3c2",
        "Title": "Title5f0d29c2-d8a6-4f62-aecb-c4ee54a8f695"
      }
    ],
    "Email": "Email2a3861ad-c435-46d3-819e-4bab23245640",
    "FaxNumber": {
      "CountryCode": "CountryCode43e92290-6896-4c45-8d51-4ceab18bccd3",
      "Number": "Number4696f032-a294-49cd-8e82-429e5cdb6fac"
    },
    "LegalForm": "LegalForm29d04261-27c9-4d01-b983-2f7c30357dfb",
    "NACE": {
      "Code": "Code1f932d5e-f0cf-4fda-b7b6-ad57acd02c90",
      "Label": "Labeld9123e1f-9c7a-4ec8-bea9-9e41c1dc9cca"
    },
    "NameInLocalAlphabet": "NameInLocalAlphabet46586e3d-a33d-4a61-b031-3dbf74fa8bdf",
    "PhoneNumber": {
      "CountryCode": "CountryCode3f43ecdd-133c-4eda-a769-71217b45934d",
      "Number": "Numberb0df0dc9-e2b1-4482-9519-c025d1db22f6"
    },
    "Status": "Active",
    "TIN": "TIN4befd637-87f1-46c9-a130-36e6ed39a274",
    "Website": "Website040a9324-8a09-4a1f-bac0-c1e0e1bed734"
  }
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/{UserId/partyinformationv2}':
    get:
      tags:
        - Users
      summary: Get information for a party V2
      description: Gets the information for the party identified by the id
      operationId: UsersV1GetPartyInformationV2
      parameters:
        - name: UserId
          in: path
          description: ID of client or party.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyInformationResultV2'
              example: {
  "ClosingSalesResponsibleEmail": "ClosingSalesResponsibleEmail044995be-61b4-44a3-acc8-f6d5c49893b4",
  "ContractingEntityID": 19,
  "ContractualSolution": "DirectCorporate",
  "CountryOfResidenceCode": "CountryOfResidenceCode41df6513-0217-482a-bf38-204d26683773",
  "EmailAddress": "EmailAddress7724109f-a7c1-40ca-8cf6-7a73732d21ee",
  "FirstName": "FirstNamecb9f8755-1612-4b11-b9ce-a20707cf8a01",
  "HasFunded": false,
  "LastName": "LastName229f2f6a-8218-49da-b510-5956313da7d3",
  "PartyId": 224,
  "PhoneCountryCode": "PhoneCountryCode58153c95-c111-4806-b762-be88eb51eda1"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/{PartyId/partyinformation}':
    get:
      tags:
        - Users
      summary: Get information for a party
      description: Gets the information for the party identified by the id
      operationId: UsersV1GetPartyInformation
      parameters:
        - name: PartyId
          in: path
          description: ID of client or party.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyInformationResult'
              example: {
  "ClosingSalesResponsibleEmail": "ClosingSalesResponsibleEmail22456ced-eb7b-4f94-966e-85e281c51b82",
  "ContractualSolution": "DirectJointAccount",
  "CountryOfResidenceCode": "CountryOfResidenceCode6ed25e8e-32a8-41f2-81a2-e950dc6ac065",
  "EmailAddress": "EmailAddressb76794b7-ed56-4d0e-a68b-127536215784",
  "FirstName": "FirstName202fa71a-70a2-40de-9486-3724d8744e48",
  "HasFunded": false,
  "LastName": "LastNameba442a94-43c6-4798-9ba2-053e96595717",
  "PartyId": 236,
  "PhoneCountryCode": "PhoneCountryCode59fc70f2-e617-4552-b235-f2de04269ea4"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/{PartyId/setMarketingConsent}':
    put:
      tags:
        - Users
      summary: Set MarketingConsent for a party
      description: Set MarketingConsent for a party
      operationId: UsersV1SetMarketingConsent
      parameters:
        - name: PartyId
          in: path
          description: ID of client or party.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeclarationDetails'
            example: {
  "MarketingConsent": false
}
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartyInformationResult'
              example: {
  "ClosingSalesResponsibleEmail": "ClosingSalesResponsibleEmail22456ced-eb7b-4f94-966e-85e281c51b82",
  "ContractualSolution": "DirectJointAccount",
  "CountryOfResidenceCode": "CountryOfResidenceCode6ed25e8e-32a8-41f2-81a2-e950dc6ac065",
  "EmailAddress": "EmailAddressb76794b7-ed56-4d0e-a68b-127536215784",
  "FirstName": "FirstName202fa71a-70a2-40de-9486-3724d8744e48",
  "HasFunded": false,
  "LastName": "LastNameba442a94-43c6-4798-9ba2-053e96595717",
  "PartyId": 236,
  "PhoneCountryCode": "PhoneCountryCode59fc70f2-e617-4552-b235-f2de04269ea4"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/referrals/tokenrequests}':
    put:
      tags:
        - Users
      summary: Request a referral token
      description: 'Issues a referral token, which can be used to refer other people to open an account.'
      operationId: UsersV1RequestReferralToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReferralTokenQuery'
            example: {
  "ClientId": "6311478",
  "Password": "very_secret#941"
}
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReferralTokenQueryResult'
              example: {
  "ReferralToken": "61CD77F0-73B8-4CE8-81D6-F1F3BB5EC1AF"
}
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - ReferralNotAllowed
                    type: string
                    x-enum-descriptions:
                      ReferralNotAllowed: Referral is not allowed for the user!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/mailsubscriptions/{Source}':
    delete:
      tags:
        - Users
      summary: Unsubscribe mails
      description: 'Unsubscribes a user from marketing material, newsletters etc.'
      operationId: UsersV1UnsubscribeMail
      parameters:
        - name: Email
          in: query
          description: E-mail address that is unsubscribing and a link to a verification page.
          required: true
          schema:
            type: string
          example: test%40iitest.dk
        - name: Source
          in: path
          description: Source of the client commanding the unsubscribe action.
          required: true
          schema:
            $ref: '#/components/schemas/MailSubscriberSource'
          example: Marketing
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsubscribeMailResult'
              example: {
  "Code": "Ok"
}
        '201':
          description: ''
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/mailsubscriptions/{Source/unsubscriberequests}':
    get:
      tags:
        - Users
      summary: Request to unsubscribe mails
      description: 'Creates a resource for unsubscribing a user from marketing material, newsletters etc. that is currently sent to the user''s e-mail address.'
      operationId: UsersV1RequestUnsubscribeMail
      parameters:
        - name: Email
          in: query
          description: E-mail address that is unsubscribing and a link to a verification page.
          required: true
          schema:
            type: string
          example: test%40iitest.dk
        - name: Source
          in: path
          description: Source of the client requesting the unsubscribe action.
          required: true
          schema:
            $ref: '#/components/schemas/MailSubscriberSource'
          example: Marketing
        - name: VerificationLink
          in: query
          description: Link to the verification page.
          required: true
          schema:
            type: string
          example: https%3A%2F%2Fsomewhere.com%2Fverify
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnsubscribeMailRequestResult'
              example: {
  "Code": "Ok"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/userexists}':
    put:
      tags:
        - Users
      description: Checks if a user with the provided email and user id exists in FOES.
      operationId: UsersV1CheckIfUserExists
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateClientRequest'
            example: {
  "Email": "Emailccc64d77-f643-47a7-a3c3-9dac9f59a138",
  "Environment": "Unknown",
  "UserId": "UserIdc0d639d8-ab90-4056-ae9d-1c87462c7bcc"
}
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateClientResponse'
              example: {
  "Matched": true
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/message}':
    post:
      tags:
        - Users
      description: 'Sends message to phone number passed, if users are available'
      operationId: UsersV1SendMessage
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendMessageRequest'
            example: {
  "DateOfBirth": "1982-04-07",
  "InfoType": "ClientId",
  "MultipleClientMessage": "Multiple client message",
  "Phone": {
    "CountryCode": "+45",
    "Number": "39202204"
  },
  "SingleClientMessage": "Single client message"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendMessageResponse'
              example: {
  "MessageSent": true,
  "UserFound": true
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/password/noverification}':
    put:
      tags:
        - Users
      description: Sets a new password for a user - without prior email verification - using a password reset token and the user's IP address.
      operationId: UsersV1SetPasswordNoVerification
      parameters:
        - name: IpAddress
          in: query
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordNoVerificationCommand'
            example: {
  "BusinessContext": {
    "AccountType": "Na",
    "BusinessLine": "Na",
    "FlowType": "Na",
    "OwnerId": 115
  },
  "ClientId": "ClientId297fc157-91d9-4ec1-ab00-da5af567e324",
  "Email": "Email331d7480-2a91-4317-9d05-8ac164936408",
  "Password": "Password31972d6a-b3ce-4902-b9c6-6aef503c015e"
}
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPasswordResult'
              example: {
  "Code": "Ok"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/password/{Token}':
    get:
      tags:
        - Users
      summary: Get password reset details
      description: "Gets all user accounts matching the user's e-mail address, which is provided in the request password reset call that\r\n            must be executed prior to this request."
      operationId: UsersV1GetPasswordResetDetails
      parameters:
        - name: IpAddress
          in: query
          description: The user's IP address.
          required: true
          schema:
            type: string
          example: 174.189.23.134
        - name: Token
          in: path
          description: Password reset token.
          required: true
          schema:
            type: string
          example: 93243740-630E-4739-8E74-E4C1D83BEC29
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetDetails'
              example: {
  "Code": "Ok",
  "MatchingAccounts": [
    {
      "ClientId": "321789",
      "Platform": "Saxo Bank"
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidIpAddress
                    type: string
                    x-enum-descriptions:
                      InvalidIpAddress: IP address is invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    put:
      tags:
        - Users
      summary: Set a new password
      description: 'Sets a new password for a user, using a password reset token and the user''s IP address.'
      operationId: UsersV1SetPassword
      parameters:
        - name: IpAddress
          in: query
          description: The user's IP address.
          required: true
          schema:
            type: string
          example: 174.189.23.134
        - name: Token
          in: path
          description: Password reset token.
          required: true
          schema:
            type: string
          example: 93243740-630E-4739-8E74-E4C1D83BEC29
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPasswordCommand'
            example: {
  "ClientId": "321789",
  "Password": "very_secret#941"
}
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPasswordResult'
              example: {
  "Code": "Ok"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/useridfromloginname}':
    put:
      tags:
        - Users
      summary: Returns the User Id for a client
      description: This is as part of the password reset process. It returns the Id (number) for a client identified by the Identity Name passed in the request
      operationId: UsersV1GetUserId
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetUserIdRequest'
            example: {
  "IsLiveUser": false,
  "LoginOrIdentityName": "LoginOrIdentityName3d93595b-ddc3-42ba-bfce-d8ef73f85df5",
  "OnlyActiveUser": true
}
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetUserIdResponse'
              example: {
  "UserId": 98
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/validateexternaltoken}':
    put:
      tags:
        - Users
      summary: Validates a token provided to the user
      description: This is used for helping migrated Binck client without a phone number to reset their password
      operationId: UsersV1ValidateExternalToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValidateExternalTokenRequest'
            example: {
  "Name": "Namefc32617e-21da-46b0-b4ae-b575cdde3dd8",
  "Token": "Token13f9b90e-449a-46cb-8d32-3755e7aefe61"
}
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateExternalTokenResponse'
              example: {
  "NumberOfAttempts": 140,
  "ResponseResult": "ValidToken"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/password/{Environment}':
    post:
      tags:
        - Users
      summary: Request a password reset
      description: "Requests a password reset for a user. If accepted, a password reset token is returned.\r\n            Note that the user e-mail address and optionally Saxo Bank client ID must be sent in the body to prevent exposing them in the query-string."
      operationId: UsersV1RequestPasswordReset
      parameters:
        - name: Environment
          in: path
          description: 'Environment to request password reset for: "Live" or "Demo".'
          required: true
          schema:
            type: string
          example: Live
        - name: IpAddress
          in: query
          description: User's IP address.
          required: true
          schema:
            type: string
          example: 174.189.23.134
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetRequest'
            example: {
  "ClientId": "321789",
  "Email": "user@domain.com",
  "ResetLink": "https://somewhere.com/resetpassword"
}
      responses:
        '201':
          description: Password reset request has been approved and a reset token has been issued and returned in the body of the response.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetRequestResult'
              example: {
  "Code": "Ok",
  "Token": "93243740-630E-4739-8E74-E4C1D83BEC29"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/checkphonenumber/{IpAddress}':
    post:
      tags:
        - Users
      summary: Checks the phone number in MS CRM
      description: Validates that the phone number matches the client data (Client Id and email address) in MS CRM
      operationId: UsersV1CheckPhoneNumber
      parameters:
        - name: IpAddress
          in: path
          description: User's IP address.
          required: true
          schema:
            type: string
          example: 174.189.23.134
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckPhoneNumberRequest'
            example: {
  "AreaCode": "AreaCode7d331541-e55e-43bf-8adb-beaa6fd4c7d7",
  "ClientId": "ClientId6330daef-32bd-4fc9-b315-aaf391f44e6e",
  "Email": "Emaile2cbde88-ef57-4574-8d58-dc70b9356d41",
  "PhoneNumber": "PhoneNumber81228c6a-5a1d-4cc1-83f2-a3fcfbee16a9"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckPhoneNumberRequestResult'
              example: {
  "Code": "Unknown"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/twofactorauthentication/verify/{CountryCode/{PhoneNumber/{VerificationCode}':
    post:
      tags:
        - Users
      summary: Verification of the code as part of the Authy Phone Verification flow
      description: Uses Authy (from Twilio) to verify the code entered by the user.
      operationId: UsersV1VerifyCode
      parameters:
        - name: CountryCode
          in: path
          description: The country code of the mobile phone number to send the verification code to
          required: true
          schema:
            type: string
        - name: PhoneNumber
          in: path
          description: The mobile phone number to send the verification code to
          required: true
          schema:
            type: string
        - name: VerificationCode
          in: path
          description: Code provided by the user in the workflow
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwoFactorAuthVerifyResult'
              example: {
  "Message": "Message4744e398-0a55-4ba5-9509-0cfe742297f4",
  "Result": true
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/users/twofactorauthentication/send/{CountryCode/{PhoneNumber/{VoiceMessage}':
    post:
      tags:
        - Users
      summary: Sends sms verification code as part of the Authy Phone Verification flow
      description: Uses Authy (from Twilio) to send a verification code by sms.
      operationId: UsersV1SendCode
      parameters:
        - name: CountryCode
          in: path
          description: The country code of the mobile phone number to send the verification code to
          required: true
          schema:
            type: string
        - name: PhoneNumber
          in: path
          description: The mobile phone number to send the verification code to
          required: true
          schema:
            type: string
        - name: VoiceMessage
          in: path
          description: Send the code via voice message (default is False)
          required: true
          schema:
            type: boolean
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwoFactorAuthSendResult'
              example: {
  "Message": "Message711f9665-7285-4a58-8d7f-8dc3048b3e12",
  "Result": false,
  "UUID": "UUID78054db0-8d87-44a3-b723-a144759d5114"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/simpleregistrations}':
    post:
      tags:
        - SimpleRegistrations
      summary: Create a simple registration
      description: A simple registration consists of a notification of interest in a particular subject and basic contact details.
      operationId: SimpleRegistrationV1CreateRegistration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SimpleRegistration'
            example: {
  "CountryOfResidenceCode": "DK",
  "Email": "john.doe_229259138@example.org",
  "LanguageCode": "da",
  "Name": "John Doe",
  "OwnerId": "123456",
  "Phone": {
    "CountryCode": "DK",
    "Number": "32323232"
  }
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SimpleRegistrationResponse'
              example: {
  "ClientId": "ClientId43f14653-24d1-4469-bf60-0ac9ba11366c",
  "ClientKey": "da814ec9-cf73-4617-8459-a8fb62bc83e6",
  "ContactId": "ContactId248b170f-cfb5-490d-881c-9383e89c620e"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/activities/tasks/contact}':
    post:
      tags:
        - Activities (Tasks)
      summary: Create a follow up task regarding a contact
      description: Create a follow up task regarding a contact. The contact must already exist in the system.
      operationId: TasksV1CreateTaskForContact
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientManagementContactTask'
            example: {
  "AssignTo": {
    "Name": "XYZ",
    "Type": "User"
  },
  "Description": "Description82baa321-9a82-4269-8986-fd44e062707c",
  "Duration": "00:00:00.0000138",
  "MarketingListId": "MarketingListId32e4be8f-12d4-4fdb-8b19-9333019872c3",
  "RegardingContactId": "RegardingContactIdc14b9421-171e-4bf5-909e-e09638c1e56a",
  "ScheduledStart": "2020-11-30T22:20:39.26906Z",
  "Subject": "Subjecta38e5e28-717c-4548-ae9f-eda052b8f3fd"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientManagementTaskResponse'
              example: {
  "ClientManagementTaskId": "c8570881-030c-45ee-bf17-56de4c7752b6"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/activities/tasks}':
    post:
      tags:
        - Activities (Tasks)
      summary: Create a follow up task regarding a client
      description: Create a follow up task regarding a client. The client must already exist in the system.
      operationId: TasksV1CreateTask
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientManagementTask'
            example: {
  "AssignTo": {
    "Name": "XYZ",
    "Type": "User"
  },
  "Duration": "10.00:00:00",
  "RegardingClientId": "123456",
  "ScheduledStart": "2022-04-07T11:05:38.307088Z",
  "Subject": "My Task Subject 2022-04-07 11:05:38"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientManagementTaskResponse'
              example: {
  "ClientManagementTaskId": "c8570881-030c-45ee-bf17-56de4c7752b6"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/documents/party}':
    post:
      tags:
        - Documents
      summary: Upload party documents
      description: Upload party documents against login user or passed contact/organization
      operationId: DocumentsUploadPartyDocuments
      parameters:
        - name: ClientKey
          in: query
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: ClientKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SavePartyDocumentRequest'
            example: {
  "Documents": [
    {
      "Data": "iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4",
      "DocumentType": "TaxDocumentation",
      "FileName": "TaxDocumentation.pdf"
    }
  ],
  "PartyDetails": {
    "PartyId": 1289319,
    "PartyType": "Organization"
  }
}
      responses:
        '201':
          description: Created
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/documents}':
    post:
      tags:
        - Documents
      summary: Upload documents
      description: Upload documents for an existing client
      operationId: DocumentsUploadDocuments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveDocumentRequest'
            example: {
  "ClientKey": "7m4I|vtYLUnEGg77o9uQhw==",
  "Documents": [
    {
      "Data": "iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4",
      "DocumentType": "TaxSavingAccount",
      "FileName": "TaxSavingAccount.pdf"
    }
  ]
}
      responses:
        '201':
          description: Indicates that the request was performed correctly.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidDataFormat
                      - InvalidDocumentName
                      - NoDocumentProvided
                    type: string
                    x-enum-descriptions:
                      NoDocumentProvided: At least one document must be passed.
                      InvalidDocumentName: Document name should have extension.
                      InvalidDataFormat: Document data should be Base64 string.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFound
                    type: string
                    x-enum-descriptions:
                      NotFound: ''
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cm/api/oas3}':
    get:
      operationId: OasGetOas3
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  '/cm/v2/signups/verification/initiate/{ClientKey}':
    post:
      tags:
        - Signups
      summary: Initiate verification process from external vendor
      description: 'Initiates the verification process for a client by returning a URL that will redirect the client to an external vendor. If successful, the onboarding status will be approved.'
      operationId: SignUpV2InitiateVerification
      parameters:
        - name: ClientKey
          in: path
          description: The client key
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: d2-PzdC5wIPy1284wD-rRA==
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateVerification.InitiateVerificationRequest'
            example: {
  "SecureMeRequest": {
    "CountryCode": "UK",
    "ErrorRedirectUrl": "https://openapi.validate.com",
    "ServiceLanguageCode": "FR",
    "SuccessRedirectUrl": "https://openapi.validate.com",
    "UploadOptions": {
      "Back": "File",
      "Front": "File",
      "Selfie": "Camera"
    }
  },
  "VerificationProviderType": "SecureMe"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateVerification.InitiateVerificationResponse'
              example: {
  "IdentificationUrl": "https://secure-me.au10tixservicesstaging.com?token=oBVmsTzsSMGvYES0y9jj&api=aHR0cHM6Ly93ZXUtYXBpLmF1MTB0aXhzZXJ2aWNlc3N0YWdpbmcuY29tL3NlY3VyZS1tZS92MQ%3D%3D&locale=en-us"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                      - ValidationFailed
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                      ValidationFailed: One or more of your field values are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFound
                      - SignupNotFound
                    type: string
                    x-enum-descriptions:
                      SignupNotFound: The given signup could not be found
                      NotFound: ''
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cm/v2/signups/jointaccounts/{ClientKey}':
    patch:
      tags:
        - Signups
      description: Marks the onboarding application as complete. Call this endpoint after 'create client' and 'add attachments'
      operationId: SignUpV2MarkCompleteApplication
      parameters:
        - name: ClientKey
          in: path
          description: Client for which the attachments are to be added
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: d2-PzdC5wIPy1284wD-rRA==
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarkCompleteApplicationRequest'
            example: {
  "Status": "Completed"
}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFound
                    type: string
                    x-enum-descriptions:
                      NotFound: ''
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-application-visibility: saxo-only
  '/cm/v2/signups/jointaccounts/{ClientKey/attachments}':
    post:
      tags:
        - Signups
      summary: 'Adds an attachment to a client or to an account identified by e-mail, of a joint account'
      description: "Email shouldn't be passed when you intend to add attachments for the Client itself.\r\n            \r\n\r\nProvide the AttachmentType carefully as the Client AttachmentType won't work for Account level\r\n            attachments and vice-versa. Please check the AttachmentType description for more information."
      operationId: SignUpV2AddAttachments
      parameters:
        - name: ClientKey
          in: path
          description: Client for which the attachments are to be added
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: d2-PzdC5wIPy1284wD-rRA==
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AttachmentRequest'
            example: {
  "Attachments": [
    {
      "AttachmentType": "ProofOfIdentity",
      "Data": "iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4",
      "FileName": "ProofOfIdentity.pdf"
    }
  ],
  "Email": "abc@test.com"
}
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFound
                    type: string
                    x-enum-descriptions:
                      NotFound: ''
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-application-visibility: saxo-only
  '/cm/v2/signups/jointaccounts}':
    post:
      tags:
        - Signups
      description: Creates new client with joint accounts
      operationId: SignUpV2CreateJointAccounts
      parameters:
        - name: OwnerKey
          in: query
          description: Client key of owner under which this signup is to be created
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: ClientKey
          example: d2-PzdC5wIPy1284wD-rRA==
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupRequest'
            example: {
  "AccountHolders": [
    {
      "FinlandData": {
        "EuroclearJudicialForm": "21",
        "EuroclearSectorCode": "10010"
      },
      "IsPrimary": true,
      "ItalyData": {
        "EmploymentInformation": {
          "CountryConcernedCode": "IT",
          "DetailedBusinessActivity": "005",
          "EmploymentName": "Employer",
          "OtherEmployment": "Other employer description",
          "PrevalentCorporateObject": "Corporate object",
          "ProvinceConcerned": "Livorno",
          "StatusOfEmployment": "125"
        },
        "MailContactPreference": true,
        "ProfileInformation": {
          "AnnualIncomeInformation": {
            "AnnualIncomeSource": [
              "2"
            ],
            "TotalAnnualIncome": "1"
          },
          "InvestableAssets": {
            "NatureAndPurposeOfTheRelationship": "1",
            "SourceOfWealth": [
              "3"
            ],
            "ValueOfTotalWealth": "4"
          }
        }
      },
      "PersonalInformation": {
        "AdditionalTaxableCountries": [
          {
            "CountryCode": "DK",
            "TaxId": "12334567",
            "TinNotAvailable": false
          },
          {
            "CountryCode": "CN",
            "TinMissingReason": "100000001",
            "TinNotAvailable": true,
            "TinOtherMissingReason": "It is under progress"
          }
        ],
        "CityOfBirth": "NewYork",
        "ContactInformation": {
          "EmailAddress": "xyz@test.com",
          "PrimaryPhoneNumber": {
            "CountryCode": "US",
            "Number": "1234567890"
          },
          "SecondaryPhoneNumber": {
            "CountryCode": "IN",
            "Number": "2134567890"
          }
        },
        "CorrespondenceAddress": {
          "BuildingName": "Test Building",
          "BuildingNumber": "420",
          "City": "Test Address City",
          "CoName": "CO Test",
          "CountryOfResidenceCode": "IN",
          "Floor": "5",
          "LocalArea": "Local Test Area",
          "PostalCode": "123466",
          "PostBoxOffice": "212313",
          "SideDoor": "Test SideDoor",
          "State": "Test State",
          "StreetName": "Test Street",
          "Unit": "Unit 10"
        },
        "CountryOfBirth": "US",
        "DateOfBirth": "1985-03-12",
        "EmploymentInformation": {
          "EmployerName": "EmpName"
        },
        "FirstName": "John",
        "Gender": "2",
        "LastName": "Doe",
        "MarketingConsent": true,
        "NationalityCode": "US",
        "PersonalId": "986283618",
        "PersonalIdExpirationDate": "2022-04-05",
        "PersonalIdPlaceOfRelease": "Milan",
        "PersonalIdReleaseDate": "2018-12-08",
        "PersonalIdReleasedBy": "John doe",
        "PersonalIdType": "1",
        "PersonalTradingProfile": {
          "KnowledgeOfFinancialInstruments": "2",
          "ProductTradingExperience": [
            "3",
            "4",
            "5"
          ],
          "TradesPerMonth": "3"
        },
        "PoliticallyExposedPerson": false,
        "ResidentialAddress": {
          "BuildingName": "Test Building",
          "BuildingNumber": "420",
          "City": "Test Address City",
          "CoName": "CO Test",
          "CountryOfResidenceCode": "IN",
          "Floor": "5",
          "LocalArea": "Local Test Area",
          "PostalCode": "123466",
          "PostBoxOffice": "212313",
          "SideDoor": "Test SideDoor",
          "State": "Test State",
          "StreetName": "Test Street",
          "Unit": "Unit 10"
        },
        "ServiceLanguageCode": "EN",
        "TaxId": "288392203",
        "TinNotAvailable": false
      },
      "RegulatoryInformation": {
        "FatcaDeclaration": {
          "UnitedStatesCitizen": true,
          "UnitedStatesProducts": true,
          "UnitedStatesTaxId": "23456",
          "UnitedStatesTaxLiable": true
        }
      },
      "SingaporeData": {
        "AnnualIncomeSgd": "3",
        "BrokersDeclinedBy": "BrokersName",
        "ClassificationRequired": true,
        "DiplomaOrHigherQualification": "2",
        "EducationalQualificationSatisfied": true,
        "ELearningAbsSasCfds": "3",
        "ELearningAbsSasFx": "2",
        "ELearningPassed": "4",
        "ELearningSgx": false,
        "ELearningSgxScore": "20",
        "FinanceWorkExperience": "5",
        "InvestorProfile": "2",
        "ListedSips": true,
        "NetWorthSgd": "5",
        "PermanentResident": true,
        "ProfessionalFinanceQualification": "5",
        "SgxStocks": "2",
        "UnlistedSipsCfds": false,
        "UnlistedSipsFx": false
      },
      "SwitzerlandData": {
        "AnnualIncomeChf": "4",
        "NetWorthChf": "2"
      }
    },
    {
      "FinlandData": {
        "EuroclearJudicialForm": "21",
        "EuroclearSectorCode": "10010"
      },
      "IsPrimary": false,
      "ItalyData": {
        "EmploymentInformation": {
          "CountryConcernedCode": "IT",
          "DetailedBusinessActivity": "005",
          "EmploymentName": "Employer",
          "OtherEmployment": "Other employer description",
          "PrevalentCorporateObject": "Corporate object",
          "ProvinceConcerned": "Livorno",
          "StatusOfEmployment": "125"
        },
        "MailContactPreference": true,
        "ProfileInformation": {
          "AnnualIncomeInformation": {
            "AnnualIncomeSource": [
              "2"
            ],
            "TotalAnnualIncome": "1"
          },
          "InvestableAssets": {
            "NatureAndPurposeOfTheRelationship": "1",
            "SourceOfWealth": [
              "3"
            ],
            "ValueOfTotalWealth": "4"
          }
        }
      },
      "PersonalInformation": {
        "AdditionalTaxableCountries": [
          {
            "CountryCode": "DK",
            "TaxId": "12334567",
            "TinNotAvailable": false
          },
          {
            "CountryCode": "CN",
            "TinMissingReason": "100000001",
            "TinNotAvailable": true,
            "TinOtherMissingReason": "It is under progress"
          }
        ],
        "CityOfBirth": "NewYork",
        "ContactInformation": {
          "EmailAddress": "abc@test.com",
          "PrimaryPhoneNumber": {
            "CountryCode": "US",
            "Number": "1234567890"
          },
          "SecondaryPhoneNumber": {
            "CountryCode": "IN",
            "Number": "2134567890"
          }
        },
        "CorrespondenceAddress": {
          "BuildingName": "Test Building",
          "BuildingNumber": "420",
          "City": "Test Address City",
          "CoName": "CO Test",
          "CountryOfResidenceCode": "IN",
          "Floor": "5",
          "LocalArea": "Local Test Area",
          "PostalCode": "123466",
          "PostBoxOffice": "212313",
          "SideDoor": "Test SideDoor",
          "State": "Test State",
          "StreetName": "Test Street",
          "Unit": "Unit 10"
        },
        "CountryOfBirth": "US",
        "DateOfBirth": "1980-01-01",
        "EmploymentInformation": {
          "EmployerName": "EmpName"
        },
        "FirstName": "John",
        "Gender": "2",
        "LastName": "Doe",
        "MarketingConsent": true,
        "NationalityCode": "US",
        "PersonalId": "986283618",
        "PersonalIdExpirationDate": "2022-04-05",
        "PersonalIdPlaceOfRelease": "Milan",
        "PersonalIdReleaseDate": "2018-12-08",
        "PersonalIdReleasedBy": "John doe",
        "PersonalIdType": "1",
        "PersonalTradingProfile": {
          "KnowledgeOfFinancialInstruments": "2",
          "ProductTradingExperience": [
            "3",
            "4",
            "5"
          ],
          "TradesPerMonth": "3"
        },
        "PoliticallyExposedPerson": false,
        "ResidentialAddress": {
          "BuildingName": "Test Building",
          "BuildingNumber": "420",
          "City": "Test Address City",
          "CoName": "CO Test",
          "CountryOfResidenceCode": "IN",
          "Floor": "5",
          "LocalArea": "Local Test Area",
          "PostalCode": "123466",
          "PostBoxOffice": "212313",
          "SideDoor": "Test SideDoor",
          "State": "Test State",
          "StreetName": "Test Street",
          "Unit": "Unit 10"
        },
        "ServiceLanguageCode": "EN",
        "TaxId": "288392738",
        "TinNotAvailable": false
      },
      "RegulatoryInformation": {
        "FatcaDeclaration": {
          "UnitedStatesCitizen": true,
          "UnitedStatesProducts": true,
          "UnitedStatesTaxId": "23456",
          "UnitedStatesTaxLiable": true
        }
      },
      "SingaporeData": {
        "AnnualIncomeSgd": "3",
        "BrokersDeclinedBy": "BrokersName",
        "ClassificationRequired": true,
        "DiplomaOrHigherQualification": "2",
        "EducationalQualificationSatisfied": true,
        "ELearningAbsSasCfds": "3",
        "ELearningAbsSasFx": "2",
        "ELearningPassed": "4",
        "ELearningSgx": false,
        "ELearningSgxScore": "20",
        "FinanceWorkExperience": "5",
        "InvestorProfile": "2",
        "ListedSips": true,
        "NetWorthSgd": "5",
        "PermanentResident": true,
        "ProfessionalFinanceQualification": "5",
        "SgxStocks": "2",
        "UnlistedSipsCfds": false,
        "UnlistedSipsFx": false
      },
      "SwitzerlandData": {
        "AnnualIncomeChf": "4",
        "NetWorthChf": "2"
      }
    }
  ],
  "AccountInformation": {
    "AdditionalChoiceOfAccounts": [
      "5"
    ],
    "CurrencyCode": "USD"
  },
  "OnboardingInformation": {
    "ElectronicVerification": {
      "Done": "2018-04-05T00:00:00Z",
      "ExternalId": "ExternalId",
      "Result": "Passed",
      "Score": "50"
    }
  },
  "ProfileInformation": {
    "InvestableAssets": {
      "IntendToInvest": "5"
    },
    "InvestmentPurpose": {
      "PurposeAndScope": "2"
    }
  }
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupResponse'
              example: {
  "AccountHolders": [
    {
      "AccountHolderId": "361291218",
      "Email": "abc@test.com",
      "IsPrimary": true
    },
    {
      "AccountHolderId": "361291203",
      "Email": "xyz@test.com",
      "IsPrimary": false
    }
  ],
  "ClientId": "2147340085",
  "ClientKey": "d2-PzdC5wIPy1284wD-rRA==",
  "OnboardingState": "InProgress"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFound
                    type: string
                    x-enum-descriptions:
                      NotFound: ''
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-application-visibility: saxo-only
  '/cm/v2/signups/options}':
    get:
      tags:
        - Signups
      summary: Get all signup options
      description: Return translated data set containing possible field values for each user selections.
      operationId: SignUpV2GetSignupOptions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Querying.SignUpOptionListResult'
              example: {
  "Data": [
    {
      "PropertyName": "ServiceLanguageCode",
      "ValuePairs": [
        {
          "Key": "AR",
          "Value": "Arabic"
        },
        {
          "Key": "BU",
          "Value": "Bulgarian"
        },
        {
          "Key": "CH",
          "Value": "Chinese"
        },
        {
          "Key": "CHT",
          "Value": "Chinese Traditional"
        },
        {
          "Key": "DA",
          "Value": "Danish"
        },
        {
          "Key": "EN",
          "Value": "English"
        },
        {
          "Key": "FA",
          "Value": "Farsi"
        },
        {
          "Key": "DE",
          "Value": "German"
        }
      ]
    },
    {
      "PropertyName": "CountryOfResidenceCode",
      "ValuePairs": [
        {
          "Key": "AF",
          "Value": "Afghanistan"
        },
        {
          "Key": "AX",
          "Value": "Åland Islands"
        },
        {
          "Key": "CN",
          "Value": "China"
        },
        {
          "Key": "CX",
          "Value": "Christmas Island"
        },
        {
          "Key": "DK",
          "Value": "Denmark"
        },
        {
          "Key": "GB",
          "Value": "United Kingdom"
        },
        {
          "Key": "IQ",
          "Value": "Iraq"
        },
        {
          "Key": "DE",
          "Value": "Germany"
        }
      ]
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFound
                    type: string
                    x-enum-descriptions:
                      NotFound: ''
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cm/v2/signups/attachments/{SignUpId}':
    post:
      tags:
        - Signups
      description: Add multiple files to a sign up case
      operationId: SignUpV2AttachFile
      parameters:
        - name: SignUpId
          in: path
          description: Signup ID
          required: true
          schema:
            type: string
          example: 5b68ce05-24f7-491c-a3aa-6a43f7923cee
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupDocuments'
            example: {
  "Documents": [
    {
      "Data": "iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4",
      "DocumentType": "ProofOfIdentity",
      "FileName": "ProofOfIdentity.pdf",
      "RenewalDate": "2025-04-07T11:05:38.244082Z",
      "Title": "ProofOfIdentity"
    },
    {
      "Data": "iVBORw0KGgoAAAANSUhEUgAAAAUAAAAFCAYAAACNbyblAAAAHElEQVQI12P4",
      "DocumentType": "ProofOfResidency",
      "FileName": "ProofOfResidency.doc",
      "RenewalDate": "2024-04-07T11:05:38.244082Z",
      "Title": "ProofOfResidency"
    }
  ]
}
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '204':
          description: No Content
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFound
                    type: string
                    x-enum-descriptions:
                      NotFound: ''
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cm/v1/signups/onboardingpdf/{ClientKey}':
    get:
      tags:
        - Signups
      description: Generate PDF document of DocumentType provided in request for client provided
      operationId: SignUpV1GenerateTypedOnboardingPDF
      parameters:
        - name: ClientKey
          in: path
          description: The client key
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: d2-PzdC5wIPy1284wD-rRA==
        - name: DocumentType
          in: query
          description: The onboarding document type
          required: true
          schema:
            $ref: '#/components/schemas/OnboardingDocumentType'
      responses:
        '200':
          description: OK
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                      - RequestNotAllowed
                      - ValidationFailed
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                      RequestNotAllowed: Request not allowed!
                      ValidationFailed: One or more of your field values are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFound
                    type: string
                    x-enum-descriptions:
                      NotFound: ''
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cm/v1/signups/verification/initiate/{ClientKey}':
    post:
      tags:
        - Signups
      summary: Initiate verification process from external vendor
      description: 'Initiates the verification process for a client by returning a URL that will redirect the client to an external vendor. If successful, the onboarding status will be approved.'
      operationId: SignUpV1InitiateVerification
      parameters:
        - name: ClientKey
          in: path
          description: The client key
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: d2-PzdC5wIPy1284wD-rRA==
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InitiateVerificationRequest'
            example: {
  "RedirectUrl": "http://openapi.validate.com"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InitiateVerificationResponse'
              example: {
  "IdentificationUrl": "https://test.signicat.com/target=http%3A%2F%2Fopenapi.validate.com%2Fopenapi%2Fv1%2Fverify%2F3c3685cf-85e3-4c11-8as7-c4f2dcc78hea"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                      - ValidationFailed
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                      ValidationFailed: One or more of your field values are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFound
                      - SignupNotFound
                    type: string
                    x-enum-descriptions:
                      SignupNotFound: The given signup could not be found
                      NotFound: ''
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cm/v1/signups/completeapplication/{SignUpId}':
    put:
      tags:
        - Signups
      summary: Completes the onboarding application
      description: Completes the onboarding application without any delay. Call this endpoint after 'create signup' and 'upload documents'.
      operationId: SignUpV1CompleteApplication
      parameters:
        - name: AwaitAccountCreation
          in: query
          description: Flag to mention if you want to wait for account creation. Set it to true to wait for account details or false if you don't want the account details immediately.
          schema:
            type: boolean
          example: true
        - name: SignUpId
          in: path
          description: Signup ID
          required: true
          schema:
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
          example: 5b68ce05-24f7-491c-a3aa-6a43f7923cee
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CompleteApplicationResponse'
              example: {
  "AccountDetails": [
    {
      "AccountType": "Normal",
      "CurrencyIsoCode": "USD",
      "Iban": "DK43754335838392"
    }
  ],
  "ApplicationStatus": "Ok"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFound
                      - SignupNotFound
                    type: string
                    x-enum-descriptions:
                      SignupNotFound: The given signup could not be found
                      NotFound: ''
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cm/v1/signups/status/{ClientKey}':
    get:
      tags:
        - Signups
      summary: Get the onboarding status of a client
      description: Returns the onboarding status of a client. The onboarding flow is as follows
      operationId: SignUpV1GetSignUpStatus
      parameters:
        - name: ClientKey
          in: path
          description: The client key
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: d2-PzdC5wIPy1284wD-rRA==
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpStatusResponse'
              example: {
  "ClientId": "7856478",
  "ClientKey": "d2-PzdC5wIPy1284wD-rRA==",
  "Message": "Onboarding request complete. Account and client keys have been created",
  "OnboardingState": "ClientOnboarded"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFound
                      - SignupNotFound
                    type: string
                    x-enum-descriptions:
                      SignupNotFound: The given signup could not be found
                      NotFound: ''
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cm/v1/signups}':
    post:
      tags:
        - Signups
      summary: Create client
      description: 'Initiates the creation of a new client under the specified owner. The country specific properties for Finland, Italy, Singapore and Switzerland cannot be combined. If successful, the endpoint returns the new ClientId, its corresponding ClientKey and the SignupId. The latter is used to upload additional files and to complete the application.'
      operationId: SignUpV1SignUp
      parameters:
        - name: OwnerKey
          in: query
          description: 'Client key of owner, under which this signup will be created. If not provided, signup will be created under the LoggedIn client'
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: ClientKey
          example: d2-PzdC5wIPy1284wD-rRA==
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignUpRequest'
            example: {
  "AccountInformation": {
    "AdditionalChoiceOfAccounts": [
      "5"
    ],
    "ClientCategoryId": "1",
    "CurrencyCode": "USD",
    "DefaultChoiceOfAccount": "38",
    "IntendedCommissionGroupId": "1234",
    "IntendedTemplateId": "567",
    "OtherInstructions": "Instruction1"
  },
  "BankInformation": {
    "BeneficiaryBankName": "BankName",
    "ReceivingCountryIsoCode": "DK"
  },
  "FinlandData": {
    "EuroclearJudicialForm": "21",
    "EuroclearSectorCode": "10010"
  },
  "GlobalFinancialInformation": {
    "AnnualIncomeAfterTax": {
      "Amount": 100020,
      "AmountDescription": "Exact",
      "CurrencyCode": "DKK"
    },
    "IntendToInvest": {
      "Amount": 1000000,
      "AmountDescription": "AboveThisAmount",
      "CurrencyCode": "DKK"
    },
    "InvestableAsset": {
      "Amount": 1000000,
      "AmountDescription": "Rounded",
      "CurrencyCode": "DKK"
    }
  },
  "ItalyData": {
    "EmploymentInformation": {
      "CountryConcernedCode": "IT",
      "DetailedBusinessActivity": "005",
      "EmploymentName": "Employer",
      "OtherEmployment": "Other employer description",
      "PrevalentCorporateObject": "Corporate object",
      "ProvinceConcerned": "Livorno",
      "StatusOfEmployment": "125"
    },
    "MailContactPreference": true,
    "ProfileInformation": {
      "AnnualIncomeInformation": {
        "AnnualIncomeSource": [
          "2"
        ],
        "TotalAnnualIncome": "1"
      },
      "InvestableAssets": {
        "IntendToInvest": "2",
        "NatureAndPurposeOfTheRelationship": "1",
        "SourceOfWealth": [
          "3"
        ],
        "ValueOfTotalWealth": "4"
      }
    }
  },
  "OnboardingInformation": {
    "ElectronicVerification": {
      "Done": "2018-04-05T00:00:00Z",
      "ExternalId": "ExternalId",
      "Result": "Passed",
      "Score": "50"
    }
  },
  "PensionData": {
    "AdditionalPensionData": "Additional pension data",
    "EmployerReference": "4582HGF39",
    "PensionProductTypes": [
      "EmployerPaidAlderssum"
    ]
  },
  "PersonalInformation": {
    "AdditionalTaxableCountries": [
      {
        "CountryCode": "DK",
        "TaxId": "12334567",
        "TinNotAvailable": false
      },
      {
        "CountryCode": "CN",
        "TinMissingReason": "100000001",
        "TinNotAvailable": true,
        "TinOtherMissingReason": "It is under progress"
      }
    ],
    "AdditionalTaxCountryCode": "DK",
    "CityOfBirth": "NewYork",
    "ConsentSource": 1,
    "ContactInformation": {
      "EmailAddress": "abc@test.com",
      "PrimaryPhoneNumber": {
        "CountryCode": "US",
        "Number": "1234567890"
      },
      "SecondaryPhoneNumber": {
        "CountryCode": "IN",
        "Number": "2134567890"
      }
    },
    "CorrespondenceAddress": {
      "BuildingName": "Building Penhurst Park",
      "BuildingNumber": "Build# 34",
      "City": "Buffalo",
      "CountryOfResidenceCode": "US",
      "PostalCode": "14202",
      "State": "New York",
      "StreetName": "Niagara Square"
    },
    "CountryOfBirth": "US",
    "DateOfBirth": "1980-01-01",
    "Debt": {
      "Currency": "2",
      "Value": 100000.0
    },
    "DeclaredBankrupt": false,
    "EmploymentInformation": {
      "AdditionalEmploymentRelations": {
        "CompanyNameInsider": "CompanyNameInsider",
        "CompanyNameMajorityInterest": "CompanyNameMajorityInterest",
        "ManagedOrManagingAssets": false
      },
      "EmployerName": "EmpName",
      "FinancialSectorEmployee": false,
      "NatureOfBusiness": "1",
      "OccupationTypes": [
        "1",
        "2"
      ],
      "Position": "Position"
    },
    "FirstName": "John",
    "Gender": "2",
    "LastName": "Doe",
    "LiquidNetWorth": {
      "Currency": "2",
      "Value": 100000.0
    },
    "MarketingConsent": true,
    "NationalId": "NationalId",
    "NationalityCode": "US",
    "NonDisclosureClient": false,
    "OriginalScriptFirstName": "比",
    "OriginalScriptLastName": "伊",
    "PersonalId": "986283618",
    "PersonalIdExpirationDate": "2019-04-05",
    "PersonalIdPlaceOfRelease": "Milan",
    "PersonalIdReleaseDate": "2016-12-08",
    "PersonalIdReleasedBy": "John doe",
    "PersonalIdType": "1",
    "PersonalTradingProfile": {
      "KnowledgeOfFinancialInstruments": "2",
      "ProductTradingExperience": [
        "3",
        "4",
        "5"
      ],
      "TradesPerMonth": "3"
    },
    "PoliticallyExposedPerson": false,
    "ResidentialAddress": {
      "BuildingName": "Building Penhurst Park",
      "BuildingNumber": "Build# 34",
      "City": "Buffalo",
      "CountryOfResidenceCode": "US",
      "PostalCode": "14202",
      "State": "New York",
      "StreetName": "Niagara Square"
    },
    "SalaryBeforeTax": {
      "Currency": "2",
      "Value": 100000.0
    },
    "ServiceLanguageCode": "EN",
    "TaxId": "288392738",
    "TinNotAvailable": false
  },
  "ProfileInformation": {
    "AnnualIncomeInformation": {
      "AnnualSalaryAfterTax": "1",
      "SecondaryIncomeOther": "Other sources of secondary income",
      "SecondarySourcesOfIncome": [
        "2"
      ],
      "SecondarySourcesOfIncomeTotal": "8"
    },
    "InvestableAssets": {
      "IntendToInvest": "5",
      "PrimarySourcesOfWealth": [
        "1",
        "3"
      ],
      "SourceOfWealthOther": "OtherWealthSource",
      "ValueOfCashAndSecurities": "8"
    },
    "InvestmentPurpose": {
      "PurposeAndScope": "2"
    },
    "TradingProfile": {
      "SoleBoOfAssets": true
    }
  },
  "RegulatoryInformation": {
    "FatcaDeclaration": {
      "UnitedStatesCitizen": true,
      "UnitedStatesProducts": true,
      "UnitedStatesTaxId": "23456",
      "UnitedStatesTaxLiable": true
    }
  },
  "SingaporeData": {
    "AnnualIncomeSgd": "3",
    "BrokersDeclinedBy": "BrokersName",
    "ClassificationRequired": true,
    "DiplomaOrHigherQualification": "2",
    "EducationalQualificationSatisfied": true,
    "ELearningAbsSasCfds": "3",
    "ELearningAbsSasFx": "2",
    "ELearningPassed": "4",
    "ELearningSgx": false,
    "ELearningSgxScore": "20",
    "FinanceWorkExperience": "5",
    "InvestorProfile": "2",
    "ListedSips": true,
    "NetWorthSgd": "5",
    "PermanentResident": true,
    "ProfessionalFinanceQualification": "5",
    "SgxStocks": "2",
    "UnlistedSipsCfds": false,
    "UnlistedSipsFx": false
  },
  "SwitzerlandData": {
    "AnnualIncomeChf": "4",
    "NetWorthChf": "2"
  }
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpResponse'
              example: {
  "ClientId": "2147279170",
  "ClientKey": "7m4I|vtYLUnEGg77o9uQhw==",
  "SignUpId": "f082f091-048f-4048-a56f-de2c205d4ab1"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - ClientMatch
                      - InvalidModelState
                      - PreClientMatch
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                      PreClientMatch: User is already a pre-client!
                      ClientMatch: User is already a client!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFound
                    type: string
                    x-enum-descriptions:
                      NotFound: ''
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cm/v1/signups/options}':
    get:
      tags:
        - Signups
      summary: Get all signup options
      description: Return data set containing possible field values for each user selections.
      operationId: SignUpV1GetSignupOptions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignUpOptionListResult'
              example: {
  "Data": [
    {
      "PropertyName": "ServiceLanguageCode",
      "ValuePairs": [
        {
          "Key": "Arabic",
          "Value": "AR"
        },
        {
          "Key": "Bulgarian",
          "Value": "BU"
        },
        {
          "Key": "Chinese",
          "Value": "CH"
        },
        {
          "Key": "Chinese Traditional",
          "Value": "CHT"
        },
        {
          "Key": "Danish",
          "Value": "DA"
        },
        {
          "Key": "English",
          "Value": "EN"
        },
        {
          "Key": "Farsi",
          "Value": "FA"
        },
        {
          "Key": "German",
          "Value": "DE"
        }
      ]
    },
    {
      "PropertyName": "CountryOfResidenceCode",
      "ValuePairs": [
        {
          "Key": "Afghanistan",
          "Value": "AF"
        },
        {
          "Key": "Åland Islands",
          "Value": "AX"
        },
        {
          "Key": "China",
          "Value": "CN"
        },
        {
          "Key": "Christmas Island",
          "Value": "CX"
        },
        {
          "Key": "Denmark",
          "Value": "DK"
        },
        {
          "Key": "United Kingdom",
          "Value": "GB"
        },
        {
          "Key": "Iraq",
          "Value": "IQ"
        },
        {
          "Key": "Germany",
          "Value": "DE"
        }
      ]
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFound
                    type: string
                    x-enum-descriptions:
                      NotFound: ''
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cm/v1/signups/attachments/{SignUpId}':
    post:
      tags:
        - Signups
      summary: Adds a file to a sign up case
      description: Adds attachment to a sign up case.
      operationId: SignUpV1AttachFile
      parameters:
        - name: DocumentType
          in: query
          description: Type of document
          schema:
            $ref: '#/components/schemas/SignupFlowDocumentTypeNullable'
          example: ProofOfIdentity
        - name: RenewalDate
          in: query
          description: Expiration date of document
          schema:
            allOf:
              - type: string
                format: date-time
                x-type-name: UtcDateTime
          example: '2019-07-15T00:00:00.0000000+00:00'
        - name: SignUpId
          in: path
          description: Signup ID
          required: true
          schema:
            type: string
          example: 5b68ce05-24f7-491c-a3aa-6a43f7923cee
        - name: Title
          in: query
          description: Title of the document file
          schema:
            type: string
          example: client_POI
      responses:
        '201':
          description: Created
        '200':
          description: Action was executed successfully.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFound
                    type: string
                    x-enum-descriptions:
                      NotFound: ''
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cm/v2/accounts}':
    post:
      tags:
        - Accounts
      summary: Create account
      description: Create an additional account for an existing client
      operationId: AccountsV2CreateAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAccount'
            example: {
  "ChoiceOfAccount": "65",
  "ClientKey": "BxS0VWLta8lJ3SBpjGBQjw=="
}
      responses:
        '201':
          description: Account successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountDetails'
              example: {
  "AccountId": "2147279960",
  "AccountKey": "BxS0VWLta8lJ3SBpjGBQjw=="
}
        '500':
          description: Internal Server Error
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - DocumentVerificationError
                    type: string
                    x-enum-descriptions:
                      DocumentVerificationError: Document verification error
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - AccountTemplateNotFound
                    type: string
                    x-enum-descriptions:
                      AccountTemplateNotFound: Account template not found
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cm/v1/registrations/{MatchType/matchcontact/{Email/{MarketingId}':
    get:
      tags:
        - Registrations
      summary: Get client registrations
      description: Checks if an email address matches a contact in CRM
      operationId: RegistrationV1MatchContact
      parameters:
        - name: Email
          in: path
          description: E-mail address to use for the matching.
          required: true
          schema:
            type: string
        - name: MarketingId
          in: path
          description: Marketing Id
          required: true
          schema:
            type: string
        - name: MatchType
          in: path
          description: 'Na, Private or Institutional'
          required: true
          schema:
            $ref: '#/components/schemas/MatchType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MatchingContactResponse'
              example: {
  "ContactId": 44,
  "IsIdentifiedByPrimaryEmail": true,
  "IsRegisteredOnMarketingList": false,
  "MarketingConsent": true,
  "ReferralId": "ReferralId4c118c4d-4fb8-4f0f-a7c1-9c5fb43c5a77"
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/registrations}':
    get:
      tags:
        - Registrations
      summary: Get client registrations
      description: Get registrations matching a specific e-mail address.
      operationId: RegistrationV1GetRegistrations
      parameters:
        - name: Email
          in: query
          description: E-mail address to get registrations for.
          schema:
            type: string
        - name: OwnerId
          in: query
          description: ID of the registration owner entity.
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RegistrationResponseListResult'
              example: {
  "Data": [
    {
      "ClientId": "238482",
      "ClientKey": "5DG7K1P5cqYBZ77tl7Af4w=="
    }
  ],
  "MaxRows": 214
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/clients/terminate}':
    post:
      tags:
        - Clients
      summary: Close Client
      description: Close account(s) and terminate client related to logged in user.
      operationId: ClientsTerminateClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Withdrawal'
            example: {
  "ExternalBankAccount": "ExternalBankAccount0f398205-009e-42f5-9b36-7ac59c06d460",
  "WithdrawalDetails": [
    {
      "TradingAccount": "TradingAccountda0df53c-608b-4b40-b2be-43e7bfbe6e5c",
      "WithdrawalRequested": "Yes"
    }
  ]
}
      responses:
        '201':
          description: Created
        '202':
          description: Indicates Client termination accepted.
        '500':
          description: Internal Server Error
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/clients}':
    patch:
      tags:
        - Clients
      description: Update client
      operationId: ClientsUpdateClient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateClient'
            example: {
  "ClientGroupIds": [
    1,
    5,
    6,
    7
  ],
  "CustodyFeeId": 2,
  "Features": [
    {
      "FeatureTypeId": "2",
      "FeatureValue": "1"
    }
  ]
}
      responses:
        '204':
          description: Indicates that the client has been updated successfully.
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidModelState
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: One or more properties of the request are invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/apistatus}':
    get:
      operationId: cm_apistatus
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerStatus'
              example: {
  "Created": "0001-01-01T00:00:00Z",
  "LeasePeriod": 0,
  "LogicalProcessors": 0,
  "MachineUptime": 0,
  "SystemUptime": 0,
  "TimeSpentMs": 160.93,
  "ToolId": 0
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  '/cm/isalive}':
    get:
      operationId: cm_isalive
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
              example: "3879ab7f-b82b-4d5b-8056-4f3f96e21b09"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  '/cm/v1/selfservice/taxrelief}':
    get:
      tags:
        - Self Service
      description: Get user's tax relief information
      operationId: SelfServiceGetTaxReliefInfo
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TaxReliefInfoResponse'
              example: {
  "ClientID": "321789",
  "ContractType": "Private",
  "ContractualSolution": "Direct Private",
  "LegalEntityID": "1",
  "TaxReliefDetails": [
    {
      "ConsentProvidedForTaxRelief": true,
      "CountryOfResidenceCode": "DK",
      "EntityType": "Individual",
      "ExpiryYear": 2025,
      "FatcaStatus": "ActiveNFFE",
      "GIINNumber": "NADHLKSJHFI",
      "Name": "Arjun Lal",
      "PartyID": "321789",
      "USChapter3Status": "SimpleTrust",
      "UserId": "321789",
      "USTaxDocument": "W8BEN",
      "USTaxLOBProvisions": "Companywithanincomethatmeetsactivetradeorbusinesstest"
    }
  ]
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    patch:
      tags:
        - Self Service
      description: Update user's tax relief information
      operationId: SelfServiceUpdateTaxReliefInfoData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaxReliefInfoRequest'
            example: {
  "ConsentProvidedForTaxRelief": true,
  "ExpiryYear": 2025,
  "FatcaStatus": "ActiveNFFE",
  "GIINNumber": "NADHLKSJHFI",
  "USChapter3Status": "SimpleTrust",
  "USTaxDocument": "W8BEN",
  "USTaxLOBProvisions": "Government"
}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BackDatedExpiryYear
                    type: string
                    x-enum-descriptions:
                      BackDatedExpiryYear: ExpiryYear can't be back dated
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cm/v1/selfservice/taxdeclaration}':
    patch:
      tags:
        - Self Service
      description: Update user's tax declaration
      operationId: SelfServiceUpdateSelfCertificationTaxData
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SelfCertificationTaxRequest'
            example: {
  "ObligationInterestTax": true,
  "StockDividendTax": false
}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - MissingSelfCertificationTax
                    type: string
                    x-enum-descriptions:
                      MissingSelfCertificationTax: Atleast one self certification tax should be provided
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
components:
  schemas:
    AcceptTermsAndConditionsCodeResult:
      title: Represents the results returned from the accept terms and conditions process
      type: object
      properties:
        Message:
          title: Additional message retured from the Accept T and C process
          type: string
        Status:
          title: Status returned from the automatic accept terms and conditions process
          allOf:
            - $ref: '#/components/schemas/AcceptTermsAndConditionsStatus'
    AcceptTermsAndConditionsStatus:
      title: Enumeration of convert lead to client status.
      enum:
        - Failed
        - Ok
      type: string
      x-enum-descriptions:
        Ok: Terms and conditions was successfully accepted
        Failed: Acceptance of Terms and conditions failed
    AccountCreatedStatus:
      title: Account Status
      enum:
        - Completed
        - CompletedWithError
      type: string
      x-enum-descriptions:
        Completed: Completed
        CompletedWithError: Completed With Error
    AccountDetails:
      title: Account Details
      type: object
      properties:
        AccountId:
          title: Account Id
          type: string
        AccountKey:
          title: Account Key
          type: string
    AccountDetailsListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Models.AccountDetails'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    AccountHolder:
      title: Account holder response
      type: object
      properties:
        AccountHolderId:
          title: Account holder Id
          type: string
        Email:
          title: Account holder email
          type: string
        IsPrimary:
          title: Is primary account holder
          type: boolean
    AccountHolderDetail:
      title: Account holder details
      required:
        - IsPrimary
        - PersonalInformation
      type: object
      properties:
        FinlandData:
          title: Client information for Finland onboarding
          allOf:
            - $ref: '#/components/schemas/JointAccount.FinlandData'
        IsPrimary:
          title: Is primary account holder
          type: boolean
        ItalyData:
          title: Italy specific data
          allOf:
            - $ref: '#/components/schemas/JointAccount.ItalyData'
        PersonalInformation:
          title: Personal information
          allOf:
            - $ref: '#/components/schemas/JointAccount.PersonalInformation'
        RegulatoryInformation:
          title: Regulatory information
          allOf:
            - $ref: '#/components/schemas/JointAccount.RegulatoryInformation'
        SingaporeData:
          title: Client Information for Singapore Onboarding
          allOf:
            - $ref: '#/components/schemas/JointAccount.SingaporeData'
        SwitzerlandData:
          title: Client Information for Switzerland Onboarding
          allOf:
            - $ref: '#/components/schemas/JointAccount.SwitzerlandData'
    AccountInformation:
      title: Account information
      type: object
      properties:
        AdditionalChoiceOfAccounts:
          title: Additional choice of accounts
          type: array
          items:
            type: string
        ClientCategoryId:
          title: 'Guides the configuration of the client. Only set this field, if one of more values has been provided to you by Saxo Bank.'
          type: string
        CurrencyCode:
          title: Currency code (from Options)
          type: string
        DefaultChoiceOfAccount:
          title: Default choice of account (from Options - ChoiceOfAccountDefault)
          type: string
        IntendedCommissionGroupId:
          title: Intended commission group ID
          type: string
        IntendedTemplateId:
          title: Intended template ID
          type: string
        ModelId:
          title: 'Guides the configuration of the client. Only set this field, if one of more values has been provided to you by Saxo Bank.'
          type: string
        OtherInstructions:
          title: Other instructions
          type: string
    AccountTemplate:
      title: Account Template
      type: object
      properties:
        ChoiceOfAccount:
          title: Choice Of Account
          type: string
        TemplateId:
          title: Template Id
          type: string
    AccountTemplateListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/AccountTemplate'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    AccountType:
      title: CRM Account Type defined in MSCRM
      enum:
        - Na
        - Trading
      type: string
      x-enum-descriptions:
        Na: Not applicable.
        Trading: Trading account.
    AccountTypeNullable:
      allOf:
        - $ref: '#/components/schemas/Models.AccountType'
    AdditionalChoiceOfAccountData:
      title: Type containing Additional choice of account's details
      type: object
      properties:
        AdditionalChoiceOfAccount:
          title: Additional choice of account
          type: integer
          format: int32
        IsTransfer:
          title: Tranfer Additional choice of account
          type: boolean
    AdditionalDetails:
      title: Represents additional details about the applicant.
      type: object
      properties:
        EmploymentDetails:
          title: Information about an applican't employment details.
          allOf:
            - $ref: '#/components/schemas/EmploymentDetails'
        FinancialDetails:
          title: Information about an applicant's financial details.
          allOf:
            - $ref: '#/components/schemas/FinancialDetails'
        SkipMailSending:
          title: Indicates whether the welcome email be send as part of updating additional information.
          type: boolean
        SourceOfFunds:
          title: Information about an applicant's source of funds.
          allOf:
            - $ref: '#/components/schemas/SourceOfFunds'
    AdditionalEmploymentRelations:
      title: Type for Additional employment relations
      type: object
      properties:
        CompanyNameInsider:
          title: Company name Insider
          maxLength: 250
          type: string
        CompanyNameMajorityInterest:
          title: Company name majority Interest
          maxLength: 250
          type: string
        ManagedOrManagingAssets:
          title: Managed or managing Assets
          allOf:
            - type: boolean
    AdditionalNationality:
      title: Type containing additional nationality and NIN information
      type: object
      properties:
        CountryCode:
          title: ISO country code
          type: string
        NationalId:
          title: NationalId number
          type: string
        NationalIdType:
          title: NationalIdType
          allOf:
            - type: integer
              format: int32
    AdditionalTaxableCountry:
      title: Additional taxable country
      type: object
      properties:
        CountryCode:
          title: Country code (from Options)
          type: string
        TaxId:
          title: Tax Id
          type: string
        TinMissingReason:
          title: Tin missing reason (from Options)
          type: string
        TinNotAvailable:
          title: Is TIN not available
          allOf:
            - type: boolean
        TinOtherMissingReason:
          title: Other Tin missing reason
          type: string
    Address:
      title: Address structure
      type: object
      properties:
        BuildingName:
          title: Building name
          type: string
        BuildingNumber:
          title: Building Number
          type: string
        City:
          title: City
          type: string
        CoName:
          title: Care of Name
          type: string
        CountryOfResidenceCode:
          title: Country of residence ISO code (from Options)
          type: string
        Floor:
          title: Floor
          type: string
        LocalArea:
          title: Local area
          type: string
        PostBoxOffice:
          title: Post office box
          type: string
        PostalCode:
          title: Postal code
          type: string
        SideDoor:
          title: Side door
          type: string
        State:
          title: State
          type: string
        StreetName:
          title: Street name
          type: string
        Unit:
          title: Unit
          type: string
    AddressType:
      title: Address type
      enum:
        - None
      type: string
      x-enum-descriptions:
        None: None
    AmountDescriptionType:
      title: Enum for AmountDescriptionType
      enum:
        - AboveThisAmount
        - Exact
        - Rounded
      type: string
      x-enum-descriptions:
        Exact: Exact value provided.
        Rounded: Nearby value provided.
        AboveThisAmount: Value is above this amount.
    AnnualIncomeInformation:
      title: Client annual income information
      type: object
      properties:
        AnnualSalaryAfterTax:
          title: Annual salary after tax (from Options)
          type: string
        SecondaryIncomeOther:
          title: Other sources of secondary income
          type: string
        SecondarySourcesOfIncome:
          title: 'Secondary sources of income (from Options, can select multiple)'
          type: array
          items:
            type: string
        SecondarySourcesOfIncomeTotal:
          title: Secondary sources of income total (from Options)
          type: string
    AnswerChoice:
      title: 'Public contract for a choice of answer, for a specific question in a .'
      type: object
      properties:
        QuestionId:
          title: 'Unique ID of the , that the choice is an answer for.'
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
        QuestionOptionId:
          title: 'Unique ID of the , that is the choice of answer.'
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
    AnswerSet:
      title: Public contract for a set of answers to a questionaire.
      type: object
      properties:
        Choices:
          title: A collection of choice of answers.
          type: array
          items:
            $ref: '#/components/schemas/AnswerChoice'
    ApiGroupInfo:
      type: object
      properties:
        Controller:
          type: string
        Routes:
          type: array
          items:
            type: string
    ApplicationStatus:
      title: Compleet application status
      enum:
        - Failed
        - InProgress
        - Ok
      type: string
      x-enum-descriptions:
        InProgress: The process of complete application is in progress.
        Ok: Application has been completed successfully.
        Failed: Failed to complete application. Please reach out to Saxo Bank for further details.
    AssessmentResult:
      title: Enumeration of application assessment results.
      enum:
        - Complex
        - ComplexWarning
        - Inappropriate
        - NonComplex
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: Unknown or not specified yet.
        Inappropriate: '--'
        NonComplex: '--'
        ComplexWarning: '--'
        Complex: '--'
    AssetDetails:
      title: Asset Details class
      required:
        - CurrencyCode
        - Amount
        - AmountDescription
      type: object
      properties:
        Amount:
          title: Amount value
          type: integer
          format: int32
        AmountDescription:
          title: Amount description
          allOf:
            - $ref: '#/components/schemas/AmountDescriptionType'
        CurrencyCode:
          title: Currency code (from Options)
          type: string
    Assignee:
      title: Assignee of activities or cases in the system.
      required:
        - Type
        - Name
      type: object
      properties:
        Name:
          title: "The unique name of the assignee.\r\n            For information on how to specify names for different s, \r\n            please refer to ."
          type: string
        Type:
          title: The type of assignee.
          allOf:
            - $ref: '#/components/schemas/AssigneeType'
    AssigneeType:
      title: Specifies the entity types that can have activities or cases assigned to them
      enum:
        - Queue
        - User
      type: string
      x-enum-descriptions:
        User: The assignee is a user. Users are identified by their initials.
        Queue: The assignee is a system queue. Queues are identified by their name.
    Attachment:
      title: Attachment data
      required:
        - AttachmentType
        - FileName
        - Data
      type: object
      properties:
        AttachmentType:
          title: Type of attachment
          allOf:
            - $ref: '#/components/schemas/AttachmentType'
        Data:
          title: Content or data of attachment in base64 format.
          type: string
        FileName:
          title: Name of attachment
          type: string
    AttachmentRequest:
      title: Documents attachment request
      required:
        - Attachments
      type: object
      properties:
        Attachments:
          title: Documents to be attached
          type: array
          items:
            $ref: '#/components/schemas/Attachment'
        Email:
          title: Account's email for which documents are to be attached
          type: string
    AttachmentType:
      title: Document types for Attachment
      enum:
        - AccountViewToIb
        - EsaContract
        - FeePaymentAuthorization
        - GeneralBusinessTerms
        - PowerOfAttorney
        - PowerOfAttorneyToIb
        - ProofOfIdentity
        - ProofOfResidency
        - SourceOfFundsDocument
        - TermsAndConditions
      type: string
      x-enum-descriptions:
        AccountViewToIb: 'Client level. Document detailing Introducing-Broker/Client details, authorization from client and Broker commission details.'
        FeePaymentAuthorization: Client level. Document detailing Fee Payment Authorization.
        GeneralBusinessTerms: Client level. Document explaining general business terms.
        ProofOfIdentity: Account level. Document to verify the identity of AccountHolder.
        PowerOfAttorney: Client level. Legal document mentioning the details of the acts that can be done on behalf of the principal (client).
        PowerOfAttorneyToIb: Client level. Legal document mentioning the details of the acts that an IB can undertake on behalf of the principal (client).
        ProofOfResidency: Account level. Document to verify the residency of AccountHolder.
        SourceOfFundsDocument: Account level. Document detailing all the sources which client have for generating funds.
        TermsAndConditions: Client level. Document explaining terms and conditions.
        EsaContract: Client level. Document detailing ESA Contract.
    AustraliaData:
      title: Australia Data
      type: object
      properties:
        AnnualIncome:
          title: Annual Income in AUD
          type: string
        NetWorth:
          title: Net Worth in AUD
          type: string
    AustraliaProfileInfo:
      title: Information about Australian applicant's profile.
      type: object
      properties:
        AnnualIncome:
          title: Annual Income
          allOf:
            - type: integer
              format: int32
        AustraliaOpenMarketConsent:
          title: Australia Open Market Consent
          allOf:
            - $ref: '#/components/schemas/TriState'
        DriverLicenseState:
          title: Driver Livense Issuing State
          type: string
        FxProductsBefore:
          title: Fx Products Before?
          allOf:
            - $ref: '#/components/schemas/TriState'
        HasDiplomaOrDegree:
          title: Has Diploma Or Degree?
          allOf:
            - $ref: '#/components/schemas/TriState'
        NetWorth:
          title: Net Worth (AUD)
          allOf:
            - type: integer
              format: int32
        RegisteredAddressForPastThreeYears:
          title: Registered Address For Past Three Years?
          allOf:
            - $ref: '#/components/schemas/TriState'
        TfnExemption:
          title: Tfn Exemption?
          allOf:
            - $ref: '#/components/schemas/TriState'
        TfnExemptionCategory:
          title: Tfn Exemption Category
          allOf:
            - type: integer
              format: int32
        TradedOptionsBefore:
          title: Traded Options Before?
          allOf:
            - $ref: '#/components/schemas/TriState'
    AutoCompleteDueDiligenceDetails:
      title: Auto Complete DD
      type: object
      properties:
        AutoApproveDueDiligence:
          title: Auto Approve DD
          type: boolean
    AutoConversionResult:
      title: Represents the results returned from the demo account creation process
      type: object
      properties:
        AccountDetails:
          title: Account details returned for the created client
          allOf:
            - $ref: '#/components/schemas/Signup.AccountDetails'
        Accounts:
          title: If more than one account type this list is populated
          type: array
          items:
            $ref: '#/components/schemas/Signup.AccountDetails'
        AutoConvertToClientStatus:
          title: Result of the client conversion
          allOf:
            - $ref: '#/components/schemas/AutoConvertToClientStatus'
    AutoConvertToClientStatus:
      title: Enumeration of convert lead to client status.
      enum:
        - Failed
        - InProgress
        - Ok
      type: string
      x-enum-descriptions:
        Ok: Lead was successfully converted to a client
        InProgress: Operation in progress
        Failed: Lead was not converted to a client
    AutoDueDiligenceResult:
      title: Enumeration of possible outcomes of the due diligence process.
      enum:
        - DisabledByConfiguration
        - Failed
        - Passed
        - Referred
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: 'Unknown outcome, or not specified yet.'
        Passed: Application has passed due diligence process.
        Referred: Application is a referral from another account holder.
        Failed: Application failed the due diligence process.
        DisabledByConfiguration: Due diligence process is disabled.
    BankDetails:
      title: Applicant address information
      type: object
      properties:
        AccountNumber:
          title: Account no
          type: string
        SortCode:
          title: Sort code
          type: string
    BankInformation:
      title: Bank information
      type: object
      properties:
        BeneficiaryBankName:
          title: Beneficiary bank name
          type: string
        ReceivingCountryIsoCode:
          title: Receiving country ISO code (from options)
          type: string
    BeneficialOwner:
      title: Beneficial owner
      type: object
      properties:
        CountryCode:
          title: Country code
          type: string
        FirstName:
          title: First name
          type: string
        FullName:
          title: Full name
          type: string
        LastName:
          title: Last name
          type: string
        MiddleName:
          title: Middle name
          type: string
        OwnershipPct:
          title: Ownership percentage
          type: number
        OwnsCompany:
          title: Company owned by this contact
          type: string
        PartyId:
          title: Party id
          allOf:
            - type: integer
              format: int32
    BeneficialOwnerComparedData:
      type: object
      properties:
        ComparedToData:
          title: Compared with data
          allOf:
            - $ref: '#/components/schemas/BeneficialOwner'
        ComparisonStatus:
          title: Data comparison status
          allOf:
            - $ref: '#/components/schemas/ComparisonStatus'
        Data:
          title: Data
          allOf:
            - $ref: '#/components/schemas/BeneficialOwner'
    BusinessContext:
      title: Contains business context information for a signup flow.
      required:
        - BusinessLine
        - AccountType
        - FlowType
        - OwnerId
      type: object
      properties:
        AccountType:
          title: Account type.
          allOf:
            - $ref: '#/components/schemas/AccountType'
        BusinessLine:
          title: Business line.
          allOf:
            - $ref: '#/components/schemas/BusinessLine'
        FlowType:
          title: Flow type.
          allOf:
            - $ref: '#/components/schemas/FlowType'
        OwnerId:
          title: Id the owner.
          type: integer
          format: int32
    BusinessLine:
      title: CRM BusinessLine Type defined in MSCRM
      enum:
        - Na
        - SaxoTrading
      type: string
      x-enum-descriptions:
        Na: Not Applicable.
        SaxoTrading: Saxo Bank Trading.
    CafStatus:
      title: Caf Status
      type: object
      properties:
        AppendixToCaf:
          title: Appendix To Caf?
          type: boolean
        CommissionGroupParentId:
          title: CommissionGroup ParentId?
          type: boolean
        DuplicateAccount:
          title: Duplicate Account?
          type: boolean
        Fatca:
          title: Fatca?
          type: boolean
        FeedbackStatus:
          title: Feedback on the document status
          allOf:
            - $ref: '#/components/schemas/DocumentFeedbackStatusNullable'
        IdVerificationFailure:
          title: IdVerification Failure?
          type: boolean
        MarketRiskApprovalRequired:
          title: Market Risk Approval Required
          type: boolean
        MissingAddress:
          title: Missing Address?
          type: boolean
        MissingBaseCurrency:
          title: Missing Base Currency?
          type: boolean
        MissingEmail:
          title: Missing Email?
          type: boolean
        MissingName:
          title: Missing Name?
          type: boolean
        MissingPage:
          title: Missing Page?
          type: boolean
        MissingPhone:
          title: Missing Phone?
          type: boolean
        MissingSignature:
          title: Missing Signature?
          type: boolean
        NameMismatchNotComplete:
          title: NameMismatch NotComplete?
          type: boolean
        NationalityMifid:
          title: Nationality Mifid?
          type: boolean
        PageUnreadable:
          title: Page Unreadable?
          type: boolean
        ProductAssessmentQuestionaire:
          title: ProductAssessment Questionaire?
          type: boolean
        SignatureMismatch:
          title: Signature Mismatch?
          type: boolean
        SoleTraderConfirmation:
          title: SoleTrader Confirmation?
          type: boolean
        SourceOfFund:
          title: Source Of Fund?
          type: boolean
        SourceOfSecondaryIncome:
          title: Source Of Secondary Income?
          type: boolean
        Tin:
          title: Tin?
          type: boolean
        TradingObjectives:
          title: Trading Objectives?
          type: boolean
    CertificateState:
      title: Represents the state of a given certificate
      enum:
        - Expired
        - Issued
        - Revoked
      type: string
      x-enum-descriptions:
        Issued: The certificate is issued and valid for authentication
        Expired: The certificate has expired
        Revoked: The certificate has been revoked by a user
    CheckPhoneNumberRequest:
      title: Properties for requesting a validation of the client's phone number
      required:
        - Email
        - AreaCode
        - PhoneNumber
      type: object
      properties:
        AreaCode:
          title: Area code part of the client's phone number
          type: string
        ClientId:
          title: User's client ID (Saxo Bank ID).
          type: string
        Email:
          title: E-mail address for the client.
          type: string
        PhoneNumber:
          title: Number part of the client's phone number
          type: string
    CheckPhoneNumberRequestResult:
      title: Result of the phone number check
      type: object
      properties:
        Code:
          title: Code indicating the outcome of the check phone number operation.
          allOf:
            - $ref: '#/components/schemas/CheckPhoneNumberResult'
    CheckPhoneNumberResult:
      title: Result codes of the check phone number operation.
      enum:
        - EmailNoMatch
        - PhoneNumberExactMatch
        - PhoneNumberNoMatch
        - PhoneNumberPartialMatch
        - Unknown
        - UserIdNotFound
      type: string
      x-enum-descriptions:
        Unknown: An error occured or MS CRM was not able to validate the phone number
        UserIdNotFound: No match found
        EmailNoMatch: No match found
        PhoneNumberNoMatch: No match found
        PhoneNumberExactMatch: No match found
        PhoneNumberPartialMatch: No match found
    ClientEnvironment:
      title: Client Environment
      enum:
        - Demo
        - Live
        - Unknown
      type: string
    ClientManagementContactTask:
      title: Request for assignment of a task for a contact.
      required:
        - RegardingContactId
        - Subject
        - AssignTo
      type: object
      properties:
        AssignTo:
          title: Whom the task should be assigned ('User' or 'Queue').
          allOf:
            - $ref: '#/components/schemas/Assignee'
        Description:
          title: A description of the task.
          type: string
        Duration:
          title: Scheduled duration of the task.
          allOf:
            - type: string
        MarketingListId:
          title: Marketingting List Id
          type: string
        RegardingContactId:
          title: The ID of the contact which the task is associated with.
          type: string
        ScheduledStart:
          title: Scheduled start of the task.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        Subject:
          title: The subject of the task.
          type: string
    ClientManagementTask:
      title: Request for assignment of a task.
      required:
        - RegardingClientId
        - Subject
        - AssignTo
      type: object
      properties:
        AssignTo:
          title: Whom the task should be assigned ('User' or 'Queue').
          allOf:
            - $ref: '#/components/schemas/Assignee'
        Description:
          title: A description of the task.
          type: string
        Duration:
          title: Scheduled duration of the task.
          allOf:
            - type: string
        MarketingListId:
          title: Marketingting List Id
          type: string
        RegardingClientId:
          title: The ID of the client which the task is associated with.
          type: string
        ScheduledStart:
          title: Scheduled start of the task.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        Subject:
          title: The subject of the task.
          type: string
    ClientManagementTaskResponse:
      title: Confirmation of task assignment.
      type: object
      properties:
        ClientManagementTaskId:
          title: Unique ID assigned to the task.
          type: string
    ClientRenewal:
      title: Client renewal data
      type: object
      properties:
        AccountType:
          title: Account type of logged in client
          allOf:
            - $ref: '#/components/schemas/AccountTypeNullable'
          x-network-visibility: internal
        AssetTypeSolution:
          title: Asset type for LocalAssetSolution contract type
          type: string
          x-network-visibility: internal
        ContractType:
          title: Contract type of logged in user
          allOf:
            - $ref: '#/components/schemas/ContractTypeNullable'
          x-network-visibility: internal
        CustomerType:
          title: Customer type of logged in user
          allOf:
            - $ref: '#/components/schemas/CustomerTypeNullable'
          x-network-visibility: internal
        RenewalBy:
          title: Date when this renewal should be completed
          allOf:
            - type: string
              format: date
              x-type-name: Date
        RenewalData:
          title: Existing renewal data
          allOf:
            - $ref: '#/components/schemas/RenewalData'
        RenewalEntityId:
          title: Identifier for the renewal
          type: string
        RenewalStatus:
          title: Current status of this renewal
          allOf:
            - $ref: '#/components/schemas/RenewalStatus'
        RenewalStatusByUsers:
          title: Customer renewal status for linked users
          type: array
          items:
            $ref: '#/components/schemas/RenewalStatusByUser'
          x-network-visibility: internal
        RenewalTriggers:
          title: Renewal trigger events
          type: array
          items:
            type: string
          x-network-visibility: internal
    CommunicationOption:
      title: Communication option for an applicant.
      type: object
      properties:
        CommunicationData:
          title: Data about the communication option.
          type: string
        CommunicationType:
          title: Type of communication.
          allOf:
            - $ref: '#/components/schemas/CommunicationType'
        CountryCode:
          title: 'ISO 3166 code of the country, in which the communication options resides.'
          type: string
        PhoneType:
          title: Type of phone for the communication option.
          allOf:
            - $ref: '#/components/schemas/PhoneType'
        Priority:
          title: Applicant's choice of priority for the communication option.
          allOf:
            - $ref: '#/components/schemas/CommunicationOptionPriority'
    CommunicationOptionPriority:
      title: Enumeration of communication option priorities.
      enum:
        - Other
        - Primary
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: Not specified.
        Primary: Primary.
        Other: Other.
    CommunicationType:
      title: Enumeration of communication types.
      enum:
        - CellPhone
        - Fax
        - PhoneHome
        - PhoneOther
        - PhoneWork
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: Unknown / not specified.
        PhoneOther: Other phone.
        PhoneHome: Home phone..
        PhoneWork: Work phone.
        CellPhone: Mobile phone.
        Fax: Fax.
    CompanyContact:
      title: Contract representing a company contact
      type: object
      properties:
        Address:
          title: Address
          allOf:
            - $ref: '#/components/schemas/Domain.Address'
        Email:
          title: Email
          type: string
        FirstName:
          title: First name
          type: string
        FullName:
          title: Full name
          type: string
        LastName:
          title: Last name
          type: string
        Title:
          title: Title
          type: string
    CompanyContactComparedData:
      type: object
      properties:
        ComparedToData:
          title: Compared with data
          allOf:
            - $ref: '#/components/schemas/Models.CompanyContact'
        ComparisonStatus:
          title: Data comparison status
          allOf:
            - $ref: '#/components/schemas/ComparisonStatus'
        Data:
          title: Data
          allOf:
            - $ref: '#/components/schemas/Models.CompanyContact'
    CompanyContactInfo:
      title: Company contact info
      type: object
      properties:
        PrimaryEmailAddress:
          title: Primary email address
          allOf:
            - $ref: '#/components/schemas/StringComparedData'
        PrimaryPhoneNumber:
          title: Primary phone number
          allOf:
            - $ref: '#/components/schemas/PhoneNumberComparedData'
    CompanyContactInfoRequest:
      title: Company contact info
      type: object
      properties:
        PrimaryEmailAddress:
          title: Primary email address
          type: string
        PrimaryPhoneNumber:
          title: Primary phone number
          allOf:
            - $ref: '#/components/schemas/Models.PhoneNumber'
    CompanyData:
      type: object
      properties:
        CompanyIdentity:
          title: Contract representing data for the company
          allOf:
            - $ref: '#/components/schemas/CompanyIdentity'
        GeneralData:
          allOf:
            - $ref: '#/components/schemas/GeneralData'
    CompanyDataRequest:
      title: Company data request
      type: object
      properties:
        AuthorizedSignatories:
          title: Company authorized signatories
          type: array
          items:
            $ref: '#/components/schemas/Models.CompanyContact'
        DirectorsData:
          title: Company directors
          allOf:
            - $ref: '#/components/schemas/DirectorsDataRequest'
        GeneralData:
          title: General data
          allOf:
            - $ref: '#/components/schemas/GeneralCompanyDataRequest'
        IdentityData:
          title: Identity data
          allOf:
            - $ref: '#/components/schemas/IdentityDataRequest'
        ShareholdersData:
          title: Company shareholders
          allOf:
            - $ref: '#/components/schemas/ShareholdersDataRequest'
    CompanyIdentity:
      title: Company Identity
      type: object
      properties:
        LEI:
          title: Unique Id for the company
          type: string
        Name:
          title: Company Name
          type: string
        NationalId:
          title: National Id for the company
          type: string
    CompanyRenewal:
      title: CompanyRenewal
      type: object
      properties:
        CompanyData:
          title: Company data
          allOf:
            - $ref: '#/components/schemas/Models.CompanyData'
        RenewalDetails:
          title: Renewal master details
          allOf:
            - $ref: '#/components/schemas/RenewalDetails'
    CompanyRenewalRequest:
      title: Company renewal request
      type: object
      properties:
        CompanyData:
          title: Updated company data
          allOf:
            - $ref: '#/components/schemas/CompanyDataRequest'
        DirectorHierarchyRejected:
          title: Is director hierarchy rejected
          type: boolean
        DirectorHierarchyRejectionNote:
          type: string
        OwnerHierarchyRejected:
          title: Is owner hierarchy rejected
          type: boolean
        OwnerHierarchyRejectionNote:
          type: string
    ComparisonStatus:
      title: Comparison status
      enum:
        - Changed
        - FullMatch
        - New
        - Removed
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: Unknown=0
        FullMatch: FullMatch=1
        Changed: Changed=2
        New: New=3
        Removed: Removed=4
    CompleteApplication.AccountDetails:
      title: Account details of client
      type: object
      properties:
        AccountType:
          title: Type of account
          type: string
        CurrencyIsoCode:
          title: Currency ISO code of account
          type: string
        Iban:
          title: Iban of account
          type: string
    CompleteApplicationResponse:
      type: object
      properties:
        AccountDetails:
          title: List of accounts if application status is 'Ok'
          type: array
          items:
            $ref: '#/components/schemas/CompleteApplication.AccountDetails'
        ApplicationStatus:
          title: Complete application status
          allOf:
            - $ref: '#/components/schemas/ApplicationStatus'
        ErrorMessage:
          title: Error message if application status is 'Failed'
          type: string
    ComplianceScreeningResult:
      title: Result of the compliance screening.
      type: object
      properties:
        FoundMatches:
          title: Mathches found?
          type: boolean
        Message:
          title: Status messsage
          type: string
        ScreeningResult:
          title: False if service failed
          type: boolean
    Contact:
      title: 'Contains contact information for the applicant, during an onboarding flow.'
      type: object
      properties:
        AdditionalNationalitiesDetails:
          title: List of additional nationalities. Replaces AdditionalNationalityCodes
          type: array
          items:
            $ref: '#/components/schemas/AdditionalNationality'
        AdditionalNationalityCodes:
          title: "Array of values from the flow property \"nationality\", identifying additional\r\n            nationalities of the applicant."
          type: array
          items:
            type: string
        AliasFirstName:
          title: Alias first name used for Japan
          type: string
        AliasLastName:
          title: Alias last name used for Japan
          type: string
        AustraliaProfileInfo:
          title: Information about Australian applicant's profile.
          allOf:
            - $ref: '#/components/schemas/AustraliaProfileInfo'
        CompanyName:
          title: Name of the applicants company.
          type: string
        CountryOfBirthCode:
          title: "Value of the flow property \"countryofbirth\", identifying the applicant's country of birth.\r\n            Must be a valid ISO-3166 2-letter country code."
          type: string
        CountryOfResidenceCode:
          title: "Value of the flow property \"countryofresidence\", identifying the applicant's country of residence.\r\n            Must be a valid ISO-3166 2-letter country code."
          type: string
        CountyOfBirth:
          title: Applicant's county of birth.
          type: string
        DateOfBirth:
          title: Applicant's date of birth.
          allOf:
            - type: string
        Debt:
          title: Dept
          allOf:
            - $ref: '#/components/schemas/MoneyRange'
        DeclaredBankrupt:
          title: Specifies whether Declared Bankrupt  or not
          allOf:
            - $ref: '#/components/schemas/TriState'
        EmploymentInfo:
          title: Information about the applicant's current employment.
          allOf:
            - $ref: '#/components/schemas/EmploymentInfo'
        FinancialDetails:
          title: Applicant's financial details.
          allOf:
            - $ref: '#/components/schemas/FinancialDetails'
        FirstName:
          title: Applicant's first name.
          type: string
        Gender:
          title: Applicant's gender.
          allOf:
            - $ref: '#/components/schemas/GenderType'
        HongKongProfileInfo:
          title: Information about HongKong applicant's profile.
          allOf:
            - $ref: '#/components/schemas/HongKongProfileInfo'
        InseeCode:
          title: InseeCode
          type: string
        JapanProfileInfo:
          title: Information about Japan applicant's profile.
          allOf:
            - $ref: '#/components/schemas/JapanProfileInfo'
        LastName:
          title: Applicant's last name.
          type: string
        LiquidNetWorth:
          title: LiquidNetWorthCurrency
          allOf:
            - $ref: '#/components/schemas/MoneyRange'
        MaidenName:
          title: Applicant's maiden name.
          type: string
        MaritalStateId:
          title: 'Value of the flow property "maritalstatus", identifying the applicant''s current marital status.'
          type: integer
          format: int32
        MarriedName:
          title: Applicant's Married name.
          type: string
        NameOfRelatedEmployee:
          title: NameOfRelatedEmployee
          type: string
        NationalityCode:
          title: "Value of the flow property \"nationality\", identifying the applicant's nationality.\r\n            Must be a valid ISO-3166 2-letter country code."
          type: string
        NativeLanguageCode:
          title: "Value of the flow property \"preferredservicelanguage\", identifying the applicant's native language.\r\n            Must be a valid ISO-639 2-letter language code."
          type: string
        PermanentResidency:
          title: PermanentResidency
          type: string
        PersonalId:
          title: Applicant identification.
          type: string
        PersonalIdExpirationDate:
          title: PersonalIdExpirationDate
          allOf:
            - type: string
        PersonalIdPlaceOfRelease:
          title: PersonalIdPlaceOfRelease
          type: string
        PersonalIdReleaseDate:
          title: PersonalIdReleaseDate
          allOf:
            - type: string
        PersonalIdType:
          title: "Type of identification, specified by the applicant,\r\n            to identity him/her self."
          allOf:
            - $ref: '#/components/schemas/PersonalIdType'
        PlaceOfBirth:
          title: Applicant's place of birth.
          type: string
        ProvinceOfBirth:
          title: ProvinceOfBirth
          type: string
        RelatedToSaxoEmployee:
          title: RelatedToSaxoEmployee
          allOf:
            - $ref: '#/components/schemas/TriState'
        RelationToSaxoEmployee:
          title: RelationToSaxoEmployee
          type: string
        SalaryBeforeTax:
          title: SalaryBeforeTax
          allOf:
            - $ref: '#/components/schemas/MoneyRange'
        ServiceLanguageCode:
          title: "Value of the flow property \"preferedservicelanguage\", identifying the applicant's choice of language for communication.\r\n            Must be a valid ISO-639 2-letter language code."
          type: string
        SingaporeProfileInfo:
          title: Information about Singaporean applicant's profile.
          allOf:
            - $ref: '#/components/schemas/SingaporeProfileInfo'
        SwitzerlandProfileInfo:
          title: Information about Switzerland applicant's profile.
          allOf:
            - $ref: '#/components/schemas/SwitzerlandProfileInfo'
        TaxId:
          title: Applicant TIN.
          type: string
        TaxableCountries:
          title: List of taxable countries. Replaces TaxableCountryCodes
          type: array
          items:
            $ref: '#/components/schemas/Signup.TaxableCountry'
        TaxableCountryCodes:
          title: "Array of ISO-3166 country codes, from the flow property \"countrywhitelist\", identifying\r\n            one or more countries where the applicant is tax-liable."
          type: array
          items:
            type: string
        TinMissingReason:
          title: Tin missing reason
          allOf:
            - type: integer
              format: int32
        TinNotAvailable:
          title: Specifies whether TIN is available or not
          allOf:
            - $ref: '#/components/schemas/TriState'
        TinOtherMissingReason:
          title: Tin other missing reason
          type: string
        TitleId:
          title: 'Value of the flow property "title", identifying the applicant''s title.'
          type: integer
          format: int32
        TownCode:
          title: TownCode
          type: string
        W8BenDiscrepancy:
          title: W8BenDiscrepancy
          allOf:
            - $ref: '#/components/schemas/TriState'
        ZipCodeOfBirth:
          title: ZipCodeOfBirth
          type: string
    ContactDetail:
      title: Contact detail
      type: object
      properties:
        ContactId:
          title: Contact Id
          type: string
        FullName:
          title: Full name of the contact
          type: string
        MarketingConsent:
          title: Is marketing consent given for this contact
          allOf:
            - type: boolean
        PrimaryEmail:
          title: Primary email of the contact
          type: string
        ReferralId:
          title: Referral id of the contact
          type: string
    ContactDueDiligenceOptionsDetails:
      title: Contact DD status
      type: object
      properties:
        AmlApproved:
          title: Aml Approved
          allOf:
            - $ref: '#/components/schemas/DueDiligenceStatusMandatoryDetailsNullable'
        ContactDueDiligenceApprovalComment:
          title: Contact DD Approval Comment
          type: string
        ContactDueDiligenceApproved:
          title: Contact DD Approved
          allOf:
            - $ref: '#/components/schemas/DueDiligenceStatusMandatoryDetailsNullable'
        ContactRisk:
          title: Contact Risk
          allOf:
            - $ref: '#/components/schemas/DueDiligenceRiskDetailsNullable'
        PassportIdApproved:
          title: PassportIdApproved
          allOf:
            - $ref: '#/components/schemas/DueDiligenceStatusMandatoryDetailsNullable'
        PorApproved:
          title: Por Approved
          allOf:
            - $ref: '#/components/schemas/DueDiligenceStatusDetailsNullable'
    ContactInformation:
      title: Contact information
      required:
        - EmailAddress
      type: object
      properties:
        EmailAddress:
          title: Email address
          maxLength: 100
          type: string
        PrimaryPhoneNumber:
          title: Primary phone number
          allOf:
            - $ref: '#/components/schemas/PhoneNumber'
        SecondaryPhoneNumber:
          title: Secondary phone number
          allOf:
            - $ref: '#/components/schemas/PhoneNumber'
    ContractType:
      title: Contract type of logged in user
      enum:
        - Broker
        - Corporate
        - EGO
        - Error
        - FinancialClient
        - IBIO
        - IBPOA
        - JointAccount
        - LocalAssetSolution
        - ManagedFund
        - MoneyManager
        - OutboundLoan
        - PrimeBrokerClient
        - Private
        - ReferringAgent
        - SIPPTrustee
        - SaxoIB
        - SaxoReference
        - SaxoWLC
        - WhiteLabelClient
      type: string
      x-enum-descriptions:
        Broker: Broker
        Corporate: Corporate
        EGO: EGO
        Error: Error
        FinancialClient: FinancialClient
        IBIO: IBIO
        IBPOA: IBPOA
        JointAccount: JointAccount
        LocalAssetSolution: LocalAssetSolution
        ManagedFund: ManagedFund
        MoneyManager: MoneyManager
        OutboundLoan: OutboundLoan
        PrimeBrokerClient: PrimeBrokerClient
        Private: Private
        ReferringAgent: ReferringAgent
        SaxoIB: SaxoIB
        SaxoReference: SaxoReference
        SaxoWLC: SaxoWLC
        SIPPTrustee: SIPPTrustee
        WhiteLabelClient: WhiteLabelClient
    ContractTypeNullable:
      allOf:
        - $ref: '#/components/schemas/Models.ContractType'
    ContractualSolution:
      title: Contractual Solution
      enum:
        - Broker
        - DirectCorporate
        - DirectFinancialClient
        - DirectJointAccount
        - DirectLocalAssetSolution
        - DirectPrivate
        - DirectSIPPTrustee
        - EGO
        - Error
        - IBIO
        - IBIOCorporateClient
        - IBIOFinancialClient
        - IBIOJointAccount
        - IBIOPrivateClient
        - IBPOA
        - IBPOACorporateClient
        - IBPOAFinancialClient
        - IBPOAJointAccount
        - IBPOAPrivateClient
        - ISAManager
        - IntroducedLocalAssetSolution
        - IntroducedSIPPTrustee
        - Invalid
        - MMCorporateClient
        - MMFinancialClient
        - MMJointAccount
        - MMPrivateClient
        - ManagedFund
        - MoneyManager
        - OutboundLoan
        - PrimeBrokerClient
        - ReferringAgent
        - ReferringAgentCorporateClient
        - ReferringAgentJointAccount
        - ReferringAgentPrivateClient
        - RelatedAssociate
        - SIPPProvider
        - SaxoIB
        - SaxoReference
        - SaxoWLC
        - WLCAndWLCClients
      type: string
      x-enum-descriptions:
        DirectPrivate: DirectPrivate
        DirectJointAccount: DirectJointAccount
        SIPPProvider: SIPPProvider
        DirectSIPPTrustee: DirectSIPPTrustee
        DirectLocalAssetSolution: DirectLocalAssetSolution
        DirectCorporate: DirectCorporate
        DirectFinancialClient: DirectFinancialClient
        PrimeBrokerClient: PrimeBrokerClient
        IBPOA: IBPOA
        IBPOACorporateClient: IBPOACorporateClient
        IBPOAPrivateClient: IBPOAPrivateClient
        IBIO: IBIO
        IBIOCorporateClient: IBIOCorporateClient
        IBIOPrivateClient: IBIOPrivateClient
        ReferringAgent: ReferringAgent
        ReferringAgentCorporateClient: ReferringAgentCorporateClient
        ReferringAgentPrivateClient: ReferringAgentPrivateClient
        WLCAndWLCClients: WLCAndWLCClients
        OutboundLoan: OutboundLoan
        EGO: EGO
        Broker: Broker
        SaxoWLC: SaxoWLC
        SaxoIB: SaxoIB
        Error: Error
        ISAManager: ISAManager
        IntroducedLocalAssetSolution: IntroducedLocalAssetSolution
        IntroducedSIPPTrustee: IntroducedSIPPTrustee
        MoneyManager: MoneyManager
        MMCorporateClient: MMCorporateClient
        MMPrivateClient: MMPrivateClient
        IBPOAFinancialClient: IBPOAFinancialClient
        IBIOFinancialClient: IBIOFinancialClient
        SaxoReference: SaxoReference
        IBPOAJointAccount: IBPOAJointAccount
        IBIOJointAccount: IBIOJointAccount
        ReferringAgentJointAccount: ReferringAgentJointAccount
        MMJointAccount: MMJointAccount
        MMFinancialClient: MMFinancialClient
        Invalid: Invalid
        ManagedFund: ManagedFund
        RelatedAssociate: RelatedAssociate
    ContractualSolutionNullable:
      allOf:
        - $ref: '#/components/schemas/ContractualSolution'
    CorporateShareholder:
      title: Corporate shareholder
      type: object
      properties:
        CompanyName:
          title: Company name
          type: string
        CountryCode:
          title: Country code
          type: string
        OwnershipPct:
          title: Ownership percentage
          type: number
        OwnsCompany:
          title: Company owned by this company
          type: string
        PartyId:
          title: Party id
          allOf:
            - type: integer
              format: int32
    CorporateShareholderComparedData:
      type: object
      properties:
        ComparedToData:
          title: Compared with data
          allOf:
            - $ref: '#/components/schemas/CorporateShareholder'
        ComparisonStatus:
          title: Data comparison status
          allOf:
            - $ref: '#/components/schemas/ComparisonStatus'
        Data:
          title: Data
          allOf:
            - $ref: '#/components/schemas/CorporateShareholder'
    Country:
      type: object
      properties:
        IsoCode:
          type: string
        Name:
          type: string
    CreateAccount:
      title: Create Account
      required:
        - ClientKey
        - ChoiceOfAccount
      type: object
      properties:
        ChoiceOfAccount:
          title: Choice Of Account (from Options)
          type: string
        ClientKey:
          title: Client Key of the user for which new account is to be created
          minLength: 1
          type: string
          x-type-name: ClientKey
    CreateAccountDetails:
      required:
        - TemplateId
      type: object
      properties:
        AccountRiskProfileId:
          title: Account risk profile
          allOf:
            - type: integer
              format: int32
        Currency:
          title: Currency
          type: string
        Features:
          title: Account features
          type: array
          items:
            $ref: '#/components/schemas/Models.Feature'
        MaxCreditLine:
          title: Max credit line
          allOf:
            - type: number
        TemplateId:
          title: Template Id
          type: string
        Transferred:
          title: Transferred
          allOf:
            - type: boolean
    CreateCertificateResponse:
      title: Represents the information about a newly created certificate
      type: object
      properties:
        CertificatePFX:
          title: The PFX of the certificate
          type: string
        Expiry:
          title: The expiration time of the certificate
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Password:
          title: The generated password used to protect the PFX
          type: string
        SerialNumber:
          title: The serial number of the certificate
          type: string
        Thumbprint:
          title: The thumbprint of the certificate
          type: string
        ValidFrom:
          title: The start validity time of the certificate
          type: string
          format: date-time
          x-type-name: UtcDateTime
    CreateDueDiligenceSettingsDetails:
      title: Create DueDiligence Settings
      type: object
      properties:
        CreateDueDiligence:
          title: Create or approve DD?
          type: boolean
    CreateSignupCommand:
      title: Public data contract for creating a new onboarding application.
      required:
        - BusinessContext
        - EmailAddress
      type: object
      properties:
        BusinessContext:
          title: Business context of the onboarding.
          allOf:
            - $ref: '#/components/schemas/Model.BusinessContext'
        EmailAddress:
          title: Applicant's e-mail address.
          type: string
        Password:
          title: Password to set for the created account.
          type: string
        SignupData:
          title: Detailed data about the applicant used in the onboarding process.
          allOf:
            - $ref: '#/components/schemas/SignupData'
        SignupId:
          title: "Primary key of Web Signup Entity in CRM.\r\n            If empty/not provided, Crm will generate a new sequential guid for you."
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
    CreationResult:
      enum:
        - DemoAccountAlreadyExists
        - DemoAccountNotAllowed
        - Ok
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: 'Unknown outcome, or not specified yet.'
        Ok: Demo account was successfully created
        DemoAccountAlreadyExists: Demo account already exists
        DemoAccountNotAllowed: Demo account not allowed
    CustomerMetadata:
      title: Container for data about the customer
      type: object
      properties:
        CountryOfResidenceCode:
          title: CoR code
          type: string
        ServiceLanguageCode:
          title: Language code
          type: string
    CustomerRenewalStatus:
      title: Customer renewal status
      enum:
        - DataReceived
        - InProgress
        - New
        - NoActiveRenewalCustomer
        - Pending
        - Processed
        - Waiting
      type: string
      x-enum-descriptions:
        NoActiveRenewalCustomer: No active customer renewal
        New: 'Customer renewal entity exists, awaiting customer input'
        InProgress: Customer renewal is being processed
        DataReceived: Customer renewal data received
        Pending: Customer renewal pending
        Waiting: Customer renewal waiting for data
        Processed: Customer renewal processed
    CustomerType:
      title: Enum for customer type
      enum:
        - Primary
        - Secondary
      type: string
      x-enum-descriptions:
        Primary: Primary customer = 1
        Secondary: Secondary customer = 2
    CustomerTypeNullable:
      allOf:
        - $ref: '#/components/schemas/CustomerType'
    Declaration:
      title: Declaration of application acceptance.
      type: object
      properties:
        ConsentSource:
          title: 'Indicates waht is the source of consent 1=Digital, 2=Manual'
          allOf:
            - $ref: '#/components/schemas/TriState'
        ExemptionFromObligationInterestTaxId:
          title: "Value of the flow property group \"exemptionfromobligationinteresttax\", identifying the applicant's excemption from \r\n            obligation interest tax."
          type: integer
          format: int32
        ExemptionFromStockDividendTaxId:
          title: "Value of the flow property group \"exemptionfromstockdividendtax\", identifying the applicant's \r\n            excemption from stock dividend tax."
          type: integer
          format: int32
        FrenchTaxableResident:
          title: Indicates whether the applicant is a taxable french resident.
          allOf:
            - $ref: '#/components/schemas/TriState'
        MarketingConsent:
          title: Marketing Consent.
          allOf:
            - $ref: '#/components/schemas/TriState'
        NameOfPEPRelatedPerson:
          title: Indicates name of politically exposed person related to applicant.
          type: string
        NotPoliticallyExposedPerson:
          title: Indicates whether the applicant is a politically exposed person.
          allOf:
            - $ref: '#/components/schemas/TriState'
        PEPPosition:
          title: Indicates position of appliacnt if he is politically exposed person.
          type: string
        PositionOfPEPRelatedPerson:
          title: Indicates position of politically exposed person related to applicant.
          type: string
        RelationToPEP:
          title: Indicates applicant's relation to politically exposed person.
          allOf:
            - type: integer
              format: int32
        RiskDisclosure:
          title: Risk disclosure.
          allOf:
            - $ref: '#/components/schemas/TriState'
        SaxoBankGroupConsent:
          title: Saxo Bank Group Consent.
          allOf:
            - $ref: '#/components/schemas/TriState'
        SaxoBankGroupConsentText:
          title: Description of Saxo Bank Group Consent.
          type: string
        TaxDeductionOption:
          title: Indicates whether applicant gets tax decuction.
          allOf:
            - $ref: '#/components/schemas/TriState'
        TermsAndConditions:
          title: Description of terms and conditions.
          type: string
        TradeWithOwnFunds:
          title: Indication of whether the applicant will trade with own funds.
          allOf:
            - $ref: '#/components/schemas/TriState'
        TypeOfPEP:
          title: Indicates whether the applicant is a politically exposed person or related to politically exposed person.
          allOf:
            - type: integer
              format: int32
    DeclarationDetails:
      title: Declaration Details
      type: object
      properties:
        MarketingConsent:
          title: Marketing Consent
          allOf:
            - type: boolean
    DemoResult:
      title: Represents the results returned from the demo account creation process
      type: object
      properties:
        CreationResult:
          title: Result code
          allOf:
            - $ref: '#/components/schemas/CreationResult'
    DependencyInfo:
      type: object
      properties:
        Events:
          type: array
          items:
            $ref: '#/components/schemas/DependencyStatusEvent'
        Name:
          type: string
    DependencyStatusEvent:
      type: object
      properties:
        Message:
          type: string
        Status:
          allOf:
            - $ref: '#/components/schemas/DependencyStatusKind'
        Timestamp:
          type: string
          format: date-time
          x-type-name: UtcDateTime
    DependencyStatusKind:
      enum:
        - Failed
        - Initializing
        - None
        - Ready
      type: string
    DirectorCompany:
      title: Director company details
      type: object
      properties:
        CompanyName:
          title: Company name
          type: string
        CountryCode:
          title: Country code
          type: string
        DirectorOfCompany:
          title: This company is a director of company
          type: string
        PartyId:
          title: Party id
          allOf:
            - type: integer
              format: int32
    DirectorCompanyComparedData:
      type: object
      properties:
        ComparedToData:
          title: Compared with data
          allOf:
            - $ref: '#/components/schemas/DirectorCompany'
        ComparisonStatus:
          title: Data comparison status
          allOf:
            - $ref: '#/components/schemas/ComparisonStatus'
        Data:
          title: Data
          allOf:
            - $ref: '#/components/schemas/DirectorCompany'
    DirectorContact:
      title: Director contact
      type: object
      properties:
        CountryCode:
          title: Country code
          type: string
        DirectorOfCompany:
          title: This contact is director of company
          type: string
        FirstName:
          title: First name
          type: string
        FullName:
          title: Full name
          type: string
        LastName:
          title: Last name
          type: string
        MiddleName:
          title: Middle name
          type: string
        PartyId:
          title: Party id
          allOf:
            - type: integer
              format: int32
    DirectorContactComparedData:
      type: object
      properties:
        ComparedToData:
          title: Compared with data
          allOf:
            - $ref: '#/components/schemas/DirectorContact'
        ComparisonStatus:
          title: Data comparison status
          allOf:
            - $ref: '#/components/schemas/ComparisonStatus'
        Data:
          title: Data
          allOf:
            - $ref: '#/components/schemas/DirectorContact'
    DirectorsData:
      title: Directors detail
      type: object
      properties:
        DirectorCompanies:
          title: Director companies of the company
          type: array
          items:
            $ref: '#/components/schemas/DirectorCompanyComparedData'
        DirectorContacts:
          title: Director contacts of the company
          type: array
          items:
            $ref: '#/components/schemas/DirectorContactComparedData'
    DirectorsDataRequest:
      title: Directors detail
      type: object
      properties:
        DirectorCompanies:
          title: Director companies of the company
          type: array
          items:
            $ref: '#/components/schemas/DirectorCompany'
        DirectorContacts:
          title: Director contacts of the company
          type: array
          items:
            $ref: '#/components/schemas/DirectorContact'
    DiskDrive:
      type: object
      properties:
        DriveSize:
          type: integer
          format: int64
        FreeSpace:
          type: integer
          format: int64
        LogicalDrive:
          type: string
        PercentUsed:
          type: integer
          format: int32
    DisplayAlignment:
      title: Supported display alignments
      enum:
        - BelowQuestionMultiline
        - BelowQuestionSingleLine
        - BesideQuestion
      type: string
      x-enum-descriptions:
        BesideQuestion: Display besides the question.
        BelowQuestionSingleLine: Display as a single line below the question.
        BelowQuestionMultiline: Display as a multiline below the question.
    DisplayStyle:
      title: Supported display styles.
      enum:
        - DropDown
        - RadioButtons
      type: string
      x-enum-descriptions:
        RadioButtons: Display as radio buttons.
        DropDown: Display as drop down.
    Document:
      title: Document details to be saved
      required:
        - DocumentType
        - FileName
        - Data
      type: object
      properties:
        Data:
          title: Document data in Base64 encoded string
          type: string
        DocumentType:
          title: Document type
          allOf:
            - $ref: '#/components/schemas/DocumentType'
        FileName:
          title: Document name with extension
          type: string
    DocumentFeedbackStatus:
      title: Document Feedback Loop status
      enum:
        - Approved
        - Pending
      type: string
      x-enum-descriptions:
        Approved: Document approved
        Pending: Document pending approval
    DocumentFeedbackStatusNullable:
      allOf:
        - $ref: '#/components/schemas/DocumentFeedbackStatus'
    DocumentType:
      title: Document types available
      enum:
        - TaxSavingAccount
      type: string
      x-enum-descriptions:
        TaxSavingAccount: Tax saving account document type
    Domain.Address:
      title: Contract representing an address
      type: object
      properties:
        City:
          title: City
          type: string
        Country:
          title: Country
          allOf:
            - $ref: '#/components/schemas/Country'
        PostCode:
          title: Post code
          type: string
        State:
          title: State
          type: string
        Street:
          title: Street
          type: string
        Type:
          title: Address Type
          allOf:
            - $ref: '#/components/schemas/AddressType'
    Domain.PhoneNumber:
      title: Phone number
      type: object
      properties:
        CountryCode:
          title: Phone number's country code (e.g. +45)
          type: string
        Number:
          title: Number part of the phone number
          type: string
    Domain.SignupDocument:
      title: "Represents an uploaded binary document, that serves as additional documentation and information\r\n            in an onboarding flow."
      type: object
      properties:
        Comments:
          title: Comments for the document file.
          type: string
        DocumentType:
          title: Type of document.
          allOf:
            - $ref: '#/components/schemas/SignupDocumentType'
        ExpirationDate:
          title: Expiration date of document file.
          allOf:
            - type: string
        FileData:
          title: "Base64 encoded contents of the document file.\r\n            Note that a maximum of 10 MB is allowed."
          type: string
        FileName:
          title: Name of the document file.
          type: string
    DueDiligenceOptionsDetails:
      title: DD Options Details
      type: object
      properties:
        AmlApproved:
          allOf:
            - $ref: '#/components/schemas/DueDiligenceStatusMandatoryDetailsNullable'
        ApprovedThirdPartyAuthorization:
          title: Approved Third Part yAuthorization
          allOf:
            - $ref: '#/components/schemas/ThirdPartyAuthorizationDetailsNullable'
        CafStatusApproved:
          title: Caf Status Approved
          allOf:
            - $ref: '#/components/schemas/DueDiligenceStatusDetailsNullable'
        ComplianceApproved:
          title: Compliance Approved
          allOf:
            - $ref: '#/components/schemas/DueDiligenceStatusDetailsNullable'
        ContractRisk:
          title: Contract Risk
          allOf:
            - $ref: '#/components/schemas/DueDiligenceRiskDetailsNullable'
        CreditCardFirstFundingApproved:
          title: Credit Card First Funding Approved
          allOf:
            - $ref: '#/components/schemas/DueDiligenceStatusMandatoryDetailsNullable'
        DueDiligenceApprovalComment:
          title: Due Diligence Approval Comment
          type: string
        DueDiligenceApproved:
          title: Due Diligence Approved
          allOf:
            - $ref: '#/components/schemas/DueDiligenceStatusMandatoryDetailsNullable'
        IsExternalProviderPending:
          title: Set true if  verification external provider pending
          allOf:
            - type: boolean
        PiiApproved:
          title: Pii Approved
          allOf:
            - $ref: '#/components/schemas/DueDiligenceStatusMandatoryDetailsNullable'
        TermsUploadedApproved:
          title: Terms Uploaded Approved
          allOf:
            - $ref: '#/components/schemas/DueDiligenceStatusMandatoryDetailsNullable'
    DueDiligenceResult:
      title: Represents the results returned from the auto approve or create due diligence process
      type: object
    DueDiligenceRiskDetails:
      title: DD Risk status
      enum:
        - High
        - Low
        - Medium
        - NotEvaluated
      type: string
      x-enum-descriptions:
        Low: Low
        Medium: medium
        High: High
        NotEvaluated: Not Evaluated
    DueDiligenceRiskDetailsNullable:
      allOf:
        - $ref: '#/components/schemas/DueDiligenceRiskDetails'
    DueDiligenceStatusDetails:
      title: DD status
      enum:
        - Approved
        - NotRequired
        - Pending
      type: string
      x-enum-descriptions:
        Pending: Pending
        Approved: Approved
        NotRequired: Not required
    DueDiligenceStatusDetailsNullable:
      allOf:
        - $ref: '#/components/schemas/DueDiligenceStatusDetails'
    DueDiligenceStatusMandatoryDetails:
      title: DD result
      enum:
        - Approved
        - Pending
      type: string
      x-enum-descriptions:
        Pending: Pending
        Approved: Approved
    DueDiligenceStatusMandatoryDetailsNullable:
      allOf:
        - $ref: '#/components/schemas/DueDiligenceStatusMandatoryDetails'
    ElectronicVerification:
      title: Electronic Verification Information
      type: object
      properties:
        Done:
          title: When was the electronic verification done?
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        ExternalId:
          title: External ID
          type: string
        Result:
          title: Result of electronic verification
          allOf:
            - $ref: '#/components/schemas/ElectronicVerificationResultNullable'
        Score:
          title: Score of electronic verification
          type: string
    ElectronicVerificationResult:
      title: Electronic verification result
      enum:
        - Failed
        - Passed
        - Referred
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: The electronic verification result is unknown
        Passed: The electronic verification result is passed
        Referred: The electronic verification result is referred
        Failed: The electronic verification result is failed
    ElectronicVerificationResultNullable:
      allOf:
        - $ref: '#/components/schemas/ElectronicVerificationResult'
    ElectronicVerificationStatus:
      title: Electronic verification status
      enum:
        - Failed
        - Passed
        - Referred
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: Unknown
        Passed: Passed
        Referred: Referred
        Failed: Failed
    ElectronicVerificationStatusNullable:
      allOf:
        - $ref: '#/components/schemas/ElectronicVerificationStatus'
    EmailTemplateResult:
      title: Type representing email template
      type: object
      properties:
        Result:
          title: Email templates retrieved successfully
          type: boolean
        Templates:
          title: List of email templates
          type: array
          items:
            $ref: '#/components/schemas/EmailTemplateTypeDefinition'
    EmailTemplateTypeDefinition:
      title: Type representing email template
      type: object
      properties:
        Id:
          title: Id of the template
          type: integer
          format: int32
        Name:
          title: Name of the template
          type: string
    EmploymentDetails:
      title: Details about an applicant's employement.
      type: object
      properties:
        EmploymentInformation:
          title: Info about employer.
          allOf:
            - $ref: '#/components/schemas/EmploymentInfo'
        EmploymentStatus:
          title: Status of employment.
          allOf:
            - $ref: '#/components/schemas/EmploymentStatus'
        SelfEmploymentInformation:
          title: 'Info about applicant''s own business, if self-employed.'
          allOf:
            - $ref: '#/components/schemas/SelfEmployedInfo'
    EmploymentInfo:
      title: Information about applicant's current employment.
      type: object
      properties:
        AdditionalEmploymentRelations:
          title: Applicant's Additional Employment Relations
          allOf:
            - $ref: '#/components/schemas/Signup.AdditionalEmploymentRelations'
        EmployerAddress:
          title: Address of applicant's employer.
          type: string
        EmployerName:
          title: Name of applicant's employer.
          type: string
        JobTitle:
          title: Applicant's job title.
          type: string
        NatureOfBusiness:
          title: Nature of the applicant's employer's business.
          type: string
        TenureStartYear:
          title: Applicant's Tenure StartYear
          allOf:
            - type: integer
              format: int32
    EmploymentInformation:
      title: Clients employment information
      type: object
      properties:
        AdditionalEmploymentRelations:
          title: Additional employment relation details.
          allOf:
            - $ref: '#/components/schemas/AdditionalEmploymentRelations'
        EmployerName:
          title: Employer name
          maxLength: 100
          type: string
        FinancialSectorEmployee:
          title: Does client work in financial sector.
          allOf:
            - type: boolean
        NatureOfBusiness:
          title: The nature of business.
          type: string
        OccupationTypes:
          title: 'Occupation types (from Options, can select multiple)'
          type: array
          items:
            type: string
        Position:
          title: Position
          maxLength: 250
          type: string
    EmploymentStatus:
      title: Enumeration of known employment states.
      enum:
        - Employment
        - NotInEmployment
        - Retired
        - SelfEmployed
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: Unknown employment.
        Employment: Employed by an employer.
        SelfEmployed: Self employed.
        NotInEmployment: Not in an employement.
        Retired: Retired.
    EntityType:
      title: Entity type
      enum:
        - Individual
        - OrganisationExternal
        - OrganisationSaxo
        - Unknown
      type: string
    FatcaDeclaration:
      title: USA Foreign Account Tax Compliance Act
      type: object
      properties:
        UnitedStatesCitizen:
          title: Is the client a citizen of USA
          allOf:
            - type: boolean
        UnitedStatesProducts:
          title: Do you want to trade products in USA
          allOf:
            - type: boolean
        UnitedStatesTaxId:
          title: USA tax ID
          maxLength: 20
          type: string
        UnitedStatesTaxLiable:
          title: Tax liable in USA
          allOf:
            - type: boolean
    FatcaStatus:
      enum:
        - Accountthatisnotafinancialaccount
        - ActiveNFFE
        - CertifieddeemedcompliantFFIwithonlylowvalueaccounts
        - Certifieddeemedcompliantinvestmentadvisorsandinvestmentmanagers
        - Certifieddeemedcompliantlimitedlifedebtinvestmententity
        - Certifieddeemedcompliantnonregisteringlocalbank
        - Certifieddeemedcompliantsponsoredcloselyheldinvestmentvehicle
        - DirectreportingNFFE
        - Entitywhollyownedbyexemptbeneficialowners
        - ExceptedinteraffiliateFFI
        - Exceptednonfinancialentityinliquidationorbankruptcy
        - Exceptednonfinancialstartupcompany
        - ExceptedterritoryNFFE
        - Exemptretirementplans
        - ForeigngovernmentGovernmentofaUSpossessionorforeigncentralbankofissue
        - InternationalOrganization
        - Nonfinancialgroupentity
        - NonparticipatingFFI
        - Nonprofitorganization
        - NonreportingIGAFFI
        - OwnerdocumentedFFI
        - ParticipatingFFI
        - PassiveNFFE
        - PubliclytradedNFFEorNFFEaffiliateofapubliclytradedcorporation
        - RegistereddeemedcompliantFFI_other
        - ReportingModel1FFI
        - ReportingModel2FFI
        - Restricteddistributor
        - SponsoredFFI
        - SponsoredFFIthathasnotobtainedaGIIN
        - SponsoreddirectreportingNFFE
        - Territoryfinancialinstitution
        - _501corganization
      type: string
    FatcaStatusNullable:
      allOf:
        - $ref: '#/components/schemas/FatcaStatus'
    Feature:
      title: Client feature
      required:
        - FeatureTypeId
        - FeatureValue
      type: object
      properties:
        FeatureTypeId:
          title: Feature type id
          type: string
        FeatureValue:
          title: Feature value
          type: string
    FeatureDetails:
      title: Feature details
      type: object
      properties:
        FeatureTypes:
          title: Feature types
          type: array
          items:
            $ref: '#/components/schemas/FeatureOption'
    FeatureOption:
      title: Allowed feature type id\values
      type: object
      properties:
        FeatureValues:
          title: Feature values
          type: array
          items:
            $ref: '#/components/schemas/FeatureOption'
        Id:
          title: Allowed id
          type: string
        Name:
          title: Allowed name
          type: string
    FeedbackLoopInfo:
      title: Public data contract for the feedback info retrieved from CRM
      type: object
      properties:
        CustomerMetadata:
          title: Data about the customer.
          allOf:
            - $ref: '#/components/schemas/CustomerMetadata'
        MissingDocumentData:
          title: Missing document data.
          allOf:
            - $ref: '#/components/schemas/MissingDocumentData'
    FileVersionInfo:
      type: object
      properties:
        Comments:
          type: string
        CompanyName:
          type: string
        FileBuildPart:
          type: integer
          format: int32
        FileDescription:
          type: string
        FileMajorPart:
          type: integer
          format: int32
        FileMinorPart:
          type: integer
          format: int32
        FileName:
          type: string
        FilePrivatePart:
          type: integer
          format: int32
        FileVersion:
          type: string
        InternalName:
          type: string
        IsDebug:
          type: boolean
        IsPatched:
          type: boolean
        IsPreRelease:
          type: boolean
        IsPrivateBuild:
          type: boolean
        IsSpecialBuild:
          type: boolean
        Language:
          type: string
        LegalCopyright:
          type: string
        LegalTrademarks:
          type: string
        OriginalFilename:
          type: string
        PrivateBuild:
          type: string
        ProductBuildPart:
          type: integer
          format: int32
        ProductMajorPart:
          type: integer
          format: int32
        ProductMinorPart:
          type: integer
          format: int32
        ProductName:
          type: string
        ProductPrivatePart:
          type: integer
          format: int32
        ProductVersion:
          type: string
        SpecialBuild:
          type: string
    FinancialDetails:
      title: Information about an applicant's financial details.
      type: object
      properties:
        AnnualSalaryAfterTaxId:
          title: 'Value of the flow property "annualsalaryaftertax", identifying the applicant''s annual salary after tax.'
          type: integer
          format: int32
        EstimatedSavingsAndInvestments:
          title: 'Estimated savings and investments, expressed as a whole number.'
          type: number
        InvestableAssetsId:
          title: 'Value of the flow property "investableassets", identifying the applicant''s investable assets.'
          type: integer
          format: int32
        MonthlyIncomeAfterTax:
          title: 'Monthly income after tax, expressed as a whole number.'
          type: number
        MonthlyOutgoings:
          title: 'Estimated monthly outgoings, expressed as a whole number.'
          type: number
        OtherSourceOfIncome:
          title: Description of other sources of income.
          type: string
        OtherSourceOfWealth:
          title: Description of other sources of wealth.
          type: string
        PrimarySourcesOfWealthIds:
          title: 'Value of the flow property "primarysourceofwealth", identifying the applicant''s primary source of wealth.'
          type: array
          items:
            type: integer
            format: int32
        SecondarySourcesOfIncomeIds:
          title: 'Array of values of the flow property "secondarysourcesofincome", identifying the applicant''s secondary sources of income.'
          type: array
          items:
            type: integer
            format: int32
        TotalAmountOfSecondarySourcesOfIncomeId:
          title: 'Value of the flow property "totalamountofsecondarysourcesofincome", identifying the applicant''s total amount from secondary sources of income.'
          type: integer
          format: int32
    FinlandData:
      title: Client information for Finland onboarding
      type: object
      properties:
        EuroclearJudicialForm:
          title: Judicial form for Euroclear
          type: string
        EuroclearSectorCode:
          title: Sector code for Euroclear
          type: string
    FlowPropertiesQuery:
      title: Query for getting a list flow property data as part of an onboarding application flow.
      required:
        - PropertyNames
        - OwnerId
        - BusinessLine
        - AccountType
        - FlowType
      type: object
      properties:
        AccountType:
          title: Account type.
          allOf:
            - $ref: '#/components/schemas/Signup.AccountType'
        BusinessLine:
          title: Business line.
          allOf:
            - $ref: '#/components/schemas/Model.BusinessLine'
        FlowType:
          title: Flow type.
          allOf:
            - $ref: '#/components/schemas/Model.FlowType'
        OwnerId:
          title: Id the owner of the flow.
          type: integer
          format: int32
        PropertyNames:
          title: Comma separated list of property names to get flow data for.
          type: string
    FlowPropertiesResult:
      title: Public API contract containing multiple s.
      type: object
      properties:
        PropertyName:
          title: Name of the requested property.
          type: string
        Values:
          title: An array of property values for the requested property.
          type: array
          items:
            $ref: '#/components/schemas/FlowPropertyResult'
    FlowPropertyDisplayConstraint:
      title: Display constraints for a flow property.
      enum:
        - Display
        - DisplayNotSelectable
        - DoNotDisplay
        - NotApplicable
      type: string
      x-enum-descriptions:
        Display: Property can be displayed and selected.
        DisplayNotSelectable: 'Property can be displayed, but not selected.'
        DoNotDisplay: Property should not be displayed.
        NotApplicable: No constraints on the property.
    FlowPropertyQuery:
      title: Query for getting flow property data as part of an onboarding application flow.
      required:
        - PropertyName
        - OwnerId
        - BusinessLine
        - AccountType
        - FlowType
      type: object
      properties:
        AccountType:
          title: Account type.
          allOf:
            - $ref: '#/components/schemas/Signup.AccountType'
        BusinessLine:
          title: Business line.
          allOf:
            - $ref: '#/components/schemas/Model.BusinessLine'
        FlowType:
          title: Flow type.
          allOf:
            - $ref: '#/components/schemas/Model.FlowType'
        OwnerId:
          title: Id the owner of the flow.
          type: integer
          format: int32
        PropertyName:
          title: Name of a specific flow property to get data for.
          type: string
    FlowPropertyResult:
      title: Results of a .
      type: object
      properties:
        DisplayConstraint:
          title: Display constraint of the property.
          allOf:
            - $ref: '#/components/schemas/FlowPropertyDisplayConstraint'
        Text:
          title: Property text.
          type: string
        Title:
          title: Property title.
          type: string
        Value:
          title: Property value.
          type: string
    FlowType:
      title: CRM Flow Type defined in MSCRM
      enum:
        - Demo
        - Na
        - OpenAccount2X
        - OpenAccount2XStp
        - OpenAccountNewClient
        - PartnerSignup
        - Registration
      type: string
      x-enum-descriptions:
        Na: Not applicable.
        OpenAccountNewClient: Flow for opening an account for a new client.
        Demo: Flow for opening a demo account.
        Registration: TODO describe this better.
        PartnerSignup: TODO describe this better.
        OpenAccount2X: TODO describe this better.
        OpenAccount2XStp: TODO describe this better.
    Gender:
      title: Enumeration of applicant genders.
      enum:
        - Female
        - Male
        - Na
      type: string
      x-enum-descriptions:
        Na: Not specified.
        Male: Applicant is male.
        Female: Applicant is female.
    GenderType:
      title: Enumeration of applicant genders.
      enum:
        - Female
        - Male
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: Not specified.
        Male: Applicant is male.
        Female: Applicant is female.
    GeneralCompanyData:
      title: General company data
      type: object
      properties:
        ContactInfo:
          title: Contact info
          allOf:
            - $ref: '#/components/schemas/CompanyContactInfo'
        CountryCode:
          title: Country code
          allOf:
            - $ref: '#/components/schemas/StringComparedData'
        NACECodes:
          title: NACE codes
          allOf:
            - $ref: '#/components/schemas/IListComparedData'
        Tin:
          title: Tax id
          allOf:
            - $ref: '#/components/schemas/StringComparedData'
        TinNotAvailable:
          title: Tin not available
          allOf:
            - type: boolean
        Vat:
          title: Vat
          allOf:
            - $ref: '#/components/schemas/StringComparedData'
        VatNotEligible:
          title: Vat not eligible
          allOf:
            - type: boolean
    GeneralCompanyDataRequest:
      title: General company data
      type: object
      properties:
        ContactInfo:
          title: Contact info
          allOf:
            - $ref: '#/components/schemas/CompanyContactInfoRequest'
        CountryCode:
          title: Country code
          type: string
        NACECodes:
          title: NACE codes
          type: array
          items:
            type: string
        Tin:
          title: Tax id
          type: string
        TinNotAvailable:
          title: Tin not available
          allOf:
            - type: boolean
        Vat:
          title: Vat
          type: string
        VatNotEligible:
          title: Vat not eligible
          allOf:
            - type: boolean
    GeneralData:
      type: object
      properties:
        Address:
          title: Contract representing the company's address details
          allOf:
            - $ref: '#/components/schemas/Domain.Address'
        Directors:
          title: List of company directors/owners
          type: array
          items:
            $ref: '#/components/schemas/CompanyContact'
        Email:
          title: Company email
          type: string
        FaxNumber:
          title: Company fax number
          allOf:
            - $ref: '#/components/schemas/Domain.PhoneNumber'
        LegalForm:
          type: string
        NACE:
          title: Company NACE information
          allOf:
            - $ref: '#/components/schemas/Nace'
        NameInLocalAlphabet:
          title: Company name
          type: string
        PhoneNumber:
          title: Company phone number
          allOf:
            - $ref: '#/components/schemas/Domain.PhoneNumber'
        Status:
          title: Company status
          allOf:
            - $ref: '#/components/schemas/Status'
        TIN:
          title: Company TIN
          type: string
        Website:
          title: Company URL
          type: string
    GetCertificateResponse:
      title: Represent information about an issued certificate
      type: object
      properties:
        Expiry:
          title: The expiration time of the certificate
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Revoked:
          title: Optional - if provided the time of which the certificate has been actively revoked (via the API)
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        SerialNumber:
          title: The serial number of the certificate
          type: string
        State:
          title: The  of the certificate
          allOf:
            - $ref: '#/components/schemas/CertificateState'
        Thumbprint:
          title: The thumbprint of the certificate
          type: string
        UserId:
          title: The Saxo Bank internal  id ()
          type: integer
          format: int32
        UserKey:
          title: The Saxo Bank internal  id () (encrypted user id)
          minLength: 1
          type: string
          x-type-name: UserKey
        ValidFrom:
          title: The start validity time of the certificate
          type: string
          format: date-time
          x-type-name: UtcDateTime
    GetUserIdRequest:
      title: Request for getting the user id for a client
      type: object
      properties:
        IsLiveUser:
          type: boolean
        LoginOrIdentityName:
          type: string
        OnlyActiveUser:
          type: boolean
    GetUserIdResponse:
      title: 'Response for getting the user id for a client,'
      type: object
      properties:
        UserId:
          type: integer
          format: int32
    GlobalFinancialInformation:
      title: Global financial information
      type: object
      properties:
        AnnualIncomeAfterTax:
          title: Annual income after tax
          allOf:
            - $ref: '#/components/schemas/AssetDetails'
        IntendToInvest:
          title: Intend to invest
          allOf:
            - $ref: '#/components/schemas/AssetDetails'
        InvestableAsset:
          title: Investable asset
          allOf:
            - $ref: '#/components/schemas/AssetDetails'
    HongKongProfileInfo:
      title: Information about HongKong applicant's profile.
      type: object
      properties:
        EmployeeOfSfcHkmaRegulatedFi:
          title: Employee of SFC/HKMA regulated FI?
          allOf:
            - $ref: '#/components/schemas/TriState'
        MarginCeiling:
          title: Margin ceiling
          allOf:
            - type: integer
              format: int32
        NameOfRelatedEmployee:
          title: Name of related employee
          type: string
        NetWorthInUsd:
          title: Net Worth in USD
          allOf:
            - type: integer
              format: int32
        RelatedToSaxoEmployee:
          title: Related to Saxo Employee
          allOf:
            - $ref: '#/components/schemas/TriState'
        RelationToScmHkEmployee:
          title: Relation to SCM HK employee
          type: string
        RiskCategory:
          title: Risk category
          allOf:
            - type: integer
              format: int32
        SfcHkmaLicensedPerson:
          title: SFC/HKMA licensed person?
          allOf:
            - $ref: '#/components/schemas/TriState'
        TotalEstimatedAnnualIncomeInUsd:
          title: Total estimated annual income in USD
          allOf:
            - type: integer
              format: int32
    HongkongData:
      title: Hongkong data
      type: object
      properties:
        NetWorthInUsd:
          title: Net worth in USD
          type: string
        TotalEstimatedAnnualIncomeInUsd:
          title: Estimated annual income in USD
          type: string
    IBPasswordResetRequest:
      title: Properties for requesting a password reset token.
      required:
        - Email
        - UserId
      type: object
      properties:
        Email:
          title: E-mail address of the user
          type: string
        Language:
          title: Service language code - Default is English
          type: string
        UserId:
          title: User's client ID
          allOf:
            - $ref: '#/components/schemas/UserId'
    ID3CheckSubmitSignupCommand:
      title: Public data contract for submitting an existing onboarding application.
      required:
        - BusinessContext
        - EmailAddress
      type: object
      properties:
        BankingDetails:
          title: Bank details
          allOf:
            - $ref: '#/components/schemas/BankDetails'
        BusinessContext:
          title: Business context of the onboarding.
          allOf:
            - $ref: '#/components/schemas/Model.BusinessContext'
        EmailAddress:
          title: Applicant's e-mail address.
          type: string
        Password:
          title: Password to set for the account.
          type: string
        SignupData:
          title: Detailed data about the applicant used in the onboarding process.
          allOf:
            - $ref: '#/components/schemas/SignupData'
    IListComparedData:
      type: object
      properties:
        ComparedToData:
          title: Compared with data
          type: array
          items:
            type: string
        ComparisonStatus:
          title: Data comparison status
          allOf:
            - $ref: '#/components/schemas/ComparisonStatus'
        Data:
          title: Data
          type: array
          items:
            type: string
    IServiceCustomization:
      type: object
      properties:
        Customizations:
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
    IdentityCheckResultCode:
      title: Result code from the Identity Check.
      enum:
        - DisabledByConfiguration
        - Failed
        - Passed
        - Referred
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: No result back from the Identity check
        Passed: The Identity check passed
        Referred: The Identity check referred
        Failed: The Identity check failed
        DisabledByConfiguration: The Identity check was disabled in ms crm
    IdentityCheckResultCodeResult:
      title: Result of an identity check request.
      type: object
      properties:
        AuthID:
          title: AuthenticationID returned from identity check
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
        Code:
          title: Code indicating the result of a request for identity check.
          allOf:
            - $ref: '#/components/schemas/IdentityCheckResultCode'
        Score:
          title: Score returned from the identity check
          type: integer
          format: int32
    IdentityData:
      title: Identity data
      type: object
      properties:
        BvdId:
          title: Bvd id
          type: string
        CompanyName:
          title: Company name
          allOf:
            - $ref: '#/components/schemas/StringComparedData'
        LeiCode:
          title: Lei code
          allOf:
            - $ref: '#/components/schemas/StringComparedData'
        LeiCodeAnnualRenewalDate:
          title: Lei code annual renewal date
          allOf:
            - $ref: '#/components/schemas/NullableComparedData'
        NationalId:
          title: National id
          allOf:
            - $ref: '#/components/schemas/StringComparedData'
        PartyId:
          title: Party id for this company
          allOf:
            - type: integer
              format: int32
    IdentityDataRequest:
      title: Identity data
      type: object
      properties:
        BvdId:
          title: Bvd id
          type: string
        CompanyName:
          title: Company name
          type: string
        LeiCode:
          title: Lei code
          type: string
        LeiCodeAnnualRenewalDate:
          title: Lei code annual renewal date
          allOf:
            - type: string
              format: date
              x-type-name: Date
        NationalId:
          title: National id
          type: string
    InitiateVerification.InitiateVerificationRequest:
      title: Initiate verification request
      required:
        - VerificationProviderType
      type: object
      properties:
        SecureMeRequest:
          title: Secure Me Request
          allOf:
            - $ref: '#/components/schemas/SecureMeRequest'
        VerificationProviderType:
          title: Type of verification provider requested
          allOf:
            - $ref: '#/components/schemas/VerificationProvider'
    InitiateVerification.InitiateVerificationResponse:
      title: Initaite verification response
      type: object
      properties:
        IdentificationUrl:
          title: The url that will redirect the client to the vendors site for verification
          type: string
    InitiateVerificationRequest:
      title: Initiate verification request
      required:
        - RedirectUrl
      type: object
      properties:
        RedirectUrl:
          title: The url that the client wants to redirect back to after the process is over
          type: string
    InitiateVerificationResponse:
      title: Initaite verification response
      type: object
      properties:
        IdentificationUrl:
          title: The url that will redirect the client to the vendors site for verification
          type: string
    InvestableAssets:
      title: Clients investable assets
      type: object
      properties:
        IntendToInvest:
          title: Intend to invest (from Options)
          type: string
        PrimarySourcesOfWealth:
          title: 'Primary sources of wealth (from Options, can select multiple)'
          type: array
          items:
            type: string
        SourceOfWealthOther:
          title: Other sources of wealth
          type: string
        ValueOfCashAndSecurities:
          title: Value of cash and securities (from Options)
          type: string
    InvestmentPurpose:
      title: Client Investment Purpose
      type: object
      properties:
        PurposeAndScope:
          title: Purpose and scope (from Options)
          type: string
    ItalianData.AnnualIncomeInformation:
      title: Annual income information for Italy
      type: object
      properties:
        AnnualIncomeSource:
          title: 'Annual income source - (from options, can select multiple)'
          type: array
          items:
            type: string
        TotalAnnualIncome:
          title: Total annual income - (from options)
          type: string
    ItalianData.EmploymentInformation:
      title: Employment information for Italy
      type: object
      properties:
        CountryConcernedCode:
          title: Concerned country code
          type: string
        DetailedBusinessActivity:
          title: Business activityin detail
          type: string
        EmploymentName:
          title: Name of the employment
          type: string
        OtherEmployment:
          title: Name of the other employment
          type: string
        PrevalentCorporateObject:
          title: Prevalent corporate object
          type: string
        ProvinceConcerned:
          title: Concerned province
          type: string
        StatusOfEmployment:
          title: Status of employment
          type: string
    ItalianData.InvestableAssets:
      title: Investable assets for Italy
      type: object
      properties:
        IntendToInvest:
          title: Intend to invest - (from options)
          type: string
        NatureAndPurposeOfTheRelationship:
          title: Nature and purpose of relationship - (from options)
          type: string
        SourceOfWealth:
          title: 'Sources of wealth - (from options, can select multiple)'
          type: array
          items:
            type: string
        ValueOfTotalWealth:
          title: Value of total wealth - (from options)
          type: string
    ItalianData.ProfileInformation:
      title: Profile information for Italy
      type: object
      properties:
        AnnualIncomeInformation:
          title: Annual income information for Italy
          allOf:
            - $ref: '#/components/schemas/ItalianData.AnnualIncomeInformation'
        InvestableAssets:
          title: Investable assets for Italy
          allOf:
            - $ref: '#/components/schemas/ItalianData.InvestableAssets'
    Italy.AnnualIncomeInformation:
      title: Italian annual information
      type: object
      properties:
        AnnualIncomeSource:
          title: Annual income sources
          type: array
          items:
            type: string
        TotalAnnualIncome:
          title: Total annual income
          type: string
    Italy.EmploymentInformation:
      title: Italian employment information
      type: object
      properties:
        CountryConcernedCode:
          title: Concerned country code
          type: string
        DetailedBusinessActivity:
          title: Detailed business activity
          type: string
        EmploymentName:
          title: Employment name
          type: string
        OtherEmployment:
          title: Other employment detail
          type: string
        PrevalentCorporateObject:
          title: Prevalent corporate object
          type: string
        ProvinceConcerned:
          title: Concerned province
          type: string
        StatusOfEmployment:
          title: Status of employment
          type: string
    Italy.InvestableAssets:
      title: Italian investable assets
      type: object
      properties:
        NatureAndPurposeOfTheRelationship:
          title: Nature and purpose of the relationship
          type: string
        SourceOfWealth:
          title: Sources of wealth
          type: array
          items:
            type: string
        ValueOfTotalWealth:
          title: Value of total wealth
          type: string
    Italy.Models.AnnualIncomeInformation:
      title: Annual income information for Italy
      type: object
      properties:
        AnnualIncomeSource:
          title: 'Annual income source - (from options, can select multiple)'
          type: array
          items:
            type: string
        TotalAnnualIncome:
          title: Total annual income - (from options)
          type: string
    Italy.Models.EmploymentInformation:
      title: Employment information for Italy renewal
      type: object
      properties:
        CountryConcernedCode:
          title: Concerned country code
          type: string
        DetailedBusinessActivity:
          title: Business activityin detail
          type: string
        OtherEmployment:
          title: Name of the other employment
          type: string
        ProvinceConcerned:
          title: Concerned province
          type: string
        StatusOfEmployment:
          title: Status of employment
          type: string
    Italy.Models.InvestableAssets:
      title: Investable assets for Italy
      type: object
      properties:
        NatureAndPurposeOfTheRelationship:
          title: Nature and purpose of relationship - (from options)
          type: string
        SourceOfWealth:
          title: 'Sources of wealth - (from options, can select multiple)'
          type: array
          items:
            type: string
        ValueOfTotalWealth:
          title: Value of total wealth - (from options)
          type: string
    Italy.Models.ProfileInformation:
      title: Profile information for Italy renewal
      type: object
      properties:
        AnnualIncomeInformation:
          title: Annual income information for Italy
          allOf:
            - $ref: '#/components/schemas/Italy.Models.AnnualIncomeInformation'
        InvestableAssets:
          title: Investable assets for Italy
          allOf:
            - $ref: '#/components/schemas/Italy.Models.InvestableAssets'
    Italy.ProfileInformation:
      title: Italian profile information
      type: object
      properties:
        AnnualIncomeInformation:
          title: Annual income information
          allOf:
            - $ref: '#/components/schemas/Italy.AnnualIncomeInformation'
        InvestableAssets:
          title: Investable assets
          allOf:
            - $ref: '#/components/schemas/Italy.InvestableAssets'
    ItalyData:
      title: Client information for Italy onboarding
      type: object
      properties:
        EmploymentInformation:
          title: Employment information for Italy onboarding
          allOf:
            - $ref: '#/components/schemas/ItalianData.EmploymentInformation'
        MailContactPreference:
          title: Do you want to be contacted through mail?
          allOf:
            - type: boolean
        ProfileInformation:
          title: Profile information for Italy onboarding
          allOf:
            - $ref: '#/components/schemas/ItalianData.ProfileInformation'
    JapanData:
      title: Japan data
      type: object
      properties:
        AnnualIncomeJpy:
          title: Annual Income (in 10 000 JPY)
          type: string
        NetWorthJpy:
          title: Net Worth (in 10 000 JPY)
          type: string
        TickerCodes:
          title: Ticker codes
          type: array
          items:
            type: string
    JapanProfileInfo:
      title: Information about HongKong applicant's profile.
      type: object
      properties:
        AnnualIncomeIn10000Jpy:
          title: AnnualIncome In 10000Jpy
          allOf:
            - type: integer
              format: int32
        CampaignCode:
          title: Campaign Code
          type: string
        MT4:
          title: Japan MT4
          allOf:
            - type: boolean
        MarginTradingExperienceInYears:
          title: Margin Trading Experience In Years
          allOf:
            - type: integer
              format: int32
        NetWorthIn10000Jpy:
          title: Net Worth In 10000Jpy
          allOf:
            - type: integer
              format: int32
        TaxPrefecturePer1StJan:
          title: Japan TaxPrefecturePer1StJan
          type: string
        TaxPrefectureValidYear:
          title: Japan TaxPrefectureValidYear
          allOf:
            - type: string
        TickerCodes:
          title: Ticker Codes
          type: string
    JointAccount.AccountInformation:
      title: Account information
      type: object
      properties:
        AdditionalChoiceOfAccounts:
          title: Additional choice of accounts
          type: array
          items:
            type: string
        CurrencyCode:
          title: Currency code (from Options)
          type: string
    JointAccount.ContactInformation:
      title: Contact information
      required:
        - EmailAddress
      type: object
      properties:
        EmailAddress:
          title: Email address
          type: string
        PrimaryPhoneNumber:
          title: Primary phone number
          allOf:
            - $ref: '#/components/schemas/JointAccount.PhoneNumber'
        SecondaryPhoneNumber:
          title: Secondary phone number
          allOf:
            - $ref: '#/components/schemas/JointAccount.PhoneNumber'
    JointAccount.ElectronicVerification:
      title: Electronic verification data
      type: object
      properties:
        Done:
          title: Utc format date time when e-verification done
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        ExternalId:
          title: External Id
          type: string
        FundingVerified:
          title: Is funding verified
          allOf:
            - type: boolean
        Result:
          title: Electronic verification result
          allOf:
            - $ref: '#/components/schemas/ElectronicVerificationStatusNullable'
        Score:
          title: Electronic verification score
          type: string
    JointAccount.EmploymentInformation:
      title: Employment information
      type: object
      properties:
        EmployerName:
          title: Name of employer
          type: string
    JointAccount.FatcaDeclaration:
      title: USA Foreign Account Tax Compliance Act
      type: object
      properties:
        UnitedStatesCitizen:
          title: Are you a US citizen
          allOf:
            - type: boolean
        UnitedStatesProducts:
          title: US products
          allOf:
            - type: boolean
        UnitedStatesTaxId:
          title: US tax id
          maxLength: 20
          type: string
        UnitedStatesTaxLiable:
          title: Are you tax liable in the US
          allOf:
            - type: boolean
    JointAccount.FinlandData:
      title: Client information for Finland onboarding
      type: object
      properties:
        EuroclearJudicialForm:
          title: Judicial form for Euroclear
          type: string
        EuroclearSectorCode:
          title: Sector code for Euroclear
          type: string
    JointAccount.InvestableAssets:
      title: Clients investable assets
      type: object
      properties:
        IntendToInvest:
          title: Intend to invest (from Options)
          type: string
    JointAccount.InvestmentPurpose:
      title: Client Investment Purpose
      type: object
      properties:
        PurposeAndScope:
          title: Purpose and Scope (from Options)
          type: string
    JointAccount.ItalyData:
      title: Italy related data
      type: object
      properties:
        EmploymentInformation:
          title: Employment information
          allOf:
            - $ref: '#/components/schemas/Italy.EmploymentInformation'
        MailContactPreference:
          title: Is mail contact preferred
          allOf:
            - type: boolean
        ProfileInformation:
          title: Profile information
          allOf:
            - $ref: '#/components/schemas/Italy.ProfileInformation'
    JointAccount.OnboardingInformation:
      title: Onboarding information
      type: object
      properties:
        ElectronicVerification:
          title: Electronic verification data
          allOf:
            - $ref: '#/components/schemas/JointAccount.ElectronicVerification'
    JointAccount.PersonalInformation:
      title: Personal information
      required:
        - ContactInformation
        - FirstName
        - LastName
        - ServiceLanguageCode
      type: object
      properties:
        AdditionalTaxableCountries:
          title: Additional taxable countries
          type: array
          items:
            $ref: '#/components/schemas/AdditionalTaxableCountry'
        CityOfBirth:
          title: City of birth
          type: string
        ContactInformation:
          title: Contact information
          allOf:
            - $ref: '#/components/schemas/JointAccount.ContactInformation'
        CorrespondenceAddress:
          title: Correspondence address
          allOf:
            - $ref: '#/components/schemas/Address'
        CountryOfBirth:
          title: Country of birth (from Options)
          type: string
        DateOfBirth:
          title: Date of birth
          allOf:
            - type: string
              format: date
              x-type-name: Date
        EmploymentInformation:
          title: Employment information
          allOf:
            - $ref: '#/components/schemas/JointAccount.EmploymentInformation'
        FirstName:
          title: First name
          type: string
        Gender:
          title: Gender (from Options)
          type: string
        LastName:
          title: Last name
          type: string
        MarketingConsent:
          title: Do we have your marketing consent?
          allOf:
            - type: boolean
        NationalityCode:
          title: Nationality code (from Options)
          type: string
        PersonalId:
          title: PersonalId
          type: string
        PersonalIdExpirationDate:
          title: PersonalId expiration date
          allOf:
            - type: string
              format: date
              x-type-name: Date
        PersonalIdPlaceOfRelease:
          title: PersonalId place of release
          type: string
        PersonalIdReleaseDate:
          title: PersonalId release date
          allOf:
            - type: string
              format: date
              x-type-name: Date
        PersonalIdReleasedBy:
          title: PersonalId released by
          type: string
        PersonalIdType:
          title: Personal ID type (from Options)
          type: string
        PersonalTradingProfile:
          title: Account's trading profile
          allOf:
            - $ref: '#/components/schemas/JointAccount.PersonalTradingProfile'
        PoliticallyExposedPerson:
          title: Politically exposed person
          allOf:
            - type: boolean
        ResidentialAddress:
          title: Residential address
          allOf:
            - $ref: '#/components/schemas/Address'
        ServiceLanguageCode:
          title: Service language ISO code (from Options)
          type: string
        TaxId:
          title: Tax id
          type: string
        TinMissingReason:
          title: Tin missing reason (from Options)
          type: string
        TinNotAvailable:
          title: Is Tin not available
          allOf:
            - type: boolean
        TinOtherMissingReason:
          title: Other Tin Missing reason
          type: string
    JointAccount.PersonalTradingProfile:
      title: Account's trading profile
      type: object
      properties:
        KnowledgeOfFinancialInstruments:
          title: Knowledge of financial instruments
          type: string
        ProductTradingExperience:
          title: Product trading experience
          type: array
          items:
            type: string
        TradesPerMonth:
          title: Trades per month
          type: string
    JointAccount.PhoneNumber:
      title: Phone number format
      type: object
      properties:
        CountryCode:
          title: Country code (from Options)
          type: string
        Number:
          title: Number
          type: string
    JointAccount.ProfileInformation:
      title: Clients profile information
      type: object
      properties:
        InvestableAssets:
          title: Clients investable assets
          allOf:
            - $ref: '#/components/schemas/JointAccount.InvestableAssets'
        InvestmentPurpose:
          title: Clients Investment Purpose
          allOf:
            - $ref: '#/components/schemas/JointAccount.InvestmentPurpose'
    JointAccount.RegulatoryInformation:
      title: Regulatory information
      type: object
      properties:
        FatcaDeclaration:
          title: Fatca declaration
          allOf:
            - $ref: '#/components/schemas/JointAccount.FatcaDeclaration'
    JointAccount.SingaporeData:
      title: Client Information for Singapore Onboarding
      type: object
      properties:
        AnnualIncomeSgd:
          title: Annual Income in SGD
          type: string
        BrokersDeclinedBy:
          title: Brokers Declined by
          type: string
        ClassificationRequired:
          title: Is Classification Required?
          allOf:
            - type: boolean
        DiplomaOrHigherQualification:
          title: Diploma or Higher Qualification
          type: string
        ELearningAbsSasCfds:
          title: 'E-learning (ABS-SAS, CFDs)'
          type: string
        ELearningAbsSasFx:
          title: 'E-learning (ABS-SAS, Fx)'
          type: string
        ELearningPassed:
          title: Has the client passed E-learning
          type: string
        ELearningSgx:
          title: E-learning (SGX)
          allOf:
            - type: boolean
        ELearningSgxScore:
          title: E-learning (SGX) Score
          type: string
        EducationalQualificationSatisfied:
          title: Is the qualification of education satisfied?
          allOf:
            - type: boolean
        FinanceWorkExperience:
          title: Finance work experience
          type: string
        InvestorProfile:
          title: Type of Investor Profile
          type: string
        ListedSips:
          title: Does the client want to trade in Listed SIPs?
          allOf:
            - type: boolean
        NetWorthSgd:
          title: Net worth in SGD
          type: string
        PermanentResident:
          title: Is the client a permanent resident of Singapore?
          allOf:
            - type: boolean
        ProfessionalFinanceQualification:
          title: Professional Finance Qualification
          type: string
        SgxStocks:
          title: Sgx Stocks
          type: string
        UnlistedSipsCfds:
          title: Does the client want to trade Unlisted SIPs (CFD)?
          allOf:
            - type: boolean
        UnlistedSipsFx:
          title: Does the client want to trade Unlisted SIPs (Fx)?
          allOf:
            - type: boolean
    JointAccount.SwitzerlandData:
      title: Client Information for Switzerland Onboarding
      type: object
      properties:
        AnnualIncomeChf:
          title: Annual income in CHF (from options)
          type: string
        NetWorthChf:
          title: Net worth in CHF (from options)
          type: string
    JointAccountStatus:
      title: Joint account application status
      enum:
        - Completed
      type: string
      x-enum-descriptions:
        Completed: User has provided all the relevant information to process onboarding
    KnowledgeOfFinancialInstruments:
      title: Knowledge Of Financial Instruments
      enum:
        - ExtensiveKnowledgeOfFinancialInstruments
        - UnderstandBasicsOfFinancialInstruments
        - VeryLimitedKnowledgeOfFinancialInstruments
      type: string
      x-enum-descriptions:
        VeryLimitedKnowledgeOfFinancialInstruments: VeryLimitedKnowledgeOfFinancialInstruments
        UnderstandBasicsOfFinancialInstruments: UnderstandBasicsOfFinancialInstruments
        ExtensiveKnowledgeOfFinancialInstruments: Allowed
    KnowledgeOfFinancialInstrumentsNullable:
      allOf:
        - $ref: '#/components/schemas/KnowledgeOfFinancialInstruments'
    LeadOrigin:
      title: Enumeration of lead origins.
      enum:
        - Affiliate
        - ApprovedBroker
        - Chat
        - ContractReceivedAccountReopening
        - DirectMarketing
        - Events
        - InboundCallEmail
        - Internet
        - LeadDataPurchase
        - Meeting
        - Other
        - PrintedAdvertisement
        - RecommendedByOtherCustomer
        - ReferralAgent
        - Seminar
        - Sponsorship
        - TV
        - TradingFloor
        - TradingGames
        - Unknown
        - WalkIn
        - Webinars
      type: string
      x-enum-descriptions:
        Unknown: Unknown origin.
        Internet: Originated from the internet.
        PrintedAdvertisement: Originated from print advertisement.
        RecommendedByOtherCustomer: Originated from another customer's recommendation.
        Seminar: Originated from the applicant attending a seminar.
        Sponsorship: Originated from a sponsorship.
        TradingFloor: Originated from TradingFloor.com.
        TradingGames: Originated from the applicant participating in a trading game.
        TV: Originated from a TV commercial.
        Other: Other origination.
        Events: Events origination.
        LeadDataPurchase: LeadDataPurchase origination.
        ApprovedBroker: ApprovedBroker origination.
        ContractReceivedAccountReopening: ContractReceivedAccountReopening origination.
        InboundCallEmail: InboundCallEmail origination.
        Chat: Chat origination.
        WalkIn: WalkIn origination.
        DirectMarketing: DirectMarketing origination.
        ReferralAgent: ReferralAgent origination.
        Affiliate: Affiliate origination.
        Meeting: Meeting origination.
        Webinars: Webinars origination.
    MailSubscriberSource:
      title: Source of a mail subscriber.
      enum:
        - Ace
        - Marketing
      type: string
      x-enum-descriptions:
        Marketing: Marketing
        Ace: ACE
    MarkCompleteApplicationRequest:
      title: Mark CompleteApplication Request
      required:
        - Status
      type: object
      properties:
        Status:
          title: Client Key
          allOf:
            - $ref: '#/components/schemas/JointAccountStatus'
    MatchType:
      title: Type to indicate this level the mathings should take place.
      enum:
        - Institutional
        - Na
        - Private
      type: string
      x-enum-descriptions:
        Na: Not available
        Private: Private
        Institutional: Instututional
    MatchingContactResponse:
      title: Result of the matching for contact in CRM
      type: object
      properties:
        ContactId:
          title: The Id of the contact that matches the email address provided
          type: integer
          format: int32
        IsIdentifiedByPrimaryEmail:
          title: Is it the primary email address?
          type: boolean
        IsRegisteredOnMarketingList:
          title: Is contact on marketing list?
          type: boolean
        MarketingConsent:
          title: Has the contact already done marketingconsent?
          allOf:
            - type: boolean
        ReferralId:
          title: Referral for the client
          type: string
    MessageInfoType:
      title: Message info type
      enum:
        - ClientId
        - Email
      type: string
      x-enum-descriptions:
        ClientId: ClientId type
        Email: Email type
    MissingDocumentData:
      title: Container for missing data
      type: object
      properties:
        CafStatus:
          title: Status on Caf
          allOf:
            - $ref: '#/components/schemas/CafStatus'
        OtherDocumentStatus:
          title: Status on Other Document
          allOf:
            - $ref: '#/components/schemas/OtherDocumentStatus'
        PoiStatus:
          title: Status on Proof of Identity
          allOf:
            - $ref: '#/components/schemas/PoiStatus'
        PorStatus:
          title: Status on Proof of residency
          allOf:
            - $ref: '#/components/schemas/PorStatus'
        SecondPoiStatus:
          title: Status on Second Proof of Identity
          allOf:
            - $ref: '#/components/schemas/SecondPoiStatus'
        SecondPorStatus:
          title: Status on Second Proof of residency
          allOf:
            - $ref: '#/components/schemas/SecondPorStatus'
        SubAccountStatus:
          title: Status on Sub Account
          allOf:
            - $ref: '#/components/schemas/SubAccountStatus'
        ThirdPartyAuthStatus:
          title: Status on Third party Auth
          allOf:
            - $ref: '#/components/schemas/ThirdPartyAuthStatus'
        ThirdPorStatus:
          title: Status on Third Proof of residency
          allOf:
            - $ref: '#/components/schemas/ThirdPorStatus'
    Model.BusinessContext:
      title: Contains business context information for a signup flow.
      required:
        - BusinessLine
        - AccountType
        - FlowType
        - OwnerId
      type: object
      properties:
        AccountType:
          title: Account type.
          allOf:
            - $ref: '#/components/schemas/Signup.AccountType'
        BusinessLine:
          title: Business line.
          allOf:
            - $ref: '#/components/schemas/Model.BusinessLine'
        FlowType:
          title: Flow type.
          allOf:
            - $ref: '#/components/schemas/Model.FlowType'
        OwnerId:
          title: Id the owner of the flow.
          type: integer
          format: int32
    Model.BusinessLine:
      title: CRM BusinessLine Type defined in MSCRM
      enum:
        - Na
        - SaxoTrading
      type: string
      x-enum-descriptions:
        Na: Not Applicable.
        SaxoTrading: Saxo Bank Trading.
    Model.FlowType:
      title: CRM Flow Type defined in MSCRM
      enum:
        - Demo
        - Na
        - OpenAccount2X
        - OpenAccount2XStp
        - OpenAccountNewClient
        - Registration
      type: string
      x-enum-descriptions:
        Na: Not applicable.
        OpenAccountNewClient: Flow for opening an account for a new client.
        Demo: Flow for opening a demo account.
        Registration: A simple registration of a lead.
        OpenAccount2X: Registration as part of the 2X program.
        OpenAccount2XStp: Registration as part of the 2X STP program.
    ModelStateDictionary:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    Models.AccountDetails:
      title: Account Details
      type: object
      properties:
        AccountId:
          title: Account Id
          type: string
        AccountKey:
          title: Account Key
          type: string
        Currency:
          title: Currency
          type: string
        ErrorMessage:
          title: Error Messages
          type: array
          items:
            type: string
        Status:
          title: Status
          allOf:
            - $ref: '#/components/schemas/AccountCreatedStatus'
        TemplateId:
          title: Template Id
          type: string
    Models.AccountType:
      title: Account types
      enum:
        - Minor
      type: string
      x-enum-descriptions:
        Minor: Minor account
    Models.AdditionalNationality:
      title: Additional nationality
      type: object
      properties:
        CountryCode:
          title: Additional country (from Options)
          type: string
        NationalId:
          title: Additional national id
          type: string
        NationalIdType:
          title: Additional national id type
          allOf:
            - type: integer
              format: int32
    Models.AmountDescriptionType:
      title: Enum for AmountDescriptionType
      enum:
        - AboveThisAmount
        - Exact
        - Rounded
      type: string
      x-enum-descriptions:
        Exact: Exact value provided.
        Rounded: Nearby value provided.
        AboveThisAmount: Value is above this amount.
    Models.AnnualIncomeInformation:
      title: Annual income information
      type: object
      properties:
        AnnualSalaryAfterTax:
          title: Annual Salary After Tax (from Options)
          type: string
        SecondaryIncomeOther:
          title: Other source of secondary income
          maxLength: 50
          type: string
        SecondarySourcesOfIncome:
          title: 'Secondary sources of income (from Options, can select multiple)'
          type: array
          items:
            type: string
        SecondarySourcesOfIncomeTotal:
          title: Total income from Secondary sources (from Options)
          type: string
    Models.AssetDetails:
      title: Asset Details class
      required:
        - CurrencyCode
        - Amount
        - AmountDescription
      type: object
      properties:
        Amount:
          title: Amount value
          type: integer
          format: int32
        AmountDescription:
          title: Amount Description
          allOf:
            - $ref: '#/components/schemas/Models.AmountDescriptionType'
        CurrencyCode:
          title: Currency code (from Options)
          type: string
    Models.CompanyContact:
      title: Company contact
      type: object
      properties:
        CountryCode:
          title: Country code
          type: string
        FirstName:
          title: First name
          type: string
        FullName:
          title: Full name
          type: string
        LastName:
          title: Last name
          type: string
        MiddleName:
          title: Middle name
          type: string
        PartyId:
          title: Party id
          allOf:
            - type: integer
              format: int32
    Models.CompanyData:
      title: Company data
      type: object
      properties:
        AuthorizedSignatories:
          title: Company authorized signatories
          type: array
          items:
            $ref: '#/components/schemas/CompanyContactComparedData'
        DirectorsData:
          title: Company directors
          allOf:
            - $ref: '#/components/schemas/DirectorsData'
        GeneralData:
          title: General data
          allOf:
            - $ref: '#/components/schemas/GeneralCompanyData'
        IdentityData:
          title: Identity data
          allOf:
            - $ref: '#/components/schemas/IdentityData'
        ShareholdersData:
          title: Company shareholders
          allOf:
            - $ref: '#/components/schemas/ShareholdersData'
    Models.ContactInformation:
      title: Contact information
      type: object
      properties:
        EmailAddress:
          title: Email Address
          maxLength: 100
          type: string
        MobileNumber:
          title: Mobile Number
          allOf:
            - $ref: '#/components/schemas/Models.PhoneNumber'
        PrimaryPhoneNumber:
          title: Primary PhoneNumber
          allOf:
            - $ref: '#/components/schemas/Models.PhoneNumber'
        SecondaryPhoneNumber:
          title: Secondary PhoneNumber
          allOf:
            - $ref: '#/components/schemas/Models.PhoneNumber'
    Models.ContractType:
      title: Contract type of logged in user
      enum:
        - Broker
        - Corporate
        - EGO
        - Error
        - FinancialClient
        - IBIO
        - IBPOA
        - JointAccount
        - LocalAssetSolution
        - ManagedFund
        - MoneyManager
        - OutboundLoan
        - PrimeBrokerClient
        - Private
        - ReferringAgent
        - SIPPTrustee
        - SaxoIB
        - SaxoReference
        - SaxoWLC
        - WhiteLabelClient
      type: string
      x-enum-descriptions:
        Broker: Broker
        Corporate: Corporate
        EGO: EGO
        Error: Error
        FinancialClient: FinancialClient
        IBIO: IBIO
        IBPOA: IBPOA
        JointAccount: JointAccount
        LocalAssetSolution: LocalAssetSolution
        ManagedFund: ManagedFund
        MoneyManager: MoneyManager
        OutboundLoan: OutboundLoan
        PrimeBrokerClient: PrimeBrokerClient
        Private: Private
        ReferringAgent: ReferringAgent
        SaxoIB: SaxoIB
        SaxoReference: SaxoReference
        SaxoWLC: SaxoWLC
        SIPPTrustee: SIPPTrustee
        WhiteLabelClient: WhiteLabelClient
    Models.CreateAccount:
      title: Create Account
      required:
        - ClientKey
        - AccountDetails
      type: object
      properties:
        AccountDetails:
          title: Account Details
          type: array
          items:
            $ref: '#/components/schemas/CreateAccountDetails'
        ClientKey:
          title: Client Key
          minLength: 1
          type: string
          x-type-name: ClientKey
    Models.EmploymentInformation:
      title: Employment information
      type: object
      properties:
        EmployerName:
          title: Employer Name
          maxLength: 250
          type: string
        NatureOfBusiness:
          title: Nature Of Business
          type: string
        NatureOfBusinessOther:
          title: Nature of Business other
          type: string
        OccupationTypes:
          title: 'Occupation types (from Options, can select multiple)'
          type: array
          items:
            type: string
        Position:
          title: Position/Designation/Level
          maxLength: 250
          type: string
    Models.FatcaDeclaration:
      title: Fatca declaration
      type: object
      properties:
        UnitedStatesCitizen:
          title: United States Citizen
          allOf:
            - type: boolean
        UnitedStatesTaxId:
          title: United States TaxId
          maxLength: 20
          type: string
        UnitedStatesTaxLiable:
          title: United States Tax Liable
          allOf:
            - type: boolean
    Models.Feature:
      title: Account feature
      type: object
      properties:
        FeatureTypeId:
          title: Feature type id
          type: string
        FeatureValue:
          title: Feature value
          type: string
    Models.FinlandData:
      title: Finland data
      type: object
      properties:
        EuroClearSectorCode:
          title: Sector code for Euroclear
          type: string
    Models.GlobalFinancialInformation:
      title: Global financial information
      type: object
      properties:
        AnnualIncomeAfterTax:
          title: Annual Income After Tax
          allOf:
            - $ref: '#/components/schemas/Models.AssetDetails'
        IntendToInvest:
          title: Intend To Invest
          allOf:
            - $ref: '#/components/schemas/Models.AssetDetails'
        InvestableAsset:
          title: Investable Asset
          allOf:
            - $ref: '#/components/schemas/Models.AssetDetails'
    Models.InvestableAssets:
      title: Investable assets
      type: object
      properties:
        IntendToInvest:
          title: Intend To Invest (from Options)
          type: string
        IntendToInvestLastUpdated:
          title: Intend to Invest last updated time(UTC)
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
          x-network-visibility: internal
        InvestableAssetsLastUpdated:
          title: Investable assets last updated time(UTC)
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
          x-network-visibility: internal
        PrimarySourcesOfWealth:
          title: 'Primary sources of wealth (from Options, can select multiple)'
          type: array
          items:
            type: string
        PrimarySourcesOfWealthLastUpdated:
          title: Primary sources of wealth last updated time(UTC)
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
          x-network-visibility: internal
        SourceOfWealthOther:
          title: Other source of wealth
          maxLength: 50
          type: string
        ValueOfCashAndSecurities:
          title: Value Of Cash And Securities (from Options)
          type: string
    Models.ItalyData:
      title: Italy related data
      type: object
      properties:
        EmploymentInformation:
          title: Employment information for Italy renewal
          allOf:
            - $ref: '#/components/schemas/Italy.Models.EmploymentInformation'
        MailContactPreference:
          title: Do you want to be contacted through mail?
          allOf:
            - type: boolean
        ProfileInformation:
          title: Profile information for Italy renewal
          allOf:
            - $ref: '#/components/schemas/Italy.Models.ProfileInformation'
    Models.OnboardingAddress:
      title: Onboarding Address
      type: object
      properties:
        BuildingName:
          title: Name of Building
          maxLength: 128
          type: string
        BuildingNumber:
          title: Building Number
          maxLength: 128
          type: string
        City:
          title: City
          maxLength: 128
          type: string
        CoName:
          title: Care of Name
          maxLength: 100
          type: string
        CountryOfResidenceCode:
          title: Country of residence ISO code (from Options)
          type: string
        Floor:
          title: Floor
          maxLength: 128
          type: string
        LocalArea:
          title: Local area
          maxLength: 128
          type: string
        PostBoxOffice:
          title: Post box office
          maxLength: 128
          type: string
        PostalCode:
          title: PostalCode
          maxLength: 128
          type: string
        SideDoor:
          title: Side door
          maxLength: 128
          type: string
        State:
          title: State
          maxLength: 128
          type: string
        StreetName:
          title: Name of Street
          maxLength: 128
          type: string
        Unit:
          title: Unit
          maxLength: 128
          type: string
    Models.PersonalInformation:
      title: Personal Information
      type: object
      properties:
        AdditionalNationalities:
          title: Additional nationalities
          type: array
          items:
            $ref: '#/components/schemas/Models.AdditionalNationality'
        AdditionalTaxableCountries:
          title: Additional taxable countries
          type: array
          items:
            $ref: '#/components/schemas/Models.TaxableCountry'
        AliasFirstName:
          title: Alias first name
          maxLength: 100
          type: string
        AliasLastName:
          title: Alias last name
          maxLength: 100
          type: string
        CityOfBirth:
          title: City Of Birth
          type: string
        ContactInformation:
          title: Contact Details
          allOf:
            - $ref: '#/components/schemas/Models.ContactInformation'
        CountryOfBirth:
          title: Country Of Birth (from Options)
          type: string
        DateOfBirth:
          title: DateOfBirth
          allOf:
            - type: string
              format: date
              x-type-name: Date
        EmploymentInformation:
          title: Employment Details
          allOf:
            - $ref: '#/components/schemas/Models.EmploymentInformation'
        FirstName:
          title: First Name
          maxLength: 128
          type: string
        LastName:
          title: Last Name
          maxLength: 128
          type: string
        NationalityCode:
          title: Nationality Code (from Options)
          type: string
        OriginalScriptFirstName:
          title: Original script first name
          maxLength: 500
          type: string
        OriginalScriptLastName:
          title: Original script last name
          maxLength: 500
          type: string
        OtherAddress:
          title: Other address
          allOf:
            - $ref: '#/components/schemas/Models.OnboardingAddress'
        PersonalId:
          title: Personal Id
          maxLength: 128
          type: string
        PersonalIdExpirationDate:
          title: Personal id expiration date (GET only)
          allOf:
            - type: string
              format: date
              x-type-name: Date
        PersonalIdType:
          title: Personal ID Type (from Options)
          type: string
        PoliticallyExposedInformation:
          title: Politically exposed person information
          allOf:
            - $ref: '#/components/schemas/Models.PoliticallyExposedInformation'
        PoliticallyExposedPerson:
          title: Politically Exposed Person
          allOf:
            - type: boolean
        ResidentialAddress:
          title: Residential Address
          allOf:
            - $ref: '#/components/schemas/Models.OnboardingAddress'
        TaxId:
          title: Tax Id
          maxLength: 100
          type: string
        TinMissingReason:
          title: Reason for not having TIN (from Options)
          type: string
        TinNotAvailable:
          title: Tin Not Available
          allOf:
            - type: boolean
        TinOtherMissingReason:
          title: Any other reason for not having TIN
          maxLength: 100
          type: string
    Models.PhoneNumber:
      title: Phone Number
      type: object
      properties:
        CountryCode:
          title: Country Code (from Options)
          type: string
        Number:
          title: Number
          type: string
    Models.PoliticallyExposedInformation:
      title: Politically exposed person information
      type: object
      properties:
        PepPosition:
          title: PEP Position
          type: string
        PepRelatedPersonName:
          title: Name of PEP Related Person
          type: string
        PepRelatedPersonPosition:
          title: Position of PEP Related Person
          type: string
        PepType:
          title: Type of PEP (from Options)
          type: string
        RelationToPep:
          title: Relation to PEP (from Options)
          type: string
    Models.ProfileInformation:
      title: Profile information
      type: object
      properties:
        AnnualIncomeInformation:
          title: Annual Income Details
          allOf:
            - $ref: '#/components/schemas/Models.AnnualIncomeInformation'
        InvestableAssets:
          title: Investable Assets Details
          allOf:
            - $ref: '#/components/schemas/Models.InvestableAssets'
        TradingProfile:
          title: Clients Trading profile
          allOf:
            - $ref: '#/components/schemas/Models.TradingProfile'
    Models.RegulatoryInformation:
      title: Regulatory Information
      type: object
      properties:
        FatcaDeclaration:
          title: Fatca Declaration
          allOf:
            - $ref: '#/components/schemas/Models.FatcaDeclaration'
    Models.SignUpOption:
      title: Possible sign up options
      type: object
      properties:
        PropertyName:
          title: Property name
          type: string
        ValuePairs:
          title: Key and value pairs of the property values
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
    Models.SignupFlowDocumentType:
      title: Document types accepted for signup
      enum:
        - AccountViewToIb
        - EsaContract
        - FeePaymentAuthorization
        - GeneralBusinessTerms
        - PensionTransferRequest
        - PowerOfAttorney
        - PowerOfAttorneyToIb
        - ProofOfIdentity
        - ProofOfResidency
        - SourceOfFundsDocument
        - TaxSavingAccount
        - TermsAndConditions
        - TermsAndConditionsAldersopsparingPrivate
        - TermsAndConditionsKapitalPensionPrivate
        - TermsAndConditionsRatePensionPrivate
      type: string
      x-enum-descriptions:
        ProofOfIdentity: Document to verify the identity of client
        ProofOfResidency: Document to verify the residency of client
        PowerOfAttorney: Legal document mentioning the details of the acts that can be done on behalf of the principal (client)
        TermsAndConditions: Document explaining terms and conditions
        GeneralBusinessTerms: Document explaining general business terms
        SourceOfFundsDocument: Document detailing all the sources which client have for generating funds
        PowerOfAttorneyToIb: Legal document mentioning the details of the acts that an IB can undertake on behalf of the principal (client)
        AccountViewToIb: 'Document detailing Introducing-Broker/Client details, authorization from client and Broker commission details'
        FeePaymentAuthorization: Document detailing Fee Payment Authorization
        EsaContract: Document detailing ESA Contract
        TermsAndConditionsRatePensionPrivate: Document detailing Terms and Conditions Rate Pension Private
        TermsAndConditionsAldersopsparingPrivate: Document detailing Terms and Conditions Aldersopsparing Private
        TermsAndConditionsKapitalPensionPrivate: Document detailing Terms and Conditions Kapital Pension Private
        PensionTransferRequest: Document detailing Pension Transfer Request
        TaxSavingAccount: Document detailing Tax Saving Account
    Models.SingaporeData:
      title: Singapore data
      type: object
      properties:
        AnnualIncomeSgd:
          title: Annual Income in Sgd
          type: string
        NetWorthSgd:
          title: Net Worth in Sgd
          type: string
    Models.SwitzerlandData:
      title: Switzerland data
      type: object
      properties:
        AnnualIncomeChf:
          title: Annual Income in Chf
          type: string
        NetWorthChf:
          title: Net Worth in Chf
          type: string
    Models.TaxableCountry:
      title: Taxable country
      type: object
      properties:
        CountryCode:
          title: Country code (from Options)
          type: string
        TaxId:
          title: 'Tax Id, if TIN is available'
          type: string
        TinMissingReason:
          title: Reason for not having TIN (from Options)
          type: string
        TinNotAvailable:
          title: Is TIN not available?
          allOf:
            - type: boolean
        TinOtherMissingReason:
          title: Any other reason for not having TIN
          maxLength: 100
          type: string
    Models.TradingProfile:
      title: Client trading profile
      type: object
      properties:
        SoleBoOfAssets:
          title: Sole beneficial owner of the deposited assets
          allOf:
            - type: boolean
    Money:
      title: Money Range
      type: object
      properties:
        Currency:
          title: Currency - (From Options)
          type: string
        Value:
          title: Value
          allOf:
            - type: number
    MoneyRange:
      title: Information about applicant's MoneyRange
      type: object
      properties:
        Currency:
          title: Currency
          allOf:
            - type: integer
              format: int32
        Max:
          title: Maximum money
          allOf:
            - type: number
        Min:
          title: Minimum money
          allOf:
            - type: number
    Nace:
      title: NACE
      type: object
      properties:
        Code:
          title: Nace code
          type: string
        Label:
          title: Nace label
          type: string
    NordNetFirstFunding:
      title: Nord Net First Funding Enum
      enum:
        - Allowed
        - NotAllowed
      type: string
      x-enum-descriptions:
        Allowed: Allowed
        NotAllowed: Not Allowed
    NordNetFirstFundingNullable:
      allOf:
        - $ref: '#/components/schemas/NordNetFirstFunding'
    NullableComparedData:
      type: object
      properties:
        ComparedToData:
          title: Compared with data
          allOf:
            - type: string
              format: date
              x-type-name: Date
        ComparisonStatus:
          title: Data comparison status
          allOf:
            - $ref: '#/components/schemas/ComparisonStatus'
        Data:
          title: Data
          allOf:
            - type: string
              format: date
              x-type-name: Date
    OnboardingAddress:
      title: Client address
      required:
        - City
        - CountryOfResidenceCode
        - PostalCode
        - StreetName
      type: object
      properties:
        BuildingName:
          title: Building name
          maxLength: 128
          type: string
        BuildingNumber:
          title: Building number
          maxLength: 128
          type: string
        City:
          title: City
          maxLength: 128
          type: string
        CountryOfResidenceCode:
          title: Country of residence ISO code  (from Options)
          type: string
        PostalCode:
          title: Postal code
          maxLength: 128
          type: string
        State:
          title: State
          maxLength: 50
          type: string
        StreetName:
          title: Street name
          maxLength: 128
          type: string
    OnboardingDocumentType:
      enum:
        - Switzerland501
        - Switzerland901
      type: string
      x-enum-descriptions:
        Switzerland501: Account request document
        Switzerland901: Account opening confirmation document
    OnboardingInformation:
      title: Onboarding Information
      type: object
      properties:
        ElectronicVerification:
          title: Electronic Verification Information
          allOf:
            - $ref: '#/components/schemas/ElectronicVerification'
    OnboardingStatePendingReason:
      type: object
      properties:
        PendingField:
          title: Field where pending action is required
          type: string
        Reasons:
          title: Pending reasons - action required by user
          type: array
          items:
            type: string
    OnboardingStateType:
      title: Onboarding State of user
      enum:
        - Approved
        - ClientOnboarded
        - InProgress
        - Pending
        - Rejected
        - Waiting
      type: string
      x-enum-descriptions:
        ClientOnboarded: Onboarding request is complete
        Waiting: Onboarding request is waiting to be picked up by Operations
        InProgress: Onboarding request is being worked on
        Pending: Onboarding request is waiting for information by user
        Rejected: Onboarding request is rejected
        Approved: Onboarding request is approved
    OnboardingStateTypeNullable:
      allOf:
        - $ref: '#/components/schemas/OnboardingStateType'
    OnboardingSubStateType:
      title: Onboarding Sub State of user
      enum:
        - ManualHandling
      type: string
      x-enum-descriptions:
        ManualHandling: The onboarding request is being handled manually
    OnboardingSubStateTypeNullable:
      allOf:
        - $ref: '#/components/schemas/OnboardingSubStateType'
    OptionType:
      title: Option type from UCR
      enum:
        - AccountFeatures
        - AccountGroups
        - ClientFeatures
        - ClientGroups
        - FeeProfiles
      type: string
      x-enum-descriptions:
        ClientGroups: Client group identifiers
        FeeProfiles: Fee profile options
        AccountGroups: Account group identifiers
        ClientFeatures: Client features
        AccountFeatures: Account features
    OptionTypeNullable:
      allOf:
        - $ref: '#/components/schemas/OptionType'
    OtherDocumentStatus:
      title: Status of Other Document
      type: object
      properties:
        FeedbackStatus:
          title: Feedback on the document status
          allOf:
            - $ref: '#/components/schemas/DocumentFeedbackStatusNullable'
        NoDocumentRequired:
          title: No Document Required
          type: boolean
        OtherClientContactNeeded:
          title: Other Client Contact Needed?
          type: boolean
        SecondaryIncome:
          title: Secondary Income?
          type: boolean
        SourceOfFunds:
          title: Source Of Funds?
          type: boolean
        TextToDcfNoDocumentRequired:
          title: Text To Dcf No Document Required
          type: string
        TextToDcfUploadPage:
          title: Text To Dcf Upload Page
          type: string
        W8BenPrivate:
          title: W8Ben Private?
          type: boolean
    PartialDueDiligenceDetails:
      title: Partial DD Details
      type: object
      properties:
        ContactDueDiligenceOptions:
          title: Contact DD options
          allOf:
            - $ref: '#/components/schemas/ContactDueDiligenceOptionsDetails'
        DueDiligenceOptions:
          title: DD options
          allOf:
            - $ref: '#/components/schemas/DueDiligenceOptionsDetails'
        SetPartialDueDiligenceInfo:
          title: Set Partial DD Info
          type: boolean
    PartyDetails:
      title: Party details
      required:
        - PartyType
        - PartyId
      type: object
      properties:
        PartyId:
          title: Party id
          type: integer
          format: int32
        PartyType:
          title: Party type
          allOf:
            - $ref: '#/components/schemas/PartyType'
    PartyDocument:
      title: Document details to be saved
      required:
        - DocumentType
        - FileName
        - Data
      type: object
      properties:
        Data:
          title: Document data in Base64 encoded string
          type: string
        DocumentType:
          title: Party document type
          allOf:
            - $ref: '#/components/schemas/PartyDocumentType'
        FileName:
          title: Document name with extension
          type: string
    PartyDocumentType:
      title: CDSS based document types
      enum:
        - ArticlesMemorandum
        - BeneficialOwnerInformation
        - CertificateOfGoodStanding
        - CertificateOfIncorporation
        - CertificateOfIncumbency
        - CorporateTranscript
        - DirectorSignatoryInformation
        - OtherDdDocs
        - ProofOfIdentity
        - ProofOfResidency
        - SourceOfFundsDocument
        - TaxDocumentation
        - TermsAndConditions
        - USTaxForm
      type: string
      x-enum-descriptions:
        ArticlesMemorandum: Articles and memorandum
        BeneficialOwnerInformation: Beneficial owner information
        CertificateOfGoodStanding: Certificate of good standing
        CertificateOfIncorporation: Certificate of incorporation
        CertificateOfIncumbency: Certificate of incumbency
        CorporateTranscript: Corporate transcript
        DirectorSignatoryInformation: Director/signatory information
        ProofOfIdentity: Proof of identity
        OtherDdDocs: Other DD docs(party)
        ProofOfResidency: Proof of residence
        SourceOfFundsDocument: Source of funds document
        TermsAndConditions: Terms and conditions
        USTaxForm: US tax form
        TaxDocumentation: 'Documents related to tax relief like W8BEN, W8BENE etc'
    PartyInformationResult:
      title: Public data contract for a party
      type: object
      properties:
        ClosingSalesResponsibleEmail:
          title: Email of the closing responsible
          type: string
        ContractualSolution:
          title: Contractual Solution
          allOf:
            - $ref: '#/components/schemas/ContractualSolutionNullable'
        CountryOfResidenceCode:
          title: The party's country of residence code
          type: string
        EmailAddress:
          title: The party's e-mail address.
          type: string
        FirstName:
          title: The party's first name
          type: string
        HasFunded:
          title: It will be true if any of the contract for this party has funded.
          type: boolean
        LastName:
          title: The party's last name
          type: string
        PartyId:
          title: Unique ID for the party
          type: integer
          format: int32
        PhoneCountryCode:
          title: The party's phone country code
          type: string
    PartyInformationResultV2:
      title: Public data contract for a party (V2)
      type: object
      properties:
        ClosingSalesResponsibleEmail:
          title: Email of the closing responsible
          type: string
        ContractingEntityID:
          title: Owner Id
          type: integer
          format: int32
        ContractualSolution:
          title: Contractual Solution
          allOf:
            - $ref: '#/components/schemas/ContractualSolutionNullable'
        CountryOfResidenceCode:
          title: The party's country of residence code
          type: string
        EmailAddress:
          title: The party's e-mail address.
          type: string
        FirstName:
          title: The party's first name
          type: string
        HasFunded:
          title: It will be true if any of the contract for this party has funded.
          type: boolean
        LastName:
          title: The party's last name
          type: string
        PartyId:
          title: Unique ID for the party
          type: integer
          format: int32
        PhoneCountryCode:
          title: The party's phone country code
          type: string
    PartyType:
      title: Party type
      enum:
        - Contact
        - Organization
      type: string
      x-enum-descriptions:
        Contact: Contact
        Organization: Organization
    PasswordResetAccount:
      title: "Details about a user which matches criteria for resetting password \r\n            (usually multiple accounts under the same e-mail address)."
      type: object
      properties:
        ClientId:
          title: Id of the matching user's client account.
          type: string
        Platform:
          title: Platform of the matching user's platform.
          type: string
    PasswordResetDetails:
      title: Result of a status request on a password reset token.
      type: object
      properties:
        Code:
          title: Code indicating the outcome of a status request on a password reset token.
          allOf:
            - $ref: '#/components/schemas/PasswordResetResultCode'
        MatchingAccounts:
          title: A list of users accounts that matches the user's e-mail and/or Saxo Bank ID.
          type: array
          items:
            $ref: '#/components/schemas/PasswordResetAccount'
    PasswordResetRequest:
      title: Properties for requesting a password reset token.
      required:
        - Email
        - ResetLink
      type: object
      properties:
        ClientId:
          title: "User's client ID (Saxo Bank ID).\r\n            This is required for the live production environments, but optional for the demo environment."
          type: string
        Email:
          title: 'E-mail address of the user, whom are requesting the password reset.'
          type: string
        ResetLink:
          title: "Url to the password reset page. The url will be embedded in a link, in the password\r\n            reset verification e-mail, which is sent to the user."
          type: string
    PasswordResetRequestResult:
      title: Result of a password reset token request.
      type: object
      properties:
        Code:
          title: Code indicating the result of a password reset request.
          allOf:
            - $ref: '#/components/schemas/PasswordResetResultCode'
        Token:
          title: The generated token to use for resetting the user's password.
          type: string
    PasswordResetResultCode:
      title: Result codes of a password reset operation.
      enum:
        - CrmUnavailable
        - EmailAddressInvalid
        - IpAddressHasChanged
        - IpAddressInvalid
        - LowPasswordComplexity
        - NoMatch
        - Ok
        - PasswordReuse
        - PwdChgRecentlyChangedError
        - ServiceNotAvailableForIpAddress
        - TokenExpired
        - TokenInvalid
      type: string
      x-enum-descriptions:
        Ok: Everything is ok
        NoMatch: No match found
        ServiceNotAvailableForIpAddress: Service is not available for this IP address. It has probably been blocked.
        IpAddressInvalid: 'Format of IP address is invalid. Valid format is: [0-255].[0-255].[0-255].[0-255]'
        EmailAddressInvalid: E-mail address is invalid
        TokenInvalid: Token is invalid
        LowPasswordComplexity: Password is not complex enough
        PasswordReuse: Password has previously been used
        PwdChgRecentlyChangedError: Password has recently been changed
        IpAddressHasChanged: IP address has changed
        TokenExpired: Token has expired (more than two hours).
        CrmUnavailable: CRM is down :-(.
    PendingReason:
      title: Pending reason
      type: object
      properties:
        Message:
          title: Message
          type: string
        PendingField:
          title: Pending field
          type: string
        Reasons:
          title: Reasons
          type: array
          items:
            type: string
    PensionData:
      title: Client information about pension
      type: object
      properties:
        AdditionalPensionData:
          title: Additional pension data
          type: string
        EmployerReference:
          title: Employer refrerence ID
          type: string
        PensionProductTypes:
          title: Pension product types (can select multiple)
          type: array
          items:
            $ref: '#/components/schemas/PensionProductType'
    PensionProductType:
      title: Pension product type
      enum:
        - EmployerPaidAlderssum
        - EmployerPaidKapitalPension
        - EmployerPaidRatePension
        - PrivatelyPaidAlderssum
        - PrivatelyPaidKapitalPension
        - PrivatelyPaidRatePension
      type: string
      x-enum-descriptions:
        EmployerPaidRatePension: EmployerPaidRatePension
        EmployerPaidAlderssum: EmployerPaidAlderssum
        EmployerPaidKapitalPension: EmployerPaidKapitalPension
        PrivatelyPaidRatePension: PrivatelyPaidRatePension
        PrivatelyPaidAlderssum: PrivatelyPaidAlderssum
        PrivatelyPaidKapitalPension: PrivatelyPaidKapitalPension
    PersonalIdType:
      title: 'Enumeration of identification types, used to identify an applicant.'
      enum:
        - DriversLicenseNumber
        - NationalIdentityCard
        - Other
        - PassportNumber
        - TaxIdNumber
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: Unknown or not specified.
        PassportNumber: Passport number.
        DriversLicenseNumber: Unknown or not Drivers license number.
        NationalIdentityCard: National identity card.
        TaxIdNumber: Taxc identity number.
        Other: Other identification.
    PersonalInformation:
      title: Clients personal information
      required:
        - ContactInformation
        - FirstName
        - LastName
        - ResidentialAddress
        - ServiceLanguageCode
      type: object
      properties:
        AdditionalTaxCountryCode:
          title: Additional Tax Country Code (from Options) - Obsolete
          type: string
          deprecated: true
        AdditionalTaxableCountries:
          title: Additional taxable countries
          type: array
          items:
            $ref: '#/components/schemas/TaxableCountry'
        CityOfBirth:
          title: City of birth
          maxLength: 128
          type: string
        ConsentSource:
          title: Source of content
          allOf:
            - type: integer
              format: int32
        ContactInformation:
          title: Contact information
          allOf:
            - $ref: '#/components/schemas/ContactInformation'
        CorrespondenceAddress:
          title: Correspondence address
          allOf:
            - $ref: '#/components/schemas/OnboardingAddress'
        CountryOfBirth:
          title: Country of birth (from Options)
          type: string
        DateOfBirth:
          title: Date of birth
          allOf:
            - type: string
              format: date
              x-type-name: Date
        Debt:
          title: Range of debt
          allOf:
            - $ref: '#/components/schemas/Money'
        DeclaredBankrupt:
          title: Represents if client has been declared bankrupt in the past
          allOf:
            - type: boolean
        EmploymentInformation:
          title: Employment information
          allOf:
            - $ref: '#/components/schemas/EmploymentInformation'
        FirstName:
          title: First name
          maxLength: 128
          type: string
        Gender:
          title: Gender (from Options)
          type: string
        LastName:
          title: Last name
          maxLength: 128
          type: string
        LiquidNetWorth:
          title: Range of liquid net worth
          allOf:
            - $ref: '#/components/schemas/Money'
        MarketingConsent:
          title: Do we have your marketing consent?
          allOf:
            - type: boolean
        NationalId:
          title: National ID (from Options)
          type: string
        NationalityCode:
          title: Nationality Code (from Options)
          type: string
        NonDisclosureClient:
          title: Decides whether clients address can be shared with third party systems
          allOf:
            - type: boolean
        OriginalScriptFirstName:
          title: First name in original script
          type: string
        OriginalScriptLastName:
          title: Last name in original script
          type: string
        PersonalId:
          title: Personal ID
          type: string
        PersonalIdExpirationDate:
          title: Expiration date of personal ID
          allOf:
            - type: string
              format: date
              x-type-name: Date
        PersonalIdPlaceOfRelease:
          title: Place of release of personal ID
          type: string
        PersonalIdReleaseDate:
          title: Release date of personal ID
          allOf:
            - type: string
              format: date
              x-type-name: Date
        PersonalIdReleasedBy:
          title: Personal ID released by
          type: string
        PersonalIdType:
          title: Personal ID Type (from Options)
          type: string
        PersonalTradingProfile:
          title: Client's trading profile
          allOf:
            - $ref: '#/components/schemas/PersonalTradingProfile'
        PoliticallyExposedInformation:
          title: Politically exposed person information
          allOf:
            - $ref: '#/components/schemas/PoliticallyExposedInformation'
        PoliticallyExposedPerson:
          title: Are you a politically exposed person?
          allOf:
            - type: boolean
        ResidentialAddress:
          title: Residential address
          allOf:
            - $ref: '#/components/schemas/OnboardingAddress'
        SalaryBeforeTax:
          title: Range of salary before tax
          allOf:
            - $ref: '#/components/schemas/Money'
        ServiceLanguageCode:
          title: Service language ISO code (from Options)
          type: string
        TaxId:
          title: Tax ID
          type: string
        TinMissingReason:
          title: Reason for not having TIN (from Options)
          type: string
        TinNotAvailable:
          title: Is TIN not available?
          allOf:
            - type: boolean
        TinOtherMissingReason:
          title: Any other reason for not having TIN
          type: string
    PersonalTradingProfile:
      title: Client's trading profile
      type: object
      properties:
        KnowledgeOfFinancialInstruments:
          title: Knowledge of financial instruments
          type: string
        ProductTradingExperience:
          title: Product trading experience
          type: array
          items:
            type: string
        TradesPerMonth:
          title: Trades per month
          type: string
    PhoneNumber:
      title: Phone number consisting of optional country code and number.
      type: object
      properties:
        CountryCode:
          title: The country ISO code (alpha-2) where the phone number is registered. If not specified the country of residence of the associated contact will be used (from Options).
          type: string
        Number:
          title: The actual phone number without formatting. Only numeric characters are allowed.
          type: string
    PhoneNumberComparedData:
      type: object
      properties:
        ComparedToData:
          title: Compared with data
          allOf:
            - $ref: '#/components/schemas/Models.PhoneNumber'
        ComparisonStatus:
          title: Data comparison status
          allOf:
            - $ref: '#/components/schemas/ComparisonStatus'
        Data:
          title: Data
          allOf:
            - $ref: '#/components/schemas/Models.PhoneNumber'
    PhoneType:
      title: Enumeration of applicant phone types.
      enum:
        - CellPhone
        - LandLine
        - LandLineOrCellPhone
        - Pager
        - PersonalNumber
        - PremiumRate
        - SharedCost
        - TollFree
        - Uan
        - Unknown
        - Voip
      type: string
      x-enum-descriptions:
        Unknown: Unknown / not specified.
        LandLine: Land line.
        LandLineOrCellPhone: Land line or mobile.
        CellPhone: Mobile.
        Pager: Pager.
        PersonalNumber: Personal number.
        PremiumRate: Premium rate number.
        SharedCost: Shared cost number.
        TollFree: Toll free number.
        Uan: Uan number.
        Voip: Voice over IP number.
    PoiStatus:
      title: Status on Proof of Identity
      type: object
      properties:
        Expired:
          title: Expired?
          type: boolean
        FeedbackStatus:
          title: Feedback on the document status
          allOf:
            - $ref: '#/components/schemas/DocumentFeedbackStatusNullable'
        IncompleteScanCopyPhotoNotClear:
          title: Incomplete Scan Copy Photo Not Clear?
          type: boolean
        Missing:
          title: Missing?
          type: boolean
        MissingBackSide:
          title: Missing Back Side?
          type: boolean
        MissingDob:
          title: Missing date of birth?
          type: boolean
        MissingExpiryDate:
          title: Missing Expiry Date?
          type: boolean
        MissingPob:
          title: Missing place of birth?
          type: boolean
        MissingSignature:
          title: Missing Signature?
          type: boolean
        MissingTranslation:
          title: Missing Translation?
          type: boolean
        NotAcceptable:
          title: Not Acceptable?
          type: boolean
        NotCertified:
          title: Not Certified?
          type: boolean
        NotReadable:
          title: Not Readable?
          type: boolean
        OtherClientContactNeeded:
          title: Other Client Contact Needed?
          type: boolean
        SecondaryPoi:
          title: Secondary Poi?
          type: boolean
        TextToDcfUploadPage:
          title: Text To Dcf Upload Page
          type: string
    PoliticallyExposedInformation:
      title: Politically exposed person information
      type: object
      properties:
        PepPosition:
          title: PEP Position
          type: string
        PepRelatedPersonName:
          title: Name of PEP Related Person
          type: string
        PepRelatedPersonPosition:
          title: Position of PEP Related Person
          type: string
        PepType:
          title: Type of PEP (from Options)
          type: string
        RelationToPep:
          title: Relation to PEP (from Options)
          type: string
    PorStatus:
      title: Status on Proof of Residence
      type: object
      properties:
        AddressMismatch:
          title: Address Mismatch?
          type: boolean
        FeedbackStatus:
          title: Feedback on the document status
          allOf:
            - $ref: '#/components/schemas/DocumentFeedbackStatusNullable'
        IssuedInDifferentCountry:
          title: Issued In Different Country?
          type: boolean
        Missing:
          title: Missing?
          type: boolean
        MissingAddress:
          title: Missing Address?
          type: boolean
        MissingExpiryDate:
          title: Missing Expiry Date?
          type: boolean
        MissingIssueDate:
          title: Missing Issue Date?
          type: boolean
        MissingName:
          title: Missing Name?
          type: boolean
        MissingTranslation:
          title: Missing Translation?
          type: boolean
        NameMismatch:
          title: Name Mismatch?
          type: boolean
        NotAccepted:
          title: Not Accepted?
          type: boolean
        NotCertified:
          title: Not Certified?
          type: boolean
        NotReadable:
          title: Not Readable?
          type: boolean
        OtherClientContactNeeded:
          title: Other Client Contact Needed?
          type: boolean
        Outdated:
          title: Outdated?
          type: boolean
        TextToDcfUploadPage:
          title: Text To Dcf Upload Page
          type: string
    ProcessInfo:
      type: object
      properties:
        HostName:
          type: string
        Id:
          type: integer
          format: int32
        PeakWorkingSet:
          type: integer
          format: int64
        ProcessTimePercent:
          type: number
        ProcessTimePercentPerformanceCounter:
          type: number
        StartTime:
          type: string
        Threads:
          type: integer
          format: int32
        WorkingSet:
          type: integer
          format: int64
    ProductTradingExperience:
      title: Product Trading Experience
      enum:
        - Bonds
        - CFD
        - ETPs
        - EquitiesorETFs
        - FX
        - Funds
        - FuturesAndOptions
        - NotTradedPreviously
        - SRDs
        - TurbosAndWarrants
      type: string
      x-enum-descriptions:
        EquitiesorETFs: EquitiesorETFs
        Bonds: Bonds
        ETPs: ETPs
        Funds: Funds
        FuturesAndOptions: FuturesAndOptions
        FX: FX
        CFD: CFD
        TurbosAndWarrants: TurbosAndWarrants
        NotTradedPreviously: NotTradedPreviously
        SRDs: SRDs
    ProfileInformation:
      title: Clients profile information
      type: object
      properties:
        AnnualIncomeInformation:
          title: Clients annual income information
          allOf:
            - $ref: '#/components/schemas/AnnualIncomeInformation'
        InvestableAssets:
          title: Clients investable assets
          allOf:
            - $ref: '#/components/schemas/InvestableAssets'
        InvestmentPurpose:
          title: Clients investment purpose
          allOf:
            - $ref: '#/components/schemas/InvestmentPurpose'
        TradingProfile:
          title: Clients trading profile
          allOf:
            - $ref: '#/components/schemas/TradingProfile'
    Querying.SignUpOptionListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/Models.SignUpOption'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    Question:
      title: Public contract for a quetion.
      type: object
      properties:
        Alignment:
          title: Question alignment.
          allOf:
            - $ref: '#/components/schemas/DisplayAlignment'
        DisplayAs:
          title: Question display style.
          allOf:
            - $ref: '#/components/schemas/DisplayStyle'
        Name:
          title: Name of the question.
          type: string
        QuestionId:
          title: Unique ID of the question
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
        QuestionOptions:
          title: Question options.
          type: array
          items:
            $ref: '#/components/schemas/QuestionOption'
        QuestionText:
          title: Text that asks the question.
          type: string
    QuestionOption:
      title: Public contract for an option for a .
      type: object
      properties:
        IsSelected:
          title: Indicates whether the question is selected or not.
          type: boolean
        OptionId:
          title: Unique ID of the question option.
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
        Text:
          title: Option text.
          type: string
    QuestionSection:
      title: Defines a section of related questions within a .
      type: object
      properties:
        Description:
          title: Description of the question section.
          type: string
        Questions:
          title: List of questions belonging to the question section.
          type: array
          items:
            $ref: '#/components/schemas/Question'
        SectionId:
          title: Unique ID of the question section.
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
        Title:
          title: Title of the question section.
          type: string
    QuestionSet:
      title: Public contract for an onboarding questionaire.
      type: object
      properties:
        Culture:
          title: Questionaire culture.
          type: string
        Description:
          title: Questionaire description.
          type: string
        FooterText:
          title: Questionaire footer text.
          type: string
        Id:
          title: Unique ID of the questionaire.
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
        Sections:
          title: Sections of questions within the questionaire.
          type: array
          items:
            $ref: '#/components/schemas/QuestionSection'
        Title:
          title: Questionaire title.
          type: string
    ReferralTokenQuery:
      title: A query object for requesting a referral token.
      required:
        - ClientId
        - Password
      type: object
      properties:
        ClientId:
          title: The user's Saxo Bank ID.
          type: string
        Password:
          title: The user's password.
          type: string
    ReferralTokenQueryResult:
      title: Result of a .
      type: object
      properties:
        ReferralToken:
          title: The issued referral token.
          type: string
    RegistrationMetadata:
      title: Captures information about the circumstances of the registration.
      type: object
      properties:
        CampaignCode:
          title: The campaign code for the registration.
          type: string
        ClientIpAddress:
          title: The IP address of the origin of the registration.
          type: string
        HostIpAddress:
          title: The IP address of the host that was registered against.
          type: string
        LeadOrigin:
          title: The lead origin for the registration.
          type: integer
          format: int32
        ReferralPage:
          title: The page from where the registrant was referred to the actual registration page.
          type: string
        RegistrationPage:
          title: The page where the actual registration was performed.
          type: string
        RegistrationSource:
          title: A textual description of the source of the registration.
          type: string
    RegistrationResponse:
      title: A registration in the CRM system.
      type: object
      properties:
        ClientId:
          title: The ClientId of the registration.
          type: string
        ClientKey:
          title: The  of the registration.
          minLength: 1
          type: string
          x-type-name: ClientKey
    RegistrationResponseListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/RegistrationResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    Registrations.PhoneNumber:
      title: Phone number used in a registration.
      type: object
      properties:
        CountryCode:
          title: The ISO-3166 2-letter country code where the phone number is registered. If not specified the country of residence of the associated contact will be used.
          type: string
        Number:
          title: The actual phone number without formatting. Only numeric characters are allowed.
          maxLength: 50
          type: string
    RegulatoryInformation:
      title: Regulatory information
      type: object
      properties:
        FatcaDeclaration:
          title: USA foreign account tax compliance act
          allOf:
            - $ref: '#/components/schemas/FatcaDeclaration'
    RenewalData:
      title: Renewal Data
      type: object
      properties:
        AustraliaData:
          title: Australia related data
          allOf:
            - $ref: '#/components/schemas/AustraliaData'
        FinlandData:
          title: Finland related data
          allOf:
            - $ref: '#/components/schemas/Models.FinlandData'
        GlobalFinancialInformation:
          title: Global finaincial information
          allOf:
            - $ref: '#/components/schemas/Models.GlobalFinancialInformation'
        HongkongData:
          title: Hongkong related data
          allOf:
            - $ref: '#/components/schemas/HongkongData'
        InstanceId:
          title: Instance id for this renewal
          type: string
          x-network-visibility: internal
        ItalyData:
          title: Italy related data
          allOf:
            - $ref: '#/components/schemas/Models.ItalyData'
        JapanData:
          title: Japan related data
          allOf:
            - $ref: '#/components/schemas/JapanData'
        PersonalInformation:
          title: Personal Data
          allOf:
            - $ref: '#/components/schemas/Models.PersonalInformation'
        ProfileInformation:
          title: Profile Data
          allOf:
            - $ref: '#/components/schemas/Models.ProfileInformation'
        RegulatoryInformation:
          title: Regulatory Data
          allOf:
            - $ref: '#/components/schemas/Models.RegulatoryInformation'
        SingaporeData:
          title: Singapore related data
          allOf:
            - $ref: '#/components/schemas/Models.SingaporeData'
        SwitzerlandData:
          title: Switzerland related data
          allOf:
            - $ref: '#/components/schemas/Models.SwitzerlandData'
        UkData:
          title: UK related data
          allOf:
            - $ref: '#/components/schemas/UkData'
    RenewalDetails:
      title: RenewalDetails
      type: object
      properties:
        RenewalStatus:
          title: Current status of this renewal
          type: string
        RenewalTriggers:
          title: Renewal trigger
          type: array
          items:
            type: string
    RenewalDocument:
      title: Renewal Document
      required:
        - Type
        - Data
        - Name
        - MimeType
      type: object
      properties:
        Data:
          title: Base64 encoded document data
          type: string
        MimeType:
          title: Mime type of the document
          type: string
        Name:
          title: Document name
          type: string
        Type:
          title: Renewal document type
          allOf:
            - $ref: '#/components/schemas/RenewalDocumentType'
    RenewalDocumentType:
      title: Renewal document type
      enum:
        - AccountViewToIb
        - AmlScreening
        - ArticlesMemorandum
        - AuthorizedDealers
        - AuthorizedPaymentSignatories
        - BackOfficeReporting
        - BeneficialOwnerInformation
        - CertificateOfGoodStanding
        - CertificateOfIncorporation
        - CertificateOfIncumbency
        - CertificateOfSignature
        - ClientApplicationForm
        - CorporateDisclosureForm
        - CorporateTranscript
        - DdNotesFromClient
        - DirectorSignatoryInformation
        - ElectonicIdVerification
        - EsaContract
        - EsmaDocumentation
        - FeePaymentAuthorization
        - FeePaymentSchedule
        - GeneralBusinessTerms
        - IbAddendumScml
        - InternalTranslationForm
        - ItalianAccountOpeningConfirmation
        - JointAccountForm
        - LanguageLegalLetter
        - LawyersLicense
        - MifidClassification
        - MultipleAccountForm
        - OtherDdDocs
        - PensionTransferRequest
        - PoaAuthTrade
        - PoaF07
        - PoaFp2
        - PoaI07
        - PoaI08
        - PoaIblp4
        - PoaIbp5
        - PoaIpb6
        - PoaLp1
        - PoaMa10
        - PoaMa11
        - PoaMm9
        - PowerOfAttorney
        - PowerOfAttorneyToIb
        - PowerOfAttorneyToPerformanceIb
        - ProofOfIdentity
        - ProofOfResidency
        - Selfie
        - ShareCertification
        - SourceOfFundsDocument
        - TaxLiability
        - TaxReclaimRegistrationForms
        - TermsAndConditions
        - TermsAndConditionsAldersopsparingPrivate
        - TermsAndConditionsKapitalPensionPrivate
        - TermsAndConditionsRatePensionEmployer
        - TermsAndConditionsRatePensionPrivate
        - W8Ben
      type: string
      x-enum-descriptions:
        ProofOfIdentity: Proof of identity.
        ProofOfResidency: Proof of residence.
        PowerOfAttorney: Power of attorney.
        TermsAndConditions: Terms and conditions.
        AmlScreening: Aml screening document
        ClientApplicationForm: Client application form document
        GeneralBusinessTerms: General business terms.
        SourceOfFundsDocument: Source of funds document.
        PowerOfAttorneyToIb: Power of Attorney to Ib
        PowerOfAttorneyToPerformanceIb: Power of attorney to performance Ib
        AccountViewToIb: Account view to IB.
        IbAddendumScml: Ib Addendum Scml
        TaxLiability: Tax Liability
        MultipleAccountForm: Multiple Account Form
        JointAccountForm: Joint Account Form
        FeePaymentAuthorization: Fee Payment Authorization
        CertificateOfSignature: Certificate Of Signature
        BeneficialOwnerInformation: Beneficial Owner Information
        CorporateDisclosureForm: Corporate Disclosure Form
        CorporateTranscript: Corporate Transcript
        DirectorSignatoryInformation: Director Signatory Information
        ArticlesMemorandum: Articles Memorandum
        CertificateOfGoodStanding: Certificate Of Good Standing
        CertificateOfIncumbency: Certificate Of Incumbency
        CertificateOfIncorporation: Certificate Of Incorporation
        ShareCertification: Share Certification
        AuthorizedDealers: Authorized Dealers
        AuthorizedPaymentSignatories: Authorized Payment Signatories
        LawyersLicense: Lawyers License
        LanguageLegalLetter: Language Legal Letter
        TaxReclaimRegistrationForms: Tax Reclaim Registration Forms
        BackOfficeReporting: Back Office Reporting
        MifidClassification: Mifid Classification
        InternalTranslationForm: Internal Translation Form
        ItalianAccountOpeningConfirmation: Italian Account Opening Confirmation
        ElectonicIdVerification: Electonic Id Verification
        EsmaDocumentation: Esma Documentation
        FeePaymentSchedule: Fee Payment Schedule
        W8Ben: W8Ben
        PoaLp1: PoaLp1
        PoaFp2: PoaFp2
        PoaIblp4: PoaIblp4
        PoaF07: PoaF07
        PoaMm9: PoaMm9
        PoaMa10: PoaMa10
        PoaMa11: PoaMa11
        PoaIbp5: PoaIbp5
        PoaI07: PoaI07
        PoaI08: PoaI08
        PoaIpb6: PoaIpb6
        PoaAuthTrade: Poa Auth Trade
        EsaContract: Esa Contract
        Selfie: Selfie of the client
        DdNotesFromClient: Dd Notes From Client
        OtherDdDocs: Other Dd Docs
        TermsAndConditionsRatePensionPrivate: Terms And Conditions Rate Pension Private
        TermsAndConditionsAldersopsparingPrivate: Terms And Conditions Aldersopsparing Private
        TermsAndConditionsKapitalPensionPrivate: Terms And Conditions Kapital Pension Private
        PensionTransferRequest: Pension Transfer Request
        TermsAndConditionsRatePensionEmployer: Terms And Conditions Rate Pension Employer
    RenewalFeedbackData:
      title: Renewal feedback loop data
      type: object
      properties:
        PendingReasons:
          title: Pending reasons
          type: array
          items:
            $ref: '#/components/schemas/PendingReason'
        RenewalStatus:
          title: Renewal status
          allOf:
            - $ref: '#/components/schemas/RenewalStatus'
    RenewalFeedbackRequest:
      title: Renewal feedback request
      type: object
      properties:
        Documents:
          title: Pending documents
          type: array
          items:
            $ref: '#/components/schemas/RenewalDocument'
        FeedbackComment:
          title: Feedback comment
          type: string
    RenewalInstance:
      title: Renewal instance
      type: object
      properties:
        InstanceId:
          title: Renewal instance id
          type: string
    RenewalRequest:
      title: Renewal Request
      type: object
      properties:
        Documents:
          title: Renewal documents to be uploaded
          type: array
          items:
            $ref: '#/components/schemas/RenewalDocument'
        RenewalData:
          title: Renewal data to be updated
          allOf:
            - $ref: '#/components/schemas/RenewalData'
    RenewalStatus:
      title: Renewal status
      enum:
        - Approved
        - DataSubmitted
        - InProgress
        - New
        - NoActiveRenewal
        - Pending
        - Waiting
      type: string
      x-enum-descriptions:
        NoActiveRenewal: No renewal entity exists.
        New: 'Renewal entity in process, awaiting customer input.'
        Waiting: 'Renewal entity in process, submitted by customer.'
        Approved: Renewal entity Approved.
        InProgress: Renewal entity is being processed.
        Pending: 'Renewal entity pending with customer, for corrections/missing data.'
        DataSubmitted: Renewal data submitted for this contact of JointAccount
      x-enum-network-visibility:
        DataSubmitted: internal
    RenewalStatusByUser:
      title: Customer renewal status for given user
      type: object
      properties:
        CustomerRenewalStatus:
          title: Customer renewal status
          allOf:
            - $ref: '#/components/schemas/CustomerRenewalStatus'
        FullName:
          title: Customer name
          type: string
        RelationshipRole:
          title: Customer relationship role
          type: string
        UserId:
          title: Customer user id
          type: integer
          format: int32
        UserKey:
          title: Customer userkey
          type: string
    RenewalStatusData:
      title: Renewal status for a particular client
      type: object
      properties:
        ClientId:
          title: ClientId of this renewal
          type: string
        ClientKey:
          title: ClientKey of this renewal
          type: string
        RenewalBy:
          title: Date when this renewal should be completed
          allOf:
            - type: string
              format: date
              x-type-name: Date
        RenewalStatus:
          title: Current status of this renewal
          allOf:
            - $ref: '#/components/schemas/RenewalStatusNullable'
    RenewalStatusDataListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/RenewalStatusData'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    RenewalStatusNullable:
      allOf:
        - $ref: '#/components/schemas/RenewalStatus'
    ResponseFilterRegistration:
      type: object
      properties:
        Contract:
          type: string
        Processor:
          type: string
    RiskAssessmentResult:
      title: Result of the risk assessment
      type: object
      properties:
        AllowAsClient:
          title: Allow as client?
          type: boolean
        IsStpAllowed:
          title: Is STP allowed for the client?
          type: boolean
        PreValidationPassed:
          title: Pre-validation passed?
          type: boolean
        RiskAssessmentCompleted:
          title: False if service failed
          type: boolean
    SaveAssessmentResultRequest:
      title: 'Container for one or more s, as well as the outcome of the questionnaire'
      type: object
      properties:
        AssessmentResult:
          title: Result of the questionnaire.
          type: integer
          format: int32
        Comment:
          title: Comment which should be saved as part of the assessment result.
          type: string
        Documents:
          title: 'An array of base64 encoded files, documenting the identity, residency etc of the applicant.'
          type: array
          items:
            $ref: '#/components/schemas/Signup.SignupDocument'
    SaveDocumentRequest:
      title: Save document request
      required:
        - ClientKey
        - Documents
      type: object
      properties:
        ClientKey:
          title: ClientKey of the user for which documents are to be uploaded
          minLength: 1
          type: string
          x-type-name: ClientKey
        Documents:
          title: Details of documents to be uploaded
          type: array
          items:
            $ref: '#/components/schemas/Document'
    SavePartyDocumentRequest:
      title: Save party document request
      required:
        - Documents
      type: object
      properties:
        Documents:
          title: Details of documents to be uploaded
          type: array
          items:
            $ref: '#/components/schemas/PartyDocument'
        PartyDetails:
          title: Party details
          allOf:
            - $ref: '#/components/schemas/PartyDetails'
    ScrambleClientsResult:
      title: Public data contract for a scrambled clients result
      type: object
      properties:
        CurrentPage:
          title: Current Page Number
          type: integer
          format: int32
        ScrambledClients:
          title: List of scrambled clients
          type: array
          items:
            $ref: '#/components/schemas/ScrambledClient'
        TotalPages:
          title: Total Number of Page
          type: integer
          format: int32
    ScrambledClient:
      title: Public data contract for a scrambled client
      type: object
      properties:
        ClientId:
          title: Client Id
          type: string
        ScrambledDate:
          title: Scrambled date
          type: string
    SecondPoiStatus:
      title: Status on Second Proof of Identity
      type: object
      properties:
        FeedbackStatus:
          title: Feedback on the document status
          allOf:
            - $ref: '#/components/schemas/DocumentFeedbackStatusNullable'
        OtherClientContactNeeded:
          title: Other Client Contact Needed?
          type: boolean
    SecondPorStatus:
      title: Status on Second Proof of Residence
      type: object
      properties:
        FeedbackStatus:
          title: Feedback on the document status
          allOf:
            - $ref: '#/components/schemas/DocumentFeedbackStatusNullable'
        OtherClientContactNeeded:
          title: Other Client Contact Needed?
          type: boolean
    SecureMeRequest:
      title: Secure Me Request
      type: object
      properties:
        CountryCode:
          title: Country ISO code (from Options)
          type: string
        ErrorRedirectUrl:
          title: Error redirect url
          type: string
        ServiceLanguageCode:
          title: Service language ISO code (from Options)
          type: string
        SuccessRedirectUrl:
          title: Success redirect url
          type: string
        UploadOptions:
          title: SecureMe upload options
          allOf:
            - $ref: '#/components/schemas/SecureMeUploadOptions'
    SecureMeUploadOption:
      title: SecureMe upload option
      enum:
        - Camera
        - File
      type: string
      x-enum-descriptions:
        Camera: Camera
        File: File
    SecureMeUploadOptionNullable:
      allOf:
        - $ref: '#/components/schemas/SecureMeUploadOption'
    SecureMeUploadOptions:
      title: SecureMe upload options
      type: object
      properties:
        Back:
          title: Back side document option
          allOf:
            - $ref: '#/components/schemas/SecureMeUploadOptionNullable'
        Front:
          title: Front side document option
          allOf:
            - $ref: '#/components/schemas/SecureMeUploadOptionNullable'
        Selfie:
          title: Selfie option
          allOf:
            - $ref: '#/components/schemas/SecureMeUploadOptionNullable'
    SelfCertificationTaxRequest:
      title: Self certification tax request
      type: object
      properties:
        ObligationInterestTax:
          title: Obligation interest tax
          allOf:
            - type: boolean
        StockDividendTax:
          title: Stock dividend tax
          allOf:
            - type: boolean
    SelfEmployedInfo:
      title: Information about an applicants self employement.
      type: object
      properties:
        BusinessName:
          title: Name of the applicant's business.
          type: string
        EstimatedAnnualTurnover:
          title: Estimated annual turnover of applicant's business.
          type: number
        NatureOfBusiness:
          title: Nature of the applicant's business.
          type: string
    SendEmailResult:
      title: Type containing the results from the email sending service
      type: object
      properties:
        MailSent:
          title: Was the email sent successfully?
          type: boolean
        StatusMessage:
          title: Status message
          type: string
    SendMessageRequest:
      title: Send message request
      required:
        - Phone
        - DateOfBirth
        - InfoType
        - SingleClientMessage
        - MultipleClientMessage
      type: object
      properties:
        DateOfBirth:
          title: User's date of birth
          type: string
          format: date
          x-type-name: Date
        InfoType:
          title: Message info type
          allOf:
            - $ref: '#/components/schemas/MessageInfoType'
        MultipleClientMessage:
          title: Message for multiple client
          type: string
        Phone:
          title: User's phone number
          allOf:
            - $ref: '#/components/schemas/Domain.PhoneNumber'
        SingleClientMessage:
          title: Message for one client
          type: string
    SendMessageResponse:
      title: Send message response
      type: object
      properties:
        MessageSent:
          title: Is messgae sent successfully.
          type: boolean
        UserFound:
          title: Is users found for the request.
          type: boolean
    ServerStatus:
      type: object
      properties:
        AppPoolId:
          type: string
        ApplicationName:
          type: string
        ApplicationVersion:
          type: string
        BuildTime:
          type: string
        Created:
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Customization:
          allOf:
            - $ref: '#/components/schemas/IServiceCustomization'
        Dependencies:
          type: array
          items:
            $ref: '#/components/schemas/DependencyInfo'
        DeployTime:
          type: string
        DiskDrives:
          type: array
          items:
            $ref: '#/components/schemas/DiskDrive'
        FrameworkVersion:
          type: string
        InternalInformation:
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
        LeasePeriod:
          type: integer
          format: int32
        LoadedAssemblies:
          type: array
          items:
            $ref: '#/components/schemas/FileVersionInfo'
        LoadedAssembliesVersions:
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
        LogicalProcessors:
          type: integer
          format: int32
        MachineUptime:
          type: integer
          format: int64
        MachineUptimeText:
          type: string
        NetFrameworkVersion:
          type: string
        OSVersion:
          type: string
        PerformanceCounters:
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
        Process:
          allOf:
            - $ref: '#/components/schemas/ProcessInfo'
        ResponseFilters:
          type: array
          items:
            $ref: '#/components/schemas/ResponseFilterRegistration'
        RouteTable:
          type: array
          items:
            $ref: '#/components/schemas/ApiGroupInfo'
        RunningIdentity:
          type: string
        SystemEnvironment:
          type: string
        SystemUptime:
          type: integer
          format: int64
        SystemUptimeText:
          type: string
        TimeSpentMs:
          type: number
        ToolId:
          type: integer
          format: int32
        WebAPIVersion:
          type: string
    SetDueDiligenceInfoRequest:
      title: Request to set DD info
      type: object
      properties:
        AutoCompleteSettings:
          title: Auto Complete Settings
          allOf:
            - $ref: '#/components/schemas/AutoCompleteDueDiligenceDetails'
        CreateSettings:
          title: Create settings
          allOf:
            - $ref: '#/components/schemas/CreateDueDiligenceSettingsDetails'
        PartialDueDiligenceSettings:
          title: Partial DD settings
          allOf:
            - $ref: '#/components/schemas/PartialDueDiligenceDetails'
        SignupId:
          title: Unique Id for the signup in CRN
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
    SetPasswordCommand:
      title: Command used for changing a user password.
      required:
        - ClientId
        - Password
      type: object
      properties:
        ClientId:
          title: "User's client ID (Saxo Bank ID).\r\n            Required for \"Live\" environment, optional for \"Demo\"."
          type: string
        Password:
          title: The new password.
          type: string
    SetPasswordNoVerificationCommand:
      title: Command used for changing a user password with no prior email verification.
      required:
        - Password
        - Email
      type: object
      properties:
        BusinessContext:
          title: The business context for the password reset
          allOf:
            - $ref: '#/components/schemas/BusinessContext'
        ClientId:
          title: "User's client ID (Saxo Bank ID).\r\n            Required for \"Live\" environment, optional for \"Demo\"."
          type: string
        Email:
          title: "User's email address\r\n            Required for all environments"
          type: string
        Password:
          title: The new password.
          type: string
    SetPasswordResult:
      title: Result of a set password command.
      type: object
      properties:
        Code:
          title: Code indicating the outcome of a set password command.
          allOf:
            - $ref: '#/components/schemas/PasswordResetResultCode'
    ShareholdersData:
      title: Shareholders detail of the company
      type: object
      properties:
        BeneficialOwners:
          title: Beneficial owners of the company
          type: array
          items:
            $ref: '#/components/schemas/BeneficialOwnerComparedData'
        CorporateShareholders:
          title: Corporate shareholders of the company
          type: array
          items:
            $ref: '#/components/schemas/CorporateShareholderComparedData'
    ShareholdersDataRequest:
      title: Shareholders detail of the company
      type: object
      properties:
        BeneficialOwners:
          title: Beneficial owners of the company
          type: array
          items:
            $ref: '#/components/schemas/BeneficialOwner'
        CorporateShareholders:
          title: Corporate shareholders of the company
          type: array
          items:
            $ref: '#/components/schemas/CorporateShareholder'
    SignUpOption:
      title: Possible sign up options
      type: object
      properties:
        PropertyName:
          title: Property name
          type: string
        ValuePairs:
          title: Key and value pairs
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
    SignUpOptionListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/SignUpOption'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    SignUpRequest:
      title: SignupRequest
      required:
        - PersonalInformation
        - RegulatoryInformation
      type: object
      properties:
        AccountInformation:
          title: Account information
          allOf:
            - $ref: '#/components/schemas/AccountInformation'
        BankInformation:
          title: Bank information
          allOf:
            - $ref: '#/components/schemas/BankInformation'
        FinlandData:
          title: Client information for Finland onboarding
          allOf:
            - $ref: '#/components/schemas/FinlandData'
        GlobalFinancialInformation:
          title: Global financial information
          allOf:
            - $ref: '#/components/schemas/GlobalFinancialInformation'
        ItalyData:
          title: Client information for Italy onboarding
          allOf:
            - $ref: '#/components/schemas/ItalyData'
        OnboardingInformation:
          title: Onboarding information
          allOf:
            - $ref: '#/components/schemas/OnboardingInformation'
        PensionData:
          title: Client information about pension
          allOf:
            - $ref: '#/components/schemas/PensionData'
        PersonalInformation:
          title: Client personal information
          allOf:
            - $ref: '#/components/schemas/PersonalInformation'
        ProfileInformation:
          title: Client profile information
          allOf:
            - $ref: '#/components/schemas/ProfileInformation'
        RegulatoryInformation:
          title: Client regulatory information
          allOf:
            - $ref: '#/components/schemas/RegulatoryInformation'
        SingaporeData:
          title: Client information for Singapore onboarding
          allOf:
            - $ref: '#/components/schemas/SingaporeData'
        SwitzerlandData:
          title: Client information for Switzerland onboarding
          allOf:
            - $ref: '#/components/schemas/SwitzerlandData'
    SignUpResponse:
      title: Sign up response
      type: object
      properties:
        ClientId:
          title: Created clients ID
          type: string
        ClientKey:
          title: Client Key
          type: string
        SignUpId:
          title: Sign up ID
          type: string
    SignUpStatusResponse:
      title: Signup onboarding status response
      type: object
      properties:
        ClientId:
          title: Client ID
          type: string
        ClientKey:
          title: Client key
          type: string
        Message:
          title: Onboarding Status message
          type: string
        OnboardingState:
          title: Onboarding State of client
          allOf:
            - $ref: '#/components/schemas/OnboardingStateTypeNullable'
        OnboardingSubState:
          title: Onboarding Sub State of client
          allOf:
            - $ref: '#/components/schemas/OnboardingSubStateTypeNullable'
        PendingReasons:
          title: Pending reasons of why the client hasn't been onboarded yet
          type: array
          items:
            $ref: '#/components/schemas/OnboardingStatePendingReason'
    Signup.AccountDetails:
      title: Applicant address information
      type: object
      properties:
        BackOfficeAccountType:
          title: ASK or other?
          type: string
        CurrencyIsoCode:
          title: Currency code
          type: string
        Iban:
          title: IBAN code
          type: string
        VirtualAccountNumber:
          title: Virtual Account Number
          type: string
    Signup.AccountType:
      title: CRM Account Type defined in MSCRM
      enum:
        - Na
        - Trading
      type: string
      x-enum-descriptions:
        Na: Not applicable.
        Trading: Trading account.
    Signup.AdditionalEmploymentRelations:
      title: Information about applicant's additional employment relations.
      type: object
      properties:
        CompanyNameInsider:
          title: Name of company insider.
          type: string
        CompanyNameMajorityInterest:
          title: Majority interest company name.
          type: string
        ManagedOrManagingAssets:
          title: Managed or managing assests.
          allOf:
            - type: boolean
    Signup.Address:
      title: Applicant address information
      type: object
      properties:
        BuildingName:
          title: Building name.
          type: string
        BuildingNo:
          title: Building number.
          type: string
        City:
          title: 'Name of the city, in which the address resides.'
          type: string
        CountryCode:
          title: ISO 3166 country code of the address.
          type: string
        County:
          title: Name of the county in which the address resides.
          type: string
        Floor:
          title: Floor
          type: string
        PostalCode:
          title: Postal code.
          type: string
        State:
          title: 'Name of the state, in which the address resides.'
          type: string
        Street:
          title: Street name
          type: string
        Unit:
          title: Unit
          type: string
    Signup.AmountDescriptionType:
      title: Enum for Amount Description Type
      enum:
        - AboveThisAmount
        - Exact
        - Rounded
      type: string
      x-enum-descriptions:
        Exact: Exact value provided.
        Rounded: Nearby value provided.
        AboveThisAmount: Value is above this amount.
    Signup.AssetDetails:
      title: Asset Details
      required:
        - CurrencyCode
        - Amount
        - AmountDescription
      type: object
      properties:
        Amount:
          title: Amount value
          type: integer
          format: int32
        AmountDescription:
          title: Amount Description
          allOf:
            - $ref: '#/components/schemas/Signup.AmountDescriptionType'
        CurrencyCode:
          title: Currency code (from Options)
          type: string
    Signup.BankInformation:
      title: SSI data.
      type: object
      properties:
        BeneficiaryAccountNumber:
          title: Beneficiary Account Number
          type: string
        BeneficiaryAccountTypeCode:
          title: Beneficiary Account Type Code
          type: string
        BeneficiaryBankName:
          title: Beneficiary Bank Name
          type: string
        BeneficiaryBic:
          title: Beneficiary Bic
          type: string
        BeneficiaryBranchCode:
          title: Beneficiary Branch Code
          type: string
        BeneficiaryClearingCode:
          title: Beneficiary Clearing Code
          type: string
        BeneficiaryIban:
          title: Beneficiary Iban
          type: string
        BeneficiaryName:
          title: Name of Beneficiary
          type: string
        ReceivingCountryIsoCode:
          title: Receiving Country Iso Code
          type: string
    Signup.ElectronicVerificationResult:
      title: Result from external service
      enum:
        - Failed
        - Passed
        - Referred
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: Unknown
        Passed: Passed
        Referred: Referred
        Failed: Failed
    Signup.FatcaDeclaration:
      title: Applicant fatca declaration.
      type: object
      properties:
        IsUsCitizen:
          title: Indicates whether the applicant is a US citizen.
          allOf:
            - $ref: '#/components/schemas/TriState'
        IsUsTaxLiable:
          title: Indicates whether the applicant is tax-liable in the US.
          allOf:
            - $ref: '#/components/schemas/TriState'
        UsProducts:
          title: Indicates whether the applicant wants to trade US products.
          allOf:
            - $ref: '#/components/schemas/TriState'
        UsTaxId:
          title: US tax ID. Required if the applicant is a US citizen or tax liable in the US.
          maxLength: 20
          type: string
    Signup.GlobalFinancialInformation:
      title: GlobalFinancialInformation class
      type: object
      properties:
        AnnualIncomeAfterTax:
          title: Annual Income After Tax
          allOf:
            - $ref: '#/components/schemas/Signup.AssetDetails'
        IntendToInvest:
          title: Intend To Invest
          allOf:
            - $ref: '#/components/schemas/Signup.AssetDetails'
        InvestableAsset:
          title: Investable Asset
          allOf:
            - $ref: '#/components/schemas/Signup.AssetDetails'
    Signup.SignupDocument:
      title: "Represents an uploaded binary document, that serves as additional documentation and information\r\n            in an onboarding flow."
      type: object
      properties:
        Comments:
          title: Comments for the document file.
          type: string
        DocumentType:
          title: Type of document.
          allOf:
            - $ref: '#/components/schemas/Signup.SignupDocumentType'
        ExpirationDate:
          title: Expiration date of document file.
          allOf:
            - type: string
        FileData:
          title: "Base64 encoded contents of the document file.\r\n            Note that a maximum of 10 MB is allowed."
          type: string
        FileName:
          title: Name of the document file.
          type: string
    Signup.SignupDocumentType:
      title: "Enumeration of types of documents that an applicant\r\n            can submit (upload) alongside an onboarding application."
      enum:
        - AccountViewToIb
        - AmlScreening
        - AuthorizedDealers
        - ClientApplicationForm
        - DdNotesFromClient
        - EsaContract
        - FeePaymentAuthorization
        - FeePaymentSchedule
        - IdPassport
        - OtherDdDocs
        - PeaInternalInstruction
        - PeaPmeInternalInstruction
        - Pension
        - PensionTransferRequest
        - PoaAuthTrade
        - PoaF07
        - PoaFp2
        - PoaI07
        - PoaI08
        - PoaIblp4
        - PoaIbp5
        - PoaIpb6
        - PoaLp1
        - PoaMa10
        - PoaMa11
        - PoaMm9
        - PowerOfAttorneyInformation
        - PowerOfAttorneyToIb
        - PowerOfAttorneyToPerformanceIb
        - ProofOfResidency
        - Selfie
        - SignedPeaPmeTransferRequest
        - SignedPeaTransferRequest
        - TermsAndConditions
        - TermsAndConditionsAldersopsparingPrivate
        - TermsAndConditionsKapitalPensionPrivate
        - TermsAndConditionsRatePensionEmployer
        - TermsAndConditionsRatePensionPrivate
        - Unknown
        - UnsignedPeaPmeTransferRequest
        - UnsignedPeaTransferRequest
        - W8Ben
      type: string
      x-enum-descriptions:
        Unknown: Unknown document type.
        OtherDdDocs: Other due diligence document.
        AmlScreening: AML screening document..
        ClientApplicationForm: Client application form.
        ProofOfResidency: Proof of residency.
        IdPassport: Passport.
        PowerOfAttorneyInformation: Power of attorney.
        PowerOfAttorneyToIb: Power of attorney for introducing broker.
        PowerOfAttorneyToPerformanceIb: Power of attorney to performance introducing broker.
        TermsAndConditions: Terms and conditions.
        AccountViewToIb: Account View To Ib
        FeePaymentAuthorization: Fee Payment Authorization
        AuthorizedDealers: Authorized Dealers
        FeePaymentSchedule: Fee Payment Schedule
        W8Ben: W8Ben
        PoaLp1: PoaLp1
        PoaFp2: PoaFp2
        PoaIblp4: PoaIblp4
        PoaF07: PoaF07
        PoaMm9: PoaMm9
        PoaMa10: PoaMa10
        PoaMa11: PoaMa11
        PoaIbp5: PoaIbp5
        PoaI07: PoaI07
        PoaI08: PoaI08
        PoaIpb6: PoaIpb6
        PoaAuthTrade: PoaAuthTrade
        TermsAndConditionsRatePensionPrivate: TermsAndConditionsRatePensionPrivate
        TermsAndConditionsAldersopsparingPrivate: TermsAndConditionsAldersopsparingPrivate
        TermsAndConditionsKapitalPensionPrivate: TermsAndConditionsKapitalPensionPrivate
        TermsAndConditionsRatePensionEmployer: TermsAndConditionsRatePensionEmployer
        PensionTransferRequest: PensionTransferRequest
        EsaContract: Document detailing ESA Contract
        Selfie: Selfie
        DdNotesFromClient: DD Notes
        UnsignedPeaTransferRequest: Unsigned PEA transfer request
        UnsignedPeaPmeTransferRequest: Unsigned PEA-PME transfer request
        SignedPeaTransferRequest: Signed PEA transfer request
        SignedPeaPmeTransferRequest: Signed PEA-PME transfer request
        PeaInternalInstruction: PEA internal instruction
        PeaPmeInternalInstruction: PEA-PME internal instruction
        Pension: Pension Account
    Signup.TaxableCountry:
      title: Type containing taxable country and tin information
      type: object
      properties:
        CountryCode:
          title: ISO country code
          type: string
        Tin:
          title: Tax identifaction number
          type: string
        TinMissingReason:
          title: Ask for missing tin reason
          allOf:
            - type: integer
              format: int32
        TinNotAvailable:
          title: Is Tin available?
          allOf:
            - type: boolean
        TinOtherMissingReason:
          title: Missing reason
          type: string
    Signup.TradingProfile:
      title: Information about the applicant's trading profile.
      type: object
      properties:
        AnnualIncomeId:
          title: 'Value of the flow property "annualincome", covering the applicant''s annual income.'
          type: integer
          format: int32
        FinancialSectorEmployee:
          title: Indicates whether the applicant is employed in the financial sector.
          allOf:
            - $ref: '#/components/schemas/TriState'
        FirstFundingAmount:
          title: 'Amount of money used for first funding, expressed as whole number.'
          type: number
        InstrumentsInterestIds:
          title: 'An array of values from the flow property "instruments", covering the applicant''s instrument interest(s).'
          type: array
          items:
            type: integer
            format: int32
        IntendToInvest2Id:
          title: 'Value of the flow property "intendtoinvest2", covering the applicant''s intention to invest.'
          type: integer
          format: int32
        IntendToInvestId:
          title: 'Value of the flow property "intendtoinvest", covering the applicant''s intention to invest.'
          type: integer
          format: int32
        IntendToInvestMoneyRange:
          title: Intend to invest
          allOf:
            - $ref: '#/components/schemas/MoneyRange'
        InvestableAssetsId:
          title: 'Value of the flow property "investableassets", covering the applicant''s amount of assets to invest.'
          type: integer
          format: int32
        OccupationDeclaration2XIds:
          title: 'An array of values from the flow property "declarationofoccupation", covering the applicant''s occupation(s).'
          type: array
          items:
            type: integer
            format: int32
        OccupationId:
          title: 'Value of the flow property "occupationnatureofbusiness", covering the applican''t occupation.'
          type: integer
          format: int32
        PartnerInterestedInId:
          title: 'Value of the flow property "partnerinterestedin", covering a partner''s interest in.'
          type: integer
          format: int32
        PurposeAndScopeId:
          title: 'Value of the flow property "purposeandscope", covering the applicant''s purpose and scope of trading.'
          type: integer
          format: int32
        SoleBoOfTheDepositedAssets:
          title: Indicates whether the applicant is Sole BO of the Deposited Assets.
          allOf:
            - type: boolean
        TradesPerMonthId:
          title: 'Value of the flow property "monthlynumberoftrades", covering the applicant''s expected number of trades per month.'
          type: integer
          format: int32
        TradesPerYearId:
          title: 'Value of the flow property "yearlynumberoftrades", covering the applicant''s expected number of trades per year.'
          type: integer
          format: int32
        TradingExperienceId:
          title: 'Value of the flow property "tradingexperience", covering the applicant''s trading experience.'
          type: integer
          format: int32
    SignupData:
      title: 'Various types of data about the applicant, collected during an onboarding flow.'
      type: object
      properties:
        AdditionalInformation:
          title: Additional information about the applicant.
          allOf:
            - $ref: '#/components/schemas/AdditionalDetails'
        Address:
          title: Applicant's address information.
          allOf:
            - $ref: '#/components/schemas/Signup.Address'
        BankInformation:
          title: SSI bank information
          allOf:
            - $ref: '#/components/schemas/Signup.BankInformation'
        Communications:
          title: Array of options for communicating with the applicant.
          type: array
          items:
            $ref: '#/components/schemas/CommunicationOption'
        Contact:
          title: Applicant's contact information.
          allOf:
            - $ref: '#/components/schemas/Contact'
        CorrespondenceAddressInfo:
          title: Correspondence address information.
          allOf:
            - $ref: '#/components/schemas/Signup.Address'
        Declaration:
          title: Declaration of acceptance.
          allOf:
            - $ref: '#/components/schemas/Declaration'
        FatcaDeclaration:
          title: Fatca declaration for US citizens.
          allOf:
            - $ref: '#/components/schemas/Signup.FatcaDeclaration'
        GlobalFinancialInformation:
          title: Global financial information
          allOf:
            - $ref: '#/components/schemas/Signup.GlobalFinancialInformation'
        KnowledgeOfFinancialInstruments:
          title: Knowledge Of Financial Instruments
          allOf:
            - $ref: '#/components/schemas/KnowledgeOfFinancialInstrumentsNullable'
        NordNetFirstFunding:
          title: Nord Net First Funding
          allOf:
            - $ref: '#/components/schemas/NordNetFirstFundingNullable'
        PreviousAddress:
          title: Optional previous known address of the applicant.
          allOf:
            - $ref: '#/components/schemas/Signup.Address'
        ProductTradingExperience:
          title: Product Trading Experience
          type: array
          items:
            $ref: '#/components/schemas/ProductTradingExperience'
        SignupFlowData:
          title: Provides state data about the onboarding.
          allOf:
            - $ref: '#/components/schemas/SignupFlowData'
        TradingProfile:
          title: Description of the applicant's trading profile.
          allOf:
            - $ref: '#/components/schemas/Signup.TradingProfile'
    SignupDocument:
      title: Sign up document
      required:
        - FileName
        - Data
      type: object
      properties:
        Data:
          title: Content or data of document in base64 format.
          type: string
        DocumentType:
          title: Type of document
          allOf:
            - $ref: '#/components/schemas/System.SignupFlowDocumentTypeNullable'
        FileName:
          title: Name of document
          type: string
        RenewalDate:
          title: Expiration date of document
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        Title:
          title: Title of the document
          type: string
    SignupDocumentType:
      title: "Enumeration of types of documents that an applicant\r\n            can submit (upload) alongside an onboarding application."
      enum:
        - AmlScreening
        - ClientApplicationForm
        - IdPassport
        - OtherDdDocs
        - PowerOfAttorneyInformation
        - PowerOfAttorneyToIb
        - PowerOfAttorneyToPerformanceIb
        - ProofOfResidency
        - TermsAndConditions
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: Unknown document type.
        OtherDdDocs: Other due diligence document.
        AmlScreening: AML screening document..
        ClientApplicationForm: Client application form.
        ProofOfResidency: Proof of residency.
        IdPassport: Passport.
        PowerOfAttorneyInformation: Power of attorney.
        PowerOfAttorneyToIb: Power of attorney for introducing broker.
        PowerOfAttorneyToPerformanceIb: Power of attorney to performance introducing broker.
        TermsAndConditions: Terms and conditions.
    SignupDocumentation:
      title: Container for one or more s.
      type: object
      properties:
        Documents:
          title: 'An array of base64 encoded files, documenting the identity, residency etc of the applicant.'
          type: array
          items:
            $ref: '#/components/schemas/Signup.SignupDocument'
        NotUserDocuments:
          title: NotUserDocuments (uploaded by user)
          type: boolean
        SendUploadConfirmationToCustomer:
          title: Indicates whether MS CRM should send an upload documentation confirmation email to the client.
          type: boolean
    SignupDocuments:
      title: Documents needed for onboarding
      type: object
      properties:
        Documents:
          title: 'An array of base64 encoded files, documenting the identity, residency etc of the applicant.'
          type: array
          items:
            $ref: '#/components/schemas/SignupDocument'
    SignupFlowData:
      title: 'Data collected during the application flow, used in the onboarding process.'
      type: object
      properties:
        AdditionalChoiceOfAccounts:
          title: Additional choice of accounts
          type: array
          items:
            type: integer
            format: int32
        AdditionalChoiceOfAccountsData:
          title: Additional choice of accounts
          type: array
          items:
            $ref: '#/components/schemas/AdditionalChoiceOfAccountData'
        AssessmentResult:
          title: Result from the onboarding questionnaire test.
          allOf:
            - $ref: '#/components/schemas/AssessmentResult'
        AutoDueDiligenceResult:
          title: Indicates the outcome of the due diligence process.
          allOf:
            - $ref: '#/components/schemas/AutoDueDiligenceResult'
        BaseCurrency:
          title: 'Value of the flowproperty "currencies", indicating the base currency of the account, chosen by the applicant.'
          type: string
        CampaignCode:
          title: Applicants Campaign Code.
          type: string
        CcFirstFundingAllowed:
          title: "Indicates whether the first funding, of the account, is allowed\r\n            by transferring funds from a credit card."
          type: boolean
        ChoiceOfAccountId:
          title: 'Value of the flow property "choiceofaccount", identifying the applicant''s choice of account type.'
          type: integer
          format: int32
        ClientIpAddress:
          title: Applicant's IP address.
          type: string
        CurrentExecutionUrl:
          title: 'Url for the current execution. If the user drops off, this will bring him or her right back to this location.'
          type: string
        DcfInstanceId:
          title: Dcf Instance Id
          allOf:
            - pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
              type: string
        DemoAccountAllowed:
          title: 'Indicates whether creation of a demo account, is allowed for the lead.'
          type: boolean
        DemoAccountRequested:
          title: Indicates whether the client has requested a demo account.
          type: boolean
        ElectronicVerificationDone:
          title: Time when the service was called
          allOf:
            - type: string
        ElectronicVerificationExternalId:
          title: Unique Id from the external authentication/verification service
          type: string
        ElectronicVerificationResult:
          title: Result from the authentication/verification service (if applicable)
          allOf:
            - $ref: '#/components/schemas/System.ElectronicVerificationResultNullable'
        ElectronicVerificationScore:
          title: Score from the authentication/verification service (if applicable)
          type: string
        EmailAddressVerified:
          title: Indicates whether the e-mail address has been verified.
          type: boolean
        EmailVerificationUrl:
          title: Url for e-mail verification.
          type: string
        FallbackFlow:
          title: Is true if crm is down or unavailable
          type: boolean
        FinalizeApplicationUrl:
          title: Url of the page for finalizing the onboarding application.
          type: string
        FlowLanguage:
          title: Language code (ISO 639-2) of the application flow.
          type: string
        FundingAsVerification:
          title: Use funding as verification
          allOf:
            - $ref: '#/components/schemas/TriState'
        HostIpAddress:
          title: 'IP address of the host, through which the application has been submitted.'
          type: string
        LeadOrigin:
          title: Indicates where the applicants interest originated from.
          allOf:
            - $ref: '#/components/schemas/LeadOrigin'
        ReadyForFunding:
          title: Indicating whether the application process has reached funding stage.
          type: boolean
        ReferralId:
          title: "Token retrieved from the referral endpoint. Should only be filled\r\n            if the application is a referral from another client, whom have obtained\r\n            a referral token."
          type: string
        SimulationTraderIdName:
          title: '?'
          type: string
        SimulationTraderType:
          title: '?'
          type: string
        SkipEmailVerification:
          title: Indicates whether e-mail verification should be skipped.
          type: boolean
        WebReferralPage:
          title: Url of website (page) that prompted the user to navigate to the signup page.
          type: string
        WebRegistrationSource:
          title: 'The method (web, phone ...) which has been used to create the application.'
          type: string
        WebSignupPage:
          title: Url of the signup page.
          type: string
    SignupFlowDocumentType:
      title: Document types accepted for signup
      enum:
        - AccountViewToIb
        - EsaContract
        - FeePaymentAuthorization
        - GeneralBusinessTerms
        - PensionTransferRequest
        - PowerOfAttorney
        - PowerOfAttorneyToIb
        - ProofOfIdentity
        - ProofOfResidency
        - SourceOfFundsDocument
        - TaxSavingAccount
        - TermsAndConditions
        - TermsAndConditionsAldersopsparingPrivate
        - TermsAndConditionsKapitalPensionPrivate
        - TermsAndConditionsRatePensionPrivate
      type: string
      x-enum-descriptions:
        ProofOfIdentity: Document to verify the identity of client
        ProofOfResidency: Document to verify the residency of client
        PowerOfAttorney: Legal document mentioning the details of the acts that can be done on behalf of the principal (client)
        TermsAndConditions: Document explaining terms and conditions
        GeneralBusinessTerms: Document explaining general business terms
        SourceOfFundsDocument: Document detailing all the sources which client have for generating funds
        PowerOfAttorneyToIb: Legal document mentioning the details of the acts that an IB can undertake on behalf of the principal (client)
        AccountViewToIb: 'Document detailing Introducing-Broker/Client details, authorization from client and Broker commission details'
        FeePaymentAuthorization: Document detailing Fee Payment Authorization
        EsaContract: Document detialing ESA Contract
        TermsAndConditionsRatePensionPrivate: Document detailing Terms and Conditions Rate Pension Private
        TermsAndConditionsAldersopsparingPrivate: Document detailing Terms and Conditions Aldersopsparing Private
        TermsAndConditionsKapitalPensionPrivate: Document detailing Terms and Conditions Kapital Pension Private
        PensionTransferRequest: Document detailing Pension Transfer Request
        TaxSavingAccount: Document detailing Tax Saving Account
    SignupFlowDocumentTypeNullable:
      allOf:
        - $ref: '#/components/schemas/SignupFlowDocumentType'
    SignupFlowState:
      title: Current state of the onboarding flow for a client application.
      enum:
        - ApplicationCanceled
        - AssessmentPending
        - Completed
        - Invalidated
        - Na
        - New
        - SubmitClientMatch
        - SubmitLeadMatch
        - SubmitNoClientMatch
        - SubmitNoFurtherAccount
        - SubmitPreClientMatch
        - SubmitUnsupportedCountry
        - SubmitValidationFailed
        - VerificationPending
        - VerificationPendingReminder
        - Verified
        - VerifiedClientAccountMatch
        - VerifiedClientMatch
        - VerifiedDueDiligenceComplete
        - VerifiedReadyForSubmit
        - VerifiedReminder
      type: string
      x-enum-descriptions:
        Na: None
        New: New signup flow.
        SubmitValidationFailed: Last submit had invalid properties.
        SubmitClientMatch: Last submit matched user with an existing client.
        VerificationPending: Application is pending verification.
        Verified: Application has been verified.
        VerifiedReadyForSubmit: Application has been verified and is ready to be submitted.
        VerifiedClientAccountMatch: Application has been verified and an existing client account has been found matching this.
        VerifiedClientMatch: Application has been verified and an existing client has been found matching this.
        VerifiedDueDiligenceComplete: Application has been verified and the due diligence process has been completed.
        Completed: Application has been completed.
        VerificationPendingReminder: Application has been verified and pending a reminder.
        VerifiedReminder: Application has been verified and client has been reminded.
        SubmitNoClientMatch: Submitted - no client match.
        SubmitUnsupportedCountry: Country is not supported.
        SubmitNoFurtherAccount: Submitted - no further account data.
        SubmitLeadMatch: Submitted after lead match.
        SubmitPreClientMatch: Submitted before client match.
        Invalidated: SignupResult request has been invalidated.
        AssessmentPending: Assessment is pending.
        ApplicationCanceled: Application has been canceled.
    SignupRequest:
      title: Jointaccount signup request data
      required:
        - AccountHolders
      type: object
      properties:
        AccountHolders:
          title: Account holders with detail
          type: array
          items:
            $ref: '#/components/schemas/AccountHolderDetail'
        AccountInformation:
          title: Account information
          allOf:
            - $ref: '#/components/schemas/JointAccount.AccountInformation'
        OnboardingInformation:
          title: Onboarding information
          allOf:
            - $ref: '#/components/schemas/JointAccount.OnboardingInformation'
        ProfileInformation:
          title: Client profile information
          allOf:
            - $ref: '#/components/schemas/JointAccount.ProfileInformation'
    SignupResponse:
      title: Response of client with JointAccount signup
      type: object
      properties:
        AccountHolders:
          title: Account holders
          type: array
          items:
            $ref: '#/components/schemas/AccountHolder'
        ClientId:
          title: Created clients ID
          type: string
        ClientKey:
          title: Client Key
          type: string
        OnboardingState:
          title: Onboarding request is being worked on
          type: string
    SignupResult:
      title: "Public data contract for an application, which is filled out\r\n            during a sign-up flow and used in onboarding new clients."
      type: object
      properties:
        BusinessContext:
          title: Business context of the onboarding.
          allOf:
            - $ref: '#/components/schemas/Model.BusinessContext'
        ClientId:
          title: Saxo Bank ID of the applicant.
          type: string
        EmailAddress:
          title: Applicant's e-mail address.
          type: string
        EmailVerificationToken:
          title: E-mail verification token.
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
        FlowState:
          title: Current state of the onboarding application flow.
          allOf:
            - $ref: '#/components/schemas/SignupFlowState'
        SignupData:
          title: Elaborate application data used in the onboarding process.
          allOf:
            - $ref: '#/components/schemas/SignupData'
        SignupId:
          title: Unique ID of the onboarding application.
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
    SignupUploadDocumentation:
      title: Container for one or more s.
      type: object
      properties:
        Documents:
          title: 'An array of base64 encoded files, documenting the identity, residency etc of the applicant.'
          type: array
          items:
            $ref: '#/components/schemas/Domain.SignupDocument'
        FeedbackComment:
          title: User comment in feedback loop
          type: string
        FeedbackLoopToken:
          title: Token received from CRM
          allOf:
            - pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
              type: string
    SimpleRegistration:
      title: A simple registration consists of a notification of interest in a particular subject and basic contact details
      required:
        - Name
        - Email
        - OwnerId
      type: object
      properties:
        CountryOfResidenceCode:
          title: The country of residence of the contact provided as the ISO code (alpha-2).
          maxLength: 4
          type: string
        Email:
          title: E-mail address of the contact.
          maxLength: 100
          type: string
        EmployerName:
          title: Employer Name
          type: string
        IsRepresentingOrganization:
          title: Is Representing Organization
          allOf:
            - type: boolean
        LanguageCode:
          title: 'The language of the contact provided as the ISO code, using the two letter ISO 639-1.'
          maxLength: 4
          type: string
        MarketingConsent:
          title: Marketing Consent
          allOf:
            - type: boolean
        Metadata:
          title: Metadata about the registration.
          allOf:
            - $ref: '#/components/schemas/RegistrationMetadata'
        Name:
          title: Name of the registered contact.
          maxLength: 50
          type: string
        OwnerId:
          title: 'ID of the owner of the registration. If no owner is specified, the logged-in user will be set as the owner.'
          type: string
        Phone:
          title: Phone number of the contact.
          allOf:
            - $ref: '#/components/schemas/Registrations.PhoneNumber'
        Position:
          title: Position
          type: string
        ReferralId:
          title: Referral Id
          type: string
    SimpleRegistrationResponse:
      title: Confirmation of a successful registration.
      type: object
      properties:
        ClientId:
          title: The ClientId of the newly created registration.
          type: string
        ClientKey:
          title: The key of the newly created registration.
          minLength: 1
          type: string
          x-type-name: ClientKey
        ContactId:
          title: The Contact Id of the newly created registration.
          type: string
    SingaporeData:
      title: Client information for Singapore onboarding
      type: object
      properties:
        AnnualIncomeSgd:
          title: Annual income in SGD
          type: string
        BrokersDeclinedBy:
          title: Brokers declined by
          type: string
        ClassificationRequired:
          title: Is classification required?
          allOf:
            - type: boolean
        DiplomaOrHigherQualification:
          title: Diploma or higher Qualification
          type: string
        ELearningAbsSasCfds:
          title: 'E-learning (ABS-SAS, CFDs)'
          type: string
        ELearningAbsSasFx:
          title: 'E-learning (ABS-SAS, Fx)'
          type: string
        ELearningPassed:
          title: Has the client passed E-learning
          type: string
        ELearningSgx:
          title: E-learning (SGX)
          allOf:
            - type: boolean
        ELearningSgxScore:
          title: E-learning (SGX) score
          type: string
        EducationalQualificationSatisfied:
          title: Is the qualification of education satisfied?
          allOf:
            - type: boolean
        FinanceWorkExperience:
          title: Finance work experience
          type: string
        InvestorProfile:
          title: Type of investor profile
          type: string
        ListedSips:
          title: Does the client want to trade in listed SIPs?
          allOf:
            - type: boolean
        NetWorthSgd:
          title: Net worth in SGD
          type: string
        PermanentResident:
          title: Is the client a permanent resident of Singapore?
          allOf:
            - type: boolean
        ProfessionalFinanceQualification:
          title: Professional finance qualification
          type: string
        SgxStocks:
          title: Sgx stocks
          type: string
        UnlistedSipsCfds:
          title: Does the client want to trade unlisted SIPs (CFD)?
          allOf:
            - type: boolean
        UnlistedSipsFx:
          title: Does the client want to trade unlisted SIPs (Fx)?
          allOf:
            - type: boolean
    SingaporeProfileInfo:
      title: Information about Singaporean applicant's profile.
      type: object
      properties:
        AnnualIncome:
          title: Annual Income
          allOf:
            - type: integer
              format: int32
        BrokersDeclinedBy:
          title: Brokers Declined By
          type: string
        Classification:
          title: Classification
          allOf:
            - type: integer
              format: int32
        DiplomaOrHigherQualification:
          title: Diploma Or Higher Qualification
          allOf:
            - type: integer
              format: int32
        ElearningAbsSasCfds:
          title: Elearning Abs Sas Cfds
          allOf:
            - type: integer
              format: int32
        ElearningAbsSasFx:
          title: Elearning Abs Sas Fx
          allOf:
            - type: integer
              format: int32
        ElearningLastScoreSgx:
          title: Elearning Last Score Sgx
          allOf:
            - type: integer
              format: int32
        ElearningSgxOnlineEducationProgramme:
          title: Elearning Sgx Online Education Programme
          allOf:
            - type: boolean
        FinanceWorkExperience:
          title: Finance Work Experience
          allOf:
            - type: integer
              format: int32
        InvestmentExperienceListedSips:
          title: Investment Experience Listed Sips
          allOf:
            - type: boolean
        InvestmentExperienceUnlistedSipsCfds:
          title: Investment Experience Unlisted Sips Cfds
          allOf:
            - type: boolean
        InvestmentExperienceUnlistedSipsFx:
          title: Investment Experience Unlisted Sips Fx
          allOf:
            - type: boolean
        InvestorProfile:
          title: Investor Profile
          allOf:
            - type: integer
              format: int32
        LastClassificationDate:
          title: Last Classification Date
          allOf:
            - type: string
        NetWorth:
          title: Net Worth
          allOf:
            - type: integer
              format: int32
        PermanentResident:
          title: Permanent Resident
          allOf:
            - type: boolean
        ProfessionalFinanceQualification:
          title: Professional Finance Qualification
          allOf:
            - type: integer
              format: int32
        SgxStocks:
          title: SgX Stocks
          allOf:
            - type: integer
              format: int32
    SourceOfFunds:
      title: Information about an applicant's source of funds.
      type: object
      properties:
        Employment:
          title: Funds coming from employment.
          type: boolean
        Inheritance:
          title: Funds coming from inheritance.
          type: boolean
        Other:
          title: Others source of applicant's funding.
          type: boolean
        OtherInformation:
          title: Information about other source of applicant's funding.
          type: string
        Pension:
          title: Funds coming from applicant's pension.
          type: boolean
        SavingsAndInvestment:
          title: Funds coming from savings and investment.
          type: boolean
        SelfEmployed:
          title: Funds coming from the applicant's own business.
          type: boolean
    SsiRequest:
      title: Ssi data request
      type: object
      properties:
        BeneficiaryAccountNumber:
          title: Account Number
          type: string
        BeneficiaryAccountTypeCode:
          title: Account Type Code
          type: string
        BeneficiaryBankName:
          title: Bank name
          type: string
        BeneficiaryBic:
          title: Bic
          type: string
        BeneficiaryBranchCode:
          title: Branch Code
          type: string
        BeneficiaryClearingCode:
          title: Clearing Code
          type: string
        BeneficiaryIban:
          title: Iban
          type: string
        BeneficiaryName:
          title: Name
          type: string
        ClientId:
          title: Client Id
          type: string
        CurrencyIsoCode:
          title: Currency
          type: string
        Key:
          title: Ssi Key
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
        ReceivingCountryIsoCode:
          title: Country
          type: string
        SsiName:
          title: Ssi Name
          type: string
    SsiResult:
      title: Result of Ssi update
      type: object
      properties:
        Key:
          title: Unique Key for the Ssi
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
        Message:
          title: Message
          type: string
        Success:
          title: Operation succeeded?
          type: boolean
    Status:
      title: Company status
      enum:
        - Active
        - InActive
        - None
        - Unknown
      type: string
      x-enum-descriptions:
        None: None
        Active: Active
        InActive: Inactive
        Unknown: Unknown
    StringComparedData:
      type: object
      properties:
        ComparedToData:
          title: Compared with data
          type: string
        ComparisonStatus:
          title: Data comparison status
          allOf:
            - $ref: '#/components/schemas/ComparisonStatus'
        Data:
          title: Data
          type: string
    StringStringKeyValuePair:
      type: object
      properties:
        Key:
          type: string
        Value:
          type: string
    SubAccountStatus:
      title: Status on Sub Account
      type: object
      properties:
        FeedbackStatus:
          title: Feedback on the document status
          allOf:
            - $ref: '#/components/schemas/DocumentFeedbackStatusNullable'
        Missing:
          title: Missing?
          type: boolean
        OldVersion:
          title: Old Version?
          type: boolean
        SubaccountForm:
          title: Subaccount Form?
          type: boolean
    SubmitSignupCommand:
      title: Public data contract for submitting an existing onboarding application.
      required:
        - BusinessContext
        - EmailAddress
      type: object
      properties:
        BusinessContext:
          title: Business context of the onboarding.
          allOf:
            - $ref: '#/components/schemas/Model.BusinessContext'
        EmailAddress:
          title: Applicant's e-mail address.
          type: string
        Password:
          title: Password to set for the account.
          type: string
        SignupData:
          title: Detailed data about the applicant used in the onboarding process.
          allOf:
            - $ref: '#/components/schemas/SignupData'
    SubscriptionInfoFilter:
      type: object
      properties:
        ApplicationId:
          allOf:
            - minimum: 1
              type: integer
              format: int32
              x-type-name: ApplicationId
        ContextId:
          type: string
        Publisher:
          type: string
        SessionId:
          allOf:
            - pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
              type: string
              x-type-name: SessionId
        UserId:
          allOf:
            - $ref: '#/components/schemas/UserIdNullable'
    SwitzerlandData:
      title: Client information for Switzerland onboarding
      type: object
      properties:
        AnnualIncomeChf:
          title: Annual income in CHF (from Options)
          type: string
        NetWorthChf:
          title: Net worth in CHF (from Options)
          type: string
    SwitzerlandProfileInfo:
      title: Information about SwitzerlandProfileInfo applicant's profile.
      type: object
      properties:
        AnnualIncomeInChf:
          title: Total estimated annual income in CHF
          allOf:
            - type: integer
              format: int32
        NetWorthInChf:
          title: Net Worth in CHF
          allOf:
            - type: integer
              format: int32
    System.ElectronicVerificationResultNullable:
      allOf:
        - $ref: '#/components/schemas/Signup.ElectronicVerificationResult'
    System.SignupFlowDocumentTypeNullable:
      allOf:
        - $ref: '#/components/schemas/Models.SignupFlowDocumentType'
    TaxReliefDetail:
      title: Tax relief detail
      type: object
      properties:
        ConsentProvidedForTaxRelief:
          title: Consent provided for tax relief
          allOf:
            - type: boolean
        CountryOfResidenceCode:
          title: Residence country code
          type: string
        EntityType:
          title: Entity type
          allOf:
            - $ref: '#/components/schemas/EntityType'
        ExpiryYear:
          title: Expiry year
          allOf:
            - type: integer
              format: int32
        FatcaStatus:
          title: 'The type of entity, the client has, that defines how client is being treated for compliance/reporting purposes'
          allOf:
            - $ref: '#/components/schemas/FatcaStatusNullable'
        GIINNumber:
          title: 'Global Intermediary Identification Number, assigned to FFI''s ( Foreign Financial Institutions)'
          type: string
        Name:
          title: Name
          type: string
        PartyID:
          title: Party id
          type: string
        USChapter3Status:
          title: 'The type of entity, the client has, that defines how client is being treated for compliance/reporting purposes'
          allOf:
            - $ref: '#/components/schemas/USChapter3StatusNullable'
        USTaxDocument:
          title: 'Type of document, the client has provided'
          allOf:
            - $ref: '#/components/schemas/USTaxDocumentNullable'
        USTaxLOBProvisions:
          title: LOB provision in order to qualify for benefits under a tax treaty
          allOf:
            - $ref: '#/components/schemas/USTaxLOBProvisionsNullable'
        UserId:
          title: User id
          type: string
    TaxReliefInfoRequest:
      title: Tax relief update request
      required:
        - USTaxDocument
        - ExpiryYear
      type: object
      properties:
        ConsentProvidedForTaxRelief:
          title: Consent provided for tax relief
          allOf:
            - type: boolean
        ExpiryYear:
          title: Expiry year
          type: integer
          format: int32
        FatcaStatus:
          title: 'The type of entity, the client has, that defines how client is being treated for compliance/reporting purposes'
          allOf:
            - $ref: '#/components/schemas/FatcaStatusNullable'
        GIINNumber:
          title: 'Global Intermediary Identification Number, assigned to FFI''s ( Foreign Financial Institutions)'
          type: string
        USChapter3Status:
          title: 'The type of entity, the client has, that defines how client is being treated for compliance/reporting purposes'
          allOf:
            - $ref: '#/components/schemas/USChapter3StatusNullable'
        USTaxDocument:
          title: 'Type of document, the client has provided'
          allOf:
            - $ref: '#/components/schemas/USTaxDocument'
        USTaxLOBProvisions:
          title: LOB provision in order to qualify for benefits under a tax treaty
          allOf:
            - $ref: '#/components/schemas/USTaxLOBProvisionsNullable'
    TaxReliefInfoResponse:
      title: Tax relief info response
      type: object
      properties:
        ClientID:
          title: Client id
          type: string
        ContractType:
          title: Contract type
          allOf:
            - $ref: '#/components/schemas/ContractType'
        ContractualSolution:
          title: Contractual solution
          type: string
        LegalEntityID:
          title: Legal entity id
          type: string
        TaxReliefDetails:
          title: Tax relief details
          type: array
          items:
            $ref: '#/components/schemas/TaxReliefDetail'
    TaxableCountry:
      title: Taxable countries
      type: object
      properties:
        CountryCode:
          title: Country code (from Options)
          type: string
        TaxId:
          title: 'Tax Id, if TIN is available'
          type: string
        TinMissingReason:
          title: Reason for not having TIN (from Options)
          type: string
        TinNotAvailable:
          title: Is TIN not available?
          allOf:
            - type: boolean
        TinOtherMissingReason:
          title: Any other reason for not having TIN
          type: string
    TemplateRequest:
      title: Template Request
      required:
        - ClientKey
        - ChoiceOfAccount
      type: object
      properties:
        ChoiceOfAccount:
          title: Comma Seprated Choice Of Account
          type: string
        ClientKey:
          title: Client Key
          minLength: 1
          type: string
          x-type-name: ClientKey
    ThirdPartyAuthStatus:
      title: Status on authorization on 3rd parties
      type: object
      properties:
        ClientPersonalIdNumberMissingIncorrect:
          title: Client Personal Id Number Missing Incorrect?
          type: boolean
        CompanyRegistrationMissingIncorrect:
          title: Company Registration Missing Incorrect?
          type: boolean
        FeedbackStatus:
          title: Feedback on the document status
          allOf:
            - $ref: '#/components/schemas/DocumentFeedbackStatusNullable'
        IncompleteMissing:
          title: Incomplete Missing?
          type: boolean
        IncorrectPoaDocument:
          title: Incorrect Poa Document?
          type: boolean
        MissingPaymentSchedule:
          title: Missing Payment Schedule?
          type: boolean
        NameMismatch:
          title: Name Mismatch?
          type: boolean
        SignatureMismatchMissing:
          title: Signature Mismatch Missing?
          type: boolean
        TypeOfPoaDocsOptionMissing:
          title: Type Of Poa Docs Option Missing?
          type: boolean
    ThirdPartyAuthorizationDetails:
      title: 3rd party auth status
      enum:
        - AV3
        - AuthorizedDealerForm
        - FO7
        - FP2
        - IBLP4
        - IBP5
        - IO8
        - LP1
        - MA10
        - MA11
        - MM9
        - PMF6
      type: string
      x-enum-descriptions:
        LP1: LP1
        FP2: FP2
        AV3: AV3
        IBLP4: IBLP4
        IBP5: IBP5
        PMF6: PMF6
        FO7: FO7
        IO8: IO8
        MM9: MM9
        MA10: MA10
        MA11: MA11
        AuthorizedDealerForm: AuthorizedDealerForm
    ThirdPartyAuthorizationDetailsNullable:
      allOf:
        - $ref: '#/components/schemas/ThirdPartyAuthorizationDetails'
    ThirdPorStatus:
      title: Status on Third Proof of Residence
      type: object
      properties:
        FeedbackStatus:
          title: Feedback on the document status
          allOf:
            - $ref: '#/components/schemas/DocumentFeedbackStatusNullable'
        OtherClientContactNeeded:
          title: Other Client Contact Needed?
          type: boolean
    TradingProfile:
      title: Client trading profile
      type: object
      properties:
        SoleBoOfAssets:
          title: Sole beneficial owner of the deposited assets
          allOf:
            - type: boolean
    TriState:
      title: Enumeration of a tri-state boolean value.
      enum:
        - 'False'
        - NotSet
        - 'True'
      type: string
      x-enum-descriptions:
        NotSet: Value has not been specified.
        'True': Value is true.
        'False': Value is false.
    TwoFactorAuthSendResult:
      title: Result of the send sms verification code request.
      type: object
      properties:
        Message:
          title: Status message.
          type: string
        Result:
          title: Indicates whether the verification code was successfully sent or not.
          type: boolean
        UUID:
          title: UUID
          type: string
    TwoFactorAuthVerifyResult:
      title: Result of the code verification request.
      type: object
      properties:
        Message:
          title: Returns verification of code result message
          type: string
        Result:
          title: Indicates whether the verification code is correct or not.
          type: boolean
    USChapter3Status:
      enum:
        - CentralBankofIssue
        - Complextrust
        - Corporation
        - Disregardedentity
        - Estate
        - Government
        - Grantortrust
        - NonQualifiedIntermediary
        - Nonwithholdingforeigngrantortrust
        - Nonwithholdingforeignpartnership
        - Nonwithholdingforeignsimpletrust
        - Partnership
        - Privatefoundation
        - QualifiedIntermediary
        - SimpleTrust
        - Taxexemptorganization
        - Territoryfinancialinstitution
        - USbranch
        - Withholdingforeignpartnership
        - Withholdingforeigntrust
      type: string
    USChapter3StatusNullable:
      allOf:
        - $ref: '#/components/schemas/USChapter3Status'
    USTaxDocument:
      enum:
        - W8BEN
        - W8BENE
        - W8BENESubstitute
        - W8BEN_PreFATCA
        - W8ECI
        - W8ECI_PreFATCA
        - W8EXP
        - W8EXP_PreFATCA
        - W9
        - W9_PreFATCA
      type: string
    USTaxDocumentNullable:
      allOf:
        - $ref: '#/components/schemas/USTaxDocument'
    USTaxLOBProvisions:
      title: USTaxLOBProvisions
      enum:
        - Companythatmeetsthederivativebenefitstest
        - Companythatmeetstheownershipandbaseerosiontest
        - Companywithanincomethatmeetsactivetradeorbusinesstest
        - FavourablediscretionarydeterminationbytheUScompetentauthorityreceived
        - Government
        - Other_ArticleandParagraph
        - Othertaxexemptorganization
        - Publiclytradedcorporation
        - Subsidiaryofpubliclytradedcorporation
        - Taxexemptpensiontrustorpensiontrust
      type: string
    USTaxLOBProvisionsNullable:
      allOf:
        - $ref: '#/components/schemas/USTaxLOBProvisions'
    UkData:
      title: UK data
      type: object
      properties:
        EstimatedSavingAndInvestmentGbp:
          title: Estimated saving and investment in GBP
          type: string
        MonthlyIncomeAfterTaxGbp:
          title: Monthly income after tax in GBP
          type: string
    UnsubscribeMailRequestResult:
      title: Result of an unsubscribe mail request.
      type: object
      properties:
        Code:
          title: Code indicating the result of a request for mail-unsubscribe.
          allOf:
            - $ref: '#/components/schemas/UnsubscribeMailResultCode'
    UnsubscribeMailResult:
      title: Result of a unsubscribe mail command.
      type: object
      properties:
        Code:
          title: Code indicating the result of a request for mail-unsubscribe.
          allOf:
            - $ref: '#/components/schemas/UnsubscribeMailResultCode'
    UnsubscribeMailResultCode:
      title: "Enumeration of result codes that can be returned\r\n            as a result of an unsubscribe mail request and command."
      enum:
        - EmailAddressInvalid
        - NoMatch
        - Ok
      type: string
      x-enum-descriptions:
        Ok: The unsubscribe operation succeeded.
        NoMatch: A user with the specified e-mail address does not exist in the system.
        EmailAddressInvalid: The specified e-mail address is invalid.
    UpdateAccount:
      title: Update account details
      required:
        - AccountDetails
      type: object
      properties:
        AccountDetails:
          title: Account Details
          type: array
          items:
            $ref: '#/components/schemas/UpdateAccountDetails'
    UpdateAccountDetails:
      title: Update account details
      required:
        - AccountKey
      type: object
      properties:
        AccountGroupIds:
          title: Account group identifiers (from Options)
          type: array
          items:
            type: integer
            format: int32
        AccountKey:
          title: Currency
          minLength: 1
          type: string
          x-type-name: AccountKey
        AccountRiskProfileId:
          title: Account risk profile
          allOf:
            - type: integer
              format: int32
        Features:
          title: Account features
          type: array
          items:
            $ref: '#/components/schemas/Models.Feature'
        MaxCreditLine:
          title: Max credit line
          allOf:
            - type: number
        Transferred:
          title: Transferred
          allOf:
            - type: boolean
    UpdateClient:
      title: Update client details
      type: object
      properties:
        ClientGroupIds:
          title: Client group identifiers (from Options)
          type: array
          items:
            type: integer
            format: int32
        CustodyFeeId:
          title: Custody fee identifier (from Options)
          allOf:
            - type: integer
              format: int32
        Features:
          title: Client features to update data like Securities Lending (from Options)
          type: array
          items:
            $ref: '#/components/schemas/Feature'
    UpdateContactDetails:
      title: UpdateContactDetails
      type: object
      properties:
        MarketingConsent:
          title: Marketing consent for this contact
          allOf:
            - type: boolean
    UpdateSignupCommand:
      title: Public data contract for updating an existing onboarding application.
      required:
        - BusinessContext
        - EmailAddress
      type: object
      properties:
        BusinessContext:
          title: Business context of the onboarding.
          allOf:
            - $ref: '#/components/schemas/Model.BusinessContext'
        EmailAddress:
          title: Applicant's e-mail address.
          type: string
        Password:
          title: Password to set for the account.
          type: string
        SignupData:
          title: Detailed data about the applicant used in the onboarding process.
          allOf:
            - $ref: '#/components/schemas/SignupData'
    UpdatedAccountDetails:
      title: Updated Account Details
      type: object
      properties:
        AccountId:
          title: Account Id
          type: string
        AccountKey:
          title: Account Key
          type: string
        ErrorMessages:
          title: Error Messages
          type: array
          items:
            type: string
        Status:
          title: Status
          allOf:
            - $ref: '#/components/schemas/AccountCreatedStatus'
    UpdatedAccountDetailsListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/UpdatedAccountDetails'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    UserId:
      minimum: 1
      type: integer
      format: int32
    UserIdNullable:
      allOf:
        - $ref: '#/components/schemas/UserId'
    ValidateClientRequest:
      title: Properties for requesting a check for a user.
      type: object
      properties:
        Email:
          title: Email
          type: string
        Environment:
          title: Live or demo?
          allOf:
            - $ref: '#/components/schemas/ClientEnvironment'
        UserId:
          title: User Id
          type: string
    ValidateClientResponse:
      title: Returns the result of the user match.
      type: object
      properties:
        Matched:
          title: 'true if match, otherwise false'
          type: boolean
    ValidateExternalTokenRequest:
      title: Request for the validation of external token
      type: object
      properties:
        Name:
          title: User ID
          type: string
        Token:
          title: Token to verify
          type: string
    ValidateExternalTokenResponse:
      title: Response of the validation of the external token
      type: object
      properties:
        NumberOfAttempts:
          title: Number of Attempts
          type: integer
          format: int32
        ResponseResult:
          title: Result code
          allOf:
            - $ref: '#/components/schemas/ValidateExternalTokenResult'
    ValidateExternalTokenResult:
      title: Result of the external token validation
      enum:
        - AllAttemptsExhausted
        - InvalidToken
        - TokenExpired
        - ValidToken
      type: string
      x-enum-descriptions:
        ValidToken: ValidToken
        InvalidToken: InvalidToken
        AllAttemptsExhausted: AllAttemptsExhausted
        TokenExpired: TokenExpired
    VerificationProvider:
      title: Verification Provider
      enum:
        - SecureMe
      type: string
      x-enum-descriptions:
        SecureMe: SecureMe
    Withdrawal:
      title: Info to send in case description
      type: object
      properties:
        ExternalBankAccount:
          title: Account which will be receive money.
          type: string
        WithdrawalDetails:
          title: Deatils for Trading Account(s).
          type: array
          items:
            $ref: '#/components/schemas/WithdrawalDetails'
    WithdrawalDetails:
      title: Withdrawal deatils.
      type: object
      properties:
        TradingAccount:
          title: Trading Account
          type: string
        WithdrawalRequested:
          title: Withdrawal request created successfully or failed.
          allOf:
            - $ref: '#/components/schemas/WithdrawalRequested'
    WithdrawalRequested:
      title: Is withdrawal requested ?
      enum:
        - Failed
        - Yes
      type: string
      x-enum-descriptions:
        Yes: Yes requested
        Failed: Failed to create withdrawal
  responses:
    BadRequest:
      description: One or more of the provided parameters are invalid.
      content:
        application/json:
          schema:
            required:
              - ErrorCode
              - Message
            type: object
            properties:
              ErrorCode:
                enum:
                  - InvalidRequest
                type: string
                x-enum-descriptions:
                  InvalidRequest: Default error code returned when it cannot be determined which part of the request is malformed.
              Message:
                type: string
              ModelState:
                $ref: '#/components/schemas/ModelStateDictionary'
    ServiceUnavailable:
      description: Service Unavailable.
    TooManyRequests:
      description: The request was rejected due to rate limit being exceeded.
    Unauthorized:
      description: Indicates that the request was rejected because the 'Authorization' header was missing in the request or contained an invalid security token.
  parameters:
    XInternalIP:
      name: X-Internal-IP
      in: header
      description: Required header for access to network internal endpoints.
      required: true
      schema:
        enum:
          - '1'
        type: string
  securitySchemes:
    OpenApiJWTSecurityScheme:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OpenApiOAuthSecurityScheme:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://idp.blue.sso.sys.dom/authorize
          tokenUrl: https://idp.blue.sso.sys.dom/token
          scopes: { }
tags:
  - name: Accounts
    description: Provide services to create account.
  - name: Activities (Tasks)
    description: Register tasks related to lead or client
  - name: Certificates
    description: Controller for handling certificate based authentication requests
  - name: Client Renewals
    description: "The Client Renewals resource is only implemented in LIVE environment. Implementation in simulation system only returns sample data and response.\r\n             \r\n             Provides functionality to get and update client data information"
  - name: Clients
    description: Provide services to update client details.
  - name: Company Renewals
    description: "The Company Renewals resource is only implemented in LIVE environment. Implementation in simulation system only returns sample data and response.\r\n             \r\n             Provides functionality to get and update company data"
  - name: Documents
    description: Provide services to save\upload documents.
  - name: Lead Signups
    description: Provides services for working with onboarding flows.
  - name: Registrations
    description: Provides services for registrations.
  - name: Self Service
    description: Self service APIs
  - name: Signups
    description: "The Signups resource is only implemented in LIVE environment. Implementation in simulation system only returns sample data and response.\r\n            \r\nFull client registrations.\r\n\r\nThe Signups resource is intended for an IB to upload complete details of a prospective client. \r\n            A signup is completed by first POSTing information to the signups endpoint. \r\n            Subsequently you may POST to the /signups/files endpoint to add files to the signup. \r\n\r\n\r\nA number of the fields on the signup resource are user selectable options. You can get a list of options\r\n            for all user selectable fields by calling the /signup/options endpoint."
  - name: SimpleRegistrations
    description: 'Registration of interest, providing very limited information.'
  - name: Users
    description: Provides services for resetting user passwords.