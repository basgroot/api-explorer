openapi: 3.0.1
info:
  contact:
    email: openapisupport@saxobank.com
  title: Services.Portfolio
  description: 'The Portfolio service group provides services and end points that serves information about the clients current portfolio, such as account balance, open positions etc.'
  version: 2.2.428+3ac1850b34
servers:
  - url: https://gateway.saxobank.com/sim/openapi
paths:
  '/port/v1/closedpositions/subscriptions/{ContextId}':
    delete:
      tags:
        - ClosedPositions
      summary: Remove multiple subscriptions
      description: 'Removes multiple all subscriptions for the current session on this resource, and frees all resources on the server.'
      operationId: ClosedPositionsV1DeleteSubscriptions
      parameters:
        - name: ContextId
          in: path
          description: The context id part of the streaming session (used to identify the subscription within a streaming session).
          required: true
          schema:
            type: string
          example: '29931122'
        - name: Tag
          in: query
          description: Optional. Remove only subscriptions that are marked with specified tag.
          schema:
            type: string
          example: '2345223'
      responses:
        '204':
          description: No Content
        '202':
          description: Subscription delete request will be processed eventually.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/closedpositions/subscriptions/{ContextId}/{ReferenceId}':
    delete:
      tags:
        - ClosedPositions
      summary: Remove subscription
      description: Removes subscription for the current session identified by subscription id..
      operationId: ClosedPositionsV1DeleteSubscription
      parameters:
        - name: ContextId
          in: path
          description: The context id part of the streaming session (used to identify the subscription within a streaming session).
          required: true
          schema:
            type: string
          example: '29931122'
        - name: ReferenceId
          in: path
          description: Unique id of the subscription
          required: true
          schema:
            type: string
          example: 0f8fad5b-d9cb-469f-a165-70867728950e
      responses:
        '204':
          description: No Content
        '202':
          description: Subscription delete request will be processed eventually.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
    patch:
      tags:
        - ClosedPositions
      summary: Change the closed positions subscription page size
      description: 'Extends or reduces the page size, number of positions shown, on a running closed positions subscription. When expanding the page size, the subsequent closed positions are streamed so to avoid race conditions.'
      operationId: ClosedPositionsV1UpdateClosedPositionSubscriptionPagesize
      parameters:
        - name: ContextId
          in: path
          description: The context id part of the streaming session.
          required: true
          schema:
            type: string
          example: '29931122'
        - name: ReferenceId
          in: path
          description: Unique ID of the subscription
          required: true
          schema:
            type: string
          example: P54123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PositionPagingSubscriptionUpdateRequest'
            example:
              NewPageSize: 184
      responses:
        '204':
          description: No Content
        '202':
          description: Subscription change will be processed and respose will be streamed.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/closedpositions/subscriptions:
    post:
      tags:
        - ClosedPositions
      summary: Create a subscription on a list of closed positions and make it active
      description: Sets up a subscription and returns an initial snapshot of list of closed positions specified by the parameters in the request.
      operationId: ClosedPositionsV1AddActiveSubscription
      parameters:
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClosedPositionsSubscriptionRequest'
            example:
              Arguments:
                AccountGroupKey: LZTc7DdejXODf-WSl2aCyQ==
                AccountKey: LZTc7DdejXODf-WSl2aCyQ==
                ClientKey: 7m4I|vtYLUnEGg77o9uQhw==
                ClosedPositionId: 139597294-139694249
                FieldGroups:
                  - ClosedPosition
              ContextId: '20220202113634717'
              Format: application/json
              ReferenceId: CP06538
              RefreshRate: 1000
              Tag: PAGE1
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClosedPositionsSubscriptionResponse'
              example:
                Format: application/json
                InactivityTimeout: 120
                ReferenceId: CP66082
                RefreshRate: 1000
                Snapshot:
                  Data:
                    - ClosedPosition:
                        AccountId: 192134INET
                        Amount: 300000
                        AssetType: FxSpot
                        BuyOrSell: Buy
                        ClientId: '654321'
                        ClosedProfitLoss: 9597
                        ClosedProfitLossInBaseCurrency: 9597
                        ClosingMarketValue: 0
                        ClosingMarketValueInBaseCurrency: 0
                        ClosingMethod: Explicit
                        ClosingPositionId: '139694249'
                        ClosingPrice: 1.09139
                        ConversionRateInstrumentToBaseSettledClosing: false
                        ConversionRateInstrumentToBaseSettledOpening: true
                        ExecutionTimeClose: '2017-05-02T00:00:00.0000000+00:00'
                        ExecutionTimeOpen: '2017-04-12T00:00:00.0000000+00:00'
                        OpeningPositionId: '139597294'
                        OpenPrice: 1.0594
                        Uic: 21
                      ClosedPositionUniqueId: 139597294-139694249
                      NetPositionId: EURUSD_FxSpot
                State: Active
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - InvalidInput
                      - InvalidModelState
                      - NoValidInput
                      - SubscriptionExceedesPositionsLimit
                      - UnsupportedSubscriptionFormat
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: Error code returned when model state is invalid.
                      UnsupportedSubscriptionFormat: Error code returned when a subscription format that isn't supported by the publisher is requested.
                      InvalidClientId: Indicates that the requested client id was invalid.
                      InvalidInput: An error was encountered when processing given input parameters.
                      NoValidInput: No valid input values passed.
                      SubscriptionExceedesPositionsLimit: Too many positions requested. Streaming updates are only allowed on a limited number of positions.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - SubscriptionLimitExceeded
                    type: string
                    x-enum-descriptions:
                      SubscriptionLimitExceeded: 'Error code returned when more than the maximum allowed number of subscriptions for a specified type, is exceeded.'
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-streaming-type: 
        $ref: '#/components/schemas/ClosedPositionResponseArray'
  '/port/v1/closedpositions/{ClosedPositionId}/details':
    get:
      tags:
        - ClosedPositions
      summary: Get detailed information for a single position
      description: Gets detailed information about a single position as specified by the query parameters.
      operationId: ClosedPositionsV1GetPositionDetails
      parameters:
        - name: AccountGroupKey
          in: query
          description: The key of the account group to which the closed positions belongs.
          schema:
            title: The key of the account group to which the closed positions belongs.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: The key of the account to which the closed positions belongs.
          schema:
            title: The key of the account to which the closed positions belongs.
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: query
          description: The key of the client to which the closesd positions belongs.
          required: true
          schema:
            title: The key of the client to which the closesd positions belongs.
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: ClosedPositionId
          in: path
          description: Unique id of the position.
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClosedPositionDetailedResponse'
              example:
                ClosedPosition:
                  AccountId: 192134INET
                  Amount: 300000
                  AssetType: FxSpot
                  BuyOrSell: Buy
                  ClientId: '654321'
                  ClosedProfitLoss: 9597
                  ClosedProfitLossInBaseCurrency: 9597
                  ClosingMarketValue: 0
                  ClosingMarketValueInBaseCurrency: 0
                  ClosingMethod: Explicit
                  ClosingPositionId: '139694249'
                  ClosingPrice: 1.09139
                  ConversionRateInstrumentToBaseSettledClosing: false
                  ConversionRateInstrumentToBaseSettledOpening: true
                  ExecutionTimeClose: '2017-05-02T00:00:00.0000000+00:00'
                  ExecutionTimeOpen: '2017-04-12T00:00:00.0000000+00:00'
                  OpeningPositionId: '139597294'
                  OpenPrice: 1.0594
                  Uic: 21
                ClosedPositionDetails:
                  CurrencyConversionRateInstrumentToBaseClosing: 1
                  CurrencyConversionRateInstrumentToBaseOpening: 1
                  ValueDateClose: '2017-05-04T00:00:00.0000000+00:00'
                  ValueDateOpen: '2017-05-04T00:00:00.0000000+00:00'
                ClosedPositionUniqueId: 139597294-139694249
                DisplayAndFormat:
                  Currency: USD
                  Decimals: 4
                  Description: Euro/US Dollar
                  Format: AllowDecimalPips
                  Symbol: EURUSD
                Exchange:
                  Description: Inter Bank
                  ExchangeId: SBFX
                  IsOpen: true
                NetPositionId: EURUSD_FxSpot
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - PositionIdNotSpecified
                    type: string
                    x-enum-descriptions:
                      PositionIdNotSpecified: Position not specified.
                      InvalidClientId: Indicates that the requested client id was invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/closedpositions/{ClosedPositionId}':
    get:
      tags:
        - ClosedPositions
      summary: Get a single position
      description: Get a single position.
      operationId: ClosedPositionsV1GetClosedPosition
      parameters:
        - name: AccountGroupKey
          in: query
          description: The key of the account group to which the closed positions belongs.
          schema:
            title: The key of the account group to which the closed positions belongs.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: The key of the account to which the closed positions belongs.
          schema:
            title: The key of the account to which the closed positions belongs.
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: query
          description: The key of the client to which the closesd positions belongs.
          required: true
          schema:
            title: The key of the client to which the closesd positions belongs.
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: ClosedPositionId
          in: path
          description: Unique id of the position.
          required: true
          schema:
            type: string
        - name: FieldGroups
          in: query
          description: 'Specifies which data to return. Default is [ClosedPosition]'
          schema:
            title: 'Specifies which data to return. Default is [ClosedPosition]'
            type: array
            items:
              $ref: '#/components/schemas/ClosedPositionFieldGroup'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClosedPositionResponse'
              example:
                ClosedPosition:
                  AccountId: 192134INET
                  Amount: 300000
                  AssetType: FxSpot
                  BuyOrSell: Buy
                  ClientId: '654321'
                  ClosedProfitLoss: 9597
                  ClosedProfitLossInBaseCurrency: 9597
                  ClosingMarketValue: 0
                  ClosingMarketValueInBaseCurrency: 0
                  ClosingMethod: Explicit
                  ClosingPositionId: '139694249'
                  ClosingPrice: 1.09139
                  ConversionRateInstrumentToBaseSettledClosing: false
                  ConversionRateInstrumentToBaseSettledOpening: true
                  ExecutionTimeClose: '2017-05-02T00:00:00.0000000+00:00'
                  ExecutionTimeOpen: '2017-04-12T00:00:00.0000000+00:00'
                  OpeningPositionId: '139597294'
                  OpenPrice: 1.0594
                  Uic: 21
                ClosedPositionUniqueId: 139597294-139694249
                NetPositionId: EURUSD_FxSpot
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - PositionIdNotSpecified
                    type: string
                    x-enum-descriptions:
                      PositionIdNotSpecified: Position not specified.
                      InvalidClientId: Indicates that the requested client id was invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/closedpositions/me:
    get:
      tags:
        - ClosedPositions
      summary: 'Get closed positions for a client, to which the logged in user belongs'
      description: Returns a list of closed positions fulfilling the criteria specified by the query string parameters.
      operationId: GET_ClosedPositionsV1GetClosedPositions
      parameters:
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: FieldGroups
          in: query
          description: 'Specifies which data to return. Default is [ClosedPosition].'
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/ClosedPositionFieldGroup'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClosedPositionResponseListResult'
              example:
                __next: /openapi/port/....../?$top=1&$skip=1
                Data:
                  - ClosedPosition:
                      AccountId: 192134INET
                      Amount: 300000
                      AssetType: FxSpot
                      BuyOrSell: Buy
                      ClientId: '654321'
                      ClosedProfitLoss: 9597
                      ClosedProfitLossInBaseCurrency: 9597
                      ClosingMarketValue: 0
                      ClosingMarketValueInBaseCurrency: 0
                      ClosingMethod: Explicit
                      ClosingPositionId: '139694249'
                      ClosingPrice: 1.09139
                      ConversionRateInstrumentToBaseSettledClosing: false
                      ConversionRateInstrumentToBaseSettledOpening: true
                      ExecutionTimeClose: '2017-05-02T00:00:00.0000000+00:00'
                      ExecutionTimeOpen: '2017-04-12T00:00:00.0000000+00:00'
                      OpeningPositionId: '139597294'
                      OpenPrice: 1.0594
                      Uic: 21
                    ClosedPositionUniqueId: 139597294-139694249
                    NetPositionId: EURUSD_FxSpot
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/closedpositions:
    get:
      tags:
        - ClosedPositions
      summary: 'Get closed positions for a client, accountGroup or account'
      description: Returns a list of closed positions fulfilling the criteria specified by the query string parameters.
      operationId: ClosedPositionsV1GetClosedPositions
      parameters:
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: AccountGroupKey
          in: query
          description: The key of the account group to which the closed positions belongs.
          schema:
            title: The key of the account group to which the closed positions belongs.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: The key of the account to which the closed positions belongs.
          schema:
            title: The key of the account to which the closed positions belongs.
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: query
          description: The key of the client to which the closesd positions belongs.
          required: true
          schema:
            title: The key of the client to which the closesd positions belongs.
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: ClosedPositionId
          in: query
          description: The id of the closed position to which the closedposition belongs
          schema:
            title: The id of the closed position to which the closedposition belongs
            type: string
        - name: FieldGroups
          in: query
          description: 'Specifies which data to return. Default is [ClosedPosition]'
          schema:
            title: 'Specifies which data to return. Default is [ClosedPosition]'
            type: array
            items:
              $ref: '#/components/schemas/ClosedPositionFieldGroup'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClosedPositionResponseListResult'
              example:
                __next: /openapi/port/....../?$top=1&$skip=1
                Data:
                  - ClosedPosition:
                      AccountId: 192134INET
                      Amount: 300000
                      AssetType: FxSpot
                      BuyOrSell: Buy
                      ClientId: '654321'
                      ClosedProfitLoss: 9597
                      ClosedProfitLossInBaseCurrency: 9597
                      ClosingMarketValue: 0
                      ClosingMarketValueInBaseCurrency: 0
                      ClosingMethod: Explicit
                      ClosingPositionId: '139694249'
                      ClosingPrice: 1.09139
                      ConversionRateInstrumentToBaseSettledClosing: false
                      ConversionRateInstrumentToBaseSettledOpening: true
                      ExecutionTimeClose: '2017-05-02T00:00:00.0000000+00:00'
                      ExecutionTimeOpen: '2017-04-12T00:00:00.0000000+00:00'
                      OpeningPositionId: '139597294'
                      OpenPrice: 1.0594
                      Uic: 21
                    ClosedPositionUniqueId: 139597294-139694249
                    NetPositionId: EURUSD_FxSpot
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - ClosedPositionNotAccessibleInEndOfDayNettingMode
                      - InvalidClientId
                      - InvalidExchangeId
                      - NoValidInput
                    type: string
                    x-enum-descriptions:
                      NoValidInput: No valid input values passed.
                      InvalidClientId: Indicates that the requested client id was invalid.
                      InvalidExchangeId: The provided exchange id is invalid.
                      ClosedPositionNotAccessibleInEndOfDayNettingMode: ClosedPosition is not accessible in EndOfDay netting mode of the client
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/netpositions/subscriptions/{ContextId}/{ReferenceId}':
    delete:
      tags:
        - NetPositions
      summary: Remove subscription
      description: Removes subscription for the current session identified by subscription id.
      operationId: NetPositionsV1DeleteSubscription
      parameters:
        - name: ContextId
          in: path
          description: Unique streaming context ID part of the streaming session.
          required: true
          schema:
            type: string
          example: '29931122'
        - name: ReferenceId
          in: path
          description: Unique ID of the subscription
          required: true
          schema:
            type: string
          example: NP6783
      responses:
        '204':
          description: No Content
        '202':
          description: Subscription delete request will be processed eventually.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/netpositions/subscriptions/{ContextId}':
    delete:
      tags:
        - NetPositions
      summary: Remove multiple subscriptions
      description: 'Removes multiple all subscriptions for the current session on this resource, and frees all resources on the server.'
      operationId: NetPositionsV1DeleteSubscriptions
      parameters:
        - name: ContextId
          in: path
          description: The context id part of the streaming session (used to identify the subscription within a streaming session).
          required: true
          schema:
            type: string
          example: '29931122'
        - name: Tag
          in: query
          description: Optional. Remove only subscriptions that are marked with specified tag.
          schema:
            type: string
          example: PAGE2
      responses:
        '204':
          description: No Content
        '202':
          description: Subscription delete request will be processed eventually.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/netpositions/subscriptions:
    post:
      tags:
        - NetPositions
      summary: Create a subscription on a list of net positions and make it active
      description: Sets up a subscription and returns an initial snapshot of list of net positions specified by the parameters in the request.
      operationId: NetPositionsV1AddActiveSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NetPositionsSubscriptionRequest'
            example:
              Arguments:
                AccountGroupKey: LZTc7DdejXODf-WSl2aCyQ==
                AccountKey: LZTc7DdejXODf-WSl2aCyQ==
                ClientKey: 7m4I|vtYLUnEGg77o9uQhw==
                FieldGroups:
                  - NetPositionView
                  - NetPositionBase
                NetPositionId: EURUSD 41761NY 1.3765 C
              ContextId: '20220202113632803'
              Format: application/json
              ReferenceId: NP27328
              RefreshRate: 1000
              Tag: PAGE1
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetPositionsSubscriptionResponse'
              example:
                ContextId: ContextId3dd54517-437a-4247-9117-66a3640d6788
                Format: Format402efaf7-56b0-4610-bf75-bf2120434f01
                InactivityTimeout: 18435
                ReferenceId: ReferenceId30408eec-7d84-4b24-84aa-e1d249bc600e
                RefreshRate: 17705
                Snapshot:
                  __next: /openapi/port/....../?$top=1&$skip=1
                  Data:
                    - NetPositionBase:
                        AccountId: 192134INET
                        Amount: 100000
                        AssetType: FxSpot
                        CanBeClosed: true
                        ClientId: '654321'
                        HasForceOpenPositions: false
                        IsMarketOpen: false
                        NonTradableReason: None
                        NumberOfRelatedOrders: 0
                        OpenIpoOrdersCount: 0
                        OpenOrdersCount: 0
                        OpenTriggerOrdersCount: 0
                        PositionsAccount: 192134INET
                        SinglePositionStatus: Open
                        Uic: 31
                        ValueDate: '2017-05-04T00:00:00.0000000+00:00'
                      NetPositionId: GPBUSD_FXSpot
                      NetPositionView:
                        AverageOpenPrice: 1.32167
                        CalculationReliability: Ok
                        CurrentPrice: 1.29188
                        CurrentPriceDelayMinutes: 15
                        CurrentPriceType: Mid
                        Exposure: 100000
                        ExposureInBaseCurrency: 129205
                        InstrumentPriceDayPercentChange: 0.27
                        PositionCount: 1
                        PositionsNotClosedCount: 0
                        ProfitLossOnTrade: -2979
                        Status: Open
                        TradeCostsTotal: 0
                        TradeCostsTotalInBaseCurrency: 0
                State: Active
                Tag: Tag33b26f7e-c634-4595-b774-ba59cfc3848e
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - InvalidInput
                      - InvalidModelState
                      - NoValidInput
                      - UnsupportedSubscriptionFormat
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: Error code returned when model state is invalid.
                      UnsupportedSubscriptionFormat: Error code returned when a subscription format that isn't supported by the publisher is requested.
                      InvalidClientId: Indicates that the requested client id was invalid.
                      InvalidInput: An error was encountered when processing given input parameters.
                      NoValidInput: No valid input values passed.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - SubscriptionLimitExceeded
                    type: string
                    x-enum-descriptions:
                      SubscriptionLimitExceeded: 'Error code returned when more than the maximum allowed number of subscriptions for a specified type, is exceeded.'
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-streaming-type: 
        $ref: '#/components/schemas/NetPositionResponseArray'
  /port/v1/netpositions:
    get:
      tags:
        - NetPositions
      summary: 'Get net positions for a client, account group or account'
      description: "Returns a list of net positions fulfilling the criteria specified by the query string parameters.\r\n            Each net position may include all related sub positions if fieldGroups includes SubPositions."
      operationId: GET_NetPositionsV1GetNetPositions
      parameters:
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: AccountGroupKey
          in: query
          description: The key of the account group to which the positions belong.
          schema:
            title: The key of the account group to which the positions belong.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: The key of the account to which the positions belong.
          schema:
            title: The key of the account to which the positions belong.
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: AssetType
          in: query
          description: Optional. The AssetType.
          schema:
            title: Optional. The AssetType.
            allOf:
              - $ref: '#/components/schemas/AssetTypeNullable'
        - name: ClientKey
          in: query
          description: The key of the client to which the positions belong.
          required: true
          schema:
            title: The key of the client to which the positions belong.
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: ExpiryDate
          in: query
          description: Optional. The expiry date. Only used to distinguish FxOptions.
          schema:
            title: Optional. The expiry date. Only used to distinguish FxOptions.
            allOf:
              - type: string
                format: date-time
                x-type-name: UtcDateTime
        - name: FieldGroups
          in: query
          description: 'Specifies which data to return. Default is [NetPositionBase,NetPositionView]'
          schema:
            title: 'Specifies which data to return. Default is [NetPositionBase,NetPositionView]'
            type: array
            items:
              $ref: '#/components/schemas/NetPositionFieldGroup'
        - name: LowerBarrier
          in: query
          description: Optional. The Lower Barrier. Only used to distinguish Fx Barrier Options.
          schema:
            title: Optional. The Lower Barrier. Only used to distinguish Fx Barrier Options.
            allOf:
              - type: number
        - name: NetPositionId
          in: query
          description: Optional. The id of the netposition
          schema:
            title: Optional. The id of the netposition
            type: string
        - name: PutCall
          in: query
          description: Optional. Put or Call. Only used to distinguish FxOptions.
          schema:
            title: Optional. Put or Call. Only used to distinguish FxOptions.
            allOf:
              - $ref: '#/components/schemas/PutCallNullable'
        - name: Strike
          in: query
          description: Optional. The strike price of the option. Only used to distinguish FxOptions.
          schema:
            title: Optional. The strike price of the option. Only used to distinguish FxOptions.
            allOf:
              - type: number
        - name: Uic
          in: query
          description: Optional. Unique id of the instrument.
          schema:
            title: Optional. Unique id of the instrument.
            allOf:
              - type: integer
                format: int32
        - name: UpperBarrier
          in: query
          description: Optional. The Upper Barrier. Only used to distinguish Fx Barrier Options.
          schema:
            title: Optional. The Upper Barrier. Only used to distinguish Fx Barrier Options.
            allOf:
              - type: number
        - name: ValueDate
          in: query
          description: Optional. The value date. Only used to distinguish FxForwards.
          schema:
            title: Optional. The value date. Only used to distinguish FxForwards.
            allOf:
              - type: string
                format: date-time
                x-type-name: UtcDateTime
        - name: WatchlistId
          in: query
          description: Optional. Watchlist Id.Filter on watchlist instruments
          schema:
            title: Optional. Watchlist Id.Filter on watchlist instruments
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetPositionResponseListResult'
              example:
                __next: /openapi/port/....../?$top=1&$skip=1
                Data:
                  - NetPositionBase:
                      AccountId: 192134INET
                      Amount: 100000
                      AssetType: FxSpot
                      CanBeClosed: true
                      ClientId: '654321'
                      HasForceOpenPositions: false
                      IsMarketOpen: false
                      NonTradableReason: None
                      NumberOfRelatedOrders: 0
                      OpenIpoOrdersCount: 0
                      OpenOrdersCount: 0
                      OpenTriggerOrdersCount: 0
                      PositionsAccount: 192134INET
                      SinglePositionStatus: Open
                      Uic: 31
                      ValueDate: '2017-05-04T00:00:00.0000000+00:00'
                    NetPositionId: GPBUSD_FXSpot
                    NetPositionView:
                      AverageOpenPrice: 1.32167
                      CalculationReliability: Ok
                      CurrentPrice: 1.29188
                      CurrentPriceDelayMinutes: 15
                      CurrentPriceType: Mid
                      Exposure: 100000
                      ExposureInBaseCurrency: 129205
                      InstrumentPriceDayPercentChange: 0.27
                      PositionCount: 1
                      PositionsNotClosedCount: 0
                      ProfitLossOnTrade: -2979
                      Status: Open
                      TradeCostsTotal: 0
                      TradeCostsTotalInBaseCurrency: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - InvalidExchangeId
                      - NetPositionIdNotSpecified
                      - NoValidInput
                    type: string
                    x-enum-descriptions:
                      NoValidInput: No valid input values passed.
                      NetPositionIdNotSpecified: Net position not specified.
                      InvalidClientId: Indicates that the requested client id was invalid.
                      InvalidExchangeId: The provided exchange id is invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/netpositions/me:
    get:
      tags:
        - NetPositions
      summary: Get net positions for the current user's client
      description: "Returns a list of net positions fulfilling the criteria specified by the query string parameters.\r\n            Each net position may include all related sub positions if fieldGroups includes SubPositions."
      operationId: NetPositionsV1GetNetPositions
      parameters:
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: FieldGroups
          in: query
          description: 'Specifies which data to return. Default is [NetPositionBase, NetPositionView].'
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/NetPositionFieldGroup'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetPositionResponseListResult'
              example:
                __next: /openapi/port/....../?$top=1&$skip=1
                Data:
                  - NetPositionBase:
                      AccountId: 192134INET
                      Amount: 100000
                      AssetType: FxSpot
                      CanBeClosed: true
                      ClientId: '654321'
                      HasForceOpenPositions: false
                      IsMarketOpen: false
                      NonTradableReason: None
                      NumberOfRelatedOrders: 0
                      OpenIpoOrdersCount: 0
                      OpenOrdersCount: 0
                      OpenTriggerOrdersCount: 0
                      PositionsAccount: 192134INET
                      SinglePositionStatus: Open
                      Uic: 31
                      ValueDate: '2017-05-04T00:00:00.0000000+00:00'
                    NetPositionId: GPBUSD_FXSpot
                    NetPositionView:
                      AverageOpenPrice: 1.32167
                      CalculationReliability: Ok
                      CurrentPrice: 1.29188
                      CurrentPriceDelayMinutes: 15
                      CurrentPriceType: Mid
                      Exposure: 100000
                      ExposureInBaseCurrency: 129205
                      InstrumentPriceDayPercentChange: 0.27
                      PositionCount: 1
                      PositionsNotClosedCount: 0
                      ProfitLossOnTrade: -2979
                      Status: Open
                      TradeCostsTotal: 0
                      TradeCostsTotalInBaseCurrency: 0
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/netpositions/{NetPositionId}/details':
    get:
      tags:
        - NetPositions
      summary: Get detailed information for a single net position
      description: "Gets detailed information about a single net position as specified by the query parameters.\r\n            Note: the net position is fully identified by the supplied netPositionId, but accountId and clientId may be specified\r\n            to determine whether the netposition values should be calculated at client or account level."
      operationId: NetPositionsV1GetNetPositionDetails
      parameters:
        - name: AccountGroupKey
          in: query
          description: The key of the account group to which the positions belong.
          schema:
            title: The key of the account group to which the positions belong.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: The key of the account to which the positions belong.
          schema:
            title: The key of the account to which the positions belong.
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: query
          description: The key of the client to which the positions belong.
          required: true
          schema:
            title: The key of the client to which the positions belong.
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: NetPositionId
          in: path
          description: Unique id of the net position.
          required: true
          schema:
            type: string
          example: EURUSD_41761NY_1.3765 C
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetPositionDetailedResponse'
              example:
                NetPositionBase:
                  AccountId: 192134INET
                  Amount: 100000
                  AssetType: FxSpot
                  CanBeClosed: true
                  ClientId: '654321'
                  HasForceOpenPositions: false
                  IsMarketOpen: false
                  NonTradableReason: None
                  NumberOfRelatedOrders: 0
                  OpenIpoOrdersCount: 0
                  OpenOrdersCount: 0
                  OpenTriggerOrdersCount: 0
                  PositionsAccount: 192134INET
                  SinglePositionStatus: Open
                  Uic: 31
                  ValueDate: '2017-05-04T00:00:00.0000000+00:00'
                NetPositionDetails:
                  MarketValue: -2958
                  MarketValueInBaseCurrency: -2958
                  NonTradableReason: None
                NetPositionId: GPBUSD_FXSpot
                NetPositionView:
                  AverageOpenPrice: 1.32167
                  CalculationReliability: Ok
                  CurrentPrice: 1.29188
                  CurrentPriceDelayMinutes: 15
                  CurrentPriceType: Mid
                  Exposure: 100000
                  ExposureInBaseCurrency: 129205
                  InstrumentPriceDayPercentChange: 0.27
                  PositionCount: 1
                  PositionsNotClosedCount: 0
                  ProfitLossOnTrade: -2979
                  SettlementInstruction:
                    ActualRolloverAmount: 0
                    ActualSettlementAmount: 10
                    Amount: 10
                    IsSettlementInstructionsAllowed: false
                    Month: 7
                    SettlementType: FullSettlement
                    Year: 2020
                  Status: Open
                  TradeCostsTotal: 0
                  TradeCostsTotalInBaseCurrency: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - NetPositionIdNotSpecified
                      - NoValidInput
                    type: string
                    x-enum-descriptions:
                      NoValidInput: No valid input values passed.
                      NetPositionIdNotSpecified: Net position not specified.
                      InvalidClientId: Indicates that the requested client id was invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/netpositions/{NetPositionId}':
    get:
      tags:
        - NetPositions
      summary: Get a single net position
      description: "Gets a single net position calculated as specified by the query parameters. \r\n            The net position may include all related sub positions if fieldGroups includes SubPositions.\r\n            Note: the net position is fully identified by the supplied netPositionId, but accountId and clientId may be specified\r\n            to determine whether the netposition values should be calculated at client or account level."
      operationId: NetPositionsV1GetNetPosition
      parameters:
        - name: AccountGroupKey
          in: query
          description: The key of the account group to which the positions belong.
          schema:
            title: The key of the account group to which the positions belong.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: The key of the account to which the positions belong.
          schema:
            title: The key of the account to which the positions belong.
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: query
          description: The key of the client to which the positions belong.
          required: true
          schema:
            title: The key of the client to which the positions belong.
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: FieldGroups
          in: query
          description: 'Specifies which data to return. Default is [NetPositionBase,NetPositionView]'
          schema:
            title: 'Specifies which data to return. Default is [NetPositionBase,NetPositionView]'
            type: array
            items:
              $ref: '#/components/schemas/NetPositionFieldGroup'
        - name: NetPositionId
          in: path
          description: Unique id of the net position.
          required: true
          schema:
            type: string
          example: EURUSD 41761NY 1.3765 C
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NetPositionResponse'
              example:
                NetPositionBase:
                  AccountId: 192134INET
                  Amount: 100000
                  AssetType: FxSpot
                  CanBeClosed: true
                  ClientId: '654321'
                  HasForceOpenPositions: false
                  IsMarketOpen: false
                  NonTradableReason: None
                  NumberOfRelatedOrders: 0
                  OpenIpoOrdersCount: 0
                  OpenOrdersCount: 0
                  OpenTriggerOrdersCount: 0
                  PositionsAccount: 192134INET
                  SinglePositionStatus: Open
                  Uic: 31
                  ValueDate: '2017-05-04T00:00:00.0000000+00:00'
                NetPositionId: GPBUSD_FXSpot
                NetPositionView:
                  AverageOpenPrice: 1.32167
                  CalculationReliability: Ok
                  CurrentPrice: 1.29188
                  CurrentPriceDelayMinutes: 15
                  CurrentPriceType: Mid
                  Exposure: 100000
                  ExposureInBaseCurrency: 129205
                  InstrumentPriceDayPercentChange: 0.27
                  PositionCount: 1
                  PositionsNotClosedCount: 0
                  ProfitLossOnTrade: -2979
                  Status: Open
                  TradeCostsTotal: 0
                  TradeCostsTotalInBaseCurrency: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - NetPositionIdNotSpecified
                      - NoValidInput
                    type: string
                    x-enum-descriptions:
                      NoValidInput: No valid input values passed.
                      NetPositionIdNotSpecified: Net position not specified.
                      InvalidClientId: Indicates that the requested client id was invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v2/exposure/currency/subscriptions/{ContextId}/{ReferenceId}':
    delete:
      tags:
        - Exposure
      summary: Remove subscription
      description: Removes subscription for the current session identified by subscription id..
      operationId: ExposureV2DeleteSubscription
      parameters:
        - name: ContextId
          in: path
          description: The context id part of the streaming session (used to identify the subscription within a streaming session).
          required: true
          schema:
            type: string
          example: '29931122'
        - name: ReferenceId
          in: path
          description: Unique id of the subscription
          required: true
          schema:
            type: string
          example: 0f8fad5b-d9cb-469f-a165-70867728950e
      responses:
        '204':
          description: No Content
        '202':
          description: Subscription delete request will be processed eventually.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v2/exposure/currency/subscriptions/{ContextId}':
    delete:
      tags:
        - Exposure
      summary: Remove multiple subscriptions
      description: 'Removes multiple all subscriptions for the current session on this resource, and frees all resources on the server.'
      operationId: ExposureV2DeleteSubscriptions
      parameters:
        - name: ContextId
          in: path
          description: The context id part of the streaming session (used to identify the subscription within a streaming session).
          required: true
          schema:
            type: string
          example: '29931122'
        - name: Tag
          in: query
          description: Optional. Remove only subscriptions that are marked with specified tag.
          schema:
            type: string
          example: '2345223'
      responses:
        '204':
          description: No Content
        '202':
          description: Subscription delete request will be processed eventually.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v2/exposure/currency/subscriptions:
    post:
      tags:
        - Exposure
      summary: Create a subscription on a list of instrument exposure and make it active
      description: Sets up a subscription and returns an initial snapshot of list of instrument exposure specified by the parameters in the request.
      operationId: ExposureV2AddActiveSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CurrencyExposureSubscriptionRequest'
            example:
              Arguments:
                AccountGroupKey: valueac2aa696-9a2c-460e-aad1-e42c8f63c507
                AccountKey: 32cc2949-d8a2-46f3-8fb4-563736d52075
                ClientKey: 71b5957b-d04c-4af7-8011-972c17cce761
                CurrencyCode: CurrencyCode1a009c1f-9919-40fe-bbbe-5b9e62ca35ee
              ContextId: '-'
              Format: Format31dfb566-f200-4ab9-abd1-5b419638bfaf
              ReferenceId: '-'
              RefreshRate: 70
              ReplaceReferenceId: '-'
              Tag: Tag673dfc28-c57c-43be-8398-a105a730a2f8
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExposureSubscriptionResponse'
              example:
                ContextId: ContextId120e4080-a09c-4fff-94ae-d199b264d372
                Format: Format5b1fc5c8-e484-4fdb-84bb-9b47cbab3d55
                InactivityTimeout: 23605
                ReferenceId: ReferenceId5499692f-9073-45ba-bb97-a36e7bc48d6d
                RefreshRate: 8772
                Snapshot:
                  CurrencyExposures:
                    - AmountsInCurrency:
                        Cash: 209938336203.19418
                        Fx: 8.624771320602681E+23
                        ProfitLoss: 4.044077188395138E+17
                        Total: -2.2755823726337505E+21
                      AmountsInEntityCurrency:
                        Cash: -77001813006.95482
                        Fx: 441879933897.208
                        ProfitLoss: 381723.1329415108
                        Total: 69327533944667.57
                      AmountsInRequestCurrency:
                        Cash: -6.5329622406612795E+19
                        Fx: 140307.42139737104
                        ProfitLoss: -28946609.451435022
                        Total: 6.134431289170141E+17
                      Currency: Currency5015c369-441b-456a-974f-28b9ab1e67e1
                      ExposureCurrencyCode: ExposureCurrencyCoded720134e-61b0-463b-89ed-b1184112a84f
                      ExposureLimit: 399039327264.8525
                      ExposureUtilization: 2781846883658571.5
                      ValueDateCurrencyExposures:
                        Amounts:
                          - Exposures:
                              Cash: 3.5787546608317113E+24
                              Fx: -4323248.834256452
                              ProfitLoss: 5009.045103740485
                              Total: -1000173.495287416
                            ValueDate: '2021-12-08T20:09:33.2545440+00:00'
                            ValueDateKey: ValueDateKeyd0405d2e-91ae-4ecb-88c4-3dca9b352d43
                        NonDatedExposure:
                          Cash: 6.772332808625872E+22
                          Fx: 3.939215738252004E+26
                          ProfitLoss: -35307112.49523425
                          Total: -69399839400529040
                        Total:
                          Cash: -8.122896725104065E+21
                          Fx: 4.8273431203649346E+27
                          ProfitLoss: -5.510723679253255
                          Total: 29677778313793640
                  NetOpenPositionValue:
                    AmountInEntityCurrency: -5.063468211154389E+27
                    AmountInRequestCurrency: -4100665886744.4863
                    ExposureCurrencyCode: ExposureCurrencyCodee515ee3a-25f9-4451-94fe-00a95f417eea
                    ExposureLimit: 1098788.0635033508
                    ExposureUtilization: 76293231276505.1
                State: Active
                Tag: Tag6e29db04-6478-4aec-beb1-9e1d52447245
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - InvalidInput
                      - InvalidModelState
                      - NoValidInput
                      - UnsupportedSubscriptionFormat
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: Error code returned when model state is invalid.
                      UnsupportedSubscriptionFormat: Error code returned when a subscription format that isn't supported by the publisher is requested.
                      InvalidClientId: Indicates that the requested client id was invalid.
                      InvalidInput: An error was encountered when processing given input parameters.
                      NoValidInput: No valid input values passed.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - SubscriptionLimitExceeded
                    type: string
                    x-enum-descriptions:
                      SubscriptionLimitExceeded: 'Error code returned when more than the maximum allowed number of subscriptions for a specified type, is exceeded.'
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-streaming-type: 
        $ref: '#/components/schemas/CurrencyExposureResponse'
  /port/v1/exposure/fxspot:
    get:
      tags:
        - Exposure
      summary: 'Get net FxSpot exposures list for a client, accountGroup or account'
      description: 'Returns a list of currency exposures from FxSpot positions for a requested client, account group or account.'
      operationId: ExposureV1GetFxSpotNetExposuresForLoggedInUser
      parameters:
        - name: AccountGroupKey
          in: query
          description: The key of the account group to which the positions belong.
          schema:
            title: The key of the account group to which the positions belong.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: The key of the account to which the positions belong.
          schema:
            title: The key of the account to which the positions belong.
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: query
          description: The key of the client to which the positions belong.
          required: true
          schema:
            title: The key of the client to which the positions belong.
            minLength: 1
            type: string
            x-type-name: ClientKey
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExposuresResponseListResult'
              example:
                Data:
                  - Amount: -2.5690961603343267E+23
                    AmountInCalculationEntityCurrency: -3.346050610607516E+18
                    Currency: Currencyccffefd9-3aed-4a6c-974a-902a42746903
                MaxRows: 26154
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - InvalidExchangeId
                      - NoValidInput
                    type: string
                    x-enum-descriptions:
                      NoValidInput: No valid input values passed.
                      InvalidClientId: Indicates that the requested client id was invalid.
                      InvalidExchangeId: The provided exchange id is invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/exposure/fxspot/me:
    get:
      tags:
        - Exposure
      summary: 'Get net FxSpot exposures for a client, to which the logged in user belongs'
      description: 'Returns a list of currency exposures from FxSpot positions for the client, to which the logged in user belongs.'
      operationId: ExposureV1GetFxSpotNetExposures
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExposuresResponseListResult'
              example:
                Data:
                  - Amount: -2.5690961603343267E+23
                    AmountInCalculationEntityCurrency: -3.346050610607516E+18
                    Currency: Currencyccffefd9-3aed-4a6c-974a-902a42746903
                MaxRows: 26154
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/exposure/currency:
    get:
      tags:
        - Exposure
      summary: 'Get a currency exposures list for a client, accountGroup or account'
      description: Returns a list of currencies in which there is an exposure.
      operationId: ExposureV1GetCurrencyExposuresForLoggedInUser
      parameters:
        - name: AccountGroupKey
          in: query
          description: The key of the account group to which the positions belong.
          schema:
            title: The key of the account group to which the positions belong.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: The key of the account to which the positions belong.
          schema:
            title: The key of the account to which the positions belong.
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: query
          description: The key of the client to which the positions belong.
          required: true
          schema:
            title: The key of the client to which the positions belong.
            minLength: 1
            type: string
            x-type-name: ClientKey
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExposuresResponseListResult'
              example:
                Data:
                  - Amount: -2.5690961603343267E+23
                    AmountInCalculationEntityCurrency: -3.346050610607516E+18
                    Currency: Currencyccffefd9-3aed-4a6c-974a-902a42746903
                MaxRows: 26154
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - InvalidExchangeId
                      - NoValidInput
                    type: string
                    x-enum-descriptions:
                      NoValidInput: No valid input values passed.
                      InvalidClientId: Indicates that the requested client id was invalid.
                      InvalidExchangeId: The provided exchange id is invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/exposure/currency/me:
    get:
      tags:
        - Exposure
      summary: 'Get currency exposures for a client, to which the logged in user belongs'
      description: Returns a list of currencies and net exposures.
      operationId: ExposureV1GetCurrencyExposures
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CurrencyExposuresResponseListResult'
              example:
                Data:
                  - Amount: -2.5690961603343267E+23
                    AmountInCalculationEntityCurrency: -3.346050610607516E+18
                    Currency: Currencyccffefd9-3aed-4a6c-974a-902a42746903
                MaxRows: 26154
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/exposure/instruments/subscriptions/{ContextId}/{ReferenceId}':
    delete:
      tags:
        - Exposure
      summary: Remove subscription
      description: Removes subscription for the current session identified by subscription id..
      operationId: ExposureV1DeleteSubscription
      parameters:
        - name: ContextId
          in: path
          description: The context id part of the streaming session (used to identify the subscription within a streaming session).
          required: true
          schema:
            type: string
          example: '29931122'
        - name: ReferenceId
          in: path
          description: Unique id of the subscription
          required: true
          schema:
            type: string
          example: 0f8fad5b-d9cb-469f-a165-70867728950e
      responses:
        '204':
          description: No Content
        '202':
          description: Subscription delete request will be processed eventually.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/exposure/instruments/subscriptions/{ContextId}':
    delete:
      tags:
        - Exposure
      summary: Remove multiple subscriptions
      description: 'Removes multiple all subscriptions for the current session on this resource, and frees all resources on the server.'
      operationId: ExposureV1DeleteSubscriptions
      parameters:
        - name: ContextId
          in: path
          description: The context id part of the streaming session (used to identify the subscription within a streaming session).
          required: true
          schema:
            type: string
          example: '29931122'
        - name: Tag
          in: query
          description: Optional. Remove only subscriptions that are marked with specified tag.
          schema:
            type: string
          example: '2345223'
      responses:
        '204':
          description: No Content
        '202':
          description: Subscription delete request will be processed eventually.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/exposure/instruments/subscriptions:
    post:
      tags:
        - Exposure
      summary: Create a subscription on a list of instrument exposure and make it active
      description: Sets up a subscription and returns an initial snapshot of list of instrument exposure specified by the parameters in the request.
      operationId: ExposureV1AddActiveSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstrumentExposureSubscriptionRequest'
            example:
              Arguments:
                AccountGroupKey: LZTc7DdejXODf-WSl2aCyQ==
                AccountKey: LZTc7DdejXODf-WSl2aCyQ==
                AssetType: FxSpot
                ClientKey: 7m4I|vtYLUnEGg77o9uQhw==
                Uic: 21
              ContextId: '-'
              Format: Formata9f9918d-2ac8-4a6d-a171-02f95eaa0b28
              ReferenceId: '-'
              RefreshRate: 68
              ReplaceReferenceId: '-'
              Tag: Tag17fa6826-12a3-41d4-9ad3-f349ac2a2754
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentExposureSubscriptionResponse'
              example:
                ContextId: '20220202113634357'
                Format: application/json
                InactivityTimeout: 120
                ReferenceId: E78959
                RefreshRate: 1000
                Snapshot:
                  Data:
                    - Amount: 200000
                      AssetType: FxSpot
                      AverageOpenPrice: 1.08414
                      CalculationReliability: Ok
                      CanBeClosed: false
                      DisplayAndFormat:
                        Currency: USD
                        Decimals: 4
                        Description: Euro/US Dollar
                        Format: AllowDecimalPips
                        Symbol: EURUSD
                      NetPositionId: EURUSD_FxSpot
                      Uic: 21
                State: Active
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - InvalidInput
                      - InvalidModelState
                      - NoValidInput
                      - UnsupportedSubscriptionFormat
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: Error code returned when model state is invalid.
                      UnsupportedSubscriptionFormat: Error code returned when a subscription format that isn't supported by the publisher is requested.
                      InvalidClientId: Indicates that the requested client id was invalid.
                      InvalidInput: An error was encountered when processing given input parameters.
                      NoValidInput: No valid input values passed.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - SubscriptionLimitExceeded
                    type: string
                    x-enum-descriptions:
                      SubscriptionLimitExceeded: 'Error code returned when more than the maximum allowed number of subscriptions for a specified type, is exceeded.'
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-streaming-type: 
        $ref: '#/components/schemas/InstrumentExposureResponseArray'
  /port/v1/exposure/instruments:
    get:
      tags:
        - Exposure
      summary: 'Get instrument net exposure list for a client, accountGroup or account'
      description: Returns a list of instruments in which there is an exposure fulfilling the criteria specified by the query string parameters.
      operationId: ExposureV1GetInstrumentsExposuresForLoggedInUser
      parameters:
        - name: AccountGroupKey
          in: query
          description: The key of the account group to which the positions belong.
          schema:
            title: The key of the account group to which the positions belong.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: The key of the account to which the positions belong.
          schema:
            title: The key of the account to which the positions belong.
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: AssetType
          in: query
          description: The AssetType.
          schema:
            title: The AssetType.
            allOf:
              - $ref: '#/components/schemas/AssetTypeNullable'
        - name: ClientKey
          in: query
          description: The key of the client to which the positions belong.
          required: true
          schema:
            title: The key of the client to which the positions belong.
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: ExpiryDate
          in: query
          description: The expiry date. Only used to distinguish FxOptions.
          schema:
            title: The expiry date. Only used to distinguish FxOptions.
            allOf:
              - type: string
                format: date-time
                x-type-name: UtcDateTime
        - name: LowerBarrier
          in: query
          description: The Lower Barrier. Only used to distinguish Fx Barrier Options.
          schema:
            title: The Lower Barrier. Only used to distinguish Fx Barrier Options.
            allOf:
              - type: number
        - name: PutCall
          in: query
          description: Put or Call. Only used to distinguish FxOptions.
          schema:
            title: Put or Call. Only used to distinguish FxOptions.
            allOf:
              - $ref: '#/components/schemas/PutCallNullable'
        - name: Strike
          in: query
          description: The strike price of the option. Only used to distinguish FxOptions.
          schema:
            title: The strike price of the option. Only used to distinguish FxOptions.
            allOf:
              - type: number
        - name: Uic
          in: query
          description: Unique id of the instrument.
          schema:
            title: Unique id of the instrument.
            allOf:
              - type: integer
                format: int32
        - name: UpperBarrier
          in: query
          description: The Upper Barrier. Only used to distinguish Fx Barrier Options.
          schema:
            title: The Upper Barrier. Only used to distinguish Fx Barrier Options.
            allOf:
              - type: number
        - name: ValueDate
          in: query
          description: The value date. Only used to distinguish FxForwards.
          schema:
            title: The value date. Only used to distinguish FxForwards.
            allOf:
              - type: string
                format: date-time
                x-type-name: UtcDateTime
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentExposureResponseListResult'
              example:
                __next: /openapi/port/....../?$top=1&$skip=1
                Data:
                  - Amount: 200000
                    AssetType: FxSpot
                    AverageOpenPrice: 1.08414
                    CalculationReliability: Ok
                    CanBeClosed: false
                    DisplayAndFormat:
                      Currency: USD
                      Decimals: 4
                      Description: Euro/US Dollar
                      Format: AllowDecimalPips
                      Symbol: EURUSD
                    NetPositionId: EURUSD_FxSpot
                    Uic: 21
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - InvalidExchangeId
                      - NoValidInput
                    type: string
                    x-enum-descriptions:
                      NoValidInput: No valid input values passed.
                      InvalidClientId: Indicates that the requested client id was invalid.
                      InvalidExchangeId: The provided exchange id is invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '204':
          description: No Content
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/exposure/instruments/me:
    get:
      tags:
        - Exposure
      summary: 'Get the net instrument exposure for a client, to which the logged in user belongs'
      description: Returns a list instruments and net exposures.
      operationId: ExposureV1GetInstrumentsExposures
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentExposureResponseListResult'
              example:
                __next: /openapi/port/....../?$top=1&$skip=1
                Data:
                  - Amount: 200000
                    AssetType: FxSpot
                    AverageOpenPrice: 1.08414
                    CalculationReliability: Ok
                    CanBeClosed: false
                    DisplayAndFormat:
                      Currency: USD
                      Decimals: 4
                      Description: Euro/US Dollar
                      Format: AllowDecimalPips
                      Symbol: EURUSD
                    NetPositionId: EURUSD_FxSpot
                    Uic: 21
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/balances/subscriptions/{ContextId}/{ReferenceId}':
    delete:
      tags:
        - Balances
      summary: Remove subscription
      description: Removes subscription for the current session identified by subscription id.
      operationId: BalancesV1DeleteSubscription
      parameters:
        - name: ContextId
          in: path
          description: Unique streaming context ID part of the streaming session.
          required: true
          schema:
            type: string
          example: '29931122'
        - name: ReferenceId
          in: path
          description: Unique ID of the subscription
          required: true
          schema:
            type: string
          example: B345356
      responses:
        '204':
          description: No Content
        '202':
          description: Subscription delete request will be processed eventually.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/balances/subscriptions/{ContextId}':
    delete:
      tags:
        - Balances
      summary: Remove all subscriptions marked with a specific tag
      description: Removes multiple subscriptions for the current session on this resource and frees all resources on the server.
      operationId: BalancesV1DeleteSubscriptions
      parameters:
        - name: ContextId
          in: path
          description: Unique streaming context ID part of the streaming session.
          required: true
          schema:
            type: string
          example: '29931122'
        - name: Tag
          in: query
          description: Tag that subscriptions are marked with.
          schema:
            type: string
          example: PAGE1
      responses:
        '204':
          description: No Content
        '202':
          description: Subscription delete request will be processed eventually.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/balances/subscriptions:
    post:
      tags:
        - Balances
      summary: Create a subscription on a balance
      description: Sets up a subscription and returns an initial snapshot of a balance.
      operationId: BalancesV1AddActiveSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BalanceSubscriptionRequest'
            example:
              Arguments:
                AccountGroupKey: 5m4I|vtYLUnEGg77o9uQhw==
                AccountKey: 6m4I|vtYLUnEGg77o9uQhw==
                ClientKey: 7m4I|vtYLUnEGg77o9uQhw==
              ContextId: '20220202113634251'
              ReferenceId: B37511
              RefreshRate: 500
              Tag: MyBalancesRelatedSubscriptions
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceSubscriptionResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - InvalidInput
                      - InvalidModelState
                      - NoValidInput
                      - UnsupportedSubscriptionFormat
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: Error code returned when model state is invalid.
                      UnsupportedSubscriptionFormat: Error code returned when a subscription format that isn't supported by the publisher is requested.
                      InvalidClientId: Indicates that the requested client id was invalid.
                      InvalidInput: An error was encountered when processing given input parameters.
                      NoValidInput: No valid input values passed.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - SubscriptionLimitExceeded
                    type: string
                    x-enum-descriptions:
                      SubscriptionLimitExceeded: 'Error code returned when more than the maximum allowed number of subscriptions for a specified type, is exceeded.'
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-streaming-type: 
        $ref: '#/components/schemas/BalanceResponse'
  /port/v1/balances/marginoverview:
    get:
      tags:
        - Balances
      summary: Get margin overview
      description: 'Get margin overview for a client, account group or an account'
      operationId: BalancesV1GetMarginOverview
      parameters:
        - name: AccountGroupKey
          in: query
          description: The key of the account group for which the margin overview is returned
          schema:
            title: The key of the account group for which the margin overview is returned
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: The key of the account for which the margin overview is returned
          schema:
            title: The key of the account for which the margin overview is returned
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: query
          description: The key of the client for which the margin overview is returned
          required: true
          schema:
            title: The key of the client for which the margin overview is returned
            minLength: 1
            type: string
            x-type-name: ClientKey
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarginOverviewByGroup'
              example:
                Groups:
                  - Contributors:
                      - AssetTypes:
                          - FxSpot
                        InstrumentDescription: EURUSD description
                        InstrumentSpecifier: EURUSD
                        Margin: 1235
                        Uic: 21
                      - AssetTypes:
                          - FxSpot
                        InstrumentDescription: GBPUSD description
                        InstrumentSpecifier: GBPUSD
                        Margin: 789
                        Uic: 22
                    GroupType: FX
                    TotalMargin: 100000
                  - Contributors:
                      - AssetTypes:
                          - CfdOnIndex
                        InstrumentDescription: SP500 description
                        InstrumentSpecifier: SP500.I
                        Margin: 4321
                        Uic: 4910
                      - AssetTypes:
                          - CfdOnIndex
                        InstrumentDescription: CSE20 description
                        InstrumentSpecifier: CSE20.I
                        Margin: 975
                        Uic: 5768
                      - AssetTypes:
                          - CfdOnIndex
                        InstrumentDescription: DAX description
                        InstrumentSpecifier: DAX.I
                        Margin: 864
                        Uic: 27098
                    GroupType: CFDs
                    TotalMargin: 200000
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - NoValidInput
                    type: string
                    x-enum-descriptions:
                      NoValidInput: No valid input values passed.
                      InvalidClientId: Indicates that the requested client id was invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/balances:
    get:
      tags:
        - Balances
      summary: Get balance
      description: 'Get balance data for a client, account group or an account'
      operationId: GET_BalancesV1GetBalance
      parameters:
        - name: AccountGroupKey
          in: query
          description: The key of the account group for which the balance data is returned
          schema:
            title: The key of the account group for which the balance data is returned
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: The key of the account for which the balance data is returned
          schema:
            title: The key of the account for which the balance data is returned
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: query
          description: The key of the client for which the balance data is returned
          required: true
          schema:
            title: The key of the client for which the balance data is returned
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: FieldGroups
          in: query
          description: Specifies which data to return.
          schema:
            title: Specifies which data to return.
            type: array
            items:
              $ref: '#/components/schemas/BalanceFieldGroup'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResponse'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - NoValidInput
                    type: string
                    x-enum-descriptions:
                      NoValidInput: No valid input values passed.
                      InvalidClientId: Indicates that the requested client id was invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/balances/me:
    get:
      tags:
        - Balances
      summary: Get balance data for logged-in client
      description: Get balance data for logged-in client.
      operationId: BalancesV1GetBalance
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceResponse'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/users/me/entitlements:
    get:
      tags:
        - Users
      summary: Get all entitlements
      description: This operation retrieves a list of all client specific entitlements per exchanges for market data.
      operationId: UsersV1GetAllClientEntitlements
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntitlementDetailsListResult'
              example:
                Data:
                  - Entitlements:
                      - Greeks:
                          - FuturesOption
                        RealTimeFullBook:
                          - Bond
                        RealTimeTopOfBook:
                          - StockOption
                    ExchangeId: ExchangeIde2675ad1-7b7e-4e60-8d1b-34f10d8c8010
                MaxRows: 69
        '204':
          description: Indicates no information about client entitlement is available with the service.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/users:
    get:
      tags:
        - Users
      summary: Get all users under a particular owner
      description: Get all users under a particular owner.
      operationId: UsersV1GetUsers
      parameters:
        - name: $inlinecount
          in: query
          schema:
            enum:
              - AllPages
              - None
            type: string
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 1000
        - name: ClientKey
          in: query
          description: Unique key identifying the owner. This is the ClientKey of the client under which the list of users belongs.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: IncludeSubUsers
          in: query
          description: Set to true if users of all underlying partners should be included in output.
          schema:
            type: boolean
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponseListResult'
              example:
                Data:
                  - ClientKey: V-B8jOk9SM8QdqN1u2Bjtw==
                    Culture: en-GB
                    Language: en
                    LastLoginStatus: Successful
                    LastLoginTime: '2022-01-31T08:36:32.8546040+00:00'
                    LegalAssetTypes:
                      - FxSpot
                      - Stock
                      - ContractFutures
                    MarketDataViaOpenApiTermsAccepted: false
                    Name: Mr. Anthony Test
                    TimeZoneId: 28
                    UserId: '654321'
                    UserKey: V-B8jOk9SM8QdqN1u2Bjtw==
                MaxRows: 152
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                    type: string
                    x-enum-descriptions:
                      InvalidClientId: Indicates that the requested client id was invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/users/{UserKey}':
    get:
      tags:
        - Users
      summary: Get the details about a user
      description: Get the details about a user
      operationId: GET_UsersV1GetUser
      parameters:
        - name: UserKey
          in: path
          description: The unique key for the user's client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: UserKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
              example:
                ClientKey: V-B8jOk9SM8QdqN1u2Bjtw==
                Culture: en-GB
                Language: en
                LastLoginStatus: Successful
                LastLoginTime: '2022-01-31T08:36:32.8546040+00:00'
                LegalAssetTypes:
                  - FxSpot
                  - Stock
                  - ContractFutures
                MarketDataViaOpenApiTermsAccepted: false
                Name: Mr. Anthony Test
                TimeZoneId: 28
                UserId: '654321'
                UserKey: V-B8jOk9SM8QdqN1u2Bjtw==
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidUserId
                    type: string
                    x-enum-descriptions:
                      InvalidUserId: The requested user id was invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/users/me:
    get:
      tags:
        - Users
      summary: Get details about the logged in user
      description: Get details about the logged in user.
      operationId: UsersV1GetUser
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
              example:
                ClientKey: V-B8jOk9SM8QdqN1u2Bjtw==
                Culture: en-GB
                Language: en
                LastLoginStatus: Successful
                LastLoginTime: '2022-01-31T08:36:32.8546040+00:00'
                LegalAssetTypes:
                  - FxSpot
                  - Stock
                  - ContractFutures
                MarketDataViaOpenApiTermsAccepted: false
                Name: Mr. Anthony Test
                TimeZoneId: 28
                UserId: '654321'
                UserKey: V-B8jOk9SM8QdqN1u2Bjtw==
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidUserId
                    type: string
                    x-enum-descriptions:
                      InvalidUserId: The requested user id was invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
    patch:
      tags:
        - Users
      summary: Update user preferences
      description: 'Enables the user to update preferred language, culture and timezone.'
      operationId: UsersV1UpdateUserPreferences
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidInput
                      - InvalidUserId
                      - NoValidInput
                    type: string
                    x-enum-descriptions:
                      InvalidUserId: The requested user id was invalid.
                      NoValidInput: No valid input values passed.
                      InvalidInput: An error was encountered when processing given input parameters.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/positions/subscriptions/{ContextId}':
    delete:
      tags:
        - Positions
      summary: 'Remove multiple subscriptions for the given ContextId, optionally marked with a specific tag'
      description: 'Removes multiple subscriptions for the current session on this resource, and frees all resources on the server.'
      operationId: PositionsV1DeleteSubscriptions
      parameters:
        - name: ContextId
          in: path
          description: Unique streaming context ID part of the streaming session.
          required: true
          schema:
            type: string
          example: '29931122'
        - name: Tag
          in: query
          description: Tag that subscriptions are marked with
          schema:
            type: string
          example: TAB15
      responses:
        '204':
          description: No Content
        '202':
          description: Subscription delete request will be processed eventually.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/positions/subscriptions/{ContextId}/{ReferenceId}':
    delete:
      tags:
        - Positions
      summary: Remove subscription
      description: Removes subscription for the current session identified by subscription id.
      operationId: PositionsV1DeleteSubscription
      parameters:
        - name: ContextId
          in: path
          description: The context id part of the streaming session.
          required: true
          schema:
            type: string
          example: '29931122'
        - name: ReferenceId
          in: path
          description: Unique ID of the subscription
          required: true
          schema:
            type: string
          example: P54123
      responses:
        '204':
          description: No Content
        '202':
          description: Subscription delete request will be processed eventually.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
    patch:
      tags:
        - Positions
      summary: Change the positions subscription page size
      description: "Extends or reduces the page size, number of positions shown, on a running positions subscription.\r\n            When expanding the page size, the new positions are streamed so to avoid race conditions."
      operationId: PositionsV1UpdatePositionSubscriptionPagesize
      parameters:
        - name: ContextId
          in: path
          description: The context id part of the streaming session.
          required: true
          schema:
            type: string
          example: '29931122'
        - name: ReferenceId
          in: path
          description: Unique ID of the subscription
          required: true
          schema:
            type: string
          example: P54123
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PositionPagingSubscriptionUpdateRequest'
            example:
              NewPageSize: 184
      responses:
        '204':
          description: No Content
        '202':
          description: Subscription change will be processed and respose will be streamed.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/positions/subscriptions:
    post:
      tags:
        - Positions
      summary: Create a subscription on a list positions and make it active
      description: Sets up a subscription and returns an initial snapshot of list of positions specified by the parameters in the request.
      operationId: PositionsV1AddActiveSubscription
      parameters:
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PositionsSubscriptionRequest'
            example:
              Arguments:
                AccountGroupKey: LZTc7DdejXODf-WSl2aCyQ==
                AccountKey: LZTc7DdejXODf-WSl2aCyQ==
                ClientKey: 7m4I|vtYLUnEGg77o9uQhw==
                FieldGroups:
                  - PositionBase
                  - PositionView
                NetPositionId: GBPUSD_FxSpot
                PositionId: '1019942425'
              ContextId: '20220202113633900'
              Format: application/json
              ReferenceId: P06616
              RefreshRate: 1000
              Tag: PAGE1
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionsSubscriptionResponse'
              example:
                Format: application/json
                InactivityTimeout: 120
                ReferenceId: P75130
                RefreshRate: 1000
                Snapshot:
                  Data:
                    - NetPositionId: GBPUSD_FxSpot
                      PositionBase:
                        AccountId: 192134INET
                        Amount: 100000
                        AssetType: FxSpot
                        CanBeClosed: true
                        ClientId: '654321'
                        CloseConversionRateSettled: false
                        ExecutionTimeOpen: '2016-09-02T10:25:00.0000000+00:00'
                        IsForceOpen: false
                        IsMarketOpen: false
                        OpenPrice: 1.32167
                        SpotDate: '2020-01-01'
                        Status: Open
                        Uic: 31
                        ValueDate: '2017-05-04T00:00:00.0000000+00:00'
                      PositionId: '1019942425'
                      PositionView:
                        Ask: 1.2917
                        Bid: 1.29162
                        CalculationReliability: Ok
                        CurrentPrice: 1.29169
                        CurrentPriceDelayMinutes: 0
                        CurrentPriceType: Bid
                        Exposure: 100000
                        ExposureCurrency: GBP
                        ExposureInBaseCurrency: 129192
                        InstrumentPriceDayPercentChange: 0.26
                        ProfitLossOnTrade: -2998
                        ProfitLossOnTradeInBaseCurrency: -2998
                        SettlementInstruction:
                          ActualRolloverAmount: 0
                          ActualSettlementAmount: 10
                          Amount: 10
                          IsSettlementInstructionsAllowed: false
                          Month: 7
                          SettlementType: FullSettlement
                          Year: 2020
                        TradeCostsTotal: 0
                        TradeCostsTotalInBaseCurrency: 0
                State: Active
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - InvalidInput
                      - InvalidModelState
                      - NoValidInput
                      - SubscriptionExceedesPositionsLimit
                      - UnsupportedSubscriptionFormat
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: Error code returned when model state is invalid.
                      UnsupportedSubscriptionFormat: Error code returned when a subscription format that isn't supported by the publisher is requested.
                      InvalidClientId: Indicates that the requested client id was invalid.
                      InvalidInput: An error was encountered when processing given input parameters.
                      NoValidInput: No valid input values passed.
                      SubscriptionExceedesPositionsLimit: Too many positions requested. Streaming updates are only allowed on a limited number of positions.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - SubscriptionLimitExceeded
                    type: string
                    x-enum-descriptions:
                      SubscriptionLimitExceeded: 'Error code returned when more than the maximum allowed number of subscriptions for a specified type, is exceeded.'
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-streaming-type: 
        $ref: '#/components/schemas/PositionResponseArray'
  /port/v1/positions:
    get:
      tags:
        - Positions
      summary: 'Get positions for a client, account group, account or a position'
      description: Returns a list of positions fulfilling the criteria specified by the query string parameters.
      operationId: GET_PositionsV1GetPositions
      parameters:
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: AccountGroupKey
          in: query
          description: The key of the account group to which the net positions belongs.
          schema:
            title: The key of the account group to which the net positions belongs.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: The key of the account to which the net positions belongs.
          schema:
            title: The key of the account to which the net positions belongs.
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: query
          description: The key of the client to which the net positions belongs.
          required: true
          schema:
            title: The key of the client to which the net positions belongs.
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: FieldGroups
          in: query
          description: 'Specifies which data to return. Default is [PositionBase,PositionView]'
          schema:
            title: 'Specifies which data to return. Default is [PositionBase,PositionView]'
            type: array
            items:
              $ref: '#/components/schemas/PositionFieldGroup'
        - name: NetPositionId
          in: query
          description: The id of the netposition to which the position belongs
          schema:
            title: The id of the netposition to which the position belongs
            type: string
        - name: PositionId
          in: query
          description: The id of the position.
          schema:
            title: The id of the position.
            type: string
        - name: WatchlistId
          in: query
          description: Selects only positions those instruments belongs to the given watchlist id
          schema:
            title: Selects only positions those instruments belongs to the given watchlist id
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionResponseListResult'
              example:
                __next: /openapi/port/....../?$top=1&$skip=1
                Data:
                  - NetPositionId: GBPUSD_FxSpot
                    PositionBase:
                      AccountId: 192134INET
                      Amount: 100000
                      AssetType: FxSpot
                      CanBeClosed: true
                      ClientId: '654321'
                      CloseConversionRateSettled: false
                      ExecutionTimeOpen: '2016-09-02T10:25:00.0000000+00:00'
                      IsForceOpen: false
                      IsMarketOpen: false
                      OpenPrice: 1.32167
                      SpotDate: '2020-01-01'
                      Status: Open
                      Uic: 31
                      ValueDate: '2017-05-04T00:00:00.0000000+00:00'
                    PositionId: '1019942425'
                    PositionView:
                      Ask: 1.2917
                      Bid: 1.29162
                      CalculationReliability: Ok
                      CurrentPrice: 1.29169
                      CurrentPriceDelayMinutes: 0
                      CurrentPriceType: Bid
                      Exposure: 100000
                      ExposureCurrency: GBP
                      ExposureInBaseCurrency: 129192
                      InstrumentPriceDayPercentChange: 0.26
                      ProfitLossOnTrade: -2998
                      ProfitLossOnTradeInBaseCurrency: -2998
                      SettlementInstruction:
                        ActualRolloverAmount: 0
                        ActualSettlementAmount: 10
                        Amount: 10
                        IsSettlementInstructionsAllowed: false
                        Month: 7
                        SettlementType: FullSettlement
                        Year: 2020
                      TradeCostsTotal: 0
                      TradeCostsTotalInBaseCurrency: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - NoValidInput
                    type: string
                    x-enum-descriptions:
                      NoValidInput: No valid input values passed.
                      InvalidClientId: Indicates that the requested client id was invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/positions/me:
    get:
      tags:
        - Positions
      summary: Get positions for the logged-in client
      description: Get positions for the logged-in client
      operationId: PositionsV1GetPositions
      parameters:
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: FieldGroups
          in: query
          description: 'Optional. Specifies which data to return. Default is [PositionBase, PositionView]'
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PositionFieldGroup'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionResponseListResult'
              example:
                __next: /openapi/port/....../?$top=1&$skip=1
                Data:
                  - NetPositionId: GBPUSD_FxSpot
                    PositionBase:
                      AccountId: 192134INET
                      Amount: 100000
                      AssetType: FxSpot
                      CanBeClosed: true
                      ClientId: '654321'
                      CloseConversionRateSettled: false
                      ExecutionTimeOpen: '2016-09-02T10:25:00.0000000+00:00'
                      IsForceOpen: false
                      IsMarketOpen: false
                      OpenPrice: 1.32167
                      SpotDate: '2020-01-01'
                      Status: Open
                      Uic: 31
                      ValueDate: '2017-05-04T00:00:00.0000000+00:00'
                    PositionId: '1019942425'
                    PositionView:
                      Ask: 1.2917
                      Bid: 1.29162
                      CalculationReliability: Ok
                      CurrentPrice: 1.29169
                      CurrentPriceDelayMinutes: 0
                      CurrentPriceType: Bid
                      Exposure: 100000
                      ExposureCurrency: GBP
                      ExposureInBaseCurrency: 129192
                      InstrumentPriceDayPercentChange: 0.26
                      ProfitLossOnTrade: -2998
                      ProfitLossOnTradeInBaseCurrency: -2998
                      SettlementInstruction:
                        ActualRolloverAmount: 0
                        ActualSettlementAmount: 10
                        Amount: 10
                        IsSettlementInstructionsAllowed: false
                        Month: 7
                        SettlementType: FullSettlement
                        Year: 2020
                      TradeCostsTotal: 0
                      TradeCostsTotalInBaseCurrency: 0
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/positions/{PositionId}/details':
    get:
      tags:
        - Positions
      summary: Get detailed information for a single position
      description: Gets detailed information about a single position as specified by the query parameters.
      operationId: PositionsV1GetPositionDetails
      parameters:
        - name: AccountGroupKey
          in: query
          description: The key of the account group to which the net positions belongs.
          schema:
            title: The key of the account group to which the net positions belongs.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: The key of the account to which the net positions belongs.
          schema:
            title: The key of the account to which the net positions belongs.
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: query
          description: The key of the client to which the net positions belongs.
          required: true
          schema:
            title: The key of the client to which the net positions belongs.
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: PositionId
          in: path
          description: Unique id of the position.
          required: true
          schema:
            type: string
          example: '167968381'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionDetailedResponse'
              example:
                DisplayAndFormat:
                  Currency: EUR
                  Decimals: 4
                  Description: British Pound/US Dollar
                  Format: AllowDecimalPips
                  Symbol: GBPUSD
                NetPositionId: GBPUSD_FxSpot
                PositionBase:
                  AccountId: 192134INET
                  Amount: 100000
                  AssetType: FxSpot
                  CanBeClosed: true
                  ClientId: '654321'
                  CloseConversionRateSettled: false
                  ExecutionTimeOpen: '2016-09-02T10:25:00.0000000+00:00'
                  IsForceOpen: false
                  IsMarketOpen: false
                  OpenPrice: 1.32167
                  SpotDate: '2020-01-01'
                  Status: Open
                  Uic: 31
                  ValueDate: '2017-05-04T00:00:00.0000000+00:00'
                PositionId: '1019942425'
                PositionView:
                  Ask: 1.2917
                  Bid: 1.29162
                  CalculationReliability: Ok
                  CurrentPrice: 1.29169
                  CurrentPriceDelayMinutes: 0
                  CurrentPriceType: Bid
                  Exposure: 100000
                  ExposureCurrency: GBP
                  ExposureInBaseCurrency: 129192
                  InstrumentPriceDayPercentChange: 0.26
                  ProfitLossOnTrade: -2998
                  ProfitLossOnTradeInBaseCurrency: -2998
                  SettlementInstruction:
                    ActualRolloverAmount: 0
                    ActualSettlementAmount: 10
                    Amount: 10
                    IsSettlementInstructionsAllowed: false
                    Month: 7
                    SettlementType: FullSettlement
                    Year: 2020
                  TradeCostsTotal: 0
                  TradeCostsTotalInBaseCurrency: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - PositionIdNotSpecified
                    type: string
                    x-enum-descriptions:
                      PositionIdNotSpecified: Position not specified.
                      InvalidClientId: Indicates that the requested client id was invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/positions/{PositionId}':
    get:
      tags:
        - Positions
      summary: Get a single position
      description: Get a single position
      operationId: PositionsV1GetPosition
      parameters:
        - name: AccountGroupKey
          in: query
          description: The key of the account group to which the net positions belongs.
          schema:
            title: The key of the account group to which the net positions belongs.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: The key of the account to which the net positions belongs.
          schema:
            title: The key of the account to which the net positions belongs.
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: query
          description: The key of the client to which the net positions belongs.
          required: true
          schema:
            title: The key of the client to which the net positions belongs.
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: FieldGroups
          in: query
          description: 'Specifies which data to return. Default is [PositionBase,PositionView]'
          schema:
            title: 'Specifies which data to return. Default is [PositionBase,PositionView]'
            type: array
            items:
              $ref: '#/components/schemas/PositionFieldGroup'
        - name: PositionId
          in: path
          description: Unique ID of the position.
          required: true
          schema:
            type: string
          example: '167968381'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PositionResponse'
              example:
                NetPositionId: GBPUSD_FxSpot
                PositionBase:
                  AccountId: 192134INET
                  Amount: 100000
                  AssetType: FxSpot
                  CanBeClosed: true
                  ClientId: '654321'
                  CloseConversionRateSettled: false
                  ExecutionTimeOpen: '2016-09-02T10:25:00.0000000+00:00'
                  IsForceOpen: false
                  IsMarketOpen: false
                  OpenPrice: 1.32167
                  SpotDate: '2020-01-01'
                  Status: Open
                  Uic: 31
                  ValueDate: '2017-05-04T00:00:00.0000000+00:00'
                PositionId: '1019942425'
                PositionView:
                  Ask: 1.2917
                  Bid: 1.29162
                  CalculationReliability: Ok
                  CurrentPrice: 1.29169
                  CurrentPriceDelayMinutes: 0
                  CurrentPriceType: Bid
                  Exposure: 100000
                  ExposureCurrency: GBP
                  ExposureInBaseCurrency: 129192
                  InstrumentPriceDayPercentChange: 0.26
                  ProfitLossOnTrade: -2998
                  ProfitLossOnTradeInBaseCurrency: -2998
                  SettlementInstruction:
                    ActualRolloverAmount: 0
                    ActualSettlementAmount: 10
                    Amount: 10
                    IsSettlementInstructionsAllowed: false
                    Month: 7
                    SettlementType: FullSettlement
                    Year: 2020
                  TradeCostsTotal: 0
                  TradeCostsTotalInBaseCurrency: 0
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - PositionIdNotSpecified
                    type: string
                    x-enum-descriptions:
                      PositionIdNotSpecified: Position not specified.
                      InvalidClientId: Indicates that the requested client id was invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/orders/subscriptions/{ContextId}/{ReferenceId}':
    delete:
      tags:
        - Orders
      summary: Remove subscription
      description: Removes subscription for the current session identified by subscription id..
      operationId: OrdersV1DeleteSubscription
      parameters:
        - name: ContextId
          in: path
          description: Unique streaming context ID part of the streaming session.
          required: true
          schema:
            type: string
          example: '29931122'
        - name: ReferenceId
          in: path
          description: Unique reference ID of the subscription.
          required: true
          schema:
            type: string
          example: O2246
      responses:
        '204':
          description: No Content
        '202':
          description: Subscription delete request will be processed eventually.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/orders/subscriptions/{ContextId}':
    delete:
      tags:
        - Orders
      summary: Remove multiple subscriptions
      description: Removes multiple subscriptions for the current session on this resource. Optionally maked with with speccified Tag.
      operationId: OrdersV1DeleteSubscriptions
      parameters:
        - name: ContextId
          in: path
          description: Unique streaming context ID part of the streaming session.
          required: true
          schema:
            type: string
          example: '29931122'
        - name: Tag
          in: query
          description: Optional. Tag that subscriptions are marked with.
          schema:
            type: string
          example: PAGE2
      responses:
        '204':
          description: No Content
        '202':
          description: Subscription delete request will be processed eventually.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/orders/subscriptions:
    post:
      tags:
        - Orders
      summary: Create a subscription to open orders
      description: Sets up a subscription and returns an initial snapshot of list of orders specified by the parameters in the request.
      operationId: OrdersV1AddActiveSubscription
      parameters:
        - name: $inlinecount
          in: query
          schema:
            enum:
              - AllPages
              - None
            type: string
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $skiptoken
          in: query
          schema:
            type: string
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderSubscriptionRequest'
            example:
              Arguments:
                AccountGroupKey: LZTc7DdejXODf-WSl2aCyQ==
                AccountKey: LZTc7DdejXODf-WSl2aCyQ==
                ClientKey: 7m4I|vtYLUnEGg77o9uQhw==
              ContextId: '20220202113633802'
              Format: application/json
              ReferenceId: O36535
              RefreshRate: 5
              Tag: PAGE1
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderSubscriptionResponse'
              example:
                Format: application/json
                InactivityTimeout: 120
                ReferenceId: O96061
                RefreshRate: 1000
                Snapshot:
                  Data:
                    - AccountId: 192134INET
                      AccountKey: LZTc7DdejXODf-WSl2aCyQ==
                      Amount: 250000
                      AssetType: FxSpot
                      BuySell: Buy
                      CalculationReliability: Ok
                      ClientKey: 7m4I|vtYLUnEGg77o9uQhw==
                      CurrentPrice: 1.09062
                      CurrentPriceDelayMinutes: 0
                      CurrentPriceType: Ask
                      DistanceToMarket: 0.04062
                      Duration:
                        DurationType: GoodTillCancel
                      IsForceOpen: false
                      IsMarketOpen: false
                      MarketPrice: 1.09062
                      NonTradableReason: None
                      OpenOrderType: Limit
                      OrderAmountType: Quantity
                      OrderId: '49318458'
                      OrderRelation: StandAlone
                      OrderTime: '2017-04-12T07:56:00.0000000+00:00'
                      Price: 1.05
                      Status: Working
                      Uic: 21
                State: Active
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - InvalidInput
                      - InvalidModelState
                      - NoValidInput
                      - UnsupportedSubscriptionFormat
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: Error code returned when model state is invalid.
                      UnsupportedSubscriptionFormat: Error code returned when a subscription format that isn't supported by the publisher is requested.
                      InvalidClientId: Indicates that the requested client id was invalid.
                      InvalidInput: An error was encountered when processing given input parameters.
                      NoValidInput: No valid input values passed.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - SubscriptionLimitExceeded
                    type: string
                    x-enum-descriptions:
                      SubscriptionLimitExceeded: 'Error code returned when more than the maximum allowed number of subscriptions for a specified type, is exceeded.'
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-streaming-type: 
        $ref: '#/components/schemas/OrderResponseArray'
  '/port/v1/orders/{OrderId}/details':
    get:
      tags:
        - Orders
      summary: Get detailed information for a open order
      description: Gets detailed information about a single open order as specified by the query parameters.
      operationId: OrdersV1GetOpenOrderDetails
      parameters:
        - name: AccountGroupKey
          in: query
          description: The key of the account group to which the net positions belongs.
          schema:
            title: The key of the account group to which the net positions belongs.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: The key of the account to which the net positions belongs.
          schema:
            title: The key of the account to which the net positions belongs.
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: query
          description: The key of the client to which the net positions belongs.
          required: true
          schema:
            title: The key of the client to which the net positions belongs.
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: OrderId
          in: path
          description: Unique id of the order.
          required: true
          schema:
            type: string
          example: '83749234'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderDetailedResponse'
              example:
                AccountId: AccountId497638d7-120a-444d-ae75-2184e9a1ba34
                AccountKey: c405237c-309f-4711-a6c5-0dedb1967c31
                AlgoOrderDetails:
                  - key798ecf28-424a-44ae-820c-1bb8991fe7e3: value1806effa-1176-408c-9b82-7ec81e389737
                AlgoStrategyName: AlgoStrategyNamea0248191-17c4-484d-9c3f-c040a5994a89
                AllocationKeyId: AllocationKeyIdbc07ef7e-3f68-434d-87ce-1dcc67b77cc7
                Amount: -156.34822197783564
                AmountAccountValueRatio: AmountAccountValueRatio205ce04f-cf47-4dc1-99f8-8477412f2062
                Ask: 1167.3107655497777
                AssetType: FxKnockInOption
                Bid: -7.462751894164576E+27
                BreakoutTriggerDownPrice: 1.838372064526401E+24
                BreakoutTriggerUpPrice: -1293503934033428.2
                BuySell: Sell
                CalculationReliability: Ok
                CashAmount: -6.624477519540811E+19
                ClientId: ClientIde3be28b0-ac4e-4778-a296-197249ca9372
                ClientKey: dd256abf-7839-40dd-a494-5111d95d1abc
                ClientName: ClientName99402361-9b63-4f9f-8274-43163b55adcc
                ClientNote: ClientNote29b3bb2c-9204-46a4-b986-d2cdaaf79159
                CopiedPositionId: CopiedPositionIdfc02a163-3be9-4332-8ab3-4ff02a3b55d5
                CorrelationKey: 9c33cbc4-0cd4-4801-a316-fea193c26f8e
                CorrelationTypes:
                  - Allocation
                CurrentPrice: -58961338435447690
                CurrentPriceDelayMinutes: 218
                CurrentPriceLastTraded: '2020-02-19T00:30:46.4382730+00:00'
                CurrentPriceType: Bid
                DisplayAndFormat:
                  BarrierDecimals: 87
                  BarrierFormat: ModernFractions
                  Currency: Currency93149d1d-5ca1-4863-bf35-ce17d7103d31
                  Decimals: 145
                  Description: Descriptiona0f23475-cf12-4c32-9473-4e49d35a2290
                  DisplayHint: None
                  Format: Normal
                  NumeratorDecimals: 122
                  OrderDecimals: 185
                  StrikeDecimals: 36
                  StrikeFormat: Fractions
                  Symbol: Symbol3d3160e9-e681-47ea-9244-2579d9efee9e
                  UnderlyingInstrumentDescription: UnderlyingInstrumentDescriptionb7ee86f9-4d94-4ec8-a540-fa6749e53f43
                DistanceToMarket: -76188540.02807468
                Duration:
                  DurationType: GoodTillCancel
                  ExpirationDate: '2020-12-29T12:47:42.9654180+00:00'
                  ExpirationDateContainsTime: true
                  ExpirationDateTime: '2020-12-29T12:47:42.9654183+00:00'
                Exchange:
                  Description: Description783133d6-1279-450b-8cf6-38d2a2cebbce
                  ExchangeId: ExchangeId88f50b92-7cec-4467-9e5c-d9c7390bd675
                  IsOpen: false
                  TimeZoneId: TimeZoneId566b7d6c-e4ac-48a5-ad6e-e274ee09ba41
                ExpiryDate: '2023-03-21T21:58:01.9189670+00:00'
                ExternalReference: ExternalReference304118e1-53bf-4e4e-8a73-df8baff8f915
                FilledAmount: 3180885.0232825456
                Greeks:
                  Delta: 4.766004734817265E+26
                  DeltaCurrency: DeltaCurrency9c78785c-a090-4f9c-8d8c-8c296f52c44d
                  Gamma: -5794418770008.388
                  GammaCurrency: GammaCurrency4bbee2de-304c-4050-aeae-a1b0da408199
                  InstrumentDelta: 1.918772762579461E+19
                  InstrumentGamma: 7782637168921046
                  InstrumentTheta: -1436386769826852
                  InstrumentVega: -385143539391.8587
                  MidVol: -1.2452153225811596E+20
                  Phi: 5358013797213.522
                  Rho: -6153318539138877
                  TheoreticalPrice: 14248391480426.322
                  Theta: -1.3561941636167327E+18
                  ThetaCurrency: ThetaCurrencya9f899d7-56a9-4cc3-bdda-a2ac3f153b1f
                  Vega: 7.285752947810331E+25
                  VegaCurrency: VegaCurrency3cd6c7e3-1f26-46ec-882f-6bc240172599
                IpoFinancingAmountPct: -2215466.2771327337
                IpoSubscriptionFee: -5.822716598652263E+28
                IsForceOpen: true
                IsMarketOpen: false
                MarketPrice: 24144245558.04878
                MarketState: Open
                MarketValue: -2.3155625705477213E+23
                MultiLegOrderDetails:
                  Amount: -7.289937875827447E+27
                  BuySell: Buy
                  CurrentPrice: 7.634122731982003E+25
                  Description: Description1d21b69c-51bb-4b87-a5d3-40cc32fed2fa
                  DistanceToMarket: -4.171843347714039E+19
                  FilledAmount: 3.710982569391869E+28
                  LegCount: 23
                  MultiLegOrderId: MultiLegOrderId7a468dd0-8817-4ee8-8398-e76e7a70dbf9
                  Price: -1.216217447970435E+18
                  StrategyType: Vertical
                NonTradableReason: None
                OpenInterest: 7.794743731419724E+26
                OpenOrderType: Market
                OptionsData:
                  ExpiryDate: '2023-02-14T03:13:53.2954680+00:00'
                  PutCall: None
                  Strike: -213.23111150855442
                OrderAmountType: Quantity
                OrderId: OrderId2bb94aea-58e3-40f7-8899-c18ba4883cf6
                OrderRelation: StandAlone
                OrderTime: '2023-04-21T05:34:18.1439170+00:00'
                OwnerId: OwnerId8d0657e2-616c-4d0b-94a4-1e910de2f02c
                Price: -6.743528045827158E+26
                RelatedOpenOrders:
                  - Amount: -5.591948874131897E+24
                    Duration:
                      ExpirationDate: '2020-06-04T05:05:03.2248040+00:00'
                      ExpirationDateContainsTime: true
                      ExpirationDateTime: '2020-06-04T05:05:03.2248046+00:00'
                    OpenOrderType: Unknown
                    OrderId: OrderIdd6ff5494-1ccd-4c45-832b-2dd4b1751ed1
                    OrderPrice: -76581927.10468271
                    StopLimitPrice: 78599.39503235655
                    TrailingStopDistanceToMarket: 51030086859335.28
                    TrailingStopStep: 3.790317531003745E+27
                RelatedPositionId: RelatedPositionId98c80860-7044-479f-9c1f-15a3ee647629
                ShortTrading: Allowed
                Status: Working
                StopLimitPrice: 6.839019049640773E+25
                SwitchInstrumentUic: 137
                ToOpenClose: Undefined
                TradeAllocationKey: 240
                TradeIdeaId: TradeIdeaId0ed7f58c-452a-4270-b95e-b6605f74b5b6
                TradingStatus: NotDefined
                TrailingStopDistanceToMarket: -7.738819791135163E+23
                TrailingStopStep: 1.4814424128589757E+17
                TriggerParentOrderId: TriggerParentOrderId20751e49-a70b-4316-975c-6708712a6984
                TriggerPriceType: LastTraded
                Uic: 238
                ValueDate: '2022-06-05T15:53:06.0069750+00:00'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - PositionIdNotSpecified
                    type: string
                    x-enum-descriptions:
                      PositionIdNotSpecified: Position not specified.
                      InvalidClientId: Indicates that the requested client id was invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/orders:
    get:
      tags:
        - Orders
      summary: Get all open orders for a client or an account
      description: You can use this operation to get all the open orders on an account or a client.
      operationId: GET_OrdersV1GetOpenOrders
      parameters:
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: AccountGroupKey
          in: query
          description: The key of the account group to which the order belongs.
          schema:
            title: The key of the account group to which the order belongs.
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: Unique key identifying the account that owns the orders.
          schema:
            title: Unique key identifying the account that owns the orders.
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: query
          description: Unique key identifying the client that owns the orders.
          required: true
          schema:
            title: Unique key identifying the client that owns the orders.
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: FieldGroups
          in: query
          description: 'Specifies which data to return. Default is empty, meaning Display and Formatting information is not included.'
          schema:
            title: 'Specifies which data to return. Default is empty, meaning Display and Formatting information is not included.'
            type: array
            items:
              $ref: '#/components/schemas/OrderFieldGroup'
        - name: OrderId
          in: query
          description: The id of the order
          schema:
            title: The id of the order
            type: string
        - name: Status
          in: query
          description: Selects only a subset of open orders to be returned. Default is to return working orders only.
          schema:
            title: Selects only a subset of open orders to be returned. Default is to return working orders only.
            allOf:
              - $ref: '#/components/schemas/OrderStatusFilterNullable'
        - name: WatchlistId
          in: query
          description: Selects only orders those instruments belongs to the given watchlist id
          schema:
            title: Selects only orders those instruments belongs to the given watchlist id
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponseListResult'
              example:
                __next: /openapi/port/....../?$top=1&$skip=1
                Data:
                  - AccountId: 192134INET
                    AccountKey: LZTc7DdejXODf-WSl2aCyQ==
                    Amount: 250000
                    AssetType: FxSpot
                    BuySell: Buy
                    CalculationReliability: Ok
                    ClientKey: 7m4I|vtYLUnEGg77o9uQhw==
                    CurrentPrice: 1.09062
                    CurrentPriceDelayMinutes: 0
                    CurrentPriceType: Ask
                    DistanceToMarket: 0.04062
                    Duration:
                      DurationType: GoodTillCancel
                    IsForceOpen: false
                    IsMarketOpen: false
                    MarketPrice: 1.09062
                    NonTradableReason: None
                    OpenOrderType: Limit
                    OrderAmountType: Quantity
                    OrderId: '49318458'
                    OrderRelation: StandAlone
                    OrderTime: '2017-04-12T07:56:00.0000000+00:00'
                    Price: 1.05
                    Status: Working
                    Uic: 21
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - InvalidInput
                      - NoValidInput
                    type: string
                    x-enum-descriptions:
                      NoValidInput: No valid input values passed.
                      InvalidInput: An error was encountered when processing given input parameters.
                      InvalidClientId: Indicates that the requested client id was invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/orders/me:
    get:
      tags:
        - Orders
      summary: Get all open orders for the client to which the logged in user belongs
      description: You can use this operation to get all the open orders on a client to which the logged in user belongs.
      operationId: OrdersV1GetOpenOrders
      parameters:
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: FieldGroups
          in: query
          description: optional. List of fields to include in the output list of open orders.
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OrderFieldGroup'
        - name: MultiLegOrderId
          in: query
          description: Return only multi-leg orders with the given common MultiLegOrderId.
          schema:
            type: string
        - name: Status
          in: query
          description: Selects only a subset of open orders to be returned. Default is to return working orders only.
          schema:
            $ref: '#/components/schemas/OrderStatusFilter'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponseListResult'
              example:
                __next: /openapi/port/....../?$top=1&$skip=1
                Data:
                  - AccountId: 192134INET
                    AccountKey: LZTc7DdejXODf-WSl2aCyQ==
                    Amount: 250000
                    AssetType: FxSpot
                    BuySell: Buy
                    CalculationReliability: Ok
                    ClientKey: 7m4I|vtYLUnEGg77o9uQhw==
                    CurrentPrice: 1.09062
                    CurrentPriceDelayMinutes: 0
                    CurrentPriceType: Ask
                    DistanceToMarket: 0.04062
                    Duration:
                      DurationType: GoodTillCancel
                    IsForceOpen: false
                    IsMarketOpen: false
                    MarketPrice: 1.09062
                    NonTradableReason: None
                    OpenOrderType: Limit
                    OrderAmountType: Quantity
                    OrderId: '49318458'
                    OrderRelation: StandAlone
                    OrderTime: '2017-04-12T07:56:00.0000000+00:00'
                    Price: 1.05
                    Status: Working
                    Uic: 21
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/orders/{ClientKey}/{OrderId}':
    get:
      tags:
        - Orders
      summary: Get an open order
      description: "Call this operation to get a specific open order of a client.\r\n            Unique id of the client.Unique id of the order.Specification of field groups to return. Default is empty."
      operationId: OrdersV1GetOpenOrder
      parameters:
        - name: ClientKey
          in: path
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: FieldGroups
          in: query
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OrderFieldGroup'
        - name: OrderId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponseListResult'
              example:
                __next: /openapi/port/....../?$top=1&$skip=1
                Data:
                  - AccountId: 192134INET
                    AccountKey: LZTc7DdejXODf-WSl2aCyQ==
                    Amount: 250000
                    AssetType: FxSpot
                    BuySell: Buy
                    CalculationReliability: Ok
                    ClientKey: 7m4I|vtYLUnEGg77o9uQhw==
                    CurrentPrice: 1.09062
                    CurrentPriceDelayMinutes: 0
                    CurrentPriceType: Ask
                    DistanceToMarket: 0.04062
                    Duration:
                      DurationType: GoodTillCancel
                    IsForceOpen: false
                    IsMarketOpen: false
                    MarketPrice: 1.09062
                    NonTradableReason: None
                    OpenOrderType: Limit
                    OrderAmountType: Quantity
                    OrderId: '49318458'
                    OrderRelation: StandAlone
                    OrderTime: '2017-04-12T07:56:00.0000000+00:00'
                    Price: 1.05
                    Status: Working
                    Uic: 21
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - OrderIdNotSpecified
                    type: string
                    x-enum-descriptions:
                      OrderIdNotSpecified: Order not specified.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/clients:
    get:
      tags:
        - Clients
      summary: Get details about clients under a particular owner
      description: This endpoint will return information for all clients under the specified owner as well as the owner itself.
      operationId: ClientsV1GetClients
      parameters:
        - name: $inlinecount
          in: query
          schema:
            enum:
              - AllPages
              - None
            type: string
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 1000
        - name: OwnerKey
          in: query
          description: Unique key identifying the owner. This is the clientKey of the client under which the list of clients belongs.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: '938237323'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponseListResult'
              example:
                __next: /openapi/port/....../?$top=1&$skip=1
                Data:
                  - ClientId: '654321'
                    ClientKey: V-B8jOk9SM8QdqN1u2Bjtw==
                    CurrencyDecimals: 0
                    DefaultAccountId: 192134INET
                    DefaultAccountKey: uke8gbCUrk6l7TnS5fnIdQ==
                    DefaultCurrency: EUR
                    ForceOpenDefaultValue: false
                    IsMarginTradingAllowed: false
                    IsVariationMarginEligible: false
                    LegalAssetTypes:
                      - Stock
                      - FxSpot
                      - CfdOnStock
                      - Bond
                      - ContractFutures
                    LegalAssetTypesAreIndicative: false
                    MarginCalculationMethod: Default
                    Name: Mr. Anthony Test
                    PositionNettingMethod: FIFO
                    PositionNettingMode: EndOfDay
                    PositionNettingProfile: FifoEndOfDay
                    ReduceExposureOnly: false
                    SupportsAccountValueProtectionLimit: false
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - OwnerKeyMissing
                    type: string
                    x-enum-descriptions:
                      InvalidClientId: Indicates that the requested client id was invalid.
                      OwnerKeyMissing: No valid input owner key specified.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
    patch:
      tags:
        - Clients
      summary: Enables IB to switch position netting mode(or netting profile) and change AccountValueProtectionLimit
      description: Enables IB to switch  position netting mode(or netting profile) and change account value protection limit on behalf of its clients.
      operationId: ClientsV1UpdateClientSettingsForPartner
      parameters:
        - name: ClientKey
          in: query
          description: clientKey of the client that to switch.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientUpdateRequest'
            example:
              AccountValueProtectionLimit: 453100742832556.7
              ForceOpenDefaultValue: true
              NewPositionNettingMode: EndOfDay
              NewPositionNettingProfile: AverageRealTime
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - ClientPositionNettingModeSwitchNotAllowed
                      - ClientPositionNettingModeSwitchNotAllowedByConfiguration
                      - InvalidInput
                    type: string
                    x-enum-descriptions:
                      InvalidInput: An error was encountered when processing given input parameters.
                      ClientPositionNettingModeSwitchNotAllowed: All orders related to positions must be removed before real-time netting can be enabled.
                      ClientPositionNettingModeSwitchNotAllowedByConfiguration: The partner configuration does not allow changing the Netting Mode. No changes have been made.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/clients/{ClientKey}':
    get:
      tags:
        - Clients
      summary: Get client details
      description: Get details about a client
      operationId: GET_ClientsV1GetClient
      parameters:
        - name: ClientKey
          in: path
          description: 'Optional unique key identifying the client. Default: The client associated with the user specified in the access token.'
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
              example:
                ClientId: '654321'
                ClientKey: V-B8jOk9SM8QdqN1u2Bjtw==
                CurrencyDecimals: 0
                DefaultAccountId: 192134INET
                DefaultAccountKey: uke8gbCUrk6l7TnS5fnIdQ==
                DefaultCurrency: EUR
                ForceOpenDefaultValue: false
                IsMarginTradingAllowed: false
                IsVariationMarginEligible: false
                LegalAssetTypes:
                  - Stock
                  - FxSpot
                  - CfdOnStock
                  - Bond
                  - ContractFutures
                LegalAssetTypesAreIndicative: false
                MarginCalculationMethod: Default
                Name: Mr. Anthony Test
                PositionNettingMethod: FIFO
                PositionNettingMode: EndOfDay
                PositionNettingProfile: FifoEndOfDay
                ReduceExposureOnly: false
                SupportsAccountValueProtectionLimit: false
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                    type: string
                    x-enum-descriptions:
                      InvalidClientId: Indicates that the requested client id was invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/clients/me:
    get:
      tags:
        - Clients
      summary: Get logged in client details
      description: Get details about logged-in user's client
      operationId: ClientsV1GetClient
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientResponse'
              example:
                ClientId: '654321'
                ClientKey: V-B8jOk9SM8QdqN1u2Bjtw==
                CurrencyDecimals: 0
                DefaultAccountId: 192134INET
                DefaultAccountKey: uke8gbCUrk6l7TnS5fnIdQ==
                DefaultCurrency: EUR
                ForceOpenDefaultValue: false
                IsMarginTradingAllowed: false
                IsVariationMarginEligible: false
                LegalAssetTypes:
                  - Stock
                  - FxSpot
                  - CfdOnStock
                  - Bond
                  - ContractFutures
                LegalAssetTypesAreIndicative: false
                MarginCalculationMethod: Default
                Name: Mr. Anthony Test
                PositionNettingMethod: FIFO
                PositionNettingMode: EndOfDay
                PositionNettingProfile: FifoEndOfDay
                ReduceExposureOnly: false
                SupportsAccountValueProtectionLimit: false
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
    patch:
      tags:
        - Clients
      summary: Enables user to switch position netting mode or netting profile
      description: Enables user of the client to switch position netting mode or netting profile of its own.
      operationId: ClientsV1UpdateClientSettings
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientUpdateRequest'
            example:
              AccountValueProtectionLimit: 453100742832556.7
              ForceOpenDefaultValue: true
              NewPositionNettingMode: EndOfDay
              NewPositionNettingProfile: AverageRealTime
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - ClientPositionNettingModeSwitchNotAllowed
                      - ClientPositionNettingModeSwitchNotAllowedByConfiguration
                      - InvalidInput
                    type: string
                    x-enum-descriptions:
                      InvalidInput: An error was encountered when processing given input parameters.
                      ClientPositionNettingModeSwitchNotAllowed: All orders related to positions must be removed before real-time netting can be enabled.
                      ClientPositionNettingModeSwitchNotAllowedByConfiguration: The partner configuration does not allow changing the Netting Mode. No changes have been made.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/accounts/subscriptions/{ContextId}/{ReferenceId}':
    delete:
      tags:
        - Accounts
      summary: Remove subscription
      description: Removes subscription for the current session identified by subscription id.
      operationId: AccountsV1DeleteSubscription
      parameters:
        - name: ContextId
          in: path
          description: Unique streaming context ID part of the streaming session
          required: true
          schema:
            type: string
          example: '29931122'
        - name: ReferenceId
          in: path
          description: Unique reference ID of the subscription.
          required: true
          schema:
            type: string
          example: A74231
      responses:
        '204':
          description: No Content
        '202':
          description: Subscription delete request will be processed eventually.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/accounts/subscriptions/{ContextId}':
    delete:
      tags:
        - Accounts
      summary: Remove subscriptions by tag
      description: 'Removes all subscriptions for the current session on this resource marked with a specific tag, and frees all resources on the server.'
      operationId: AccountsV1DeleteSubscriptions
      parameters:
        - name: ContextId
          in: path
          description: Unique streaming context ID part of the streaming session.
          required: true
          schema:
            type: string
          example: '29931122'
        - name: Tag
          in: query
          description: Tag that subscriptions are marked with
          schema:
            type: string
          example: CORE
      responses:
        '204':
          description: No Content
        '202':
          description: Subscription delete request will be processed eventually.
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/accounts/subscriptions:
    post:
      tags:
        - Accounts
      summary: Subscribe to accounts
      description: 'Creates a subscription on a list accounts, makes it active and returns an initial snapshot containing a list of accounts as specified by the parameters in the request.'
      operationId: AccountsV1AddActiveSubscription
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountsSubscriptionRequest'
            example:
              Arguments:
                AccountGroupKey: LZTc7DdejXODf-WSl2aCyQ==
                AccountKey: LZTc7DdejXODf-WSl2aCyQ==
                ClientKey: 7m4I|vtYLUnEGg77o9uQhw==
              ContextId: '20220202113633527'
              Format: application/json
              ReferenceId: A82428
              RefreshRate: 500
              Tag: MyAccountRelatedSubscriptions
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountsSubscriptionResponse'
              example:
                ContextId: '20220202113633532'
                Format: application/json
                InactivityTimeout: 1500
                ReferenceId: A85245
                RefreshRate: 500
                Snapshot:
                  Data:
                    - AccountGroupKey: LZTc7DdejXODf-WSl2aCyQ==
                      AccountId: 192134INET
                      AccountKey: LZTc7DdejXODf-WSl2aCyQ==
                      AccountType: Normal
                      Active: true
                      CanUseCashPositionsAsMarginCollateral: false
                      CfdBorrowingCostsActive: false
                      ClientId: '654321'
                      ClientKey: 7m4I|vtYLUnEGg77o9uQhw==
                      CreationDate: '2017-01-01T13:00:00.0000000+00:00'
                      Currency: EUR
                      CurrencyDecimals: 2
                      DirectMarketAccess: false
                      FractionalOrderEnabled: false
                      IndividualMargining: false
                      IsCurrencyConversionAtSettlementTime: false
                      IsMarginTradingAllowed: true
                      IsShareable: true
                      IsTrialAccount: false
                      LegalAssetTypes:
                        - FxSpot
                        - Stock
                        - ContractFutures
                      ManagementType: Client
                      MarginCalculationMethod: Default
                      MarginLendingEnabled: None
                      PortfolioBasedMarginEnabled: false
                      Sharing:
                        - TradingFloor
                      SupportsAccountValueProtectionLimit: false
                      UseCashPositionsAsMarginCollateral: false
                State: Active
                Tag: MyAccountRelatedSubscriptions
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidClientId
                      - InvalidInput
                      - InvalidModelState
                      - UnsupportedSubscriptionFormat
                    type: string
                    x-enum-descriptions:
                      InvalidModelState: Error code returned when model state is invalid.
                      UnsupportedSubscriptionFormat: Error code returned when a subscription format that isn't supported by the publisher is requested.
                      InvalidClientId: Indicates that the requested client id was invalid.
                      InvalidInput: An error was encountered when processing given input parameters.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - SubscriptionLimitExceeded
                    type: string
                    x-enum-descriptions:
                      SubscriptionLimitExceeded: 'Error code returned when more than the maximum allowed number of subscriptions for a specified type, is exceeded.'
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-streaming-type: 
        $ref: '#/components/schemas/AccountResponseArray'
  '/port/v1/accounts/{AccountKey}/reset':
    put:
      tags:
        - Accounts
      summary: Reset trial account
      description: Resets a trial account. Cannot be used in live environment.
      operationId: AccountsV1ResetAccount
      parameters:
        - name: AccountKey
          in: path
          description: Required unique key identifying the account.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountResetRequest'
            example:
              NewBalance: 50000000
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NoValidInput
                      - ResetAccountBalanceExceedsMaximum
                      - ResetAccountNegativeBalanceNotAllowed
                    type: string
                    x-enum-descriptions:
                      ResetAccountNegativeBalanceNotAllowed: Negative balances are not allowed.
                      ResetAccountBalanceExceedsMaximum: Balance exceeds maximum allowed value.
                      NoValidInput: No valid input values passed.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/accounts:
    get:
      tags:
        - Accounts
      summary: Get accounts of a client
      description: Returns a list of all accounts owned by the specified client
      operationId: GET_AccountsV1GetAccounts
      parameters:
        - name: $inlinecount
          in: query
          schema:
            enum:
              - AllPages
              - None
            type: string
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 1000
        - name: ClientKey
          in: query
          description: The client to which the accounts belong.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: IncludeSubAccounts
          in: query
          description: Optionally set true to request that all sub accounts are returned.
          schema:
            type: boolean
          example: true
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponseListResult'
              example:
                __next: /openapi/port/....../?$top=1&$skip=1
                Data:
                  - AccountGroupKey: LZTc7DdejXODf-WSl2aCyQ==
                    AccountId: 192134INET
                    AccountKey: LZTc7DdejXODf-WSl2aCyQ==
                    AccountType: Normal
                    Active: true
                    CanUseCashPositionsAsMarginCollateral: false
                    CfdBorrowingCostsActive: false
                    ClientId: '654321'
                    ClientKey: 7m4I|vtYLUnEGg77o9uQhw==
                    CreationDate: '2017-01-01T13:00:00.0000000+00:00'
                    Currency: EUR
                    CurrencyDecimals: 2
                    DirectMarketAccess: false
                    FractionalOrderEnabled: false
                    IndividualMargining: false
                    IsCurrencyConversionAtSettlementTime: false
                    IsMarginTradingAllowed: true
                    IsShareable: true
                    IsTrialAccount: false
                    LegalAssetTypes:
                      - FxSpot
                      - Stock
                      - ContractFutures
                    ManagementType: Client
                    MarginCalculationMethod: Default
                    MarginLendingEnabled: None
                    PortfolioBasedMarginEnabled: false
                    Sharing:
                      - TradingFloor
                    SupportsAccountValueProtectionLimit: false
                    UseCashPositionsAsMarginCollateral: false
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/accounts/me:
    get:
      tags:
        - Accounts
      summary: Get accounts
      description: Returns all accounts under a particular client to which the logged in user belongs.
      operationId: AccountsV1GetAccounts
      parameters:
        - name: $inlinecount
          in: query
          schema:
            enum:
              - AllPages
              - None
            type: string
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 1000
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponseListResult'
              example:
                __next: /openapi/port/....../?$top=1&$skip=1
                Data:
                  - AccountGroupKey: LZTc7DdejXODf-WSl2aCyQ==
                    AccountId: 192134INET
                    AccountKey: LZTc7DdejXODf-WSl2aCyQ==
                    AccountType: Normal
                    Active: true
                    CanUseCashPositionsAsMarginCollateral: false
                    CfdBorrowingCostsActive: false
                    ClientId: '654321'
                    ClientKey: 7m4I|vtYLUnEGg77o9uQhw==
                    CreationDate: '2017-01-01T13:00:00.0000000+00:00'
                    Currency: EUR
                    CurrencyDecimals: 2
                    DirectMarketAccess: false
                    FractionalOrderEnabled: false
                    IndividualMargining: false
                    IsCurrencyConversionAtSettlementTime: false
                    IsMarginTradingAllowed: true
                    IsShareable: true
                    IsTrialAccount: false
                    LegalAssetTypes:
                      - FxSpot
                      - Stock
                      - ContractFutures
                    ManagementType: Client
                    MarginCalculationMethod: Default
                    MarginLendingEnabled: None
                    PortfolioBasedMarginEnabled: false
                    Sharing:
                      - TradingFloor
                    SupportsAccountValueProtectionLimit: false
                    UseCashPositionsAsMarginCollateral: false
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/accounts/{AccountKey}':
    get:
      tags:
        - Accounts
      summary: Get account
      description: Returns the details about a single account
      operationId: AccountsV1GetAccount
      parameters:
        - name: AccountKey
          in: path
          description: Unique key for the account.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountResponse'
              example:
                AccountGroupKey: LZTc7DdejXODf-WSl2aCyQ==
                AccountId: 192134INET
                AccountKey: LZTc7DdejXODf-WSl2aCyQ==
                AccountType: Normal
                Active: true
                CanUseCashPositionsAsMarginCollateral: false
                CfdBorrowingCostsActive: false
                ClientId: '654321'
                ClientKey: 7m4I|vtYLUnEGg77o9uQhw==
                CreationDate: '2017-01-01T13:00:00.0000000+00:00'
                Currency: EUR
                CurrencyDecimals: 2
                DirectMarketAccess: false
                FractionalOrderEnabled: false
                IndividualMargining: false
                IsCurrencyConversionAtSettlementTime: false
                IsMarginTradingAllowed: true
                IsShareable: true
                IsTrialAccount: false
                LegalAssetTypes:
                  - FxSpot
                  - Stock
                  - ContractFutures
                ManagementType: Client
                MarginCalculationMethod: Default
                MarginLendingEnabled: None
                PortfolioBasedMarginEnabled: false
                Sharing:
                  - TradingFloor
                SupportsAccountValueProtectionLimit: false
                UseCashPositionsAsMarginCollateral: false
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidInput
                    type: string
                    x-enum-descriptions:
                      InvalidInput: An error was encountered when processing given input parameters.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
    patch:
      tags:
        - Accounts
      summary: Update account
      description: 'Updates account details, particularly the user account shield value, the benchmark instrument or the account display name.'
      operationId: AccountsV1UpdateAccount
      parameters:
        - name: AccountKey
          in: path
          description: Unique key of the account to share.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountUpdateRequest'
            example:
              DisplayName: Trading Account
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - DisableUseCashPositionsAsMarginCollateralNotAllowed
                      - InvalidInput
                      - NoValidInput
                      - WouldExceedMargin
                    type: string
                    x-enum-descriptions:
                      NoValidInput: No valid input values passed.
                      InvalidInput: An error was encountered when processing given input parameters.
                      WouldExceedMargin: 'Disabling UseCashPositionsAsMarginCollateral would cause the account margin limits to be exceeded and is not allowed. To change this setting, please increase account collateral or reduce margin exposure first.'
                      DisableUseCashPositionsAsMarginCollateralNotAllowed: Disabling UseCashPositionsAsMarginCollateral not allowed.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/accountgroups:
    get:
      tags:
        - AccountGroups
      summary: Get a list of all accounts groups used by the specified client
      description: Get a list of all account groups used by the specified client
      operationId: AccountGroupsV1GetAccountGroups
      parameters:
        - name: $inlinecount
          in: query
          schema:
            enum:
              - AllPages
              - None
            type: string
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 1000
        - name: ClientKey
          in: query
          description: The client to which the accounts belong.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGroupResponseListResult'
              example:
                Data:
                  - AccountGroupKey: valuea18a1ce2-98d9-4296-8f4d-462aa52ef242
                    foo: bar
                    AccountGroupName: AccountGroupName8af20a16-e1f9-47cd-ac60-3517cfbdabc4
                    AccountValueProtectionLimit: 65.82865028850641
                    CollateralMonitoringMode: CollateralCreditValue
                    MarginCalculationMethod: JanusMarginReplication
                    MarginLendingEnabled: None
                    MarginMonitoringMode: Lines
                    PortfolioBasedMarginEnabled: false
                    SupportsAccountValueProtectionLimit: true
                MaxRows: 112
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /port/v1/accountgroups/me:
    get:
      tags:
        - AccountGroups
      summary: Get all accounts groups under a particular client to which the logged in user belongs
      description: Get all accounts gropus under a particular client to which the logged in user belongs.
      operationId: AccountGroupsV1GetAccountGroupsForLoggedInUser
      parameters:
        - name: $inlinecount
          in: query
          schema:
            enum:
              - AllPages
              - None
            type: string
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 1000
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGroupResponseListResult'
              example:
                Data:
                  - AccountGroupKey: valuea18a1ce2-98d9-4296-8f4d-462aa52ef242
                    AccountGroupName: AccountGroupName8af20a16-e1f9-47cd-ac60-3517cfbdabc4
                    AccountValueProtectionLimit: 65.82865028850641
                    CollateralMonitoringMode: CollateralCreditValue
                    MarginCalculationMethod: JanusMarginReplication
                    MarginLendingEnabled: None
                    MarginMonitoringMode: Lines
                    PortfolioBasedMarginEnabled: false
                    SupportsAccountValueProtectionLimit: true
                MaxRows: 112
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/port/v1/accountgroups/{AccountGroupKey}':
    get:
      tags:
        - AccountGroups
      summary: Get details about a single account group
      description: Get details about a single account group
      operationId: AccountGroupsV1GetAccountGroup
      parameters:
        - name: AccountGroupKey
          in: path
          description: Unique key for the account group.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: query
          description: The key of the client to which the account group belong.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountGroupResponse'
              example:
                AccountGroupKey: value586bb12f-e1c7-457e-b974-ead64d1dd11d
                AccountGroupName: AccountGroupName795fa1cf-e4d0-4784-9a84-b12ae8cd32eb
                AccountValueProtectionLimit: -3.9889243764423557E+18
                CollateralMonitoringMode: MaxOfCollateralCreditValueAndCollateralCreditLine
                MarginCalculationMethod: SpanForFuturesAndOptions
                MarginLendingEnabled: No
                MarginMonitoringMode: Margin
                PortfolioBasedMarginEnabled: false
                SupportsAccountValueProtectionLimit: true
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidInput
                    type: string
                    x-enum-descriptions:
                      InvalidInput: An error was encountered when processing given input parameters.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
    patch:
      tags:
        - AccountGroups
      summary: Update account group information
      description: Enables the user to update account group settings. Particularly the account group AccountValueProtectionLimit .
      operationId: AccountGroupsV1UpdateAccountGroup
      parameters:
        - name: AccountGroupKey
          in: path
          description: Unique key of the account group to change.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: query
          description: The key of the client to which the account group belong.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountGroupUpdateRequest'
            example:
              AccountValueProtectionLimit: -82159005433.82028
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidInput
                      - NoValidInput
                    type: string
                    x-enum-descriptions:
                      NoValidInput: No valid input values passed.
                      InvalidInput: An error was encountered when processing given input parameters.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
components:
  schemas:
    AccountBenchmarkInstrument:
      additionalProperties: false
      title: Sets the instrument to be used as comparison then evaluating account performance.
      required:
        - BenchmarkInstrumentUic
      type: object
      properties:
        BenchmarkInstrumentAssetType:
          title: The instrument asset type of the benchmark instrument.
          allOf:
            - $ref: '#/components/schemas/AssetTypeNullable'
        BenchmarkInstrumentUic:
          title: The instrument identifier of the benchmark instrument.
          type: integer
          format: int32
    AccountGroupResponse:
      title: Data contract for an account group.
      type: object
      properties:
        AccountGroupKey:
          title: Unique ID of the account group used for selection
          allOf:
            - minLength: 1
              type: string
              x-type-name: AccountGroupKey
        AccountGroupName:
          title: 'Name of the account group, displayed to the user'
          type: string
        AccountValueProtectionLimit:
          title: "If set, this value shields the account value from going below the given limit by automatically triggering closing of positions should the limit be exceeded.\r\n            A limit of zero means there is no limit."
          allOf:
            - type: number
        CollateralMonitoringMode:
          title: "Collateral Monitoring Mode.\r\n            Null when entity is not monitored on collateral."
          allOf:
            - $ref: '#/components/schemas/CollateralMonitoringModeNullable'
        MarginCalculationMethod:
          title: Calculation method for assessing margin utilization.
          allOf:
            - $ref: '#/components/schemas/PortfolioMarginMethod'
        MarginLendingEnabled:
          title: Margin Lending Enabled
          allOf:
            - $ref: '#/components/schemas/MarginLendingEnabled'
        MarginMonitoringMode:
          title: "Margin Monitoring Mode.\r\n            Null when entity is not monitored on margin."
          allOf:
            - $ref: '#/components/schemas/MarginMonitoringModeNullable'
        PortfolioBasedMarginEnabled:
          title: Portfolio Based Margin (PBM) is a method for mapping the risk of an investment portfolio. True if enabled else false.
          type: boolean
        SupportsAccountValueProtectionLimit:
          title: 'If true, an AccountValueProtectionLimit may be set on this account. If it is false, the AccountValueProtectionLimit can be set on client or account group.'
          type: boolean
    AccountGroupResponseListResult:
      additionalProperties: false
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/AccountGroupResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    AccountGroupUpdateRequest:
      additionalProperties: false
      title: A parameter wrapper for account group update operations.
      type: object
      properties:
        AccountValueProtectionLimit:
          title: "If set, this value shields the account value from going below the given limit by automatically triggering closing of positions should the limit be exceeded.\r\n            A limit of zero means there is no limit."
          allOf:
            - type: number
    AccountResetRequest:
      additionalProperties: false
      title: A parameter wrapper for Account Reset operations. queries
      required:
        - NewBalance
      type: object
      properties:
        NewBalance:
          title: The new balance. 0 is minimum and 10.000.000 is maximum.
          type: number
    AccountResponse:
      additionalProperties: false
      title: Data contract for an account.
      required:
        - AccountId
      type: object
      properties:
        AccountGroupKey:
          title: Unique ID of the account group used for selection
          allOf:
            - minLength: 1
              type: string
              x-type-name: AccountGroupKey
        AccountGroupName:
          title: 'Name of the account group, displayed to the user'
          type: string
        AccountId:
          title: 'Unique ID of the account, displayed to the user'
          type: string
        AccountKey:
          title: Unique ID of the account.
          minLength: 1
          type: string
          x-type-name: AccountKey
        AccountSubType:
          title: Sub type of the account.
          allOf:
            - $ref: '#/components/schemas/AccountSubTypeNullable'
        AccountType:
          title: Type of the account.
          allOf:
            - $ref: '#/components/schemas/AccountType'
        AccountValueProtectionLimit:
          title: "If set, this value shields the account value from going below the given limit by automatically triggering closing of positions should the limit be exceeded.\r\n            A limit of zero means there is no limit."
          allOf:
            - type: number
        Active:
          title: Indicates whether the account is active or not.
          type: boolean
        AutoTradingInvestmentId:
          title: 'If the account follows a trade leader on AutoTrading/SaxoSelect, this is the leader identifier.'
          allOf:
            - type: integer
              format: int32
        BenchmarkInstrument:
          title: Contains the instrument to be used as comparison then evaluating account performance.
          allOf:
            - $ref: '#/components/schemas/AccountBenchmarkInstrument'
        CanUseCashPositionsAsMarginCollateral:
          title: 'If true, the user may enable/disable the use of cash positions as margin trading collateral on the given account.'
          type: boolean
        CfdBorrowingCostsActive:
          title: Indicates if the account is configured for CFD borrowing costs.
          allOf:
            - type: boolean
        ClientId:
          title: Unique ID of the client owning the account
          type: string
        ClientIdTest:
          title: Unique ID of the client owning the account
          type: string
        ClientKey:
          title: Unique ID of the client - for navigation purposes
          minLength: 1
          type: string
          x-type-name: ClientKey
        CreationDate:
          title: The UTC date and time the account was created.
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Currency:
          title: Account currency.
          type: string
        CurrencyDecimals:
          title: Number of decimals used in currency.
          type: integer
          format: int32
        DirectMarketAccess:
          title: Indicates direct market access for the account.
          type: boolean
        DirectMarketExchangesIds:
          title: Lists exchanges for which the account is direct market access enabled.
          type: array
          items:
            type: string
        DisplayName:
          title: User customizable account name.
          type: string
        FractionalOrderEnabled:
          title: FractionalOrder is enabled or not for the account.
          type: boolean
        IndividualMargining:
          title: 'Indicates that the margin exposure is calculated for this account only, without cross margining to other accounts within the same account group.'
          type: boolean
        IsCurrencyConversionAtSettlementTime:
          title: 'If true, currency conversions between trade and account currency take place at time of trade settlement. Typically end of business day.'
          type: boolean
        IsMarginTradingAllowed:
          title: Indicates whether trading on margin is allowed for the account.
          type: boolean
        IsShareable:
          title: "Indicates whether or not the account can be shared.\r\n            An account can only be shared if it is the only account of its client and it is not a trial account."
          type: boolean
        IsTrialAccount:
          title: IsTrialAccount - Is this a trial account.
          type: boolean
        LegalAssetTypes:
          title: AssetTypes that can be traded on this account.
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
        ManagementType:
          title: Account's Management Type.
          allOf:
            - $ref: '#/components/schemas/ManagementType'
        MarginCalculationMethod:
          title: Calculation method for assessing margin utilization.
          allOf:
            - $ref: '#/components/schemas/PortfolioMarginMethod'
        MarginLendingEnabled:
          title: Margin Lending Enabled.
          allOf:
            - $ref: '#/components/schemas/MarginLendingEnabled'
        PortfolioBasedMarginEnabled:
          title: Portfolio Based Margin (PBM) is a method for mapping the risk of an investment portfolio. True if enabled else false.
          type: boolean
        Sharing:
          title: Returns a list of application identifiers that the account has been shared with.
          type: array
          items:
            type: string
        SupportsAccountValueProtectionLimit:
          title: 'If true, an AccountValueProtectionLimit may be set on this account. If it is false, the AccountValueProtectionLimit can be set on client or account group.'
          type: boolean
        UseCashPositionsAsMarginCollateral:
          title: Enable/disable the use of cash positions for margin trading collateral.
          type: boolean
    AccountResponseArray:
      additionalProperties: false
      type: array
      items:
        $ref: '#/components/schemas/AccountResponse'
    AccountResponseListResult:
      additionalProperties: false
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/AccountResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    AccountSubType:
      additionalProperties: false
      title: Describes the sub type of the account.
      enum:
        - EquitySaving
        - None
        - NorwayASK
        - PEA
        - PEA_PME
        - SwedenISK
      type: string
      x-enum-descriptions:
        None: 'Default , used for None.'
        EquitySaving: Equity Saving Account.
        PEA: PEA.
        PEA_PME: PEA-PME.
        NorwayASK: Norway ASK ( Tax saving Account).
        SwedenISK: Sweden ISK ( Tax Saving Account).
    AccountSubTypeNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/AccountSubType'
    AccountType:
      additionalProperties: false
      title: Describes the type of account.
      enum:
        - AutoTradingFollower
        - AutoTradingLeader
        - BlockTrading
        - Collateral
        - Commission
        - Funding
        - Interest
        - MarginLending
        - Normal
        - Omnibus
        - Other
        - Pension
        - Settlement
        - SettlementTrading
        - Tax
        - TaxFavoredAccount
      type: string
      x-enum-descriptions:
        Normal: Default. Used for normal client accounts.
        BlockTrading: Account used for allocating large block orders.
        SettlementTrading: 'For FX Settlement trading clients, this account type is used for the main trading account.'
        Collateral: Account used to hold collateral assets. Not used for trading.
        Funding: Account used to transfer funds between client accounts. Not used for trading.
        Commission: Booking account for comissions only. Not used for trading.
        Interest: Booking account for interest only. Not used for trading.
        Omnibus: Partner account used to execute and clear client trades.
        Settlement: Used in connection with SettlementTrading accounts. SettlementTrading accounts is used on the actual trading account. Settlement accounts are used on the sub accounts. Not used for trading.
        Tax: Retention account for accumulating or withholding taxes. Not used for trading.
        AutoTradingLeader: Account Type for AutoTrading leader accounts.
        AutoTradingFollower: Account Type for AutoTrading follower accounts.
        TaxFavoredAccount: Tax favored account.
        MarginLending: Margin Lending.
        Pension: Pension account.
        Other: Account type not mapped.
    AccountUpdateRequest:
      additionalProperties: false
      title: A parameter wrapper for Account update operations.
      type: object
      properties:
        AccountValueProtectionLimit:
          title: "If set, this value shields the account value from going below the given limit by automatically triggering closing of positions should the limit be exceeded.\r\n            A limit of zero means there is no limit."
          allOf:
            - type: number
        BenchmarkInstrument:
          title: Sets the instrument to be used as comparison then evaluating account performance.
          allOf:
            - $ref: '#/components/schemas/AccountBenchmarkInstrument'
        DisplayName:
          title: The nickname the client would like to give the account.
          type: string
        UseCashPositionsAsMarginCollateral:
          title: Enable/disable the use of cash positions for margin trading collateral.
          allOf:
            - type: boolean
    AccountsRequest:
      additionalProperties: false
      title: "Represents a request for one or more accounts.\r\n            At least one of the following must be specified."
      required:
        - ClientKey
      type: object
      properties:
        AccountGroupKey:
          title: The key of the account group to which the accounts belong.
          minLength: 1
          type: string
          x-type-name: AccountGroupKey
        AccountKey:
          title: The key of the account to monitor.
          minLength: 1
          type: string
          x-type-name: AccountKey
        ClientKey:
          title: Unique key identifying the client that owns the accounts.
          minLength: 1
          type: string
          x-type-name: ClientKey
    AccountsSubscriptionRequest:
      additionalProperties: false
      title: Public request contract for setting up a subscription on accounts for a client.
      required:
        - ContextId
        - ReferenceId
      type: object
      properties:
        ContextId:
          title: "The streaming context id that this request is associated with.\r\n            This parameter must only contain letters (a-z) and numbers (0-9) as well as - (dash) and _ (underscore). It is case insensitive. Max length is 50 characters."
          pattern: '^[a-zA-Z0-9_-]{1,50}$'
          type: string
          x-display-order: 1
        ReferenceId:
          title: "Mandatory client specified reference id for the subscription.\r\n            This parameter must only contain alphanumberic characters as well as - (dash) and _ (underscore). Cannot start with _. It is case insensitive. Max length is 50 characters."
          pattern: '^[a-zA-Z0-9-][a-zA-Z0-9_-]{0,49}$'
          type: string
          x-display-order: 2
        Arguments:
          title: Arguments for the subscription request.
          allOf:
            - $ref: '#/components/schemas/AccountsRequest'
        Format:
          title: "Optional Media type (RFC 2046) of the serialized data updates that are streamed to the client.\r\n            Currently only application/json and application/x-protobuf is supported.\r\n            If an unrecognized format is specified, the subscription end point will return HTTP status code 400 - Bad format."
          type: string
        RefreshRate:
          title: "Optional custom refresh rate, measured in milliseconds, between each data update.\r\n            Note that it is not possible to get a refresh rate lower than the rate specified in the\r\n            customer service level agreement (SLA)."
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        ReplaceReferenceId:
          title: Reference id of the subscription that should be replaced.
          pattern: '^[a-zA-Z0-9-][a-zA-Z0-9_-]{0,49}$'
          type: string
        Tag:
          title: Optional client specified tag used for grouping subscriptions.
          type: string
    AccountsSubscriptionResponse:
      additionalProperties: false
      title: Public response contract returned after setting up a subscription on accounts for a client.
      type: object
      properties:
        ContextId:
          title: The streaming context id that this response is associated with.
          type: string
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
          x-display-order: 1
        ReferenceId:
          title: The reference id that (along with streaming context id and session id) identifies the subscription (within the context of a specific service/subscription type)
          type: string
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
          x-display-order: 2
        Format:
          title: 'The media type (RFC 2046), of the serialized data updates that are streamed to the client.'
          type: string
        InactivityTimeout:
          title: The time (in seconds) that the client should accept the subscription to be inactive before considering it invalid.
          type: integer
          format: int32
        RefreshRate:
          title: Actual refresh rate assigned to the subscription according to the customers SLA.
          type: integer
          format: int32
        Snapshot:
          title: 'Snapshot of the current data on hand, when subscription was created.'
          allOf:
            - $ref: '#/components/schemas/AccountResponseListResult'
        State:
          title: The value "Active".
          type: string
          description: This property is kept for backwards compatibility.
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
        Tag:
          title: 'Client specified tag assigned to the subscription, if specified in the request.'
          type: string
    AssetType:
      additionalProperties: false
      title: The possible AssetTypes for which you can get a quote or place an order or a trade.
      enum:
        - Bond
        - Cash
        - CertificateBonus
        - CertificateCappedBonus
        - CertificateCappedCapitalProtected
        - CertificateCappedOutperformance
        - CertificateConstantLeverage
        - CertificateDiscount
        - CertificateExpress
        - CertificateTracker
        - CertificateUncappedCapitalProtection
        - CertificateUncappedOutperformance
        - CfdIndexOption
        - CfdOnCompanyWarrant
        - CfdOnEtc
        - CfdOnEtf
        - CfdOnEtn
        - CfdOnFund
        - CfdOnFutures
        - CfdOnIndex
        - CfdOnRights
        - CfdOnStock
        - CompanyWarrant
        - ContractFutures
        - Etc
        - Etf
        - Etn
        - Fund
        - FuturesOption
        - FuturesStrategy
        - FxBinaryOption
        - FxForwards
        - FxKnockInOption
        - FxKnockOutOption
        - FxNoTouchOption
        - FxOneTouchOption
        - FxSpot
        - FxVanillaOption
        - GuaranteeNote
        - IpoOnStock
        - ManagedFund
        - MiniFuture
        - MutualFund
        - PortfolioNote
        - Rights
        - SrdOnEtf
        - SrdOnStock
        - Stock
        - StockIndex
        - StockIndexOption
        - StockOption
        - Warrant
        - WarrantDoubleKnockOut
        - WarrantKnockOut
        - WarrantOpenEndKnockOut
        - WarrantSpread
      type: string
      x-enum-descriptions:
        FxSpot: Forex Spot.
        FxForwards: Forex Forward.
        FxVanillaOption: Forex Vanilla Option.
        FxKnockInOption: Forex Knock In Option.
        FxKnockOutOption: Forex Knock Out Option.
        FxBinaryOption: Forex Binary Option.
        FxOneTouchOption: Forex One Touch Option.
        FxNoTouchOption: Forex No Touch Option.
        ContractFutures: Contract Futures.
        FuturesStrategy: Futures Strategy.
        Stock: Stock.
        StockOption: Stock Option.
        Bond: Bond.
        FuturesOption: Futures Option.
        StockIndexOption: Stock Index Option.
        ManagedFund: 'Obsolete: Managed Fund.'
        Cash: Cash. Not tradeable!
        CfdOnStock: Cfd on Stock.
        CfdOnIndex: Cfd on Stock Index.
        CfdOnFutures: Cfd on Futures.
        StockIndex: Stock Index.
        MutualFund: Mutual Fund.
        CfdIndexOption: Cfd Index Option.
        CfdOnEtf: Cfd on Etf
        CfdOnEtc: Cfd on Etc
        CfdOnEtn: Cfd on Etn
        CfdOnFund: Cfd on Fund
        CfdOnRights: Cfd on Rights
        CfdOnCompanyWarrant: Cfd on unlisted warrant issued by a corporation.
        Etf: Exchange traded fund.
        Etc: Etc
        Etn: Etn
        Fund: Fund
        Rights: Rights
        Warrant: Warrant
        MiniFuture: MiniFuture.
        WarrantSpread: Warrant with built-in spread.
        WarrantKnockOut: Warrant with a knock-out barrier.
        WarrantOpenEndKnockOut: Knock-out Warrant with no expiry.
        WarrantDoubleKnockOut: Warrant with two knock-out barriers.
        CertificateUncappedCapitalProtection: Guarantees a percentage increase of the underlying asset's value above the issue price at expiry/maturity. Max loss is the amount invested multiplied by the CapitalProtection percentage.
        CertificateCappedCapitalProtected: Guarantees a capped percentage increase of the underlying asset's value above the issue price at expiry/maturity. Max loss is the amount invested multiplied by the CapitalProtection percentage.
        CertificateDiscount: 'Yields a capped return if the underlying asset''s value is above the specified cap level at expiry. If the underlying''s value is below the strike at expiry, the investor received the underlying or equivalent value. Offers direct exposure in underlying at a lower price (discount) with a capped potential profit and limited loss.'
        CertificateCappedOutperformance: Capped Outperformance Certificate.
        CertificateCappedBonus: Certificate Capped Bonus.
        CertificateExpress: Certificate Express kick out.
        CertificateTracker: A certificate that mirrors the price movement of the underlying instrument. Often used to trade movements in indicies. Movements can be a fixed ratio of the underlying and can be inverted for bearish/short speculation. Risk is equivalent to owning the underlying.
        CertificateUncappedOutperformance: 'Provides leveraged returns when the underlying price exceeds the threshold strike price. The amount leverage is defined by the Participation %. When the underlying is below the strike price, the certificate mirrors the underlying price 1:1.'
        CertificateBonus: 'Mirrors the price movement of the underlying only if and when the underlying price exceeds the defined barrier. If the certificate expires below the barrier, it offers partial protection/return of investment.'
        CertificateConstantLeverage: Certificate Constant Leverage.
        SrdOnStock: SRD. (Service de Règlement Différé) on Stock.
        SrdOnEtf: SRD. (Service de Règlement Différé) on Etf.
        IpoOnStock: IPO on Stock
        CompanyWarrant: 'Unlisted warrant issued by a corporation, often physically settled.'
        PortfolioNote: Danish pooled investment scheme (“Pulje”). Not online tradeable.
        GuaranteeNote: Danish investment scheme (“Grantbevis”). Not online tradeable.
    AssetTypeNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/AssetType'
    BalanceFieldGroup:
      additionalProperties: false
      title: Specification of fieldsets to include in results.
      enum:
        - CalculateCashForTrading
        - MarginOverview
      type: string
      x-enum-descriptions:
        MarginOverview: 'Include instrument margin utilization for positions on a client, account group or an account.'
        CalculateCashForTrading: Calculates cash available for trading from all accounts.
      x-type-warning: FlaggableEnum
    BalanceRequest:
      additionalProperties: false
      title: 'Represents a request for the account balance for a specified Client, AccountGroup or Account.'
      required:
        - ClientKey
      type: object
      properties:
        AccountGroupKey:
          title: The key of the account group for which the balance data is returned
          minLength: 1
          type: string
          x-type-name: AccountGroupKey
        AccountKey:
          title: The key of the account for which the balance data is returned
          minLength: 1
          type: string
          x-type-name: AccountKey
        ClientKey:
          title: The key of the client for which the balance data is returned
          minLength: 1
          type: string
          x-type-name: ClientKey
        FieldGroups:
          title: Specifies which data to return.
          type: array
          items:
            $ref: '#/components/schemas/BalanceFieldGroup'
    BalanceResponse:
      additionalProperties: false
      title: Data contract for account or client balance
      type: object
      properties:
        AccountFundingLimit:
          title: 'Account funding limit, this field is applicable only for TaxSaving AccountType and for FrancePea and FrancePeaPme SubAccountType.'
          allOf:
            - type: number
        AccountNetFundedAmount:
          title: '/// Account funding limit, this field is applicable only for TaxSaving AccountType and for FrancePea and FrancePeaPme SubAccountType.'
          allOf:
            - type: number
        AccountRemainingFunding:
          title: "Account Remaining Funding, this field is applicable for following two cases\r\n            a) For TaxSaving AccountType and for FrancePea and FrancePeaPme SubAccountType.\r\n            b) For Pension AccountType."
          allOf:
            - type: number
        AccountValueProtectionLimit:
          title: 'If set, this value shields the client/account group/account value from going below the given limit by automatically triggering closing of positions should the limit be exceeded. A limit of zero means there is no limit.'
          allOf:
            - type: number
        CalculationReliability:
          title: If an error was encountered this indicates source of the calculation error.
          allOf:
            - $ref: '#/components/schemas/CalculationReliabilityNullable'
        CashAvailableForTrading:
          title: Cash available for trading for the current account.
          allOf:
            - type: number
        CashBalance:
          title: Current cash balance of the account.
          allOf:
            - type: number
        CashBlocked:
          title: Cash blocked for the current account.
          allOf:
            - type: number
        ChangesScheduled:
          title: 'True if there are scheduled changes to margin, collateral or rating changes.'
          type: boolean
        ClosedPositionsCount:
          title: Number of current closed positions.
          type: integer
          format: int32
        CollateralAvailable:
          title: 'Sum of collateral from positions, cash, collateral credit and other holdings available to maintain positions.'
          allOf:
            - type: number
        CollateralCreditLine:
          title: The utilization state and maximum collateral credit line limit.
          allOf:
            - $ref: '#/components/schemas/LineStatus'
        CollateralCreditValue:
          title: The utilization state and maximum collateral credit value.
          allOf:
            - $ref: '#/components/schemas/LineStatus'
        CollateralLoan:
          title: Size of loan secured by collateral
          allOf:
            - type: number
        CorporateActionUnrealizedAmounts:
          title: Corporate Action Unrealized Amounts.
          allOf:
            - type: number
        CostToClosePositions:
          title: Costs to pay if all position where realized.
          allOf:
            - type: number
        CreditLine:
          title: The utilization state and maximum credit limit.
          allOf:
            - $ref: '#/components/schemas/LineStatus'
        Currency:
          title: Currency of account or client default currency
          type: string
        CurrencyDecimals:
          title: Number of decimals used in currency.
          allOf:
            - type: integer
              format: int32
        FirstFundingDate:
          title: 'The FirstFundingDate of account, , this field is applicable only for TaxSaving AccountType and for FrancePea and FrancePeaPme SubAccountType.'
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
          deprecated: true
        FundsAvailableForSettlement:
          title: Funds available for trades settling today
          allOf:
            - type: number
        FundsReservedForSettlement:
          title: Funds reserved for trades settling today at market opening
          allOf:
            - type: number
        InitialMargin:
          title: 'If set, this represents the calculation entity''s initial margin (purchasing power).'
          allOf:
            - $ref: '#/components/schemas/InitialMarginResponse'
        IntradayMarginDiscount:
          title: Margin credited for unnetted positions closed intraday
          allOf:
            - type: number
        IsPortfolioMarginModelSimple:
          title: 'True if the given client/account is on simple margining. F.ex. Used to indicate if the account supports close all positions. Typically this means the client has a single account or single account margining and no settlement accounts. As well as no Fx Forwards/Options, listed options or Futures using advanced margining methods.'
          type: boolean
        MarginAvailableForTrading:
          title: Margin available for trading. The amount of remaining collateral available for margin trading.
          allOf:
            - type: number
        MarginCollateralNotAvailable:
          title: Current collateral deduction of unrealized positions.
          allOf:
            - type: number
        MarginCollateralNotAvailableDetail:
          title: Detail of  MarginCollateralNotAvailable
          allOf:
            - $ref: '#/components/schemas/MarginCollateralNotAvailableDetail'
        MarginExposureCoveragePct:
          title: 'Percentage of total margin exposure related to total collateral. I.e. the ratio between the Account Value and the Net Exposure. If account exposure is 0, the coverage percent is also returned as 0.'
          allOf:
            - type: number
        MarginNetExposure:
          title: Total net exposure of margin traded positions across all instruments.
          allOf:
            - type: number
        MarginOverview:
          title: Instrument margin utilization for positions.
          allOf:
            - $ref: '#/components/schemas/MarginOverviewByGroup'
        MarginUsedByCurrentPositions:
          title: 'Sum of maintenance margin used for current positions, also known as Used For Margin Requirements.'
          allOf:
            - type: number
        MarginUtilizationPct:
          title: Level of margin already utilized in percent. I.e. the ratio between the margin collateral used and the total available margin collateral. Indicates distance to margin calls.
          allOf:
            - type: number
        NetEquityForMargin:
          title: 'Value used as basis to calculate maintinance margin. It is calculated as TotalValue plus pending settlements (funds awaiting settlement for partners), minus MarginCollateralNotAvailable.'
          allOf:
            - type: number
        NetPositionsCount:
          title: Number of current open net positions.
          type: integer
          format: int32
        NonMarginPositionsValue:
          title: 'Sum of MarketValue for all non-margin instruments, converted to account currency.'
          allOf:
            - type: number
        OpenIpoOrdersCount:
          title: Open Ipo order(s) count
          type: integer
          format: int32
        OpenPositionsCount:
          title: Number of current open positions.
          type: integer
          format: int32
        OptionPremiumsMarketValue:
          title: 'Combined market value of premium for all options, both FX and Contract Options.'
          allOf:
            - type: number
        OrdersCount:
          title: Number of current open orders.
          type: integer
          format: int32
        OtherCollateral:
          title: Indicates the value of securities that has been deposited as collateral for margin.
          allOf:
            - type: number
        OtherCollateralDeduction:
          title: Other Collateral Deduction derive from regulatory contributors margin value.
          allOf:
            - type: number
        SettlementLine:
          title: The utilization state and maximum settlement credit limit.
          allOf:
            - $ref: '#/components/schemas/LineStatus'
        SettlementValue:
          title: 'Net current settlement value, long and short positions combined.'
          allOf:
            - type: number
        SpendingPower:
          title: The current spending power available.
          allOf:
            - type: number
        TotalRiskLine:
          title: The utilization state and risk credit limit.
          allOf:
            - $ref: '#/components/schemas/LineStatus'
        TotalValue:
          title: 'Current value of unrealized positions incl. costs, cash balance and transactions not booked.'
          allOf:
            - type: number
        TradingLine:
          title: The utilization state and maximum trading credit limit.
          allOf:
            - $ref: '#/components/schemas/LineStatus'
        TransactionsNotBooked:
          title: Value of transactions that have yet to be booked.
          allOf:
            - type: number
        TransactionsNotBookedDetail:
          title: Detail of transaction(s) that yet have to be booked.
          allOf:
            - $ref: '#/components/schemas/TransactionsNotBookedDetail'
        TriggerOrdersCount:
          title: Number of current open trigger orders.
          type: integer
          format: int32
        UnrealizedMarginClosedProfitLoss:
          title: ProfitLoss on all closed (netting and explicit) part of positions (Intraday netting specific )
          allOf:
            - type: number
        UnrealizedMarginOpenProfitLoss:
          title: ProfitLoss on open part of positions (Intraday netting specific )
          allOf:
            - type: number
        UnrealizedMarginProfitLoss:
          title: 'Sum of profit/loss ex. costs for all margin instruments, converted to account currency.'
          allOf:
            - type: number
        UnrealizedPositionsValue:
          title: The current unrealized profit/loss and face value of all positions excl. costs.
          allOf:
            - type: number
        VariationMargin:
          title: The change in value of unrealized derivatives positions since opening them.
          allOf:
            - type: number
        VariationMarginCashBalance:
          title: Cash amount withdrawn from unrealized derivatives positions (VaritionMargin).
          allOf:
            - type: number
        VariationMarginThreshold:
          title: Maximmum amount that may be withdrawn from unrealized derivatives positions (VaritionMargin).
          allOf:
            - type: number
    BalanceSubscriptionRequest:
      additionalProperties: false
      title: Public request contract for setting up a subscription on a balance.
      required:
        - ContextId
        - ReferenceId
      type: object
      properties:
        ContextId:
          title: "The streaming context id that this request is associated with.\r\n            This parameter must only contain letters (a-z) and numbers (0-9) as well as - (dash) and _ (underscore). It is case insensitive. Max length is 50 characters."
          pattern: '^[a-zA-Z0-9_-]{1,50}$'
          type: string
          x-display-order: 1
        ReferenceId:
          title: "Mandatory client specified reference id for the subscription.\r\n            This parameter must only contain alphanumberic characters as well as - (dash) and _ (underscore). Cannot start with _. It is case insensitive. Max length is 50 characters."
          pattern: '^[a-zA-Z0-9-][a-zA-Z0-9_-]{0,49}$'
          type: string
          x-display-order: 2
        Arguments:
          title: Arguments for the subscription request.
          allOf:
            - $ref: '#/components/schemas/BalanceRequest'
        Format:
          title: "Optional Media type (RFC 2046) of the serialized data updates that are streamed to the client.\r\n            Currently only application/json and application/x-protobuf is supported.\r\n            If an unrecognized format is specified, the subscription end point will return HTTP status code 400 - Bad format."
          type: string
        RefreshRate:
          title: "Optional custom refresh rate, measured in milliseconds, between each data update.\r\n            Note that it is not possible to get a refresh rate lower than the rate specified in the\r\n            customer service level agreement (SLA)."
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        ReplaceReferenceId:
          title: Reference id of the subscription that should be replaced.
          pattern: '^[a-zA-Z0-9-][a-zA-Z0-9_-]{0,49}$'
          type: string
        Tag:
          title: Optional client specified tag used for grouping subscriptions.
          type: string
    BalanceSubscriptionResponse:
      additionalProperties: false
      title: Public response contract returned after setting up a subscription on accounts.
      type: object
      properties:
        ContextId:
          title: The streaming context id that this response is associated with.
          type: string
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
          x-display-order: 1
        ReferenceId:
          title: The reference id that (along with streaming context id and session id) identifies the subscription (within the context of a specific service/subscription type)
          type: string
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
          x-display-order: 2
        Format:
          title: 'The media type (RFC 2046), of the serialized data updates that are streamed to the client.'
          type: string
        InactivityTimeout:
          title: The time (in seconds) that the client should accept the subscription to be inactive before considering it invalid.
          type: integer
          format: int32
        RefreshRate:
          title: Actual refresh rate assigned to the subscription according to the customers SLA.
          type: integer
          format: int32
        Snapshot:
          title: 'Snapshot of the current data on hand, when subscription was created.'
          allOf:
            - $ref: '#/components/schemas/BalanceResponse'
        State:
          title: The value "Active".
          type: string
          description: This property is kept for backwards compatibility.
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
        Tag:
          title: 'Client specified tag assigned to the subscription, if specified in the request.'
          type: string
    BuySell:
      additionalProperties: false
      title: 'Describes the direction of an order, action or trade.'
      enum:
        - Buy
        - Sell
      type: string
      x-enum-descriptions:
        Buy: Buy.
        Sell: Sell.
    CalculationReliability:
      additionalProperties: false
      title: To what extent can the calculated values and P/L be trusted
      enum:
        - ApproximatedPrice
        - CurrencyConversionFailed
        - FailedToCalculateCollateral
        - NoMarketAccess
        - Ok
        - OkWithConditions
        - PricePending
        - SystemError
        - UnknownPrice
      type: string
      x-enum-descriptions:
        Ok: Ok - calculation successful
        UnknownPrice: Unknown price
        CurrencyConversionFailed: Currency conversion failed
        FailedToCalculateCollateral: Failed to calculate collateral
        OkWithConditions: Calculation was ok given some conditions
        PricePending: Calculation depends on a price that is currently unavailable.
        NoMarketAccess: No Market Access for price.
        SystemError: General error due to system or client configuration.
        ApproximatedPrice: Profit/loss calculated based on a synthetic non-market price.
    CalculationReliabilityNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/CalculationReliability'
    ClientContractType:
      additionalProperties: false
      title: Clients Contract Types
      enum:
        - JointAccount
      type: string
      x-enum-descriptions:
        JointAccount: Joint account
    ClientContractTypeNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/ClientContractType'
    ClientPositionNettingMethod:
      additionalProperties: false
      title: Client's  position netting method
      enum:
        - Average
        - FIFO
      type: string
      x-enum-descriptions:
        FIFO: FIFO Netting Method
        Average: Average Netting Method
    ClientPositionNettingMode:
      additionalProperties: false
      title: Client's  position netting mode
      enum:
        - EndOfDay
        - Intraday
      type: string
      x-enum-descriptions:
        EndOfDay: Default EndOfDay netting mode.
        Intraday: Intraday netting mode.
    ClientPositionNettingModeNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/ClientPositionNettingMode'
    ClientPositionNettingProfile:
      additionalProperties: false
      title: Client's position netting profile
      enum:
        - AverageRealTime
        - FifoEndOfDay
        - FifoRealTime
      type: string
      x-enum-descriptions:
        AverageRealTime: AverageRealTime netting profile
        FifoRealTime: FifoRealTime netting profile
        FifoEndOfDay: FifoEndOfDay netting profile
    ClientPositionNettingProfileNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/ClientPositionNettingProfile'
    ClientResponse:
      additionalProperties: false
      title: Public data contract representing a client.
      type: object
      properties:
        AccountValueProtectionLimit:
          title: "If set, this value shields the total client value from going below the given limit by automatically triggering closing of positions should the limit be exceeded.\r\n            A limit of zero means there is no limit."
          allOf:
            - type: number
        AllowedNettingProfiles:
          title: Allowed Netting Profiles for Client.
          type: array
          items:
            $ref: '#/components/schemas/ClientPositionNettingProfile'
        ClientId:
          title: Unique ID of the client - for display to the user.
          type: string
        ClientKey:
          title: The unique key for the client.
          minLength: 1
          type: string
          x-type-name: ClientKey
        CollateralMonitoringMode:
          title: "Collateral Monitoring Mode.\r\n            Null when entity is not monitored on collateral."
          allOf:
            - $ref: '#/components/schemas/CollateralMonitoringModeNullable'
        ContractType:
          title: "Client Contract Type.\r\n            Null if Client contract doesn’t belong to joint account."
          allOf:
            - $ref: '#/components/schemas/ClientContractTypeNullable'
        CurrencyDecimals:
          title: Number of decimals used in currency.
          type: integer
          format: int32
        DefaultAccountId:
          title: The default account for this client.
          type: string
        DefaultAccountKey:
          title: The unique key for the client's default account.
          minLength: 1
          type: string
          x-type-name: AccountKey
        DefaultCurrency:
          title: 'The default currency for this client. Used for example for aggregation: if the client has accounts in multiple currencies, show the aggregated P/L in the this currency.'
          type: string
        ForceOpenDefaultValue:
          title: 'If True, the order(s) placed by default will be set to force open , therfore resulting positions will not automatically be netted with positions in the opposite direction.'
          type: boolean
        IsMarginTradingAllowed:
          title: Indicates whether trading on margin is allowed for the account.
          type: boolean
        IsVariationMarginEligible:
          title: Indicates if the client is enabled for withdrawal of unrealized profit/loss of derivatives positions.
          type: boolean
        LegalAssetTypes:
          title: 'The combined list of asset types, which can be traded on at least one of the accounts owned by this client.'
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
        LegalAssetTypesAreIndicative:
          title: 'Certain clients have LegalAssetTypes on the account level and there may be instrument specific exceptions, so the client application must look up the individual instruments in Ref/InstrumentDetails to determine trade and prices permissions.'
          type: boolean
        MarginCalculationMethod:
          title: Calculation method for assessing margin utilization.
          allOf:
            - $ref: '#/components/schemas/PortfolioMarginMethod'
        MarginMonitoringMode:
          title: "Margin Monitoring Mode.\r\n            Null when entity is not monitored on margin."
          allOf:
            - $ref: '#/components/schemas/MarginMonitoringModeNullable'
        MutualFundsCashAmountOrderCurrency:
          title: Indicates the currency used when placing MutualFunds orders with OrderAmountType.CashAmount.
          allOf:
            - $ref: '#/components/schemas/MutualFundsCashAmountOrderCurrencyNullable'
        Name:
          title: The name of the client.
          type: string
        PositionNettingMethod:
          title: The position netting method for this client.
          allOf:
            - $ref: '#/components/schemas/ClientPositionNettingMethod'
        PositionNettingMode:
          title: The position netting mode for this client.
          allOf:
            - $ref: '#/components/schemas/ClientPositionNettingMode'
        PositionNettingProfile:
          title: The position netting profile for this client.
          allOf:
            - $ref: '#/components/schemas/ClientPositionNettingProfile'
        ReduceExposureOnly:
          title: 'If True, Client has been marked to reduce exposure.'
          type: boolean
        SecurityLendingEnabled:
          title: Indicates if the client is enabled for security lending.
          allOf:
            - $ref: '#/components/schemas/SecurityLendingEnabledNullable'
        SupportsAccountValueProtectionLimit:
          title: 'If true, an AccountValueProtectionLimit may be set on the client level. If it is false, the AccountValueProtectionLimit must be set on individual accounts or on account group level.'
          type: boolean
    ClientResponseListResult:
      additionalProperties: false
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ClientResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    ClientUpdateRequest:
      additionalProperties: false
      title: A parameter wrapper for updating client values.
      type: object
      properties:
        AccountValueProtectionLimit:
          title: "If set, this value shields the total client value from going below the given limit by automatically triggering closing of positions should the limit be exceeded.\r\n            A limit of zero means there is no limit."
          allOf:
            - type: number
        ForceOpenDefaultValue:
          title: 'If True, the order(s) placed by default will be set to force open , therfore resulting positions will not automatically be netted with positions in the opposite direction'
          allOf:
            - type: boolean
        NewPositionNettingMode:
          title: 'The position netting mode, client would like to switch to.'
          allOf:
            - $ref: '#/components/schemas/ClientPositionNettingModeNullable'
        NewPositionNettingProfile:
          title: 'The position netting profile, client would like to switch to.'
          allOf:
            - $ref: '#/components/schemas/ClientPositionNettingProfileNullable'
    ClosedPosition:
      additionalProperties: false
      title: Static contents for a closed position.
      type: object
      properties:
        AccountId:
          title: The id of the account to which the closed position belongs.
          type: string
        Amount:
          title: Sum volume of positions in instrument.
          type: number
        AssetType:
          title: The AssetType.
          allOf:
            - $ref: '#/components/schemas/AssetType'
        BuyOrSell:
          title: Closing direction - Buy or Sell
          allOf:
            - $ref: '#/components/schemas/BuySell'
        ClientId:
          title: The id of the client to which the closed position belongs.
          type: string
        ClosedProfitLoss:
          title: Closed ProfitLoss in Instrument currency
          type: number
        ClosedProfitLossInBaseCurrency:
          title: Closed ProfitLoss in Base (client/ account) currency
          type: number
        ClosingIndexRatio:
          title: 'Closing IndexRatio, Applicable for Inflation linked bonds.'
          allOf:
            - type: number
        ClosingMarketValue:
          title: Market value at closing for non-options in instrument currency
          type: number
        ClosingMarketValueInBaseCurrency:
          title: Market value at closing for non-options in base currency
          type: number
        ClosingMethod:
          title: "The closing method of the position. \r\n            Possible values: Explicit, Fifo."
          allOf:
            - $ref: '#/components/schemas/PositionClosingMethod'
        ClosingPositionId:
          title: The Id of closing position that caused closing..
          type: string
        ClosingPremium:
          title: 'Premium for option positions that are closed, in instrument currency'
          allOf:
            - type: number
        ClosingPremiumInBaseCurrency:
          title: 'Premium for option positions that are closed, in base currency'
          allOf:
            - type: number
        ClosingPrice:
          title: Closing price
          type: number
        ConversionRateInstrumentToBaseSettledClosing:
          title: True when the closing trades currency conversion rate has been settled (i.e. is fixed and not fluctuating). This is the case for accounts using Market Conversion-Rates.
          type: boolean
        ConversionRateInstrumentToBaseSettledOpening:
          title: True when the opening trades currency conversion rate has been settled (i.e. is fixed and not fluctuating). This is the case for accounts using Market Conversion-Rates.
          type: boolean
        CostClosing:
          title: Total Cost in instrument currency
          allOf:
            - type: number
        CostClosingInBaseCurrency:
          title: Total Cost in client/account currency
          allOf:
            - type: number
        CostOpening:
          title: Total Cost in instrument currency
          allOf:
            - type: number
        CostOpeningInBaseCurrency:
          title: Total Cost in client/account currency
          allOf:
            - type: number
        ExecutionTimeClose:
          title: The UTC date and time the position was closed.
          type: string
          format: date-time
          x-type-name: UtcDateTime
        ExecutionTimeOpen:
          title: The UTC date and time the position was opened.
          type: string
          format: date-time
          x-type-name: UtcDateTime
        ExpiryDate:
          title: The ExpiryDate.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        FxOptionData:
          title: Fx option-related data. Only for fx options.
          allOf:
            - $ref: '#/components/schemas/FXOptionsBaseData'
        NoticeDate:
          title: Futures only - The date on which the owner may be required to take physical delivery of the instrument commodity.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        OpenPrice:
          title: The price the instrument was traded at.
          type: number
        OpeningIndexRatio:
          title: 'Opening IndexRatio, Applicable for Inflation linked bonds.'
          allOf:
            - type: number
        OpeningPositionId:
          title: The Id of opening position that has been closed.
          type: string
        ProfitLossCurrencyConversion:
          title: The profit loss from currency conversion between position close and position open.
          allOf:
            - type: number
        ProfitLossOnTrade:
          title: The P/L on the trade in the currency in which the instrument is traded.
          allOf:
            - type: number
        ProfitLossOnTradeInBaseCurrency:
          title: The P/L in the client/account group/account currency.
          allOf:
            - type: number
        SrdSettlementDate:
          title: SRD Settlement Date
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        Uic:
          title: Unique id of the instrument.
          type: integer
          format: int32
    ClosedPositionDetailedResponse:
      additionalProperties: false
      title: Describes an open position in detail
      required:
        - ClosedPositionUniqueId
      type: object
      properties:
        ClosedPosition:
          title: ClosedPosition info
          allOf:
            - $ref: '#/components/schemas/ClosedPosition'
        ClosedPositionDetails:
          title: Additional details related to the position.
          allOf:
            - $ref: '#/components/schemas/ClosedPositionDetails'
        ClosedPositionUniqueId:
          title: Unique id of the closed position based on OpeningPositionId and ClosingPositionId - Required for subscription to provide a key.
          type: string
        DisplayAndFormat:
          title: '[Community] Information about the instrument of the closed position and how to display it.'
          allOf:
            - $ref: '#/components/schemas/InstrumentDisplayAndFormat'
        Exchange:
          title: Information about the instrument's exchange and trading status.
          allOf:
            - $ref: '#/components/schemas/InstrumentExchangeDetails'
        NetPositionId:
          title: NetPosition ID
          type: string
    ClosedPositionDetails:
      additionalProperties: false
      title: 'Detailed information about a closed position, which is only available as a snapshot.'
      type: object
      properties:
        CostClosing:
          title: Costs associated with the closing trade.
          allOf:
            - $ref: '#/components/schemas/CostData'
        CostClosingInBaseCurrency:
          title: A  Estimate of the cost of closing all underlying positions in requested account or client currency.
          allOf:
            - $ref: '#/components/schemas/CostData'
        CostOpening:
          title: Costs associated with the opening trade.
          allOf:
            - $ref: '#/components/schemas/CostData'
        CostOpeningInBaseCurrency:
          title: Costs associated with the opening trade in requested account or client currency.
          allOf:
            - $ref: '#/components/schemas/CostData'
        CurrencyConversionRateInstrumentToBaseClosing:
          title: True when the opening trades currency conversion rate has been settled (i.e. is fixed and not fluctuating). This is the case for accounts using Market Conversion-Rates.
          type: number
        CurrencyConversionRateInstrumentToBaseOpening:
          title: Trade Closing time
          type: number
        OpenMarketValue:
          title: Marketvalue for Non-Options in Instrument currency
          allOf:
            - type: number
        OpenMarketValueInBaseCurrency:
          title: Marketvalue for Non-Options in base currency
          allOf:
            - type: number
        OpenPremium:
          title: Open Premium for Option products in Instrument currency
          allOf:
            - type: number
        OpenPremiumInBaseCurrency:
          title: Open Premium for Option products in base currency
          allOf:
            - type: number
        ValueDateClose:
          title: The value date of the closing position.
          type: string
          format: date-time
          x-type-name: UtcDateTime
        ValueDateOpen:
          title: The value date of the opening position.
          type: string
          format: date-time
          x-type-name: UtcDateTime
    ClosedPositionFieldGroup:
      additionalProperties: false
      title: Specification of fieldsets to include in results.
      enum:
        - ClosedPosition
        - DisplayAndFormat
        - ExchangeInfo
      type: string
      x-enum-descriptions:
        ClosedPosition: Closed position data which is calculated differently whether viewed at client or account level
        DisplayAndFormat: Information about the instrument of the net position and how to display it.
        ExchangeInfo: 'Adds information about the instrument''s exchange. This includes Exchange name, exchange code and open status.'
      x-type-warning: FlaggableEnum
    ClosedPositionRequest:
      additionalProperties: false
      title: "Represents a request for one or more netpositions.\r\n            At least one of the following must be specified."
      required:
        - ClientKey
      type: object
      properties:
        AccountGroupKey:
          title: The key of the account group to which the closed positions belongs.
          minLength: 1
          type: string
          x-type-name: AccountGroupKey
        AccountKey:
          title: The key of the account to which the closed positions belongs.
          minLength: 1
          type: string
          x-type-name: AccountKey
        ClientKey:
          title: The key of the client to which the closesd positions belongs.
          minLength: 1
          type: string
          x-type-name: ClientKey
        ClosedPositionId:
          title: The id of the closed position to which the closedposition belongs
          type: string
        FieldGroups:
          title: 'Specifies which data to return. Default is [ClosedPosition]'
          type: array
          items:
            $ref: '#/components/schemas/ClosedPositionFieldGroup'
    ClosedPositionResponse:
      additionalProperties: false
      title: Information for a closed position
      required:
        - ClosedPositionUniqueId
      type: object
      properties:
        ClosedPosition:
          title: ClosedPosition info
          allOf:
            - $ref: '#/components/schemas/ClosedPosition'
        ClosedPositionUniqueId:
          title: Unique id of the closed position based on OpeningPositionId and ClosingPositionId - Required for subscription to provide a key.
          type: string
        DisplayAndFormat:
          title: '[Community] Information about the instrument of the closed position and how to display it.'
          allOf:
            - $ref: '#/components/schemas/InstrumentDisplayAndFormat'
        Exchange:
          title: Information about the instrument's exchange and trading status.
          allOf:
            - $ref: '#/components/schemas/InstrumentExchangeDetails'
        NetPositionId:
          title: NetPosition ID
          type: string
    ClosedPositionResponseArray:
      additionalProperties: false
      type: array
      items:
        $ref: '#/components/schemas/ClosedPositionResponse'
    ClosedPositionResponseListResult:
      additionalProperties: false
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/ClosedPositionResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    ClosedPositionsSubscriptionRequest:
      additionalProperties: false
      title: Public request contract for setting up a subscription on a list of net positions
      required:
        - ContextId
        - ReferenceId
      type: object
      properties:
        ContextId:
          title: "The streaming context id that this request is associated with.\r\n            This parameter must only contain letters (a-z) and numbers (0-9) as well as - (dash) and _ (underscore). It is case insensitive. Max length is 50 characters."
          pattern: '^[a-zA-Z0-9_-]{1,50}$'
          type: string
          x-display-order: 1
        ReferenceId:
          title: "Mandatory client specified reference id for the subscription.\r\n            This parameter must only contain alphanumberic characters as well as - (dash) and _ (underscore). Cannot start with _. It is case insensitive. Max length is 50 characters."
          pattern: '^[a-zA-Z0-9-][a-zA-Z0-9_-]{0,49}$'
          type: string
          x-display-order: 2
        Arguments:
          title: Arguments for the subscription request.
          allOf:
            - $ref: '#/components/schemas/ClosedPositionRequest'
        Format:
          title: "Optional Media type (RFC 2046) of the serialized data updates that are streamed to the client.\r\n            Currently only application/json and application/x-protobuf is supported.\r\n            If an unrecognized format is specified, the subscription end point will return HTTP status code 400 - Bad format."
          type: string
        RefreshRate:
          title: "Optional custom refresh rate, measured in milliseconds, between each data update.\r\n            Note that it is not possible to get a refresh rate lower than the rate specified in the\r\n            customer service level agreement (SLA)."
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        ReplaceReferenceId:
          title: Reference id of the subscription that should be replaced.
          pattern: '^[a-zA-Z0-9-][a-zA-Z0-9_-]{0,49}$'
          type: string
        Tag:
          title: Optional client specified tag used for grouping subscriptions.
          type: string
    ClosedPositionsSubscriptionResponse:
      additionalProperties: false
      title: Public response contract returned after setting up a subscription on net position.
      type: object
      properties:
        ContextId:
          title: The streaming context id that this response is associated with.
          type: string
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
          x-display-order: 1
        ReferenceId:
          title: The reference id that (along with streaming context id and session id) identifies the subscription (within the context of a specific service/subscription type)
          type: string
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
          x-display-order: 2
        Format:
          title: 'The media type (RFC 2046), of the serialized data updates that are streamed to the client.'
          type: string
        InactivityTimeout:
          title: The time (in seconds) that the client should accept the subscription to be inactive before considering it invalid.
          type: integer
          format: int32
        RefreshRate:
          title: Actual refresh rate assigned to the subscription according to the customers SLA.
          type: integer
          format: int32
        Snapshot:
          title: 'Snapshot of the current data on hand, when subscription was created.'
          allOf:
            - $ref: '#/components/schemas/ClosedPositionResponseListResult'
        State:
          title: The value "Active".
          type: string
          description: This property is kept for backwards compatibility.
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
        Tag:
          title: 'Client specified tag assigned to the subscription, if specified in the request.'
          type: string
    CollateralMonitoringMode:
      additionalProperties: false
      title: 'Collateral Monitoring Mode. Different monitoring modes will change the behavior of stop outs, pre-checks etc (For Collateral based entities).'
      enum:
        - CollateralCreditValue
        - MaxOfCollateralCreditValueAndCollateralCreditLine
      type: string
      x-enum-descriptions:
        MaxOfCollateralCreditValueAndCollateralCreditLine: Monitoring (stop-out's) are based on collateral credit value and collateral credit line.
        CollateralCreditValue: Monitoring (stop-out's) are based on collateral credit value
    CollateralMonitoringModeNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/CollateralMonitoringMode'
    CorrelationType:
      additionalProperties: false
      title: Specificies the type of correlation identified by the CorrelationKey. In OpenAPI we only expose a subset of all system internal correlation types.
      enum:
        - Allocation
        - Assignment
        - AutoAssignment
        - AutoExercise
        - AutoTrade
        - CopyTrade
        - Exercise
      type: string
      x-enum-descriptions:
        Allocation: Entity is part of a trade allocation
        Exercise: Entity originated from an options exercise.
        AutoExercise: Entity originated from an automatic options exercise.
        Assignment: Entitiy originated for an options assignment.
        AutoAssignment: Entitiy originated for an automatic options assignment.
        CopyTrade: Entity originated from a CopyTrade
        AutoTrade: Entity originated from an AutoTrade
    CostData:
      additionalProperties: false
      title: Trading costs associated with opening/closing a position or net position
      type: object
      properties:
        AdditionalTransactionCosts:
          title: Additional Transaction Costs.
          allOf:
            - type: number
        Commission:
          title: Transaction commission costs.
          allOf:
            - type: number
        ExchangeFee:
          title: Transaction fee as charged by the underlying exchange.
          allOf:
            - type: number
        ExternalCharges:
          title: Transaction charges added by external facilitators.
          allOf:
            - type: number
        PerformanceFee:
          title: Fee or commission based on profit/loss of position.
          allOf:
            - type: number
        StampDuty:
          title: 'National transaction duty/tax, where applicable.'
          allOf:
            - type: number
    CurrencyExposureBreakdown:
      additionalProperties: false
      title: Breakdown of currency exposures
      type: object
      properties:
        Cash:
          title: Cash contribution
          type: number
        Fx:
          title: Fx contribution
          type: number
        ProfitLoss:
          title: Profit loss contribution
          type: number
        Total:
          title: The total
          type: number
    CurrencyExposureEntry:
      additionalProperties: false
      title: Breakdown of currency exposures
      type: object
      properties:
        Cash:
          title: Cash contribution
          type: number
        Fx:
          title: Fx contribution
          type: number
        ProfitLoss:
          title: Profit loss contribution
          type: number
        Total:
          title: The total
          type: number
    CurrencyExposurePerValueDate:
      additionalProperties: false
      title: Currency exposure breakdown by value date
      type: object
      properties:
        Amounts:
          title: Exposure breakdown for each date
          type: array
          items:
            $ref: '#/components/schemas/ValueDateExposureEntry'
        NonDatedExposure:
          title: Exposure with no specific value date
          allOf:
            - $ref: '#/components/schemas/CurrencyExposureBreakdown'
        Total:
          title: Total
          allOf:
            - $ref: '#/components/schemas/CurrencyExposureBreakdown'
    CurrencyExposureResponse:
      additionalProperties: false
      title: Pack Currency Exposures and Net Open Position Value (NOV)
      type: object
      properties:
        CurrencyExposures:
          title: Currency exposures
          type: array
          items:
            $ref: '#/components/schemas/CurrencyExposures'
        NetOpenPositionValue:
          title: Net Open Position Value
          allOf:
            - $ref: '#/components/schemas/NetOpenPositionValue'
    CurrencyExposureSubscriptionRequest:
      additionalProperties: false
      title: Public request contract for setting up a subscription on a list of instrument exposures
      required:
        - ContextId
        - ReferenceId
      type: object
      properties:
        ContextId:
          title: "The streaming context id that this request is associated with.\r\n            This parameter must only contain letters (a-z) and numbers (0-9) as well as - (dash) and _ (underscore). It is case insensitive. Max length is 50 characters."
          pattern: '^[a-zA-Z0-9_-]{1,50}$'
          type: string
          x-display-order: 1
        ReferenceId:
          title: "Mandatory client specified reference id for the subscription.\r\n            This parameter must only contain alphanumberic characters as well as - (dash) and _ (underscore). Cannot start with _. It is case insensitive. Max length is 50 characters."
          pattern: '^[a-zA-Z0-9-][a-zA-Z0-9_-]{0,49}$'
          type: string
          x-display-order: 2
        Arguments:
          title: Arguments for the subscription request.
          allOf:
            - $ref: '#/components/schemas/Exposures.CurrencyExposuresRequest'
        Format:
          title: "Optional Media type (RFC 2046) of the serialized data updates that are streamed to the client.\r\n            Currently only application/json and application/x-protobuf is supported.\r\n            If an unrecognized format is specified, the subscription end point will return HTTP status code 400 - Bad format."
          type: string
        RefreshRate:
          title: "Optional custom refresh rate, measured in milliseconds, between each data update.\r\n            Note that it is not possible to get a refresh rate lower than the rate specified in the\r\n            customer service level agreement (SLA)."
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        ReplaceReferenceId:
          title: Reference id of the subscription that should be replaced.
          pattern: '^[a-zA-Z0-9-][a-zA-Z0-9_-]{0,49}$'
          type: string
        Tag:
          title: Optional client specified tag used for grouping subscriptions.
          type: string
    CurrencyExposureSubscriptionResponse:
      additionalProperties: false
      title: Public response contract returned after setting up a subscription to exposures by instrument.
      type: object
      properties:
        ContextId:
          title: The streaming context id that this response is associated with.
          type: string
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
          x-display-order: 1
        ReferenceId:
          title: The reference id that (along with streaming context id and session id) identifies the subscription (within the context of a specific service/subscription type)
          type: string
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
          x-display-order: 2
        Format:
          title: 'The media type (RFC 2046), of the serialized data updates that are streamed to the client.'
          type: string
        InactivityTimeout:
          title: The time (in seconds) that the client should accept the subscription to be inactive before considering it invalid.
          type: integer
          format: int32
        RefreshRate:
          title: Actual refresh rate assigned to the subscription according to the customers SLA.
          type: integer
          format: int32
        Snapshot:
          title: 'Snapshot of the current data on hand, when subscription was created.'
          allOf:
            - $ref: '#/components/schemas/CurrencyExposureResponse'
        State:
          title: The value "Active".
          type: string
          description: This property is kept for backwards compatibility.
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
        Tag:
          title: 'Client specified tag assigned to the subscription, if specified in the request.'
          type: string
    CurrencyExposures:
      additionalProperties: false
      title: Represents a net open exposure in an a currency.
      required:
        - Currency
      type: object
      properties:
        AmountsInCurrency:
          title: Exposures in the given currency
          allOf:
            - $ref: '#/components/schemas/CurrencyExposureEntry'
        AmountsInEntityCurrency:
          title: Exposures in the currency of the calculation entity
          allOf:
            - $ref: '#/components/schemas/CurrencyExposureEntry'
        AmountsInRequestCurrency:
          title: Exposure in the requested currency
          allOf:
            - $ref: '#/components/schemas/CurrencyExposureEntry'
        Currency:
          title: The exposure currency.
          type: string
        ExposureCurrencyCode:
          title: The currency of the ExposureLimit
          type: string
        ExposureLimit:
          title: Current exposure limit
          type: number
        ExposureUtilization:
          title: Current exposure utilization
          type: number
        ValueDateCurrencyExposures:
          title: Currency exposures breakdown by value date
          allOf:
            - $ref: '#/components/schemas/CurrencyExposurePerValueDate'
    CurrencyExposuresResponse:
      additionalProperties: false
      title: Represents a net open exposure in an a currency.
      required:
        - Currency
      type: object
      properties:
        Amount:
          title: Total exposure in the given currency.
          type: number
        AmountInCalculationEntityCurrency:
          title: Total exposure in the currency of the calculation entity.
          allOf:
            - type: number
        Currency:
          title: The exposure currency.
          type: string
    CurrencyExposuresResponseListResult:
      additionalProperties: false
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/CurrencyExposuresResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    DisplayHintType:
      additionalProperties: false
      title: Display Hint Type.
      enum:
        - Continuous
        - CryptoCurrencies
        - Etc
        - Etf
        - Etn
        - Forex
        - Fund
        - Interests
        - None
        - PreciousMetal
        - Rights
        - StockIndices
        - Warrant
      type: string
      x-enum-descriptions:
        None: Indicates not special display hint is required.
        PreciousMetal: Metals like XAUUSD.
        Continuous: Used for the parent ContractFutures.
        Etf: Exchange Traded Funds.
        Etn: Exchange Traded Notes.
        Etc: Exchange Traded Certificates/Currencies.
        Rights: Rights.
        Warrant: Warrants.
        Forex: Forex. Intended to be used for Cfds on Futures on Forex.
        Interests: Interest rates. Intended to be used for Cfds on Futures on bonds.
        StockIndices: Stock indices. Intended to be used for Cfds on Futures on stock indices.
        Fund: Fund.
        CryptoCurrencies: Crypto currencies.
    DisplayHintTypeNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/DisplayHintType'
    Entitlement:
      additionalProperties: false
      title: Contain asset types access information.
      type: object
      properties:
        Greeks:
          title: AssetTypes where user has real time access on greeks.
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
        RealTimeFullBook:
          title: AssetTypes where user has real time full book access on prices.
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
        RealTimeTopOfBook:
          title: AssetTypes where user has real time top of book access on prices.
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
    EntitlementDetails:
      additionalProperties: false
      title: Public data contract for an entitlement.
      type: object
      properties:
        Entitlements:
          title: 'The all client specific entitlements for market data, which the user currently has access to..'
          type: array
          items:
            $ref: '#/components/schemas/Entitlement'
        ExchangeId:
          title: The unique ID of the exchange.
          type: string
    EntitlementDetailsListResult:
      additionalProperties: false
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/EntitlementDetails'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    ExerciseStyle:
      additionalProperties: false
      title: Indicates the type of the Options. Currently defined for European and American.
      enum:
        - American
        - European
        - None
      type: string
      x-enum-descriptions:
        None: Option not defined.
        American: American Option. Can be exercised prior to expiry date.
        European: European Option. Must be exercised on expiry date.
    ExerciseStyleNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/ExerciseStyle'
    ExpiryCut:
      additionalProperties: false
      title: Specifies the type of cut-time used in option expiration.
      enum:
        - Budapest
        - Mexico
        - Moscow
        - NY
        - None
        - PreciousMetals
        - TK
        - Turkey
        - Unknown
        - Warsaw
      type: string
      description: "Expiry cuts are associated to string values (indicators) from ExpiryCuts MITS DB table.\r\n            This enum should be updated each time when ExpiryCuts MITS DB table updated."
      x-enum-descriptions:
        None: Not specified. Usually option trade with this type of expiration has invalid state or not initialized.
        NY: Option will be expired on the New-York time.
        TK: Option will be expired on the Tokyo time.
        Warsaw: 'WR: Option is expired/exercised manually. Priced as NY.'
        Budapest: 'BD: Option is expired/exercised manually. Priced as NY.'
        PreciousMetals: 'Precious metals cut (PM): Option is expired/exercised manually. Priced as NY.'
        Turkey: 'Turkish cut (TR): Option is expired/exercised manually. Priced as NY.'
        Mexico: 'Mexico cut (MX): Option is expired/exercised manually. Priced as NY.'
        Moscow: 'Moscow cut (MW): Option is expired/exercised manually. Priced as NY.'
        Unknown: 'Unknown cut: (UX): Option is expired/exercised manually. Priced as NY.'
    Exposures.CurrencyExposuresRequest:
      additionalProperties: false
      title: Represents a request for total currency exposures.
      required:
        - CurrencyCode
        - ClientKey
      type: object
      properties:
        AccountGroupKey:
          title: The key of the account group to which the positions belong.
          minLength: 1
          type: string
          x-type-name: AccountGroupKey
        AccountKey:
          title: The key of the account to which the positions belong.
          minLength: 1
          type: string
          x-type-name: AccountKey
        ClientKey:
          title: The key of the client to which the positions belong.
          minLength: 1
          type: string
          x-type-name: ClientKey
        CurrencyCode:
          title: Currency code for the request
          type: string
    FXOptionsBaseData:
      additionalProperties: false
      title: FXOptions Base
      type: object
      properties:
        BarrierEventOccurred:
          title: True if the barrier event has occurred for the option
          allOf:
            - type: boolean
        ExpiryCut:
          title: ExpiryCut.
          allOf:
            - $ref: '#/components/schemas/ExpiryCut'
        ExpiryDate:
          title: The ExpiryDate.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        LowerBarrier:
          title: LowerBarrier for digital option.
          allOf:
            - type: number
        PutCall:
          title: The Put/Call value of the option.
          allOf:
            - $ref: '#/components/schemas/PutCall'
        Strike:
          title: The strike price of the option.
          allOf:
            - type: number
        UpperBarrier:
          title: UpperBarrier for digital option.
          allOf:
            - type: number
    FixedIncomeData:
      additionalProperties: false
      title: Extended details about yeild and accrued interest for bonds.
      type: object
      properties:
        ClosedAccruedInterest:
          title: Part of the close price that accounts for the Accrued Interest.
          type: number
        ClosedAccruedInterestInBaseCurrency:
          title: Part of the close price that accounts for the Accrued Interest in reqesting client/account currency.
          type: number
        OpenAccruedInterest:
          title: Part of the open price that accounts for the Accrued Interest.
          type: number
        OpenAccruedInterestInBaseCurrency:
          title: Part of the open price that accounts for the Accrued Interest in reqesting client/account currency.
          type: number
    Greeks:
      additionalProperties: false
      title: Describes the sensitivity of the value of an option or instrument to a change in a given underlying parameter.
      type: object
      properties:
        Delta:
          title: Shows the equivalent FX Spot exposure of a given position. This is the sensitivity of a position’s value with respect to the spot rate.
          allOf:
            - type: number
        DeltaCurrency:
          title: Currency of Delta.
          type: string
        Gamma:
          title: 'This is the second derivative of the position value with respect to spot, i.e. it shows how much the delta changes when spot changes (i.e. how much will the delta change when spot moves up by one percentage point.'
          allOf:
            - type: number
        GammaCurrency:
          title: Currency of Gamma.
          type: string
        InstrumentDelta:
          title: Delta for the instrument.
          allOf:
            - type: number
        InstrumentGamma:
          title: Gamma for the instrument.
          allOf:
            - type: number
        InstrumentTheta:
          title: Theta for the instrument.
          allOf:
            - type: number
        InstrumentVega:
          title: Vega for the instrument.
          allOf:
            - type: number
        MidVol:
          title: The mid rate for the implied volatility used in pricing this option
          allOf:
            - type: number
        Phi:
          title: Phi
          allOf:
            - type: number
        Rho:
          title: Interest rate sensitivity indicator. Derivative of the option value with and risk free interest rate.
          allOf:
            - type: number
        TheoreticalPrice:
          title: The theoretical price.
          allOf:
            - type: number
        Theta:
          title: Also known as time decay. This shows by how much the position will increase or decrease in value from one day to the next.
          allOf:
            - type: number
        ThetaCurrency:
          title: Currency of Theta.
          type: string
        Vega:
          title: Sensitivity of a position with respect to the implied volatility used to price FX Options. This shows how much money is made (positive number) or lost (negative number) when volatility goes up by one percentage point.
          allOf:
            - type: number
        VegaCurrency:
          title: Currency of Vega.
          type: string
    InitialMarginResponse:
      additionalProperties: false
      title: The calculation entity's initial margin (purchasing power) status.
      type: object
      properties:
        CollateralAvailable:
          title: 'Sum of collateral from positions, cash, collateral credit and other holdings available for opening new positions.'
          allOf:
            - type: number
        MarginAvailable:
          title: Margin available for opening new positions. Initial margin available.
          allOf:
            - type: number
        MarginUsedByCurrentPositions:
          title: Sum of initial margin currently reserved.
          allOf:
            - type: number
        MarginUtilizationPct:
          title: Level of margin already utilized in percent. I.e. the ratio between the margin collateral used and the total available margin collateral. Indicates distance to margin calls.
          allOf:
            - type: number
        NetEquityForMargin:
          title: Value used as basis to calculate initial margin available.
          allOf:
            - type: number
        OtherCollateralDeduction:
          title: Other Collateral Deduction derived from regulatory contributors margin value.
          allOf:
            - type: number
    InstrumentCollateralDetail:
      additionalProperties: false
      title: Instrument collateral detail
      type: object
      properties:
        AssetType:
          title: Instrument Asset type
          allOf:
            - $ref: '#/components/schemas/AssetType'
        Description:
          title: Instrument Description
          type: string
        InitialCollateral:
          title: Initial collateral available of the instrument
          type: number
        InitialCollateralNotAvailable:
          title: Initial collateral not available of the instrument
          type: number
        MaintenanceCollateral:
          title: Maintenance collateral available of the instrument
          type: number
        MaintenanceCollateralNotAvailable:
          title: Maintenance collateral not available of the instrument
          type: number
        MarketValue:
          title: Market value of the instrument
          type: number
        Symbol:
          title: Instrument Symbol
          type: string
        Uic:
          title: Uic of the instrument
          type: integer
          format: int32
    InstrumentDisplayAndFormat:
      additionalProperties: false
      title: 'Public data contract containing information about the instrument of a position, which is useful for display and formatting.'
      type: object
      properties:
        BarrierDecimals:
          title: "Number of display decimals for barrier price.\r\n            One touch/no touch options only."
          allOf:
            - type: integer
              format: int32
        BarrierFormat:
          title: "Display format of barrier price.\r\n            One touch/no touch options only."
          allOf:
            - $ref: '#/components/schemas/PriceDisplayFormatTypeNullable'
        Currency:
          title: The ISO currency code of the instrument.
          type: string
        Decimals:
          title: "The resolution in which e.g. a price must be displayed and possibly edited.\r\n            Positive numbers are represents digits, and negative numbers represent fractions using this formula: 1/(2^x).\r\n            Same as DisplayDecimals."
          type: integer
          format: int32
        Description:
          title: 'Description of instrument (DAX Index - Nov 2013), in English.'
          type: string
        DisplayHint:
          title: Hint to the client application about how it should display the instrument.
          allOf:
            - $ref: '#/components/schemas/DisplayHintTypeNullable'
        Format:
          title: Format code specifying how price should be formatted.
          allOf:
            - $ref: '#/components/schemas/PriceDisplayFormatType'
        NumeratorDecimals:
          title: 'Some fractional prices have decimals in the numerator, e.g. 2.5/32.  This is relevant for futures and cfds on futures.'
          allOf:
            - type: integer
              format: int32
        OrderDecimals:
          title: The number of decimals trigger price for orders should be formatted with.
          allOf:
            - type: integer
              format: int32
        StrikeDecimals:
          title: "The decimals value to use when formatting strike price.\r\n            Only relevant for options."
          allOf:
            - type: integer
              format: int32
        StrikeFormat:
          title: "The price format to use when formatting strike price.\r\n            Only relevant for options."
          allOf:
            - $ref: '#/components/schemas/PriceDisplayFormatTypeNullable'
        Symbol:
          title: Symbol- A combination of letters used to uniquely identify a traded instrument. e.g. ODAX/X13C8950:xeur.
          type: string
        UnderlyingInstrumentDescription:
          title: Common full name of the underlying instrument. Only used for options and is the same as the option root description.
          type: string
    InstrumentExchangeDetails:
      additionalProperties: false
      title: Information about an exchange and its trading hours.
      type: object
      properties:
        Description:
          title: Full name/description of the exchange
          type: string
        ExchangeId:
          title: Short exchange code.
          type: string
        IsOpen:
          title: Indicates if the exchange is currently open for trading
          type: boolean
        TimeZoneId:
          title: Exchange's TimeZone
          type: string
    InstrumentExposureRequest:
      additionalProperties: false
      title: "Filters results so only exposures that match the provided criteria are returned.\r\n            ClientKey must be specified."
      required:
        - ClientKey
      type: object
      properties:
        AccountGroupKey:
          title: The key of the account group to which the positions belong.
          minLength: 1
          type: string
          x-type-name: AccountGroupKey
        AccountKey:
          title: The key of the account to which the positions belong.
          minLength: 1
          type: string
          x-type-name: AccountKey
        AssetType:
          title: The AssetType.
          allOf:
            - $ref: '#/components/schemas/AssetTypeNullable'
        ClientKey:
          title: The key of the client to which the positions belong.
          minLength: 1
          type: string
          x-type-name: ClientKey
        ExpiryDate:
          title: The expiry date. Only used to distinguish FxOptions.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        LowerBarrier:
          title: The Lower Barrier. Only used to distinguish Fx Barrier Options.
          allOf:
            - type: number
        PutCall:
          title: Put or Call. Only used to distinguish FxOptions.
          allOf:
            - $ref: '#/components/schemas/PutCallNullable'
        Strike:
          title: The strike price of the option. Only used to distinguish FxOptions.
          allOf:
            - type: number
        Uic:
          title: Unique id of the instrument.
          allOf:
            - type: integer
              format: int32
        UpperBarrier:
          title: The Upper Barrier. Only used to distinguish Fx Barrier Options.
          allOf:
            - type: number
        ValueDate:
          title: The value date. Only used to distinguish FxForwards.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
    InstrumentExposureResponse:
      additionalProperties: false
      title: Represents a net open exposure in an instrument.
      required:
        - NetPositionId
      type: object
      properties:
        Amount:
          title: Sum exposure of positions in instrument
          type: number
        AssetType:
          title: The AssetType.
          allOf:
            - $ref: '#/components/schemas/AssetType'
        AverageOpenPrice:
          title: The average price of all the positions that make up the exposure.
          type: number
        CalculationReliability:
          title: If an error was encountered this code indicates source of the calculation error.
          allOf:
            - $ref: '#/components/schemas/CalculationReliability'
        CanBeClosed:
          title: Indicates if the exposure may be closed.
          type: boolean
        DisplayAndFormat:
          title: Information about the instrument and how to display it.
          allOf:
            - $ref: '#/components/schemas/InstrumentDisplayAndFormat'
        ExpiryDate:
          title: The ExpiryDate.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        InstrumentPriceDayPercentChange:
          title: Percent change in instrument's price between Previous Close and current Last Traded price.
          allOf:
            - type: number
        LowerBarrier:
          title: LowerBarrier for digital option.
          allOf:
            - type: number
        NetPositionId:
          title: The exposure net position id. May be used to fetch the net position or open positions of the net position from the Open Positions service.
          type: string
        ProfitLossOnTrade:
          title: The P/L on the trade in the currency in which the instrument is traded.
          allOf:
            - type: number
        PutCall:
          title: The Put/Call value of the option.
          allOf:
            - $ref: '#/components/schemas/PutCallNullable'
        Strike:
          title: The strike price of the option.
          allOf:
            - type: number
        Uic:
          title: Unique id of the instrument.
          type: integer
          format: int32
        UpperBarrier:
          title: UpperBarrier for digital option.
          allOf:
            - type: number
        ValueDate:
          title: The value date. Only used to distinguish FxForwards.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
    InstrumentExposureResponseArray:
      additionalProperties: false
      type: array
      items:
        $ref: '#/components/schemas/InstrumentExposureResponse'
    InstrumentExposureResponseListResult:
      additionalProperties: false
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/InstrumentExposureResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    InstrumentExposureSubscriptionRequest:
      additionalProperties: false
      title: Public request contract for setting up a subscription on a list of instrument exposures
      required:
        - ContextId
        - ReferenceId
      type: object
      properties:
        ContextId:
          title: "The streaming context id that this request is associated with.\r\n            This parameter must only contain letters (a-z) and numbers (0-9) as well as - (dash) and _ (underscore). It is case insensitive. Max length is 50 characters."
          pattern: '^[a-zA-Z0-9_-]{1,50}$'
          type: string
          x-display-order: 1
        ReferenceId:
          title: "Mandatory client specified reference id for the subscription.\r\n            This parameter must only contain alphanumberic characters as well as - (dash) and _ (underscore). Cannot start with _. It is case insensitive. Max length is 50 characters."
          pattern: '^[a-zA-Z0-9-][a-zA-Z0-9_-]{0,49}$'
          type: string
          x-display-order: 2
        Arguments:
          title: Arguments for the subscription request.
          allOf:
            - $ref: '#/components/schemas/InstrumentExposureRequest'
        Format:
          title: "Optional Media type (RFC 2046) of the serialized data updates that are streamed to the client.\r\n            Currently only application/json and application/x-protobuf is supported.\r\n            If an unrecognized format is specified, the subscription end point will return HTTP status code 400 - Bad format."
          type: string
        RefreshRate:
          title: "Optional custom refresh rate, measured in milliseconds, between each data update.\r\n            Note that it is not possible to get a refresh rate lower than the rate specified in the\r\n            customer service level agreement (SLA)."
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        ReplaceReferenceId:
          title: Reference id of the subscription that should be replaced.
          pattern: '^[a-zA-Z0-9-][a-zA-Z0-9_-]{0,49}$'
          type: string
        Tag:
          title: Optional client specified tag used for grouping subscriptions.
          type: string
    InstrumentExposureSubscriptionResponse:
      additionalProperties: false
      title: Public response contract returned after setting up a subscription to exposures by instrument.
      type: object
      properties:
        ContextId:
          title: The streaming context id that this response is associated with.
          type: string
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
          x-display-order: 1
        ReferenceId:
          title: The reference id that (along with streaming context id and session id) identifies the subscription (within the context of a specific service/subscription type)
          type: string
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
          x-display-order: 2
        Format:
          title: 'The media type (RFC 2046), of the serialized data updates that are streamed to the client.'
          type: string
        InactivityTimeout:
          title: The time (in seconds) that the client should accept the subscription to be inactive before considering it invalid.
          type: integer
          format: int32
        RefreshRate:
          title: Actual refresh rate assigned to the subscription according to the customers SLA.
          type: integer
          format: int32
        Snapshot:
          title: 'Snapshot of the current data on hand, when subscription was created.'
          allOf:
            - $ref: '#/components/schemas/InstrumentExposureResponseListResult'
        State:
          title: The value "Active".
          type: string
          description: This property is kept for backwards compatibility.
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
        Tag:
          title: 'Client specified tag assigned to the subscription, if specified in the request.'
          type: string
    LineStatus:
      additionalProperties: false
      title: 'Describes the current utilization and size of a Credit, Risk or Trading line.'
      type: object
      properties:
        Exposure:
          title: The current utilization of the credit line.
          allOf:
            - type: number
        Line:
          title: The maximum credit limit allowed.
          type: number
        UtilizationPct:
          title: The current utilization of the credit line in proportion to the line limit.
          type: number
    LoginStatus:
      additionalProperties: false
      title: Used to describe the state of the last login attempt.
      enum:
        - Successful
        - Unsuccessful
      type: string
      x-enum-descriptions:
        Successful: The user logged in
        Unsuccessful: The user recieved an access denied
    ManagementType:
      additionalProperties: false
      title: Account Management Type
      enum:
        - Advisory
        - Client
        - Discretionary
        - ExternallyManaged
        - ModelAdvisory
        - ModelManaged
        - SelfPeriodicInvestment
        - TradeAdvisory
      type: string
      x-enum-descriptions:
        Client: The account is managed by the client. (Default).
        TradeAdvisory: 'Advisors can call clients with trade suggestions across products, but trades are accepted by the client.'
        ModelAdvisory: 'The account is managed by a model, but client has to accept changes to the model.'
        ModelManaged: The account is managed by a model. Client cannot trade on the account.
        ExternallyManaged: 'The account is managed externally (not in a saxo bank system). Client cannot trade on the account, but authorized dealers can.'
        SelfPeriodicInvestment: Client can schedule periodic investments on one or multiple Instruments
        Discretionary: The account is managed by partner. Client (beneficial owner of the account) cannot trade on this account but authorized dealers can. Client will not receive any trade notifications.
        Advisory: 'The account is managed by partner. Client (beneficial owner of the account) cannot trade on this account but authorized dealers can. However, client will get trade notifications.'
    MarginCollateralNotAvailableDetail:
      additionalProperties: false
      title: Detail of Margin Collateral Not Available
      type: object
      properties:
        InitialFxHaircut:
          title: Initial Fx Haircut
          type: number
        InstrumentCollateralDetails:
          title: Instrument collateral collection
          type: array
          items:
            $ref: '#/components/schemas/InstrumentCollateralDetail'
        MaintenanceFxHaircut:
          title: Maintenance Fx Haircut
          type: number
    MarginLendingEnabled:
      additionalProperties: false
      title: Margin Lending Enabled.
      enum:
        - No
        - None
        - Yes
      type: string
      x-enum-descriptions:
        None: Default. Margin Lending is not applicable.
        Yes: Margin Lending is enabled.
        No: Margin Lending is disabled.
    MarginMonitoringMode:
      additionalProperties: false
      title: Margin Monitoring Mode.
      enum:
        - Equity
        - Lines
        - Margin
      type: string
      x-enum-descriptions:
        Margin: 'Monitoring (stop-out''s) are based on standard margin utilization, pre-check''s are done against standard margin utilization.'
        Lines: 'Monitoring (stop-out''s) are based on credit line utilization, pre-check''s are done against trading and credit line utilization.'
        Equity: 'Monitoring is based on standard equity utilization, pre-check''s are done against standard equity utilization.'
    MarginMonitoringModeNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/MarginMonitoringMode'
    MarginOverviewByGroup:
      additionalProperties: false
      title: 'Margin utilization for positions, broken down into groups of AssetTypes.'
      type: object
      properties:
        Groups:
          title: List of AssetType groups with it's contributing positions and total margin utilization.
          type: array
          items:
            $ref: '#/components/schemas/MarginOverviewGroup'
    MarginOverviewContributor:
      additionalProperties: false
      title: Total margin impact by net position.
      type: object
      properties:
        AssetTypes:
          title: AssetTypes for this contributor.
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
        InstrumentDescription:
          title: Description of instrument. Not available for futures.
          type: string
        InstrumentSpecifier:
          title: Instrument identifier. Base contract for futures and symbol for other instruments.
          type: string
        Margin:
          title: Margin impact of the contributor
          type: number
        Uic:
          title: 'Uic identifying the instrument, if any'
          allOf:
            - type: integer
              format: int32
    MarginOverviewGroup:
      additionalProperties: false
      title: Margin utilization of the AssetType group as applied to the overall margin calculation.
      type: object
      properties:
        Contributors:
          title: Contributors are either a list of instruments or a single (anonymous) object representing implicitly aggregated contributors
          type: array
          items:
            $ref: '#/components/schemas/MarginOverviewContributor'
        GroupType:
          title: AssetType group - used by margin calculation.
          allOf:
            - $ref: '#/components/schemas/MarginOverviewGroupType'
        TotalMargin:
          title: Total margin impact of the group of instrument.
          type: number
    MarginOverviewGroupType:
      additionalProperties: false
      title: Margin calculation category of AssetType.
      enum:
        - CFDs
        - FX
        - FuturesAndOptions
        - Other
      type: string
      x-enum-descriptions:
        CFDs: Margin impact of CFDs - presumably all categories
        FuturesAndOptions: Margin impact of future and option contract instruments
        FX: Margin impact of FX instruments
        Other: Margin overview group based on unspecified criteria
    MarketState:
      additionalProperties: false
      title: Defines the possible states of the Market.
      enum:
        - Closed
        - ClosingAuction
        - IntraDayAuction
        - Open
        - OpeningAuction
        - PostMarket
        - PreMarket
        - TradingAtLast
      type: string
      x-enum-descriptions:
        Open: 'Market is open for trades (Automatic Trading, usually).'
        Closed: Market is closed
        PreMarket: Market is in Pre Market Auction state
        PostMarket: Market is in Post Market Auction state
        IntraDayAuction: "Market is temporary out of normal Trading. In an Auction state This state is\r\n            for Intraday Auction. We have 2 specific states for Opening and Closing Auction"
        OpeningAuction: "Market is temporary out of normal Trading. This is the Auction that occur before \r\n            the market opens"
        ClosingAuction: "Market is temporary out of normal Trading. This is the Auction that occur after\r\n            the market closes."
        TradingAtLast: 'This state is after the Auction has finished, before normal Trading starts.'
    MarketStateNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/MarketState'
    ModelStateDictionary:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    MultiLegOrderDetails:
      additionalProperties: false
      title: Contains common properties for multi-leg (strategy) orders.
      type: object
      properties:
        Amount:
          title: Amount for the multi-leg order. Each leg may have independent amounts.
          type: number
        BuySell:
          title: Buy/sell direction for the multi-leg order. Each leg may point in independent directions.
          allOf:
            - $ref: '#/components/schemas/BuySell'
        CurrentPrice:
          title: The user specific(delayed/realtime) current market price of the multi-leg order.
          allOf:
            - type: number
        Description:
          title: Description of the multi-leg order.
          type: string
        DistanceToMarket:
          title: Distance to market for this multi-leg order. (Dynamically updating)
          allOf:
            - type: number
        FilledAmount:
          title: Amount for the multi-leg order that has already been filled.
          allOf:
            - type: number
        LegCount:
          title: Number of orders that make up the multi-leg order.
          type: integer
          format: int32
        MultiLegOrderId:
          title: Unique identifier for the multi-leg order. Same for all legs.
          type: string
        Price:
          title: Overall limit price for the multi-leg order.
          type: number
        StrategyType:
          title: The enumeration If the legs match a common options strategy.
          allOf:
            - $ref: '#/components/schemas/OptionsStrategyType'
    MutualFundsCashAmountOrderCurrency:
      additionalProperties: false
      title: Indicates the currency used when placing orders with OrderAmountType.CashAmount.
      enum:
        - Account
        - Instrument
      type: string
      x-enum-descriptions:
        Account: Use the specified account currency.
        Instrument: Use the currency of the specified instrument.
    MutualFundsCashAmountOrderCurrencyNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/MutualFundsCashAmountOrderCurrency'
    NetOpenPositionValue:
      additionalProperties: false
      title: Net Open Position Value ( NOV )
      type: object
      properties:
        AmountInEntityCurrency:
          title: In entity currency
          type: number
        AmountInRequestCurrency:
          title: in request currency
          type: number
        ExposureCurrencyCode:
          title: Currency of the exposure limit
          type: string
        ExposureLimit:
          title: exposure limit
          type: number
        ExposureUtilization:
          title: Exposure utilization
          type: number
    NetPositionDetailedResponse:
      additionalProperties: false
      title: "Data representing an open net position."
      required:
        - NetPositionId
      type: object
      properties:
        DisplayAndFormat:
          title: '[Community] Information about the instrument of the net position and how to display it.'
          allOf:
            - $ref: '#/components/schemas/InstrumentDisplayAndFormat'
        Exchange:
          title: Information about the exchange where this instrument or the underlying instrument is traded.
          allOf:
            - $ref: '#/components/schemas/InstrumentExchangeDetails'
        Greeks:
          title: 'Greeks for option(s) i.e. FX Option, Contract Options and Contract Options CFD .'
          allOf:
            - $ref: '#/components/schemas/Greeks'
        NetPositionBase:
          title: Static part of net position information
          allOf:
            - $ref: '#/components/schemas/NetPositionStatic'
        NetPositionDetails:
          title: 'Detailed information about a netposition, which is only available as a snapshot.'
          allOf:
            - $ref: '#/components/schemas/NetPositionDetails'
        NetPositionId:
          title: '[Community] The id of the net position. This can be used to fetch the open positions of a net position from the Positions service.'
          type: string
        NetPositionView:
          title: Dynamic part of net position information.
          allOf:
            - $ref: '#/components/schemas/NetPositionDynamic'
        SinglePosition:
          title: "If the NetPosition consists of a single position, this is the position details.\r\n            This will be empty if the NetPosition is comprised of more than one positions."
          allOf:
            - $ref: '#/components/schemas/SubPositionResponse'
    NetPositionDetails:
      additionalProperties: false
      title: Additional details related to the net position
      type: object
      properties:
        CloseCost:
          title: Costs associated with the closing trade.
          allOf:
            - $ref: '#/components/schemas/CostData'
        CloseCostInBaseCurrency:
          title: A  Estimate of the cost of closing all underlying positions in requested account or client currency.
          allOf:
            - $ref: '#/components/schemas/CostData'
        ClosedProfitLoss:
          title: 'For partially closed net positions, this is the realized P/L in the client/account base currency.'
          allOf:
            - type: number
        ClosedProfitLossInBaseCurrency:
          title: 'For partially closed net positions, this is the realized P/L converted to requesting account/client currency.'
          allOf:
            - type: number
        Greeks:
          title: Greeks (if fx option).
          allOf:
            - $ref: '#/components/schemas/Greeks'
        MarketState:
          title: Exchange state for the instrument
          allOf:
            - $ref: '#/components/schemas/MarketStateNullable'
        MarketValue:
          title: Market value of position excl. closing costs.
          allOf:
            - type: number
        MarketValueInBaseCurrency:
          title: 'The total nominal value of the of the underlying positions, in rquested acount/client currency.'
          allOf:
            - type: number
        MarketValueOpen:
          title: The value of the position at time of opening.
          allOf:
            - type: number
        MarketValueOpenInBaseCurrency:
          title: 'The nominal value of the position at the time of open, in requested account/client currency.'
          allOf:
            - type: number
        NonTradableReason:
          title: Non tradable reason.
          allOf:
            - $ref: '#/components/schemas/NonTradableReasons'
        OpenCost:
          title: Costs associated with the opening trade in instrument currency.
          allOf:
            - $ref: '#/components/schemas/CostData'
        OpenCostInBaseCurrency:
          title: Costs associated with the opening trade in requested account or client currency.
          allOf:
            - $ref: '#/components/schemas/CostData'
        OpenInterest:
          title: The total number of contracts that have not been settled and remain open as of the end of a trading day.
          allOf:
            - type: number
        OriginalCost:
          title: Original cost data for Net Positions. Available for Mutual Funds only.
          allOf:
            - $ref: '#/components/schemas/OriginalCostData'
        RealizedCloseCosts:
          title: 'If underlying positions are explicitly(only) closed, these are the close costs of the closed positions in instrument currency.'
          allOf:
            - $ref: '#/components/schemas/CostData'
        RealizedClosedCostsLossInBaseCurrency:
          title: 'If underlying positions are explicitly(only) closed, these are the close costs of the closed positions in client/account group/account currency.'
          allOf:
            - $ref: '#/components/schemas/CostData'
        RealizedOpenCosts:
          title: 'If underlying positions are explicitly(only) closed, these are the open costs of the closed positions in instrument currency.'
          allOf:
            - $ref: '#/components/schemas/CostData'
        RealizedOpenCostsLossInBaseCurrency:
          title: 'If underlying positions are explicitly(only) closed, these are the open costs of the closed positions in client/account group/account currency.'
          allOf:
            - $ref: '#/components/schemas/CostData'
        ShortTrading:
          title: Short trading allowed or not on instrument
          allOf:
            - $ref: '#/components/schemas/ShortTradingNullable'
        StockBlockingDetails:
          title: Stock blocking details
          type: array
          items:
            $ref: '#/components/schemas/StockBlockingDetail'
        TradingStatus:
          title: Instrument is tradable or not
          allOf:
            - $ref: '#/components/schemas/TradingStatusNullable'
    NetPositionDynamic:
      additionalProperties: false
      title: Dynamic information related to the net position. Unless otherwise stated all prices and amounts are in instrument currency.
      type: object
      properties:
        Ask:
          title: The current market ask price.
          allOf:
            - type: number
        AverageOpenPrice:
          title: The average price of all the open positions that make up the net position.
          type: number
        Bid:
          title: The current market bid price.
          allOf:
            - type: number
        CalculationReliability:
          title: If an error was encountered this code indicates source of the calculation error.
          allOf:
            - $ref: '#/components/schemas/CalculationReliability'
        ConversionRateCurrent:
          title: Current conversion rate used for opening trade costs.
          allOf:
            - type: number
        CurrentPrice:
          title: The user specific(delayed/realtime) current market price of the instrument.
          allOf:
            - type: number
        CurrentPriceDelayMinutes:
          title: 'If set, it defines the number of minutes by which the price is delayed.'
          allOf:
            - type: integer
              format: int32
        CurrentPriceLastTraded:
          title: Indicates when the user specific current market price of the instrument was last traded.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        CurrentPriceType:
          title: The price type (Bid/Ask/LastTraded) of the user specific(delayed/realtime) current market price of the instrument.
          allOf:
            - $ref: '#/components/schemas/PriceTypeNullable'
        Exposure:
          title: 'Current nominal value of position, but differs from market value in that it has a value for margin products.'
          allOf:
            - type: number
        ExposureCurrency:
          title: Currency of exposure.
          type: string
        ExposureInBaseCurrency:
          title: 'Current nominal value of position, but differs from market value in that it has a value for margin products. Converted to requesting account/client currency.'
          allOf:
            - type: number
        IndexRatio:
          title: 'Current IndexRatio, Applicable for Inflation linked bonds.'
          allOf:
            - type: number
        InstrumentPriceDayPercentChange:
          title: Percent change in instrument's price between Previous Close and current Last Traded price.
          allOf:
            - type: number
        MarketValue:
          title: Sum market value of positions excl. closing costs.
          allOf:
            - type: number
        MarketValueInBaseCurrency:
          title: 'The total nominal value of the of the underlying positions, in rquested acount/client currency.'
          allOf:
            - type: number
        MarketValueOpen:
          title: The value of the position at time of opening.
          allOf:
            - type: number
        MarketValueOpenInBaseCurrency:
          title: 'The nominal value of the position at the time of open, in requested account/client currency.'
          allOf:
            - type: number
        OpenInterest:
          title: The total number of contracts that have not been settled and remain open as of the end of a trading day.
          allOf:
            - type: number
        PositionCount:
          title: The number of Open Positions for this NetPosition
          type: integer
          format: int32
        PositionsNotClosedCount:
          title: Simple count of effective open positions under this net position. I.e. without related closing positions.
          type: integer
          format: int32
        ProfitLossCurrencyConversion:
          title: The P/L from currency conversion between now and position open.
          allOf:
            - type: number
        ProfitLossOnTrade:
          title: The P/L on the trade in the currency in which the instrument is traded.
          allOf:
            - type: number
        ProfitLossOnTradeInBaseCurrency:
          title: The P/L in the client/account group/account currency.
          allOf:
            - type: number
        RealizedCostsTotal:
          title: 'If underlying positions are explicitly(only) closed, these are the costs of the closed positions in instrument currency.'
          allOf:
            - type: number
        RealizedCostsTotalInBaseCurrency:
          title: 'If underlying positions are explicitly(only) closed, these are the costs of the closed positions in client/account group/account currency.'
          allOf:
            - type: number
        RealizedProfitLoss:
          title: 'If underlying positions are explicitly(only) closed, this is the sum of realized P/L of the closed positions in instrument currency.'
          allOf:
            - type: number
        RealizedProfitLossInBaseCurrency:
          title: 'If underlying positions are explicitly(only) closed, this is the sum of realized P/L of the closed positions in the client/account group/account currency.'
          allOf:
            - type: number
        SettlementInstruction:
          title: Settlement Instructions
          allOf:
            - $ref: '#/components/schemas/SettlementInstructions'
        Status:
          title: "The status of the net position. \r\n            Possible values: Open, Closed, Closing, PartiallyClosed, Locked."
          allOf:
            - $ref: '#/components/schemas/PositionStatus'
        TradeCostsTotal:
          title: 'The sum of all open costs and realized/unrealized close costs for the underlying positions, in instrument currency.'
          allOf:
            - type: number
        TradeCostsTotalInBaseCurrency:
          title: The sum of all open costs and realized/unrealized close costs for the underlying positions.
          allOf:
            - type: number
    NetPositionFieldGroup:
      additionalProperties: false
      title: Specification of fieldsets to include in results.
      enum:
        - DisplayAndFormat
        - ExchangeInfo
        - Greeks
        - NetPositionBase
        - NetPositionView
        - SinglePosition
        - SinglePositionBase
        - SinglePositionView
      type: string
      x-enum-descriptions:
        NetPositionBase: NetPosition data which does not change whether viewed at client or account level
        DisplayAndFormat: Information about the instrument of the net position and how to display it.
        NetPositionView: 'NetPosition, data which is calculated differently whether viewed at client or account level'
        ExchangeInfo: 'Adds information about the instrument''s exchange. This includes Exchange name, exchange code and open status.'
        SinglePosition: "If the NetPosition consists of a single position, include the positionid.\r\n            This list will be empty if the NetPosition is comprised of more than one positions."
        SinglePositionBase: 'If the NetPosition consists of a single position, include data which does not change whether viewed at client or account level.'
        SinglePositionView: 'If the NetPosition consists of a single position, include data which is calculated differently whether viewed at client or account level, or changes with the market.'
        Greeks: 'Greeks for Option(s), only applicable to Fx Options , Contract Options and Contract options CFD'
      x-type-warning: FlaggableEnum
    NetPositionRequest:
      additionalProperties: false
      title: "Filters results so only netpositions that match the provided criteria are returned.\r\n            ClientKey must be specified."
      required:
        - ClientKey
      type: object
      properties:
        AccountGroupKey:
          title: The key of the account group to which the positions belong.
          minLength: 1
          type: string
          x-type-name: AccountGroupKey
        AccountKey:
          title: The key of the account to which the positions belong.
          minLength: 1
          type: string
          x-type-name: AccountKey
        AssetType:
          title: Optional. The AssetType.
          allOf:
            - $ref: '#/components/schemas/AssetTypeNullable'
        ClientKey:
          title: The key of the client to which the positions belong.
          minLength: 1
          type: string
          x-type-name: ClientKey
        ExpiryDate:
          title: Optional. The expiry date. Only used to distinguish FxOptions.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        FieldGroups:
          title: 'Specifies which data to return. Default is [NetPositionBase,NetPositionView]'
          type: array
          items:
            $ref: '#/components/schemas/NetPositionFieldGroup'
        LowerBarrier:
          title: Optional. The Lower Barrier. Only used to distinguish Fx Barrier Options.
          allOf:
            - type: number
        NetPositionId:
          title: Optional. The id of the netposition
          type: string
        PutCall:
          title: Optional. Put or Call. Only used to distinguish FxOptions.
          allOf:
            - $ref: '#/components/schemas/PutCallNullable'
        Strike:
          title: Optional. The strike price of the option. Only used to distinguish FxOptions.
          allOf:
            - type: number
        Uic:
          title: Optional. Unique id of the instrument.
          allOf:
            - type: integer
              format: int32
        UpperBarrier:
          title: Optional. The Upper Barrier. Only used to distinguish Fx Barrier Options.
          allOf:
            - type: number
        ValueDate:
          title: Optional. The value date. Only used to distinguish FxForwards.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        WatchlistId:
          title: Optional. Watchlist Id.Filter on watchlist instruments
          type: string
    NetPositionResponse:
      additionalProperties: false
      title: "Data representing an open net position."
      required:
        - NetPositionId
      type: object
      properties:
        DisplayAndFormat:
          title: '[Community] Information about the instrument of the net position and how to display it.'
          allOf:
            - $ref: '#/components/schemas/InstrumentDisplayAndFormat'
        Exchange:
          title: Information about the exchange where this instrument or the underlying instrument is traded.
          allOf:
            - $ref: '#/components/schemas/InstrumentExchangeDetails'
        Greeks:
          title: 'Greeks for option(s) i.e. FX Option, Contract Options and Contract Options CFD .'
          allOf:
            - $ref: '#/components/schemas/Greeks'
        NetPositionBase:
          title: Static part of net position information
          allOf:
            - $ref: '#/components/schemas/NetPositionStatic'
        NetPositionId:
          title: '[Community] The id of the net position. This can be used to fetch the open positions of a net position from the Positions service.'
          type: string
        NetPositionView:
          title: Dynamic part of net position information.
          allOf:
            - $ref: '#/components/schemas/NetPositionDynamic'
        SinglePosition:
          title: "If the NetPosition consists of a single position, this is the position details.\r\n            This will be empty if the NetPosition is comprised of more than one positions."
          allOf:
            - $ref: '#/components/schemas/SubPositionResponse'
    NetPositionResponseArray:
      additionalProperties: false
      type: array
      items:
        $ref: '#/components/schemas/NetPositionResponse'
    NetPositionResponseListResult:
      additionalProperties: false
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/NetPositionResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    NetPositionStatic:
      additionalProperties: false
      title: Static information related to the net position.
      type: object
      properties:
        AccountId:
          title: "The id of the account to which the net position belongs.\r\n            This is blank, if AccountKey was not specified in the querystring."
          type: string
        Amount:
          title: Sum volume of positions in instrument
          type: number
        AmountLong:
          title: Sum of volume positions that are long.
          allOf:
            - type: number
        AmountShort:
          title: Sum of volume positions that are short.
          allOf:
            - type: number
        AssetType:
          title: The AssetType.
          allOf:
            - $ref: '#/components/schemas/AssetType'
        BlockedQuantity:
          title: Stock blocking Quantity
          allOf:
            - type: number
        CanBeClosed:
          title: Indicates if the net position may be closed.
          type: boolean
        ClientId:
          title: The id of the client to which the net position belongs.
          type: string
        ExpiryDate:
          title: The ExpiryDate.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        FixedIncomeData:
          title: Information specific to fixed income products.
          allOf:
            - $ref: '#/components/schemas/FixedIncomeData'
        HasForceOpenPositions:
          title: 'If true, Underlying position(s) having ForceOpen position(s)'
          type: boolean
        IsMarketOpen:
          title: True if the instrument is currently tradable on its exchange.
          type: boolean
        MarketState:
          title: Market state of exchange for instrument
          allOf:
            - $ref: '#/components/schemas/MarketStateNullable'
        NonTradableReason:
          title: Non tradable reason.
          allOf:
            - $ref: '#/components/schemas/NonTradableReasons'
        NoticeDate:
          title: Futures only - The date on which the owner may be required to take physical delivery of the instrument commodity.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        NumberOfRelatedOrders:
          title: The number of related orders to positions under this NetPosition.
          type: integer
          format: int32
        OpenIndexRatioAverage:
          title: 'Open IndexRatio, Applicable for Inflation linked bonds.'
          allOf:
            - type: number
        OpenIpoOrdersCount:
          title: Open Ipo order(s) count
          type: integer
          format: int32
        OpenOrdersCount:
          title: Open order(s) Count
          type: integer
          format: int32
        OpenTriggerOrdersCount:
          title: Open Trigger order(s) Count
          type: integer
          format: int32
        OptionsData:
          title: 'Details for options, warrants and structured products.'
          allOf:
            - $ref: '#/components/schemas/OptionsData'
        PositionsAccount:
          title: 'If all underlying positions are on the same account then this is the account. If not, it is omitted.'
          allOf:
            - maxLength: 16
              minLength: 1
              type: string
              x-type-name: AccountId
        ShortTrading:
          title: Short trading allowed or not on instrument
          allOf:
            - $ref: '#/components/schemas/ShortTradingNullable'
        SinglePositionAccountId:
          title: "The accountid of the first and only position.\r\n            Omitted if the net position has more than one underlying position."
          type: string
        SinglePositionId:
          title: "Unique id of the first and only position.\r\n            Omitted if the net position has more than one underlying position."
          type: string
        SinglePositionStatus:
          title: "The status of the first and only position.\r\n            Omitted if the net position has more than one underlying position."
          allOf:
            - $ref: '#/components/schemas/PositionStatusNullable'
        SrdLastTradeDate:
          title: SRD Last Trade Date
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        SrdSettlementDate:
          title: SRD Settlement Date
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        TradingStatus:
          title: Instrument is tradable or not
          allOf:
            - $ref: '#/components/schemas/TradingStatusNullable'
        Uic:
          title: Unique id of the instrument.
          type: integer
          format: int32
        ValueDate:
          title: The value date of the net position
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
    NetPositionsSubscriptionRequest:
      additionalProperties: false
      title: Public request contract for setting up a subscription on a list of net positions
      required:
        - ContextId
        - ReferenceId
      type: object
      properties:
        ContextId:
          title: "The streaming context id that this request is associated with.\r\n            This parameter must only contain letters (a-z) and numbers (0-9) as well as - (dash) and _ (underscore). It is case insensitive. Max length is 50 characters."
          pattern: '^[a-zA-Z0-9_-]{1,50}$'
          type: string
          x-display-order: 1
        ReferenceId:
          title: "Mandatory client specified reference id for the subscription.\r\n            This parameter must only contain alphanumberic characters as well as - (dash) and _ (underscore). Cannot start with _. It is case insensitive. Max length is 50 characters."
          pattern: '^[a-zA-Z0-9-][a-zA-Z0-9_-]{0,49}$'
          type: string
          x-display-order: 2
        Arguments:
          title: Arguments for the subscription request.
          allOf:
            - $ref: '#/components/schemas/NetPositionRequest'
        Format:
          title: "Optional Media type (RFC 2046) of the serialized data updates that are streamed to the client.\r\n            Currently only application/json and application/x-protobuf is supported.\r\n            If an unrecognized format is specified, the subscription end point will return HTTP status code 400 - Bad format."
          type: string
        RefreshRate:
          title: "Optional custom refresh rate, measured in milliseconds, between each data update.\r\n            Note that it is not possible to get a refresh rate lower than the rate specified in the\r\n            customer service level agreement (SLA)."
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        ReplaceReferenceId:
          title: Reference id of the subscription that should be replaced.
          pattern: '^[a-zA-Z0-9-][a-zA-Z0-9_-]{0,49}$'
          type: string
        Tag:
          title: Optional client specified tag used for grouping subscriptions.
          type: string
    NetPositionsSubscriptionResponse:
      additionalProperties: false
      title: Public response contract returned after setting up a subscription on net position.
      type: object
      properties:
        ContextId:
          title: The streaming context id that this response is associated with.
          type: string
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
          x-display-order: 1
        ReferenceId:
          title: The reference id that (along with streaming context id and session id) identifies the subscription (within the context of a specific service/subscription type)
          type: string
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
          x-display-order: 2
        Format:
          title: 'The media type (RFC 2046), of the serialized data updates that are streamed to the client.'
          type: string
        InactivityTimeout:
          title: The time (in seconds) that the client should accept the subscription to be inactive before considering it invalid.
          type: integer
          format: int32
        RefreshRate:
          title: Actual refresh rate assigned to the subscription according to the customers SLA.
          type: integer
          format: int32
        Snapshot:
          title: 'Snapshot of the current data on hand, when subscription was created.'
          allOf:
            - $ref: '#/components/schemas/NetPositionResponseListResult'
        State:
          title: The value "Active".
          type: string
          description: This property is kept for backwards compatibility.
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
        Tag:
          title: 'Client specified tag assigned to the subscription, if specified in the request.'
          type: string
    NonTradableReasons:
      additionalProperties: false
      title: Non Tradable Reasons
      enum:
        - ETFsWithoutKIIDs
        - ExpiredInstrument
        - NonShortableInstrument
        - None
        - NotOnlineClientTradable
        - OfflineTradableBonds
        - OtherReason
        - ReduceOnlyInstrument
      type: string
      x-enum-descriptions:
        None: None
        NotOnlineClientTradable: This instrument is not tradable
        ReduceOnlyInstrument: This instrument is not reduce-only
        ExpiredInstrument: This instrument has expired
        OfflineTradableBonds: This instrument is tradable offline
        ETFsWithoutKIIDs: The issuer has not provided a Key Information Document (KID) for this instrument
        NonShortableInstrument: Short selling is not available for this instrument
        OtherReason: This instrument is not tradable
    OpenOrderRelation:
      additionalProperties: false
      title: Description of the order relation.
      enum:
        - IfDoneMaster
        - IfDoneSlave
        - IfDoneSlaveOco
        - Oco
        - StandAlone
      type: string
      x-enum-descriptions:
        StandAlone: Standalone. No relations to other orders.
        Oco: 'One cancels other. Relation between two orders. When one is filled, the other is cancelled.'
        IfDoneMaster: If done master. Relation between two or three orders. The slave orders are released only if the master order is filled.
        IfDoneSlave: If done slave. Relation between two orders. The other is always IfDoneMaster.
        IfDoneSlaveOco: "If done slave OCO. Relation between three orders. One is always IfDoneMaster and the other is always also IfDoneSlaveOCO.\r\n            The OCO relation is between the two slave orders."
    OpenOrdersRequest:
      additionalProperties: false
      title: "Represents a request for one or more open orders.\r\n            At least one of the following must be specified."
      required:
        - ClientKey
      type: object
      properties:
        AccountGroupKey:
          title: The key of the account group to which the order belongs.
          minLength: 1
          type: string
          x-type-name: AccountGroupKey
        AccountKey:
          title: Unique key identifying the account that owns the orders.
          minLength: 1
          type: string
          x-type-name: AccountKey
        ClientKey:
          title: Unique key identifying the client that owns the orders.
          minLength: 1
          type: string
          x-type-name: ClientKey
        FieldGroups:
          title: 'Specifies which data to return. Default is empty, meaning Display and Formatting information is not included.'
          type: array
          items:
            $ref: '#/components/schemas/OrderFieldGroup'
        OrderId:
          title: The id of the order
          type: string
        Status:
          title: Selects only a subset of open orders to be returned. Default is to return working orders only.
          allOf:
            - $ref: '#/components/schemas/OrderStatusFilterNullable'
        WatchlistId:
          title: Selects only orders those instruments belongs to the given watchlist id
          type: string
    OptionsData:
      additionalProperties: false
      title: Public data contract for options (both FX Options and ETO's)).
      type: object
      properties:
        BarrierEventOccurred:
          title: True if the barrier event has occurred for the option
          allOf:
            - type: boolean
        CanBeExercised:
          title: 'If true, the option position may be exercised by the user.'
          type: boolean
        ExerciseStyle:
          title: Used to indicate if an option is to follow American or European style exercise rules. American-style may be exercised at any time.  European-style may only be exercised at expiry.
          allOf:
            - $ref: '#/components/schemas/ExerciseStyleNullable'
        ExpiryCut:
          title: ExpiryCut.
          allOf:
            - $ref: '#/components/schemas/ExpiryCut'
        ExpiryDate:
          title: The ExpiryDate.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        LowerBarrier:
          title: LowerBarrier for digital option.
          allOf:
            - type: number
        PremiumDate:
          title: Forex Options premium date.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        PutCall:
          title: The Put/Call value of the option.
          allOf:
            - $ref: '#/components/schemas/PutCall'
        SettlementStyle:
          title: The settlement style of the option
          allOf:
            - $ref: '#/components/schemas/SettlementStyle'
        Strike:
          title: The strike price of the option.
          allOf:
            - type: number
        UpperBarrier:
          title: UpperBarrier for digital option.
          allOf:
            - type: number
    OptionsStrategyType:
      additionalProperties: false
      title: Common exchange traded options strategies.
      enum:
        - BackRatio
        - Butterfly
        - CalendarSpread
        - Combo
        - Condor
        - Custom
        - Diagonal
        - Gut
        - IronButterfly
        - IronCondor
        - RiskReversal
        - Straddle
        - Strangle
        - Synthetic
        - Vertical
      type: string
      x-enum-descriptions:
        Custom: User defined custom strategy.
        Vertical: 'A vertical spread has two legs. One is buy and one is sell with same expiration date, but with different strike prices.'
        BackRatio: 'Consists of two options, of same type and expiry, but with different amounts and strike prices.'
        Diagonal: 'A diagonal spread is two options of the same type, one buy and one sell, but with different expiry times and different strike prices. Essentially a combination of a Vertical and Calendar spread.'
        Condor: 'A condor strategy leverages four options with same expiry. A buy and a sell in the money, and a buy and a sell out of the money. Can also be characterized as two call spreads.'
        Butterfly: 'Non directional strategy that combines legs of same expiry, but with varying amounts and strike prices.'
        IronButterfly: Two overlapping vertical spreads. One of the verticals is on the call side and one is on the put side.
        IronCondor: A combined put and call spread with same expiration but varying different strikes.
        Straddle: 'A position in both a call and a put with the same underlier, strike price and maturity expiration date'
        Strangle: A position in both a call and put with different strike prices but with the same maturity and underlier
        RiskReversal: 'One leg is an OTM put, the other leg is an OTM call.'
        CalendarSpread: 'A calendar spread is a long-short position is two calls or two puts. Both options have the same strike, but they have different expirations.'
        Gut: 'Buy a call and then buy a put at a higher strike price, Sell a call and then sell a put at higher strike price. 1:1 ratio'
        Synthetic: 'Buy a call, sell a put at the same strike. Sell a call, buy a put at the same strike. 1:1 ratio'
        Combo: 'Sell call, buy put at lower strike. Buy call, Sell put at lower strike (1:1 ratio).'
    OrderAmountType:
      additionalProperties: false
      title: Indicates if the order Amount is specified as an absolute amount of lots/shares/contracts or as a currency value.
      enum:
        - CashAmount
        - Quantity
      type: string
      x-enum-descriptions:
        Quantity: Default. Order Amount is specified as an amount of lots/shares/contracts.
        CashAmount: Order amount is specified as a monetary value.
    OrderDetailedResponse:
      additionalProperties: false
      title: Describes all values available on an open order.
      required:
        - OrderId
      type: object
      properties:
        AccountId:
          title: The id of the account to which the net position belongs.
          type: string
        AccountKey:
          title: Unique key of the account where the order is placed
          allOf:
            - minLength: 1
              type: string
              x-type-name: AccountKey
        AlgoOrderDetails:
          title: Additional order details for algorithmic orders.
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
        AlgoStrategyName:
          title: Type of algo order strategy.
          type: string
        AllocationKeyId:
          title: Allocation Key
          type: string
        Amount:
          title: Order size
          allOf:
            - type: number
        AmountAccountValueRatio:
          title: The relative value of the order compared to the account.
          type: string
        Ask:
          title: The current market ask price.
          allOf:
            - type: number
        AssetType:
          title: The instrument asset type.
          allOf:
            - $ref: '#/components/schemas/AssetType'
        Bid:
          title: The current market bid price.
          allOf:
            - type: number
        BreakoutTriggerDownPrice:
          title: 'Used for conditional BreakoutTrigger orders. Lower trigger price. If the instrument price falls below this level, a stop loss order will be activated.'
          allOf:
            - type: number
        BreakoutTriggerUpPrice:
          title: 'Used for conditional BreakoutTrigger orders. Upper trigger price. If the instrument price exceeds this level, a take profit limit order will be activated.'
          allOf:
            - type: number
        BuySell:
          title: Indicates if the order is Buy Or Sell.
          allOf:
            - $ref: '#/components/schemas/BuySell'
        CalculationReliability:
          title: If an error was encountered this code indicates source of the calculation error.
          allOf:
            - $ref: '#/components/schemas/CalculationReliability'
        CashAmount:
          title: 'The monetary/cash purchase amount, only used when OrderAmountType is ValueInInstrumentCurrency. When set, ignore order Amount.'
          allOf:
            - type: number
        ClientId:
          title: Unique identifier of the client.
          type: string
        ClientKey:
          title: Unique key of the client where the order is placed
          allOf:
            - minLength: 1
              type: string
              x-type-name: ClientKey
        ClientName:
          title: The name of the client.
          type: string
        ClientNote:
          title: The specific text instructions for the Trading Desk to better understand IAM users intentions for staging the order.
          type: string
        CopiedPositionId:
          title: The ID of the position this order was copied from
          type: string
        CorrelationKey:
          title: Correlation key
          allOf:
            - pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
              type: string
        CorrelationTypes:
          title: Type of the correlation
          type: array
          items:
            $ref: '#/components/schemas/CorrelationType'
        CurrentPrice:
          title: The user specific(delayed/realtime) current market price of the instrument.
          allOf:
            - type: number
        CurrentPriceDelayMinutes:
          title: 'If set, it defines the number of minutes by which the price is delayed.'
          allOf:
            - type: integer
              format: int32
        CurrentPriceLastTraded:
          title: Indicates when the user specific current market price of the instrument was last traded.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        CurrentPriceType:
          title: The price type (Bid/Ask/LastTraded) of the user specific(delayed/realtime) current market price of the instrument.
          allOf:
            - $ref: '#/components/schemas/PriceTypeNullable'
        DisplayAndFormat:
          title: Information about the instrument and how to display it.
          allOf:
            - $ref: '#/components/schemas/InstrumentDisplayAndFormat'
        DistanceToMarket:
          title: Distance to market for this order. (Dynamically updating)
          allOf:
            - type: number
        Duration:
          title: "The time frame during which the order is valid.\r\n            If the OrderDurationType is GTD, then an ExpirationDate must also be provided."
          allOf:
            - $ref: '#/components/schemas/OrderDuration'
        Exchange:
          title: Information about the instrument's exchange and trading status.
          allOf:
            - $ref: '#/components/schemas/InstrumentExchangeDetails'
        ExpiryDate:
          title: The ExpiryDate. Valid for options and futures.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        ExternalReference:
          title: Gets or sets the Client order reference id.
          type: string
        FilledAmount:
          title: 'The amount of the order, which has already been filled, in case of partial fills.'
          allOf:
            - type: number
        Greeks:
          title: 'Greeks for option(s) i.e. FX Option, Contract Options and Contract Options CFD .'
          allOf:
            - $ref: '#/components/schemas/Greeks'
        IpoFinancingAmountPct:
          title: Financing Amount Pct for IPO orders
          allOf:
            - type: number
        IpoSubscriptionFee:
          title: Subscription fee for IPO orders
          allOf:
            - type: number
        IsForceOpen:
          title: 'If True, the order''s resulting position will not automatically be netted with position(s) in the opposite direction'
          type: boolean
        IsMarketOpen:
          title: True if the instrument is currently tradable on its exchange.
          type: boolean
        MarketPrice:
          title: Current trading price of instrument. (Dynamically updating)
          allOf:
            - type: number
        MarketState:
          title: Market state of exchange for instrument
          allOf:
            - $ref: '#/components/schemas/MarketStateNullable'
        MarketValue:
          title: Market value of position excl. closing costs.
          allOf:
            - type: number
        MultiLegOrderDetails:
          title: Common properties for multi-leg (strategy) orders.
          allOf:
            - $ref: '#/components/schemas/MultiLegOrderDetails'
        NonTradableReason:
          title: Non tradable reason.
          allOf:
            - $ref: '#/components/schemas/NonTradableReasons'
        OpenInterest:
          title: The total number of contracts that have not been settled and remain open as of the end of a trading day.
          allOf:
            - type: number
        OpenOrderType:
          title: Specifies the Order Type.
          allOf:
            - $ref: '#/components/schemas/OrderType'
        OptionsData:
          title: 'Details for options, warrants and structured products.'
          allOf:
            - $ref: '#/components/schemas/OrderOptionsData'
        OrderAmountType:
          title: Indicates if the order Amount is specified as lots/shares/contracts or as a monetary purchase amount in instrument currency.
          allOf:
            - $ref: '#/components/schemas/OrderAmountType'
        OrderId:
          title: Unique Id of the order.
          type: string
        OrderRelation:
          title: Relation to other active orders.
          allOf:
            - $ref: '#/components/schemas/OpenOrderRelation'
        OrderTime:
          title: The UTC date and time the order was placed
          type: string
          format: date-time
          x-type-name: UtcDateTime
        OwnerId:
          title: Client id of the client's owner. Only set when relevant.
          type: string
        Price:
          title: Price at which the order is triggered.
          allOf:
            - type: number
        RelatedOpenOrders:
          title: "List of information about related open orders.\r\n            There should be enough information that the UI can show the price of the order, and calculate  distance to market."
          type: array
          items:
            $ref: '#/components/schemas/RelatedOrderInfo'
        RelatedPositionId:
          title: Id of the related position.
          type: string
        ShortTrading:
          title: Short trading allowed or not on instrument
          allOf:
            - $ref: '#/components/schemas/ShortTradingNullable'
        Status:
          title: Current status of the order
          allOf:
            - $ref: '#/components/schemas/OrderStatus'
        StopLimitPrice:
          title: Secondary price level for StopLimit orders.
          allOf:
            - type: number
        SwitchInstrumentUic:
          title: 'Mutual funds only. When set, instructs the order is to switch (transfer) the value of a matching open position into the specified "switch" instrument (UIC).'
          allOf:
            - type: integer
              format: int32
        ToOpenClose:
          title: Whether the position should be created to open/increase or close/decrease a position.
          allOf:
            - $ref: '#/components/schemas/ToOpenCloseNullable'
        TradeAllocationKey:
          title: Obsolete. Trade Allocation Key
          allOf:
            - type: integer
              format: int32
          deprecated: true
        TradeIdeaId:
          title: The ID of the TradeMaker recommendation.
          type: string
        TradingStatus:
          title: Instrument is tradable or not
          allOf:
            - $ref: '#/components/schemas/TradingStatusNullable'
        TrailingStopDistanceToMarket:
          title: Distance to market for a trailing stop order.
          allOf:
            - type: number
        TrailingStopStep:
          title: Step size for trailing stop order.
          allOf:
            - type: number
        TriggerParentOrderId:
          title: Order id of related conditional order that controls placement/activation of this order.
          type: string
        TriggerPriceType:
          title: Type of price chosen to trigger a conditional order.
          allOf:
            - $ref: '#/components/schemas/OrderTriggerPriceTypeNullable'
        Uic:
          title: Unique Id of the instrument
          type: integer
          format: int32
        ValueDate:
          title: The value date (only for FxForwards).
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
    OrderDuration:
      additionalProperties: false
      title: "The time frame during which the order is valid.\r\n            If the OrderDurationType is GoodTillDate, then an ExpirationDateTime must also be provided."
      type: object
      properties:
        DurationType:
          title: Gets the order duration type.
          allOf:
            - $ref: '#/components/schemas/OrderDurationTypeNullable'
        ExpirationDate:
          title: 'Obsolete. The ExpirationDate, if the Order Type is GoodTillDate. The field has been obsoleted. Use ExpirationDateTime instead.'
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
          deprecated: true
        ExpirationDateContainsTime:
          title: 'Gets the value indicating whether the ExpirationDateTime field contains the time. Notice, that the value can only be true for GoodTillDate duration type.'
          allOf:
            - type: boolean
        ExpirationDateTime:
          title: Gets the expiration date and (optionally) time if the order duration type is GoodTillDate.
          allOf:
            - type: string
          description: 'If the field contains a time, it will always be expressed in the exchange local time. No time zone indication will be added.'
    OrderDurationType:
      additionalProperties: false
      title: "An enum describing the different order duration types.\r\n            Note that not all order types are possible for all asset types."
      enum:
        - AtTheClose
        - AtTheOpening
        - DayOrder
        - FillOrKill
        - GoodForPeriod
        - GoodTillCancel
        - GoodTillDate
        - ImmediateOrCancel
      type: string
      x-enum-descriptions:
        AtTheClose: At the close of the trading session.
        AtTheOpening: At the opening of the trading session.
        DayOrder: Day Order - Valid for the trading session.
        FillOrKill: Fill or Kill order.
        GoodForPeriod: Good for a specified period.
        GoodTillCancel: Good til Cancel.
        GoodTillDate: Good til Date - Expiration Date must also be specified.
        ImmediateOrCancel: Immediate or Cancel Order.
    OrderDurationTypeNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/OrderDurationType'
    OrderFieldGroup:
      additionalProperties: false
      title: Specification of the additional fields to be included in the result.
      enum:
        - DisplayAndFormat
        - ExchangeInfo
        - Greeks
      type: string
      x-enum-descriptions:
        DisplayAndFormat: 'Adds information about the instrument, which is useful for display and formatting. This includes Currency Code, Decimals, Instrument Description, Display Decimals, Price format and Symbol'
        ExchangeInfo: 'Adds information about the instrument''s exchange. This includes Exchange name, exchange code and open status.'
        Greeks: 'Greeks for Option(s), only applicable to Fx Options , Contract Options and Contract options CFD'
      x-type-warning: FlaggableEnum
    OrderOptionsData:
      additionalProperties: false
      title: 'Data specific to options, warrants and warrant derivatives in the orders list.'
      type: object
      properties:
        ExpiryDate:
          title: The ExpiryDate.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        PutCall:
          title: The Put/Call value of the option.
          allOf:
            - $ref: '#/components/schemas/PutCall'
        Strike:
          title: The strike price of the option.
          allOf:
            - type: number
    OrderResponse:
      additionalProperties: false
      title: Describes an open order.
      required:
        - OrderId
      type: object
      properties:
        AccountId:
          title: The id of the account to which the net position belongs.
          type: string
        AccountKey:
          title: Unique key of the account where the order is placed
          allOf:
            - minLength: 1
              type: string
              x-type-name: AccountKey
        AlgoStrategyName:
          title: Type of algo order strategy.
          type: string
        AllocationKeyId:
          title: Allocation Key
          type: string
        Amount:
          title: Order size
          allOf:
            - type: number
        AmountAccountValueRatio:
          title: The relative value of the order compared to the account.
          type: string
        Ask:
          title: The current market ask price.
          allOf:
            - type: number
        AssetType:
          title: The instrument asset type.
          allOf:
            - $ref: '#/components/schemas/AssetType'
        Bid:
          title: The current market bid price.
          allOf:
            - type: number
        BreakoutTriggerDownPrice:
          title: 'Used for conditional BreakoutTrigger orders. Lower trigger price. If the instrument price falls below this level, a stop loss order will be activated.'
          allOf:
            - type: number
        BreakoutTriggerUpPrice:
          title: 'Used for conditional BreakoutTrigger orders. Upper trigger price. If the instrument price exceeds this level, a take profit limit order will be activated.'
          allOf:
            - type: number
        BuySell:
          title: Indicates if the order is Buy Or Sell.
          allOf:
            - $ref: '#/components/schemas/BuySell'
        CalculationReliability:
          title: If an error was encountered this code indicates source of the calculation error.
          allOf:
            - $ref: '#/components/schemas/CalculationReliability'
        CashAmount:
          title: 'The monetary/cash purchase amount, only used when OrderAmountType is ValueInInstrumentCurrency. When set, ignore order Amount.'
          allOf:
            - type: number
        ClientId:
          title: Unique identifier of the client.
          type: string
        ClientKey:
          title: Unique key of the client where the order is placed
          allOf:
            - minLength: 1
              type: string
              x-type-name: ClientKey
        ClientName:
          title: The name of the client.
          type: string
        ClientNote:
          title: The specific text instructions for the Trading Desk to better understand IAM users intentions for staging the order.
          type: string
        CopiedPositionId:
          title: The ID of the position this order was copied from
          type: string
        CorrelationKey:
          title: Correlation key
          allOf:
            - pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
              type: string
        CorrelationTypes:
          title: Type of the correlation
          type: array
          items:
            $ref: '#/components/schemas/CorrelationType'
        CurrentPrice:
          title: The user specific(delayed/realtime) current market price of the instrument.
          allOf:
            - type: number
        CurrentPriceDelayMinutes:
          title: 'If set, it defines the number of minutes by which the price is delayed.'
          allOf:
            - type: integer
              format: int32
        CurrentPriceLastTraded:
          title: Indicates when the user specific current market price of the instrument was last traded.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        CurrentPriceType:
          title: The price type (Bid/Ask/LastTraded) of the user specific(delayed/realtime) current market price of the instrument.
          allOf:
            - $ref: '#/components/schemas/PriceTypeNullable'
        DisplayAndFormat:
          title: Information about the instrument and how to display it.
          allOf:
            - $ref: '#/components/schemas/InstrumentDisplayAndFormat'
        DistanceToMarket:
          title: Distance to market for this order. (Dynamically updating)
          allOf:
            - type: number
        Duration:
          title: "The time frame during which the order is valid.\r\n            If the OrderDurationType is GTD, then an ExpirationDate must also be provided."
          allOf:
            - $ref: '#/components/schemas/OrderDuration'
        Exchange:
          title: Information about the instrument's exchange and trading status.
          allOf:
            - $ref: '#/components/schemas/InstrumentExchangeDetails'
        ExpiryDate:
          title: The ExpiryDate. Valid for options and futures.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        ExternalReference:
          title: Gets or sets the Client order reference id.
          type: string
        FilledAmount:
          title: 'The amount of the order, which has already been filled, in case of partial fills.'
          allOf:
            - type: number
        Greeks:
          title: 'Greeks for option(s) i.e. FX Option, Contract Options and Contract Options CFD .'
          allOf:
            - $ref: '#/components/schemas/Greeks'
        IpoFinancingAmountPct:
          title: Financing Amount Pct for IPO orders
          allOf:
            - type: number
        IpoSubscriptionFee:
          title: Subscription fee for IPO orders
          allOf:
            - type: number
        IsForceOpen:
          title: 'If True, the order''s resulting position will not automatically be netted with position(s) in the opposite direction'
          type: boolean
        IsMarketOpen:
          title: True if the instrument is currently tradable on its exchange.
          type: boolean
        MarketPrice:
          title: Current trading price of instrument. (Dynamically updating)
          allOf:
            - type: number
        MarketState:
          title: Market state of exchange for instrument
          allOf:
            - $ref: '#/components/schemas/MarketStateNullable'
        MarketValue:
          title: Market value of position excl. closing costs.
          allOf:
            - type: number
        MultiLegOrderDetails:
          title: Common properties for multi-leg (strategy) orders.
          allOf:
            - $ref: '#/components/schemas/MultiLegOrderDetails'
        NonTradableReason:
          title: Non tradable reason.
          allOf:
            - $ref: '#/components/schemas/NonTradableReasons'
        OpenInterest:
          title: The total number of contracts that have not been settled and remain open as of the end of a trading day.
          allOf:
            - type: number
        OpenOrderType:
          title: Specifies the Order Type.
          allOf:
            - $ref: '#/components/schemas/OrderType'
        OptionsData:
          title: 'Details for options, warrants and structured products.'
          allOf:
            - $ref: '#/components/schemas/OrderOptionsData'
        OrderAmountType:
          title: Indicates if the order Amount is specified as lots/shares/contracts or as a monetary purchase amount in instrument currency.
          allOf:
            - $ref: '#/components/schemas/OrderAmountType'
        OrderId:
          title: Unique Id of the order.
          type: string
        OrderRelation:
          title: Relation to other active orders.
          allOf:
            - $ref: '#/components/schemas/OpenOrderRelation'
        OrderTime:
          title: The UTC date and time the order was placed
          type: string
          format: date-time
          x-type-name: UtcDateTime
        OwnerId:
          title: Client id of the client's owner. Only set when relevant.
          type: string
        Price:
          title: Price at which the order is triggered.
          allOf:
            - type: number
        RelatedOpenOrders:
          title: "List of information about related open orders.\r\n            There should be enough information that the UI can show the price of the order, and calculate  distance to market."
          type: array
          items:
            $ref: '#/components/schemas/RelatedOrderInfo'
        RelatedPositionId:
          title: Id of the related position.
          type: string
        ShortTrading:
          title: Short trading allowed or not on instrument
          allOf:
            - $ref: '#/components/schemas/ShortTradingNullable'
        Status:
          title: Current status of the order
          allOf:
            - $ref: '#/components/schemas/OrderStatus'
        StopLimitPrice:
          title: Secondary price level for StopLimit orders.
          allOf:
            - type: number
        SwitchInstrumentUic:
          title: 'Mutual funds only. When set, instructs the order is to switch (transfer) the value of a matching open position into the specified "switch" instrument (UIC).'
          allOf:
            - type: integer
              format: int32
        ToOpenClose:
          title: Whether the position should be created to open/increase or close/decrease a position.
          allOf:
            - $ref: '#/components/schemas/ToOpenCloseNullable'
        TradeAllocationKey:
          title: Obsolete. Trade Allocation Key
          allOf:
            - type: integer
              format: int32
          deprecated: true
        TradeIdeaId:
          title: The ID of the TradeMaker recommendation.
          type: string
        TradingStatus:
          title: Instrument is tradable or not
          allOf:
            - $ref: '#/components/schemas/TradingStatusNullable'
        TrailingStopDistanceToMarket:
          title: Distance to market for a trailing stop order.
          allOf:
            - type: number
        TrailingStopStep:
          title: Step size for trailing stop order.
          allOf:
            - type: number
        TriggerParentOrderId:
          title: Order id of related conditional order that controls placement/activation of this order.
          type: string
        TriggerPriceType:
          title: Type of price chosen to trigger a conditional order.
          allOf:
            - $ref: '#/components/schemas/OrderTriggerPriceTypeNullable'
        Uic:
          title: Unique Id of the instrument
          type: integer
          format: int32
        ValueDate:
          title: The value date (only for FxForwards).
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
    OrderResponseArray:
      additionalProperties: false
      type: array
      items:
        $ref: '#/components/schemas/OrderResponse'
    OrderResponseListResult:
      additionalProperties: false
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/OrderResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    OrderStatus:
      additionalProperties: false
      title: Indicates the visible status of an order.
      enum:
        - Filled
        - LockedPlacementPending
        - NotWorking
        - NotWorkingLockedCancelPending
        - NotWorkingLockedChangePending
        - Parked
        - Unknown
        - Working
        - WorkingLockedCancelPending
        - WorkingLockedChangePending
      type: string
      x-enum-descriptions:
        Unknown: Unknown
        Working: Working
        LockedPlacementPending: Locked. Placement pending.
        WorkingLockedChangePending: Working. Locked. Change Pending.
        WorkingLockedCancelPending: Working. Locked. Cancel Pending.
        Filled: Filled
        NotWorking: Not Working
        NotWorkingLockedChangePending: Locked. Change pending.
        NotWorkingLockedCancelPending: Locked. Cancel pending.
        Parked: 'Parked orders are in inactive state, can''t be filled, but remain available in so they can be made active at any time. Clients can manually ''park'' and ''activate'' an order.'
    OrderStatusFilter:
      additionalProperties: false
      title: Used to select only a subset of open orders to be returned.
      enum:
        - All
        - Working
      type: string
      x-enum-descriptions:
        Working: Returns only top level orders and OCO orders. Stop/Limit orders details are available in the RelatedOrders properties.
        All: Returns all orders regardless of type
    OrderStatusFilterNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/OrderStatusFilter'
    OrderSubscriptionRequest:
      additionalProperties: false
      title: Public request contract for setting up a subscription on orders for a client.
      required:
        - ContextId
        - ReferenceId
      type: object
      properties:
        ContextId:
          title: "The streaming context id that this request is associated with.\r\n            This parameter must only contain letters (a-z) and numbers (0-9) as well as - (dash) and _ (underscore). It is case insensitive. Max length is 50 characters."
          pattern: '^[a-zA-Z0-9_-]{1,50}$'
          type: string
          x-display-order: 1
        ReferenceId:
          title: "Mandatory client specified reference id for the subscription.\r\n            This parameter must only contain alphanumberic characters as well as - (dash) and _ (underscore). Cannot start with _. It is case insensitive. Max length is 50 characters."
          pattern: '^[a-zA-Z0-9-][a-zA-Z0-9_-]{0,49}$'
          type: string
          x-display-order: 2
        Arguments:
          title: Arguments for the subscription request.
          allOf:
            - $ref: '#/components/schemas/OpenOrdersRequest'
        Format:
          title: "Optional Media type (RFC 2046) of the serialized data updates that are streamed to the client.\r\n            Currently only application/json and application/x-protobuf is supported.\r\n            If an unrecognized format is specified, the subscription end point will return HTTP status code 400 - Bad format."
          type: string
        RefreshRate:
          title: "Optional custom refresh rate, measured in milliseconds, between each data update.\r\n            Note that it is not possible to get a refresh rate lower than the rate specified in the\r\n            customer service level agreement (SLA)."
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        ReplaceReferenceId:
          title: Reference id of the subscription that should be replaced.
          pattern: '^[a-zA-Z0-9-][a-zA-Z0-9_-]{0,49}$'
          type: string
        Tag:
          title: Optional client specified tag used for grouping subscriptions.
          type: string
    OrderSubscriptionResponse:
      additionalProperties: false
      title: Public response contract returned after setting up a subscription on orders for a client.
      type: object
      properties:
        ContextId:
          title: The streaming context id that this response is associated with.
          type: string
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
          x-display-order: 1
        ReferenceId:
          title: The reference id that (along with streaming context id and session id) identifies the subscription (within the context of a specific service/subscription type)
          type: string
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
          x-display-order: 2
        Format:
          title: 'The media type (RFC 2046), of the serialized data updates that are streamed to the client.'
          type: string
        InactivityTimeout:
          title: The time (in seconds) that the client should accept the subscription to be inactive before considering it invalid.
          type: integer
          format: int32
        RefreshRate:
          title: Actual refresh rate assigned to the subscription according to the customers SLA.
          type: integer
          format: int32
        Snapshot:
          title: 'Snapshot of the current data on hand, when subscription was created.'
          allOf:
            - $ref: '#/components/schemas/OrderResponseListResult'
        State:
          title: The value "Active".
          type: string
          description: This property is kept for backwards compatibility.
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
        Tag:
          title: 'Client specified tag assigned to the subscription, if specified in the request.'
          type: string
    OrderTriggerPriceType:
      additionalProperties: false
      title: Type of price chosen to trigger a conditional order.
      enum:
        - Ask
        - Bid
        - Close
        - LastTraded
        - Open
      type: string
      x-enum-descriptions:
        LastTraded: Last traded price
        Open: Market open price
        Close: Closing price
        Bid: Bid
        Ask: Ask
    OrderTriggerPriceTypeNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/OrderTriggerPriceType'
    OrderType:
      additionalProperties: false
      title: Specifies under what conditions an order should be triggered.
      enum:
        - BreakoutTrigger
        - CallLimit
        - CallStop
        - DealCapture
        - GuaranteedStop
        - Limit
        - LimitTrigger
        - Market
        - MarketDefault
        - MarketExpiry
        - MarketRollover
        - MarketStopOut
        - PreviouslyQuoted
        - Stop
        - StopIfTraded
        - StopLimit
        - StopTrigger
        - Switch
        - TrailingStop
        - TrailingStopIfTraded
        - TrailingStopLimit
        - Traspaso
        - TraspasoIn
        - TriggerBreakout
        - TriggerLimit
        - TriggerStop
        - Unknown
      type: string
      x-enum-deprecated:
        - LimitTrigger
        - StopTrigger
        - BreakoutTrigger
      x-enum-descriptions:
        Unknown: Unknown
        Market: Market.
        Limit: Limit.
        StopIfTraded: Stop if traded.
        Stop: Stop.
        StopLimit: Stop Limit.
        MarketStopOut: Market StopOut
        CallLimit: Call Limit
        CallStop: Call Stop
        MarketExpiry: Market Expiry
        TrailingStopIfTraded: Trailing stop if traded
        TrailingStop: Trailing stop
        TrailingStopLimit: Trailing Stop Limit
        PreviouslyQuoted: Previously Quoted.
        MarketDefault: Market Default.
        Switch: 'Switch order, Sell X and Buy Y with one order.'
        Traspaso: Specific type of switch order. Only available on select MutualFunds.
        TraspasoIn: Specific type of switch order. Only available on select MutualFunds.
        GuaranteedStop: Guaranteed Stop. Currently not supported.
        MarketRollover: Market Rollover orders are used to automate the process of closing out open positions in soon to expire contracts in favour of contracts with later expiration dates.
        DealCapture: Deal capture order
        TriggerBreakout: 'If asset price goes above or below defined upper/lower limit (trigger) prices, then place related order.'
        TriggerLimit: 'If the price moves above or below the trigger price, then place related order.'
        TriggerStop: 'If price falls below trigger price, a stop order with a trailing distance is placed. Similar to a trailing stop order.'
    OriginalCostData:
      additionalProperties: false
      title: "Contains original cost data for Net Positions.\r\n            Available for Mutual Funds only."
      type: object
      properties:
        IndicativeExitTaxApplicable:
          title: "Discloses aggregate profit of profit-making positions.\r\n            Includes deferred tax and P/L for current positions based on cost of the Original Position/Subscription."
          allOf:
            - type: number
        IndicativeProfitLossOnTrade:
          title: Aggregate Profit/Loss across all current positions for instrument.
          allOf:
            - type: number
        OpenCost:
          title: Original Opening Cost.
          allOf:
            - type: number
    PortfolioMarginMethod:
      additionalProperties: false
      title: Specifies the margin calculaion method for the given entity.
      enum:
        - Default
        - JanusMarginReplication
        - SpanForFutures
        - SpanForFuturesAndOptions
      type: string
      x-enum-descriptions:
        Default: Uses Saxo exposure based margin.
        SpanForFutures: Uses rules-based SPAN methods to calculate margin on futures alone.
        SpanForFuturesAndOptions: Uses rules-based SPAN methods to calculate margin on futures and options.
        JanusMarginReplication: Uses rules-based the Janus methodology to calculate margin.
    PositionClosingMethod:
      additionalProperties: false
      title: Intra day netting modes
      enum:
        - Explicit
        - Fifo
        - Unknown
      type: string
      x-enum-descriptions:
        Explicit: Explicit closed
        Fifo: Netting Closed
        Unknown: Unknown
    PositionDetailedResponse:
      additionalProperties: false
      title: Detailed information about a position.This is only provided as a snapshot and can not be subscribed to.
      required:
        - PositionId
      type: object
      properties:
        DisplayAndFormat:
          title: '[Community] Information about the instrument of the net position and how to display it.'
          allOf:
            - $ref: '#/components/schemas/InstrumentDisplayAndFormat'
        Exchange:
          title: Information about the instrument's exchange and trading status.
          allOf:
            - $ref: '#/components/schemas/InstrumentExchangeDetails'
        Greeks:
          title: 'Greeks for option(s) i.e. FX Option, Contract Options and Contract Options CFD .'
          allOf:
            - $ref: '#/components/schemas/Greeks'
        NetPositionId:
          title: '[Community] The id of the net position, to which this position is related.'
          type: string
        PositionBase:
          title: Static part of position information.
          allOf:
            - $ref: '#/components/schemas/PositionStatic'
        PositionDetails:
          title: Additional details related to the position.
          allOf:
            - $ref: '#/components/schemas/PositionDetails'
        PositionId:
          title: '[Community] Unique id of the position.'
          type: string
        PositionView:
          title: Dynamic portion of a position.
          allOf:
            - $ref: '#/components/schemas/PositionDynamic'
    PositionDetails:
      additionalProperties: false
      title: 'Detailed information about a position, which is only available as a snapshot.'
      type: object
      properties:
        AllocationKeyId:
          title: Allocation Key
          type: string
        CloseCost:
          title: Costs associated with the closing trade.
          allOf:
            - $ref: '#/components/schemas/CostData'
        CloseCostInBaseCurrency:
          title: A  Estimate of the cost of closing all underlying positions in requested account or client currency.
          allOf:
            - $ref: '#/components/schemas/CostData'
        CopiedPositionId:
          title: 'The id of the position that this position was copied from, if applicable.'
          type: string
        CorrelationKey:
          title: Obsolete. Correlation key.
          allOf:
            - pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
              type: string
        CorrelationTypes:
          title: Obsolete. Type of the correlation.
          type: array
          items:
            $ref: '#/components/schemas/CorrelationType'
        CurrencyCutPct:
          title: Currency cut percentage.
          allOf:
            - type: number
        ExternalReference:
          title: Gets or sets the Client order reference id.
          type: string
        Greeks:
          title: Greeks (if option).
          allOf:
            - $ref: '#/components/schemas/Greeks'
        LockedByBackOffice:
          title: Indicates whether the position is currently locked by back office.
          type: boolean
        MarketValue:
          title: Market value of position excl. closing costs.
          allOf:
            - type: number
        MarketValueOpen:
          title: The value of the position at time of opening.
          allOf:
            - type: number
        OpenCost:
          title: Costs associated with the opening trade.
          allOf:
            - $ref: '#/components/schemas/CostData'
        OpenCostInBaseCurrency:
          title: Costs associated with the opening trade in requested account or client currency.
          allOf:
            - $ref: '#/components/schemas/CostData'
        OpenSwap:
          title: Specifies the swap component of an FX forward price.
          allOf:
            - type: number
        OriginatingAlgoOrderStrategyId:
          title: The ID of originating AlgoOrderStrategy.
          type: string
        OriginatingAlgoOrderText:
          title: Description of the originating AlgoOrder.
          type: string
        SourceOrderId:
          title: Obsolete. Unique id of the source order.
          type: string
          deprecated: true
        StrategyId:
          title: Associated trade strategy id.
          type: string
        TradeAllocationKey:
          title: Obsolete. The Trade Allocation Key.
          type: string
          deprecated: true
        TradeIdeaId:
          title: The ID of the trademaker recommendation.
          type: string
    PositionDynamic:
      additionalProperties: false
      title: 'Dynamic Contents for a Position. The following fields are updated as prices change or the position is updated, filled or closed.'
      type: object
      properties:
        Ask:
          title: The current market ask price.
          allOf:
            - type: number
        Bid:
          title: The current market bid price.
          allOf:
            - type: number
        CalculationReliability:
          title: If an error was encountered this code indicates source of the calculation error.
          allOf:
            - $ref: '#/components/schemas/CalculationReliability'
        ConversionRateClose:
          title: Conversion rate used for closing trade costs.
          allOf:
            - type: number
        ConversionRateCurrent:
          title: Current conversion rate used for opening trade costs.
          allOf:
            - type: number
        ConversionRateOpen:
          title: Conversion rate used for opening trade costs.
          allOf:
            - type: number
        CurrentPrice:
          title: The current price for the instrument
          allOf:
            - type: number
        CurrentPriceDelayMinutes:
          title: 'If set, it defines the number of minutes by which the price is delayed.'
          allOf:
            - type: integer
              format: int32
        CurrentPriceLastTraded:
          title: Indicates when the user specific current market price of the instrument was last traded.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        CurrentPriceType:
          title: The price type (Bid/Ask/LastTraded) of the user specific(delayed/realtime) current market price of the instrument.
          allOf:
            - $ref: '#/components/schemas/PriceTypeNullable'
        Exposure:
          title: 'Current nominal value of position, but differs from market value in that it has a value for margin products.'
          allOf:
            - type: number
        ExposureCurrency:
          title: Currency of exposure.
          type: string
        ExposureInBaseCurrency:
          title: 'Current nominal value of position, but differs from market value in that it has a value for margin products. Converted to requesting account/client currency.'
          allOf:
            - type: number
        IndexRatio:
          title: 'Current IndexRatio, Applicable for Inflation linked bonds.'
          allOf:
            - type: number
        InstrumentPriceDayPercentChange:
          title: Percent change in instrument's price between Previous Close and current Last Traded price.
          allOf:
            - type: number
        MarketState:
          allOf:
            - $ref: '#/components/schemas/MarketStateNullable'
        MarketValue:
          title: Market value of position excl. closing costs.
          allOf:
            - type: number
        OpenInterest:
          title: The total number of contracts that have not been settled and remain open as of the end of a trading day.
          allOf:
            - type: number
        ProfitLossCurrencyConversion:
          title: The P/L from currency conversion between now and position open.
          allOf:
            - type: number
        ProfitLossOnTrade:
          title: The P/L in the quote currency.
          allOf:
            - type: number
        ProfitLossOnTradeInBaseCurrency:
          title: The P/L on in the client/account base currency.
          allOf:
            - type: number
        SettlementInstruction:
          title: SettlementInstruction
          allOf:
            - $ref: '#/components/schemas/SettlementInstructions'
        TradeCostsTotal:
          title: 'The sum of all open costs and realized/unrealized close costs for the underlying positions, in instrument currency.'
          allOf:
            - type: number
        TradeCostsTotalInBaseCurrency:
          title: The sum of all open costs and realized/unrealized close costs for the underlying positions.
          allOf:
            - type: number
    PositionFieldGroup:
      additionalProperties: false
      title: Specification of fieldsets to include in results.
      enum:
        - DisplayAndFormat
        - ExchangeInfo
        - Greeks
        - PositionBase
        - PositionIdOnly
        - PositionView
      type: string
      x-enum-descriptions:
        PositionBase: 'Individual Positions. Base data, which does not change with client/account view, or market data'
        DisplayAndFormat: Information about the instrument of the position and how to display it.
        PositionView: 'Individual Positions. Dynamic Data, which changes with client/account view, or market data'
        ExchangeInfo: 'Adds information about the instrument''s exchange. This includes Exchange name, exchange code and open status.'
        PositionIdOnly: Individual PositionId only.
        Greeks: 'Greeks for Option(s), only applicable to Fx Options , Contract Options and Contract options CFD'
      x-type-warning: FlaggableEnum
    PositionPagingSubscriptionUpdateRequest:
      additionalProperties: false
      title: A parameter wrapper for position subscription paging update operations.
      type: object
      properties:
        NewPageSize:
          title: 'Extends or reduces the page size, number of positions shown, on a running positions subscription.'
          type: integer
          format: int32
    PositionRequest:
      additionalProperties: false
      title: "Represents a request for one or more netpositions.\r\n            At least one of the following must be specified."
      required:
        - ClientKey
      type: object
      properties:
        AccountGroupKey:
          title: The key of the account group to which the net positions belongs.
          minLength: 1
          type: string
          x-type-name: AccountGroupKey
        AccountKey:
          title: The key of the account to which the net positions belongs.
          minLength: 1
          type: string
          x-type-name: AccountKey
        ClientKey:
          title: The key of the client to which the net positions belongs.
          minLength: 1
          type: string
          x-type-name: ClientKey
        FieldGroups:
          title: 'Specifies which data to return. Default is [PositionBase,PositionView]'
          type: array
          items:
            $ref: '#/components/schemas/PositionFieldGroup'
        NetPositionId:
          title: The id of the netposition to which the position belongs
          type: string
        PositionId:
          title: The id of the position.
          type: string
        WatchlistId:
          title: Selects only positions those instruments belongs to the given watchlist id
          type: string
    PositionResponse:
      additionalProperties: false
      title: Describes an open position
      required:
        - PositionId
      type: object
      properties:
        DisplayAndFormat:
          title: '[Community] Information about the instrument of the net position and how to display it.'
          allOf:
            - $ref: '#/components/schemas/InstrumentDisplayAndFormat'
        Exchange:
          title: Information about the instrument's exchange and trading status.
          allOf:
            - $ref: '#/components/schemas/InstrumentExchangeDetails'
        Greeks:
          title: 'Greeks for option(s) i.e. FX Option, Contract Options and Contract Options CFD .'
          allOf:
            - $ref: '#/components/schemas/Greeks'
        NetPositionId:
          title: '[Community] The id of the net position, to which this position is related.'
          type: string
        PositionBase:
          title: Static part of position information.
          allOf:
            - $ref: '#/components/schemas/PositionStatic'
        PositionId:
          title: '[Community] Unique id of the position.'
          type: string
        PositionView:
          title: Dynamic portion of a position.
          allOf:
            - $ref: '#/components/schemas/PositionDynamic'
    PositionResponseArray:
      additionalProperties: false
      type: array
      items:
        $ref: '#/components/schemas/PositionResponse'
    PositionResponseListResult:
      additionalProperties: false
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/PositionResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    PositionStatic:
      additionalProperties: false
      title: Static contents for a position. The following fields do not change when the price is updated
      type: object
      properties:
        AccountId:
          title: The id of the account to which the position belongs.
          type: string
        AccountKey:
          title: Unique key of the account where the position is placed.
          allOf:
            - minLength: 1
              type: string
              x-type-name: AccountKey
        Amount:
          title: Sum volume of positions in instrument.
          type: number
        AssetType:
          title: The AssetType.
          allOf:
            - $ref: '#/components/schemas/AssetType'
        CanBeClosed:
          title: Indicates if the position may be closed.
          type: boolean
        ClientId:
          title: The id of the client to which the position belongs.
          type: string
        CloseConversionRateSettled:
          title: True when the closing trades currency conversion rate has been settled (i.e. is fixed and not fluctuating). This is the case for accounts using Market Conversion-Rates.
          type: boolean
        ContractId:
          title: The position's options board contract. Only applicable if the position was registered as originating from the options board.
          allOf:
            - type: integer
              format: int32
        CorrelationKey:
          title: Correlation key.
          allOf:
            - pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
              type: string
        CorrelationTypes:
          title: Type of the correlation.
          type: array
          items:
            $ref: '#/components/schemas/CorrelationType'
        ExecutionTimeClose:
          title: The UTC date and time the position was closed.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        ExecutionTimeOpen:
          title: The UTC date and time the position was opened.
          type: string
          format: date-time
          x-type-name: UtcDateTime
        ExpiryDate:
          title: The ExpiryDate.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        ExternalReference:
          title: Gets or sets the Client order reference id.
          type: string
        FixedIncomeData:
          title: Information related to fixed income products.
          allOf:
            - $ref: '#/components/schemas/FixedIncomeData'
        IsForceOpen:
          title: 'If True, the position will not automatically be netted with position in the opposite direction'
          type: boolean
        IsMarketOpen:
          title: True if the instrument is currently tradable on its exchange.
          type: boolean
        NoticeDate:
          title: Futures only - The date on which the owner may be required to take physical delivery of the instrument commodity.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        OpenIndexRatio:
          title: 'Open IndexRatio, Applicable for Inflation linked bonds.'
          allOf:
            - type: number
        OpenPrice:
          title: The price the instrument was traded at.
          type: number
        OpenPriceIncludingCosts:
          title: 'The price the instrument was traded, with trading costs added.'
          allOf:
            - type: number
        OptionsData:
          title: 'Details for options, warrants and structured products.'
          allOf:
            - $ref: '#/components/schemas/OptionsData'
        RelatedOpenOrders:
          title: List of information about related open orders.
          type: array
          items:
            $ref: '#/components/schemas/RelatedOrderInfo'
        RelatedPositionId:
          title: Id of possible related position.
          type: string
        SourceOrderId:
          title: Unique id of the source order
          type: string
        SpotDate:
          title: The date on which settlement is to occur for an Fx spot transaction.
          allOf:
            - type: string
              format: date
              x-type-name: Date
        SrdLastTradeDate:
          title: SRD Last Trade Date
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        SrdSettlementDate:
          title: SRD Settlement Date
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        Status:
          title: "The status of the position. \r\n            Possible values: Open, Closed, Closing, PartiallyClosed, Locked."
          allOf:
            - $ref: '#/components/schemas/PositionStatus'
        ToOpenClose:
          title: Whether the position was opened in order to open/increase or close/decrease a position.
          allOf:
            - $ref: '#/components/schemas/ToOpenCloseNullable'
        Uic:
          title: Unique id of the instrument.
          type: integer
          format: int32
        ValueDate:
          title: The value date of the position.
          type: string
          format: date-time
          x-type-name: UtcDateTime
    PositionStatus:
      additionalProperties: false
      title: Defines possible values for position or net position status.
      enum:
        - Closed
        - Closing
        - Locked
        - Open
        - PartiallyClosed
        - RelatedClose
        - Square
      type: string
      x-enum-descriptions:
        Open: Open
        Closed: Closed
        Closing: Closing with market order
        PartiallyClosed: Partially closed
        Locked: Locked by back office
        RelatedClose: Related closing position
        Square: Implicitly closed. Used for Net Positions only.
    PositionStatusNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/PositionStatus'
    PositionsSubscriptionRequest:
      additionalProperties: false
      title: Public request contract for setting up a subscription on open positions.
      required:
        - ContextId
        - ReferenceId
      type: object
      properties:
        ContextId:
          title: "The streaming context id that this request is associated with.\r\n            This parameter must only contain letters (a-z) and numbers (0-9) as well as - (dash) and _ (underscore). It is case insensitive. Max length is 50 characters."
          pattern: '^[a-zA-Z0-9_-]{1,50}$'
          type: string
          x-display-order: 1
        ReferenceId:
          title: "Mandatory client specified reference id for the subscription.\r\n            This parameter must only contain alphanumberic characters as well as - (dash) and _ (underscore). Cannot start with _. It is case insensitive. Max length is 50 characters."
          pattern: '^[a-zA-Z0-9-][a-zA-Z0-9_-]{0,49}$'
          type: string
          x-display-order: 2
        Arguments:
          title: Arguments for the subscription request.
          allOf:
            - $ref: '#/components/schemas/PositionRequest'
        Format:
          title: "Optional Media type (RFC 2046) of the serialized data updates that are streamed to the client.\r\n            Currently only application/json and application/x-protobuf is supported.\r\n            If an unrecognized format is specified, the subscription end point will return HTTP status code 400 - Bad format."
          type: string
        RefreshRate:
          title: "Optional custom refresh rate, measured in milliseconds, between each data update.\r\n            Note that it is not possible to get a refresh rate lower than the rate specified in the\r\n            customer service level agreement (SLA)."
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        ReplaceReferenceId:
          title: Reference id of the subscription that should be replaced.
          pattern: '^[a-zA-Z0-9-][a-zA-Z0-9_-]{0,49}$'
          type: string
        Tag:
          title: Optional client specified tag used for grouping subscriptions.
          type: string
    PositionsSubscriptionResponse:
      additionalProperties: false
      title: Public response contract returned after setting up a subscription on open positions.
      type: object
      properties:
        ContextId:
          title: The streaming context id that this response is associated with.
          type: string
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
          x-display-order: 1
        ReferenceId:
          title: The reference id that (along with streaming context id and session id) identifies the subscription (within the context of a specific service/subscription type)
          type: string
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
          x-display-order: 2
        Format:
          title: 'The media type (RFC 2046), of the serialized data updates that are streamed to the client.'
          type: string
        InactivityTimeout:
          title: The time (in seconds) that the client should accept the subscription to be inactive before considering it invalid.
          type: integer
          format: int32
        RefreshRate:
          title: Actual refresh rate assigned to the subscription according to the customers SLA.
          type: integer
          format: int32
        Snapshot:
          title: 'Snapshot of the current data on hand, when subscription was created.'
          allOf:
            - $ref: '#/components/schemas/PositionResponseListResult'
        State:
          title: The value "Active".
          type: string
          description: This property is kept for backwards compatibility.
          deprecated: true
          x-deprecated-date: '2022-11-01T00:00:00.0000000+00:00'
        Tag:
          title: 'Client specified tag assigned to the subscription, if specified in the request.'
          type: string
    PriceDisplayFormatType:
      additionalProperties: false
      title: The format modifiers in which e.g. a price must be displayed and possibly edited.
      enum:
        - AllowDecimalPips
        - Fractions
        - ModernFractions
        - Normal
        - Percentage
      type: string
      x-enum-descriptions:
        Normal: Standard decimal formatting is used with the Decimals field indicating the number of decimals.
        Fractions: Display as regular fraction i.e. 3 1/4
        ModernFractions: 'Special US Bonds futures fractional format (1/32s or 1/128s without nominator). If PriceDecimals = -5 then the nominator is 32, else 128.'
        Percentage: 'Display as percentage, e.g. 12.34%.'
        AllowDecimalPips: "Display the last digit as a smaller than the rest of the numbers. Note that this digit is not included in the number of decimals, effectively\r\n            increasing the number of decimals by one. E.g. 12.345 when Decimals is 2 and DisplayFormat is AllowDecimalPips."
    PriceDisplayFormatTypeNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/PriceDisplayFormatType'
    PriceType:
      additionalProperties: false
      title: Used to describe the type of the price
      enum:
        - Ask
        - Bid
        - Close
        - High
        - Indicative
        - LastTraded
        - Low
        - Mid
        - None
        - Open
        - Synthetic
      type: string
      x-enum-descriptions:
        Bid: Highest price from buyer.
        Ask: Best offer from seller (offer price)
        Mid: The price between the best price of the sellers (bid) and best offer from the buyers (ask).
        LastTraded: Price at which instrument was last traded.
        Close: Official price of instrument at the end of trading session.
        Open: Official price of instrument at the start of trading session.
        Synthetic: Computed price of instrument.
        High: Highest traded price in period.
        Low: Lowest traded price in period.
        Indicative: 'Best estimate price based on market conditions. Used mainly in low liquidity markets, where Bid/Ask/LastTraded/Close may not be available.'
        None: Unknown/No value set
    PriceTypeNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/PriceType'
    PutCall:
      additionalProperties: false
      title: Describes the direction of an option.
      enum:
        - Call
        - None
        - Put
      type: string
      x-enum-descriptions:
        None: Not specified.
        Put: Put.
        Call: Call.
    PutCallNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/PutCall'
    RelatedOrderInfo:
      additionalProperties: false
      title: Information about related order to be shown on order list.
      required:
        - OrderId
      type: object
      properties:
        Amount:
          title: Order size
          allOf:
            - type: number
        Duration:
          title: The time frame during which the order is valid.
          allOf:
            - $ref: '#/components/schemas/OrderDuration'
        OpenOrderType:
          title: The order type.
          allOf:
            - $ref: '#/components/schemas/OrderType'
        OrderId:
          title: The orderId.
          type: string
        OrderPrice:
          title: Price at which the order is triggered.
          allOf:
            - type: number
        StopLimitPrice:
          title: Stop limit price for stop limit order.
          allOf:
            - type: number
        TrailingStopDistanceToMarket:
          title: Distance to market for a trailing stop order.
          allOf:
            - type: number
        TrailingStopStep:
          title: Step size for trailing stop order.
          allOf:
            - type: number
    SecurityLendingEnabled:
      additionalProperties: false
      title: Security Lending Enabled.
      enum:
        - No
        - Yes
      type: string
      x-enum-descriptions:
        Yes: Security Lending is enabled.
        No: Security Lending is disabled.
    SecurityLendingEnabledNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/SecurityLendingEnabled'
    SettlementInstructions:
      additionalProperties: false
      title: SettlementInstructions associated with a net position
      type: object
      properties:
        ActualRolloverAmount:
          title: The amount that will be rolled over
          allOf:
            - type: number
        ActualSettlementAmount:
          title: The amount of the net positions that is going to settle
          allOf:
            - type: number
        Amount:
          title: The amount that is given by the client and stored as instructions
          allOf:
            - type: number
        IsSettlementInstructionsAllowed:
          title: The liquidation date is the last day where the instructions can be updated and it can be done till the exchange is open.
          type: boolean
        Month:
          title: SRD Calendar month
          allOf:
            - type: integer
              format: int32
        SettlementType:
          title: Client's chosen settlement type
          allOf:
            - $ref: '#/components/schemas/SettlementType'
        Year:
          title: SRD Calendar year
          allOf:
            - type: integer
              format: int32
    SettlementStyle:
      additionalProperties: false
      title: Options for how a contract option is settled when exercised.
      enum:
        - CashDelivery
        - PhysicalDelivery
      type: string
      x-enum-descriptions:
        CashDelivery: The contract option is settled as cash.
        PhysicalDelivery: The contract option is settled by physical delivery.
    SettlementType:
      additionalProperties: false
      title: SettlementType for SRD
      enum:
        - FullRollover
        - FullSettlement
        - PartialSettlement
      type: string
      x-enum-descriptions:
        PartialSettlement: Default / Partial settlement method. Use the amount for settlement
        FullSettlement: FullSettlement. Ignore amount and settle all
        FullRollover: Full Roll over. Delete instructions and revert to default SRD behaviour
    ShortTrading:
      additionalProperties: false
      title: Indicates whether short trading is allowed or not.
      enum:
        - Allowed
        - NotAllowed
      type: string
      x-enum-descriptions:
        Allowed: Short trading is possible for instrument.
        NotAllowed: Short trading is not possible for instrument.
    ShortTradingNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/ShortTrading'
    StockBlockingDetail:
      additionalProperties: false
      title: Stock Blocking Detail
      type: object
      properties:
        BlockingId:
          title: Blocking Id
          type: integer
          format: int32
        BlockingQuantity:
          title: Blocking Quantity
          type: number
        BlockingReason:
          title: Blocking Reason
          type: string
        EventReferenceId:
          title: Event reference Id
          type: string
    StringStringKeyValuePair:
      type: object
      additionalProperties:
        type: string
    SubPositionBase:
      additionalProperties: false
      title: The static part of a sub position.
      type: object
      properties:
        AccountId:
          title: The id of the account to which the position belongs.
          type: string
        AccountKey:
          title: Unique key of the account where the position is placed.
          allOf:
            - minLength: 1
              type: string
              x-type-name: AccountKey
        Amount:
          title: Sum volume of positions in instrument.
          type: number
        AssetType:
          title: The AssetType.
          allOf:
            - $ref: '#/components/schemas/AssetType'
        CanBeClosed:
          title: Indicates if the position may be closed.
          type: boolean
        ClientId:
          title: The id of the client to which the position belongs.
          type: string
        CloseConversionRateSettled:
          title: True when the closing trades currency conversion rate has been settled (i.e. is fixed and not fluctuating). This is the case for accounts using Market Conversion-Rates.
          type: boolean
        ContractId:
          title: The position's options board contract. Only applicable if the position was registered as originating from the options board.
          allOf:
            - type: integer
              format: int32
        CorrelationKey:
          title: Correlation key.
          allOf:
            - pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
              type: string
        CorrelationTypes:
          title: Type of the correlation.
          type: array
          items:
            $ref: '#/components/schemas/CorrelationType'
        ExecutionTimeClose:
          title: The UTC date and time the position was closed.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        ExecutionTimeOpen:
          title: The UTC date and time the position was opened.
          type: string
          format: date-time
          x-type-name: UtcDateTime
        ExpiryDate:
          title: The ExpiryDate.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        ExternalReference:
          title: Gets or sets the Client order reference id.
          type: string
        FixedIncomeData:
          title: Information related to fixed income products.
          allOf:
            - $ref: '#/components/schemas/FixedIncomeData'
        IsForceOpen:
          title: 'If True, the position will not automatically be netted with position in the opposite direction'
          type: boolean
        IsMarketOpen:
          title: True if the instrument is currently tradable on its exchange.
          type: boolean
        NoticeDate:
          title: Futures only - The date on which the owner may be required to take physical delivery of the instrument commodity.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        OpenIndexRatio:
          title: 'Open IndexRatio, Applicable for Inflation linked bonds.'
          allOf:
            - type: number
        OpenPrice:
          title: The price the instrument was traded at.
          type: number
        OpenPriceIncludingCosts:
          title: 'The price the instrument was traded, with trading costs added.'
          allOf:
            - type: number
        OptionsData:
          title: 'Details for options, warrants and structured products.'
          allOf:
            - $ref: '#/components/schemas/OptionsData'
        RelatedOpenOrders:
          title: List of information about related open orders.
          type: array
          items:
            $ref: '#/components/schemas/RelatedOrderInfo'
        RelatedPositionId:
          title: Id of possible related position.
          type: string
        SourceOrderId:
          title: Unique id of the source order
          type: string
        SpotDate:
          title: The date on which settlement is to occur for an Fx spot transaction.
          allOf:
            - type: string
              format: date
              x-type-name: Date
        SrdLastTradeDate:
          title: SRD Last Trade Date
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        SrdSettlementDate:
          title: SRD Settlement Date
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        Status:
          title: "The status of the position. \r\n            Possible values: Open, Closed, Closing, PartiallyClosed, Locked."
          allOf:
            - $ref: '#/components/schemas/PositionStatus'
        ToOpenClose:
          title: Whether the position was opened in order to open/increase or close/decrease a position.
          allOf:
            - $ref: '#/components/schemas/ToOpenCloseNullable'
        Uic:
          title: Unique id of the instrument.
          type: integer
          format: int32
        ValueDate:
          title: The value date of the position.
          type: string
          format: date-time
          x-type-name: UtcDateTime
    SubPositionResponse:
      additionalProperties: false
      title: Information for a position linked up to a net position
      required:
        - PositionId
      type: object
      properties:
        PositionBase:
          title: Position fields which do not change with price updates
          allOf:
            - $ref: '#/components/schemas/SubPositionBase'
          deprecated: true
        PositionId:
          title: Unique id of the position.
          type: string
          deprecated: true
        PositionView:
          title: Position fields which do change with price updates
          allOf:
            - $ref: '#/components/schemas/SubPositionView'
          deprecated: true
    SubPositionView:
      additionalProperties: false
      title: Dynamic part of a sub position. This information may change
      type: object
      properties:
        Ask:
          title: The current market ask price.
          allOf:
            - type: number
        Bid:
          title: The current market bid price.
          allOf:
            - type: number
        CalculationReliability:
          title: If an error was encountered this code indicates source of the calculation error.
          allOf:
            - $ref: '#/components/schemas/CalculationReliability'
        ConversionRateClose:
          title: Conversion rate used for closing trade costs.
          allOf:
            - type: number
        ConversionRateCurrent:
          title: Current conversion rate used for opening trade costs.
          allOf:
            - type: number
        ConversionRateOpen:
          title: Conversion rate used for opening trade costs.
          allOf:
            - type: number
        CurrentPrice:
          title: The current price for the instrument
          allOf:
            - type: number
        CurrentPriceDelayMinutes:
          title: 'If set, it defines the number of minutes by which the price is delayed.'
          allOf:
            - type: integer
              format: int32
        CurrentPriceLastTraded:
          title: Indicates when the user specific current market price of the instrument was last traded.
          allOf:
            - type: string
              format: date-time
              x-type-name: UtcDateTime
        CurrentPriceType:
          title: The price type (Bid/Ask/LastTraded) of the user specific(delayed/realtime) current market price of the instrument.
          allOf:
            - $ref: '#/components/schemas/PriceTypeNullable'
        Exposure:
          title: 'Current nominal value of position, but differs from market value in that it has a value for margin products.'
          allOf:
            - type: number
        ExposureCurrency:
          title: Currency of exposure.
          type: string
        ExposureInBaseCurrency:
          title: 'Current nominal value of position, but differs from market value in that it has a value for margin products. Converted to requesting account/client currency.'
          allOf:
            - type: number
        IndexRatio:
          title: 'Current IndexRatio, Applicable for Inflation linked bonds.'
          allOf:
            - type: number
        InstrumentPriceDayPercentChange:
          title: Percent change in instrument's price between Previous Close and current Last Traded price.
          allOf:
            - type: number
        MarketState:
          allOf:
            - $ref: '#/components/schemas/MarketStateNullable'
        MarketValue:
          title: Market value of position excl. closing costs.
          allOf:
            - type: number
        OpenInterest:
          title: The total number of contracts that have not been settled and remain open as of the end of a trading day.
          allOf:
            - type: number
        ProfitLossCurrencyConversion:
          title: The P/L from currency conversion between now and position open.
          allOf:
            - type: number
        ProfitLossOnTrade:
          title: The P/L in the quote currency.
          allOf:
            - type: number
        ProfitLossOnTradeInBaseCurrency:
          title: The P/L on in the client/account base currency.
          allOf:
            - type: number
        SettlementInstruction:
          title: SettlementInstruction
          allOf:
            - $ref: '#/components/schemas/SettlementInstructions'
        TradeCostsTotal:
          title: 'The sum of all open costs and realized/unrealized close costs for the underlying positions, in instrument currency.'
          allOf:
            - type: number
        TradeCostsTotalInBaseCurrency:
          title: The sum of all open costs and realized/unrealized close costs for the underlying positions.
          allOf:
            - type: number
    ToOpenClose:
      additionalProperties: false
      title: Specifies whether the order will be created to open/increase or close/decrease a position (only relevant for options).
      enum:
        - ToClose
        - ToOpen
        - Undefined
      type: string
      x-enum-descriptions:
        Undefined: Undefined.
        ToOpen: Order/Position is ToOpen.
        ToClose: Order/Position is ToClose.
    ToOpenCloseNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/ToOpenClose'
    TradingStatus:
      additionalProperties: false
      title: Trading status of an instrument.
      enum:
        - NonTradable
        - NotDefined
        - ReduceOnly
        - Tradable
      type: string
      x-enum-descriptions:
        NotDefined: Not Defined
        Tradable: Instrument is tradable
        NonTradable: Instrument is non tradable
        ReduceOnly: 'Instrument is Reduce only, which means client can only reduce the exposure by closing existing open position(s) and cannot open new position(s).'
      x-type-warning: FlaggableEnum
    TradingStatusNullable:
      additionalProperties: false
      allOf:
        - $ref: '#/components/schemas/TradingStatus'
    TransactionsNotBookedDetail:
      additionalProperties: false
      title: Detail of transaction(s) that yet have to be booked.
      type: object
      properties:
        Accrual:
          title: Net accrual for the transaction(s) not booked yet
          allOf:
            - type: number
        AdditionalTransactionCost:
          title: Net additional transaction cost for the transaction(s) not booked yet
          allOf:
            - type: number
        BondValue:
          title: Net bond value for the transaction(s) not booked yet
          allOf:
            - type: number
        CashDeposit:
          title: Net cash deposit for the transaction(s) not booked yet
          allOf:
            - type: number
        CashReservation:
          title: Net cash reservation for the transaction(s) not booked yet
          allOf:
            - type: number
        CashWithdrawal:
          title: Net cash withdrawal for the transaction(s) not booked yet
          allOf:
            - type: number
        CertificatesValue:
          title: Net value of certificates for the transaction(s) not booked yet
          allOf:
            - type: number
        Commission:
          title: Net commission for the transaction(s) not booked yet
          allOf:
            - type: number
        ExchangeFee:
          title: Net exchange fee for the transaction(s) not booked yet
          allOf:
            - type: number
        ExternalCharges:
          title: Net external charges for the transaction(s) not booked yet
          allOf:
            - type: number
        FundsReservedByOrder:
          title: Net funds reserved by order for the transaction(s) not booked yet
          allOf:
            - type: number
        IpoSubscriptionFee:
          title: IPO subscription fee for the transaction(s) not booked yet
          allOf:
            - type: number
        LeveragedKnockOutProductsValue:
          title: Net value of leveraged knock-out products (Turbos) for the transaction(s) not booked yet.
          allOf:
            - type: number
        MutualFundValue:
          title: Net mutual fund value for the transaction(s) not booked yet
          allOf:
            - type: number
        OptionPremium:
          title: Net option premium for the transaction(s) not booked yet
          allOf:
            - type: number
        ShareValue:
          title: Net share value for the transaction(s) not booked yet
          allOf:
            - type: number
        StampDuty:
          title: Net stamp duty for the transaction(s) not booked yet
          allOf:
            - type: number
        WarrantPremium:
          title: Net warrant premium for the transaction(s) not booked yet
          allOf:
            - type: number
    UserResponse:
      additionalProperties: false
      title: Public data contract representing a user.
      type: object
      properties:
        ClientKey:
          title: Unique key identifying the client that owns the user.
          minLength: 1
          type: string
          x-type-name: ClientKey
        Culture:
          title: Selected culture for this user. Five letter language culture name. Fx. en-GB
          type: string
        Language:
          title: Selected language for this user. The two letter ISO 639-1 language code. See Reference Data Languages endpoint for supported languages.
          type: string
        LastLoginStatus:
          title: Status of last login or login attempt
          allOf:
            - $ref: '#/components/schemas/LoginStatus'
        LastLoginTime:
          title: Time of last login or login attempt
          type: string
          format: date-time
          x-type-name: UtcDateTime
        LegalAssetTypes:
          title: Asset Types that can be traded on all accounts by this user.
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
        MarketDataViaOpenApiTermsAccepted:
          title: True if the user has accepted terms for market data via OpenApi access.
          type: boolean
        Name:
          title: The name of the user.
          type: string
        TimeZoneId:
          title: Selected Time Zone for this user. See Reference Data TimeZones endpoint for supported time zones.
          allOf:
            - type: integer
              format: int32
        UserId:
          title: Unique ID of the user.
          type: string
        UserKey:
          title: The unique key for the user.
          minLength: 1
          type: string
          x-type-name: UserKey
    UserResponseListResult:
      additionalProperties: false
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    UserUpdateRequest:
      additionalProperties: false
      title: Public contract representing setting a user may change.
      type: object
      properties:
        Culture:
          title: Selected culture for this user. Five letter language culture name. Fx. en-GB
          type: string
        Language:
          title: Selected language for this user. The two letter ISO 639-1 language code. See Reference Data Languages endpoint for supported languages.
          type: string
        TimeZoneId:
          title: Selected Time Zone for this user. See Reference Data TimeZones endpoint for supported time zones.
          allOf:
            - type: integer
              format: int32
    ValueDateExposureEntry:
      additionalProperties: false
      title: Currency exposures for a value date
      required:
        - ValueDateKey
      type: object
      properties:
        Exposures:
          title: The currency exposure breakdown for the value date
          allOf:
            - $ref: '#/components/schemas/CurrencyExposureEntry'
        ValueDate:
          title: The value date
          type: string
          format: date-time
          x-type-name: UtcDateTime
        ValueDateKey:
          title: Unique list entry key.
          type: string
  responses:
    BadRequest:
      description: One or more of the provided parameters are invalid.
      content:
        application/json:
          schema:
            required:
              - ErrorCode
              - Message
            type: object
            properties:
              ErrorCode:
                enum:
                  - InvalidRequest
                type: string
                x-enum-descriptions:
                  InvalidRequest: Default error code returned when it cannot be determined which part of the request is malformed.
              Message:
                type: string
              ModelState:
                $ref: '#/components/schemas/ModelStateDictionary'
    ServiceUnavailable:
      description: Service Unavailable.
    TooManyRequests:
      description: The request was rejected due to rate limit being exceeded.
    Unauthorized:
      description: Indicates that the request was rejected because the 'Authorization' header was missing in the request or contained an invalid security token.
  securitySchemes:
    OpenApiJWTSecurityScheme:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OpenApiOAuthSecurityScheme:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://sim.logonvalidation.net/authorize
          tokenUrl: https://sim.logonvalidation.net/token
          scopes: { }
tags:
  - name: AccountGroups
    description: "End points serving account groups.\r\n            The set of account groups is restricted by the supplied query parameters as well as whether or not the identity represented by the authorization token has access to the groups."
  - name: Accounts
    description: "End points serving accounts.\r\n            The set of accounts is restricted by the supplied query parameters as well as whether or not the identity represented by the authorization token has access to the account."
  - name: Balances
    description: "Read-only endpoint serving client and account balances. The client or account balance is identified by the supplied ClientKey, AccountGroupKey or AccountKey. \r\n            Access to balance data is further restricted by the access rights of the identity represented by the authorization token."
  - name: Clients
    description: "End points serving client related resources\r\n            The set of clients is restricted by the supplied query parameters as well as whether or not the identity \r\n            represented by the authorization token has access to the client."
  - name: ClosedPositions
    description: "Read only end points serving closed positions and the underlying closed positions making up the net closed position.\r\n            The set of closed positions is restricted by the supplied query parameters as well as whether or not the identity \r\n            represented by the authorization token has access to the account on which the positions are posted.\r\n\r\n*   A user of a client will have access to accounts under that client\r\n*   A user of an IB or WLC will have access to accounts on that client or clients there under \r\n*   An employee has access to all accounts\r\n*   A request containing a TradingFloor \"Federated Access\" token will have access to the account specified in that token.\r\n*   If access is granted on the basis of the TradingFloor \"Federated Access\" token, then the number of fields will be a subset \r\n                of the full set of fields shown in the specification for the response."
  - name: Exposure
    description: "Read only end points serving exposure of positions.\r\n            The exposure results are restricted by the supplied query parameters as well as whether or not the identity \r\n            represented by the authorization token has access to the client/account owner of the underlying positions.\r\n\r\n*   A user of a client will have access to accounts under that client\r\n*   A user of an IB or WLC will have access to accounts on that client or clients there under \r\n*   An employee has access to all accounts"
  - name: NetPositions
    description: "Read only end points serving net positions and the positions making up the net position.\r\n            The set of net positions is restricted by the supplied query parameters as well as whether or not the identity \r\n            represented by the authorization token has access to the account on which the positions are posted.\r\n\r\n*   A user of a client will have access to accounts under that client\r\n*   A user of an IB or WLC will have access to accounts on that client or clients there under \r\n*   An employee has access to all accounts\r\n*   A request containing a TradingFloor \"Federated Access\" token will have access to the account specified in that token.\r\n*   If access is granted on the basis of the TradingFloor \"Federated Access\" token, then the number of fields will be a subset \r\n                of the full set of fields shown in the specification for the response."
  - name: Orders
    description: Read only end points serving orders.
  - name: Positions
    description: "Read only end points serving individual positions.\r\n            The set of positions is restricted by the supplied query parameters as well as whether or not the identity \r\n            represented by the authorization token has access to the account on which the positions are posted. \r\n\r\n*   A user of a client will have access to accounts under that client\r\n*   A user of an IB or WLC will have access to accounts on that client or clients there under \r\n*   An employee has access to all accounts\r\n*   A request containing a TradingFloor \"Federated Access\" token will have access to the account specified in that token.\r\n*   If access is granted on the basis of the TradingFloor \"Federated Access\" token, then the number of fields will be a subset \r\n                of the full set of fields shown in the specification for the response."
  - name: Users
    description: End points serving user resources.