openapi: 3.0.1
info:
  title: Services.Developer
  description: 'Developer provide end points <Please update description here>.<div class=well style=''border: 1px solid rgb(204, 82, 0); border-image: none; background-color: rgb(255, 209, 179);padding:1px;''> <strong>NOTE: </strong> This is an early developer preview. At this point, all data may not be correct, complete or available in the live environment.</div>'
  version: 1.1.113+605c013eaf
  x-framework-version: 22.0.30+b916f2a578
  x-machine: SATOAWEB28-DK1
servers:
  - url: https://gateway.saxobank.com/openapi
paths:
  '/developer/apps/{appKey}/secrets':
    get:
      tags:
        - Apps
      description: Gets secrets for a given app
      operationId: DeveloperSecretGetSecrets
      parameters:
        - name: $inlinecount
          in: query
          schema:
            enum:
              - AllPages
              - None
            type: string
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 20
        - name: appKey
          in: path
          description: Unique key for each application
          required: true
          schema:
            type: string
          example: 50fb26e9b4bc4e7ba78dc19f46bc84bf
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppSecretDtoListResult'
              example:
                Data:
                  - Secret: Secret46e72c2c-8300-49ae-b75f-e49ab48e005a
                    SecretId: 58
                    ValidFrom: '0001-01-01T00:00:00.0000000+00:00'
                    ValidUntil: '0001-01-01T00:00:00.0000000+00:00'
                MaxRows: 52
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - UnavailableAppKey
                    type: string
                    x-enum-descriptions:
                      UnavailableAppKey: Could not find any app secret with the provided appKey.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotAbleToIdentifyClientInfo
                    type: string
                    x-enum-descriptions:
                      NotAbleToIdentifyClientInfo: Not able to identify required client info
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
    post:
      tags:
        - Apps
      description: Create an app secret
      operationId: DeveloperSecretCreateSecret
      parameters:
        - name: appKey
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretCreationRequest'
            example:
              ValidFrom: '2019-06-20T07:27:42.0000000+00:00'
              ValidUntil: '2021-06-20T07:27:42.0000000+00:00'
      responses:
        '201':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppSecretDto'
              example:
                Secret: Secret44b5377b-fa47-4090-97f6-6b1cae7f7644
                SecretId: 26
                ValidFrom: '0001-01-01T00:00:00.0000000+00:00'
                ValidUntil: '0001-01-01T00:00:00.0000000+00:00'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotAbleToIdentifyClientInfo
                    type: string
                    x-enum-descriptions:
                      NotAbleToIdentifyClientInfo: Not able to identify required client info
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/developer/apps/{appKey}/secrets/{secretId}':
    get:
      tags:
        - Apps
      description: Gets a secret by id
      operationId: DeveloperSecretGetSecretById
      parameters:
        - name: appKey
          in: path
          required: true
          schema:
            type: string
        - name: secretId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
        '204':
          description: Indicates that the get request was performed correctly.
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotAbleToIdentifyUserId
                    type: string
                    x-enum-descriptions:
                      NotAbleToIdentifyUserId: Not able to identify user id
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - UnavailableSecretId
                    type: string
                    x-enum-descriptions:
                      UnavailableSecretId: Could not find any app secret with the provided Id.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
    delete:
      tags:
        - Apps
      description: Deletes a secret
      operationId: DeveloperSecretDeleteSecret
      parameters:
        - name: appKey
          in: path
          required: true
          schema:
            type: string
        - name: secretId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: Indicates that the delete request was performed correctly.
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotAbleToIdentifyClientInfo
                    type: string
                    x-enum-descriptions:
                      NotAbleToIdentifyClientInfo: Not able to identify required client info
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NoResultFound
                    type: string
                    x-enum-descriptions:
                      NoResultFound: Record cannot be found based on input crieterias
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
    patch:
      tags:
        - Apps
      description: Update an app secret
      operationId: DeveloperSecretUpdateSecret
      parameters:
        - name: appKey
          in: path
          required: true
          schema:
            type: string
        - name: secretId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecretUpdateRequest'
            example:
              Regenerate: false
              ValidFrom: '2019-06-20T07:27:42.0000000+00:00'
              ValidUntil: '2021-06-20T07:27:42.0000000+00:00'
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppSecretDto'
              example:
                Secret: Secret44b5377b-fa47-4090-97f6-6b1cae7f7644
                SecretId: 26
                ValidFrom: '0001-01-01T00:00:00.0000000+00:00'
                ValidUntil: '0001-01-01T00:00:00.0000000+00:00'
        '200':
          description: Indicates that the request was performed correctly.
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotAbleToIdentifyClientInfo
                    type: string
                    x-enum-descriptions:
                      NotAbleToIdentifyClientInfo: Not able to identify required client info
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/developer/apps/{appKey}/redirecturis':
    get:
      tags:
        - Apps
      description: Gets redirect uris for a given app
      operationId: DeveloperRedirectGetRedirectUris
      parameters:
        - name: $inlinecount
          in: query
          schema:
            enum:
              - AllPages
              - None
            type: string
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            maximum: 1000
            minimum: 0
            type: integer
            format: int32
            default: 20
        - name: appKey
          in: path
          description: Unique key for each application
          required: true
          schema:
            type: string
          example: 50fb26e9b4bc4e7ba78dc19f46bc84bf
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppRedirectDtoListResult'
              example:
                Data:
                  - Branding:
                      Description: Description59bd11a7-9a67-47a8-9904-c09f8f0030c2
                      Id: 178
                      Name: Name0cf3200b-371d-48c1-99e6-9e2a98240ece
                    Description: Descriptiond056f9d6-684a-438a-ac13-6e5c6b024290
                    RedirectUriId: 135
                    Uri: Uri845ef50d-86dd-495d-a368-32210fde3d45
                MaxRows: 75
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NoResultFound
                    type: string
                    x-enum-descriptions:
                      NoResultFound: Record cannot be found based on input crieterias
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotAbleToIdentifyUserId
                    type: string
                    x-enum-descriptions:
                      NotAbleToIdentifyUserId: Not able to identify user id
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
    post:
      tags:
        - Apps
      description: Creates a redirect uri
      operationId: DeveloperRedirectCreateRedirectUri
      parameters:
        - name: appKey
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppRedirectUriCreationRequest'
            example:
              Description: New App Description
              Uri: http://my.com/myapp
      responses:
        '201':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppRedirectUriResponse'
              example:
                Data:
                  Branding:
                    Description: Description099a27ca-0b7e-4c4f-ad8b-67425eaae28f
                    Id: 42
                    Name: Name1ff57cdb-e5e5-4d13-83d9-9f047556a010
                  Description: Description58a954e9-90a9-44ce-855d-46eb13c153fe
                  RedirectUriId: 93
                  Uri: Urib19c9476-33f3-4131-935b-b8cc2c925450
                FoundAndUpdated: false
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotAbleToIdentifyClientInfo
                    type: string
                    x-enum-descriptions:
                      NotAbleToIdentifyClientInfo: Not able to identify required client info
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/developer/apps/{appKey}/redirecturis/{redirectUriId}':
    get:
      tags:
        - Apps
      description: Gets a redirect uri by id
      operationId: DeveloperRedirectGetRedirectUriFromId
      parameters:
        - name: $inlinecount
          in: query
          schema:
            enum:
              - AllPages
              - None
            type: string
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $skiptoken
          in: query
          schema:
            type: string
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: appKey
          in: path
          description: Unique key for each application
          required: true
          schema:
            type: string
          example: 50fb26e9b4bc4e7ba78dc19f46bc84bf
        - name: redirectUriId
          in: path
          description: Unique key for each app redirect uri
          required: true
          schema:
            type: integer
            format: int32
          example: 1
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppRedirectDto'
              example:
                Branding:
                  Description: Descriptionf8cf5c69-8906-48a3-ae80-4ffbcaf0e582
                  Id: 254
                  Name: Nameea4f22f2-10b3-4ef2-8602-8f5ba4e218cc
                Description: Description7c559f1b-3b1d-4c15-abb7-0cb090b475a2
                RedirectUriId: 201
                Uri: Uria3706daf-df77-483f-9747-54984d3a3808
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NoResultFound
                    type: string
                    x-enum-descriptions:
                      NoResultFound: Record cannot be found based on input crieterias
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotAbleToIdentifyUserId
                    type: string
                    x-enum-descriptions:
                      NotAbleToIdentifyUserId: Not able to identify user id
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
    delete:
      tags:
        - Apps
      description: Deletes a redirect uri
      operationId: DeveloperRedirectDeleteRedirectUri
      parameters:
        - name: appKey
          in: path
          description: Unique key for each application
          required: true
          schema:
            type: string
          example: 50fb26e9b4bc4e7ba78dc19f46bc84bf
        - name: redirectUriId
          in: path
          description: Unique key for each app redirect uri
          required: true
          schema:
            type: integer
            format: int32
          example: 1
      responses:
        '204':
          description: Indicates that the delete request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NoResultFound
                    type: string
                    x-enum-descriptions:
                      NoResultFound: Record cannot be found based on input crieterias
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotAbleToIdentifyClientInfo
                    type: string
                    x-enum-descriptions:
                      NotAbleToIdentifyClientInfo: Not able to identify required client info
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
    patch:
      tags:
        - Apps
      description: Updates a redirect uri
      operationId: DeveloperRedirectUpdateRedirectUri
      parameters:
        - name: appKey
          in: path
          description: Unique key for each application
          required: true
          schema:
            type: string
          example: 50fb26e9b4bc4e7ba78dc19f46bc84bf
        - name: redirectUriId
          in: path
          description: Unique key for each redirect uri
          required: true
          schema:
            type: integer
            format: int32
          example: 1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RedirectUriUpdateRequest'
            example:
              Description: some description
              Uri: http://mycompany.com/myapp
      responses:
        '204':
          description: No Content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppRedirectDto'
              example:
                Branding:
                  Description: Descriptionf8cf5c69-8906-48a3-ae80-4ffbcaf0e582
                  Id: 254
                  Name: Nameea4f22f2-10b3-4ef2-8602-8f5ba4e218cc
                Description: Description7c559f1b-3b1d-4c15-abb7-0cb090b475a2
                RedirectUriId: 201
                Uri: Uria3706daf-df77-483f-9747-54984d3a3808
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NoResultFound
                    type: string
                    x-enum-descriptions:
                      NoResultFound: Record cannot be found based on input crieterias
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotAbleToIdentifyUserId
                    type: string
                    x-enum-descriptions:
                      NotAbleToIdentifyUserId: Not able to identify user id
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /developer/featureflags:
    get:
      tags:
        - Feature Flags
      description: Get all feature flags
      operationId: FeatureFlagsGetFlags
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/StringBooleanKeyValuePair'
              example:
                key6619e095-2a5f-4644-bf4f-59628548a233: true
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /developer/apps:
    get:
      tags:
        - Apps
      description: Gets the apps owned by the client of the user
      operationId: DeveloperAppGetApps
      parameters:
        - name: $inlinecount
          in: query
          schema:
            enum:
              - AllPages
              - None
            type: string
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 20
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppDtoListResult'
              example:
                Data:
                  - AppKey: AppKey5da29234-9b8c-4938-9b92-817314bb84a4
                    Brandings:
                      - Description: Descriptionc27e0d21-fbf4-458f-a24f-63bb0796541d
                        Id: 43
                        Name: Name3ce03b4b-0a75-40fb-bde9-853bb030e2f8
                    CreatedBy:
                      Name: Name0a8d9467-3c51-429d-b7fb-67a8832b0a78
                      UserKey: UserKey13934729-156d-4df0-83a8-e488a5925e3f
                    Description: Description6d440d0a-5ed3-4719-ba2f-477b8a7a0d18
                    Endpoints:
                      AuthorizationEndpoint: AuthorizationEndpoint93f8a73f-836c-48e2-9433-3915b3e2f105
                      TokenEndpoint: TokenEndpoint61736067-0a5b-4ec9-a21f-58417cf36c95
                    Flow: Flow19868e59-9020-449e-aee1-35a17853eb96
                    IsActive: true
                    IsTradingEnabled: false
                    ManualOrderIndicationDefault: ManualOrderIndicationDefault17338a9a-26fd-4231-bcaa-5606747ad166
                    ManualOrderIndicator: ManualOrderIndicatorc4647711-2ac6-4658-a189-a142c35bd639
                    Name: Name1cbc5eee-3bd5-4b2e-b6fc-a82665c28160
                    Status: Approved
                MaxRows: 226
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotAbleToIdentifyUserId
                    type: string
                    x-enum-descriptions:
                      NotAbleToIdentifyUserId: Not able to identify user id
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
    post:
      tags:
        - Apps
      description: Create a app
      operationId: DeveloperAppCreateApp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppCreationRequest'
            example:
              Description: New App Description
              Flow: Code
              IsTradingEnabled: true
              Name: New App Name
              RedirectUri: http://my.domain/myApp
      responses:
        '201':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppDto'
              example:
                AppKey: AppKey550a4527-d540-4cd9-8020-02104bcda62b
                Brandings:
                  - Description: Description52b9c242-f653-48b3-a741-00807cce7e71
                    Id: 242
                    Name: Namee4b04b5d-55ee-4300-bdda-883e82538b4a
                CreatedBy:
                  Name: Nameb293c10e-5279-4a6c-b615-b6ad7b0ad26f
                  UserKey: UserKeydfdb1cd8-0b37-4b29-af93-92baa2e38dc8
                Description: Descriptionbbd1296b-962c-4315-83df-62b5076a3d75
                Endpoints:
                  AuthorizationEndpoint: AuthorizationEndpointc84e65b9-e5f0-4137-9bdc-2e6e308d8466
                  TokenEndpoint: TokenEndpointd388b38b-4912-4dee-bb2a-7d2ff86c8281
                Flow: Flow8d96858b-e24a-4bae-bfce-1c0ec0c86de8
                IsActive: true
                IsTradingEnabled: false
                ManualOrderIndicationDefault: ManualOrderIndicationDefault3135feee-e4c6-493f-ada5-bae62234569f
                ManualOrderIndicator: ManualOrderIndicator6afbb121-2fbd-4ceb-956f-7e90ffb04fac
                Name: Name6f04ee61-3132-4565-a69d-ba262686fc7b
                Status: PendingUserApprovalCheck
        '400':
          description: Indicates that the request is not correct.
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: Default error code returned when it cannot be determined which part of the request is malformed.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotAbleToIdentifyClientInfo
                    type: string
                    x-enum-descriptions:
                      NotAbleToIdentifyClientInfo: Not able to identify required client info
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/developer/apps/{appKey}':
    get:
      tags:
        - Apps
      description: Returns requested app by appKey
      operationId: DeveloperAppGetAppByAppKey
      parameters:
        - name: appKey
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResourceDto'
              example:
                AppKey: AppKeyd55c2adb-3ebb-480d-9009-416b8781d243
                Branding:
                  - Description: Description7a30dfed-4b7e-4659-bbfb-13f962eb2b29
                    Id: 215
                    Name: Namee88b2588-08ce-4a8d-adf9-9fd79802f596
                CreatedBy:
                  Name: Name85c4c9e8-5a6a-4ade-9555-a2ad24560406
                  UserKey: UserKeyaa896fc8-c8c5-47fb-a36c-4dff1454591d
                Description: Description953ec37c-f718-47c4-9de0-b8f118401f9e
                Endpoints:
                  AuthorizationEndpoint: AuthorizationEndpointf836aa00-ad9b-4b5f-befb-fb7772ac37ed
                  TokenEndpoint: TokenEndpointf4641276-513a-45d8-a53f-75de34fe8918
                Flow: Flowd0b343f6-bd3b-489f-ad7d-3fde088af312
                IsActive: true
                IsTradingEnabled: false
                Name: Namef17241c2-3190-4ede-b7ea-7c31aef587de
                RedirectUris:
                  - Branding:
                      Description: Description1416f7de-d55b-46d3-9d41-e4d63dbd4318
                      Id: 46
                      Name: Name7dc98ab8-ce3f-4f70-9eaa-36d58a575c6e
                    Description: Description4da4d353-e977-40ae-aa00-ab6eb4833342
                    RedirectUriId: 247
                    Uri: Uridfbe7e4d-bfb8-4d75-a877-c64ba3bd7eef
                Secrets:
                  - Secret: Secret8e805a96-d6c1-4f1a-b16f-38758b70ed17
                    SecretId: 190
                    ValidFrom: '0001-01-01T00:00:00.0000000+00:00'
                    ValidUntil: '0001-01-01T00:00:00.0000000+00:00'
                Status: Requestable
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotAbleToIdentifyUserId
                    type: string
                    x-enum-descriptions:
                      NotAbleToIdentifyUserId: Not able to identify user id
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
    delete:
      tags:
        - Apps
      summary: Deletes an app
      description: Deactivate an existing application
      operationId: DeveloperAppDeactivateApp
      parameters:
        - name: appKey
          in: path
          description: Unique key for each application
          required: true
          schema:
            type: string
          example: 50fb26e9b4bc4e7ba78dc19f46bc84bf
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotAbleToIdentifyUserId
                    type: string
                    x-enum-descriptions:
                      NotAbleToIdentifyUserId: Not able to identify user id
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
    patch:
      tags:
        - Apps
      summary: Updates an app
      description: "Updates an existing application\r\n            Inactive app cannot be updated\r\n            App can be updated if (1) app is active or (2) user requests to activate the app and app can be made active"
      operationId: DeveloperAppUpdateApp
      parameters:
        - name: appKey
          in: path
          description: Unique key for each application
          required: true
          schema:
            type: string
          example: 50fb26e9b4bc4e7ba78dc19f46bc84bf
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppUpdateRequest'
            example:
              Description: some description
              Name: App Name1
      responses:
        '204':
          description: No Content
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotAbleToIdentifyClientInfo
                    type: string
                    x-enum-descriptions:
                      NotAbleToIdentifyClientInfo: Not able to identify required client info
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - UnableToActivateApp
                    type: string
                    x-enum-descriptions:
                      UnableToActivateApp: Unable to activate an app
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/developer/apps/resource/{appKey}':
    get:
      tags:
        - Apps
      description: Returns requested resource by appKey
      operationId: DeveloperAppGetResourceByAppKey
      parameters:
        - name: appKey
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Indicates that the request was performed correctly.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AppResourceDto'
              example:
                AppKey: AppKeyd55c2adb-3ebb-480d-9009-416b8781d243
                Branding:
                  - Description: Description7a30dfed-4b7e-4659-bbfb-13f962eb2b29
                    Id: 215
                    Name: Namee88b2588-08ce-4a8d-adf9-9fd79802f596
                CreatedBy:
                  Name: Name85c4c9e8-5a6a-4ade-9555-a2ad24560406
                  UserKey: UserKeyaa896fc8-c8c5-47fb-a36c-4dff1454591d
                Description: Description953ec37c-f718-47c4-9de0-b8f118401f9e
                Endpoints:
                  AuthorizationEndpoint: AuthorizationEndpointf836aa00-ad9b-4b5f-befb-fb7772ac37ed
                  TokenEndpoint: TokenEndpointf4641276-513a-45d8-a53f-75de34fe8918
                Flow: Flowd0b343f6-bd3b-489f-ad7d-3fde088af312
                IsActive: true
                IsTradingEnabled: false
                Name: Namef17241c2-3190-4ede-b7ea-7c31aef587de
                RedirectUris:
                  - Branding:
                      Description: Description1416f7de-d55b-46d3-9d41-e4d63dbd4318
                      Id: 46
                      Name: Name7dc98ab8-ce3f-4f70-9eaa-36d58a575c6e
                    Description: Description4da4d353-e977-40ae-aa00-ab6eb4833342
                    RedirectUriId: 247
                    Uri: Uridfbe7e4d-bfb8-4d75-a877-c64ba3bd7eef
                Secrets:
                  - Secret: Secret8e805a96-d6c1-4f1a-b16f-38758b70ed17
                    SecretId: 190
                    ValidFrom: '0001-01-01T00:00:00.0000000+00:00'
                    ValidUntil: '0001-01-01T00:00:00.0000000+00:00'
                Status: Requestable
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotAbleToIdentifyUserId
                    type: string
                    x-enum-descriptions:
                      NotAbleToIdentifyUserId: Not able to identify user id
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
components:
  schemas:
    AppCreationRequest:
      title: Application create request parameters
      required:
        - Name
        - Description
        - Flow
      type: object
      properties:
        Description:
          title: App Description
          type: string
        Flow:
          title: App Grant Type
          type: string
        IsTradingEnabled:
          title: 'Enable trading capability for OAuth2App, default is false. Optional field.'
          type: boolean
        Name:
          title: App Name
          pattern: '[a-zA-Z0-9\@\-\]\[\''\!\ ]+$'
          type: string
        RedirectUri:
          title: Optional input param to specify redirect uri during app creation
          type: string
    AppDto:
      title: Represents an app as mapped from fields in the database
      type: object
      properties:
        AppKey:
          title: Unique app key - exposed to end users
          type: string
        Brandings:
          title: Service providers
          type: array
          items:
            $ref: '#/components/schemas/BrandingDto'
        CreatedBy:
          title: Created by user reference default
          allOf:
            - $ref: '#/components/schemas/UserDto'
        Description:
          title: Description
          type: string
        Endpoints:
          title: Endpoint list for OAuth app
          allOf:
            - $ref: '#/components/schemas/EndpointDto'
        Flow:
          title: SSO Authentication flow
          type: string
        IsActive:
          title: App is active
          allOf:
            - type: boolean
        IsTradingEnabled:
          title: Derived field from 'OnlineAuthzLevels' and 'OfflineAuthzLevels'
          type: boolean
        ManualOrderIndicationDefault:
          title: Manual order indication default
          type: string
        ManualOrderIndicator:
          title: Manual order indication default
          type: string
        Name:
          title: The name of the app
          type: string
        Status:
          title: App status
          allOf:
            - $ref: '#/components/schemas/AppStatus'
    AppDtoListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/AppDto'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    AppRedirectDto:
      title: App redirect data transfer object
      type: object
      properties:
        Branding:
          title: Service Provider
          allOf:
            - $ref: '#/components/schemas/BrandingDto'
        Description:
          title: Description of OAuth app
          type: string
        RedirectUriId:
          title: Redirect Uri Id
          type: integer
          format: int32
        Uri:
          title: Redirect Uri of OAuth app
          type: string
    AppRedirectDtoListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/AppRedirectDto'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    AppRedirectUriCreationRequest:
      title: Redirect Uri create request parameters
      required:
        - Uri
      type: object
      properties:
        BrandingId:
          title: App branding id
          allOf:
            - type: integer
              format: int32
        Description:
          title: App description
          type: string
        Uri:
          title: App redirect uri
          type: string
    AppRedirectUriResponse:
      title: New redirectUri creation response
      type: object
      properties:
        Data:
          title: The app data
          allOf:
            - $ref: '#/components/schemas/AppRedirectDto'
        FoundAndUpdated:
          title: Was the redirect uri found and was some properties updated
          type: boolean
    AppResourceDto:
      title: App resource
      type: object
      properties:
        AppKey:
          title: Unique app key - exposed to end users
          type: string
        Branding:
          title: Branding info
          type: array
          items:
            $ref: '#/components/schemas/BrandingDto'
        CreatedBy:
          title: Created by user hash key and name
          allOf:
            - $ref: '#/components/schemas/UserDto'
        Description:
          title: Description
          type: string
        Endpoints:
          title: Endpoints
          allOf:
            - $ref: '#/components/schemas/EndpointDto'
        Flow:
          title: SSO Authentication flow
          type: string
        IsActive:
          title: Is app active
          allOf:
            - type: boolean
        IsTradingEnabled:
          title: Derived field from 'OnlineAuthzLevels' and 'OfflineAuthzLevels'
          type: boolean
        Name:
          title: The name of the app
          type: string
        RedirectUris:
          title: Redirect uris
          type: array
          items:
            $ref: '#/components/schemas/AppRedirectDto'
        Secrets:
          title: Secrets
          type: array
          items:
            $ref: '#/components/schemas/AppSecretDto'
        Status:
          title: 'App status, OK or Pending'
          allOf:
            - $ref: '#/components/schemas/AppStatus'
    AppSecretDto:
      title: App secret data transfer object
      type: object
      properties:
        Secret:
          title: Add secret
          type: string
        SecretId:
          title: Add secret id
          type: integer
          format: int32
        ValidFrom:
          title: Add valid date from
          type: string
        ValidUntil:
          title: Add valid date until
          type: string
    AppSecretDtoListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/AppSecretDto'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
    AppStatus:
      title: Enum class representing OAuth app status
      enum:
        - Approved
        - PendingUserApprovalCheck
        - Rejected
        - Requestable
        - Requested
      type: string
      x-enum-descriptions:
        Approved: Active status
        PendingUserApprovalCheck: 'Inactive status, pending user approval status check'
        Requestable: 'Inactive status, access requestable'
        Requested: 'Inactive status, access request submitted'
        Rejected: 'Inactive status, access request rejected'
    AppUpdateRequest:
      title: Update app request
      type: object
      properties:
        Description:
          title: App description
          type: string
        Name:
          title: App name
          pattern: '[a-zA-Z0-9\@\-\]\[\''\!\ ]+$'
          type: string
    BrandingDto:
      title: Branding details
      type: object
      properties:
        Description:
          title: Service Provider Description
          type: string
        Id:
          title: Id
          type: integer
          format: int32
        Name:
          title: Service Provider Name
          type: string
    EndpointDto:
      title: Represents endpoints associated with OAuth application
      type: object
      properties:
        AuthorizationEndpoint:
          title: 'SSO auth endpoint, e.g. https://idp.blue.sso.sys.dom/authorize'
          type: string
        TokenEndpoint:
          title: 'SSO token endpoint, e.g. https://idp.blue.sso.sys.dom/token'
          type: string
    ModelStateDictionary:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    RedirectUriUpdateRequest:
      title: The request to update redirect uri
      type: object
      properties:
        BrandingId:
          title: Branding id
          allOf:
            - type: integer
              format: int32
        Description:
          title: Description is mapped to Label field
          type: string
        Uri:
          title: Redirect uri
          type: string
    SecretCreationRequest:
      title: Create secret contract
      required:
        - ValidFrom
        - ValidUntil
      type: object
      properties:
        ValidFrom:
          title: Secret valid from date
          type: string
        ValidUntil:
          title: Secret valid until date
          type: string
    SecretUpdateRequest:
      title: 'Request to update app secret, ValidFrom or ValidUntil is required.'
      type: object
      properties:
        Regenerate:
          title: Regenerate secret or not
          type: boolean
        ValidFrom:
          title: Secret valid from date
          type: string
        ValidUntil:
          title: Secret valid until date
          type: string
    StringBooleanKeyValuePair:
      type: object
      properties:
        Key:
          type: string
        Value:
          type: boolean
    UserDto:
      title: The user data transfer object
      type: object
      properties:
        Name:
          title: Name
          type: string
        UserKey:
          title: User key
          type: string
  responses:
    BadRequest:
      description: One or more of the provided parameters are invalid.
      content:
        application/json:
          schema:
            required:
              - ErrorCode
              - Message
            type: object
            properties:
              ErrorCode:
                enum:
                  - InvalidRequest
                type: string
                x-enum-descriptions:
                  InvalidRequest: Default error code returned when it cannot be determined which part of the request is malformed.
              Message:
                type: string
              ModelState:
                $ref: '#/components/schemas/ModelStateDictionary'
    ServiceUnavailable:
      description: Service Unavailable.
    TooManyRequests:
      description: The request was rejected due to rate limit being exceeded.
    Unauthorized:
      description: Indicates that the request was rejected because the 'Authorization' header was missing in the request or contained an invalid security token.
  securitySchemes:
    OpenApiJWTSecurityScheme:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OpenApiOAuthSecurityScheme:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://live.logonvalidation.net/authorize
          tokenUrl: https://live.logonvalidation.net/token
          scopes: { }
tags:
  - name: Admin
    description: Provides OAuth app related endpoints
  - name: Apps
    description: Provides OAuth app secrets related endpoints
  - name: Disclaimers
    description: "Disclaimer controller\r\n            Introducing the set of endpoints only to serve the purpose of display disclaimer before requesting a live application\r\n            Endpoints will be deprecated after disclaimer related endpoints in value add service become externally available"
  - name: Feature Flags
    description: Featureflag controller
  - name: Samples
    description: Provides endpoints for Github Code Samples