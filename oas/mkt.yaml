openapi: 3.0.1
info:
  title: Services.MarketOverview
  description: The MarketOverview service group provides end points for getting and subscribing to market movers such as winners and losers on an exchange.
  version: 1.2.201+4f801675c5
  x-framework-version: 24.0.21+826409a78a
  x-machine: DEVOAWEB10-DK1
servers:
  - url: https://blue.openapi.sys.dom/openapi
paths:
  /mkt/diagnostics/users:
    get:
      description: Get information about unique users served by the publishers and other performance related information.
      operationId: mkt_users
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  /mkt/diagnostics/subscriptions:
    get:
      description: "Gets information about subscriptions in the publishers.\r\n\r\nIf no filter is specified all subscriptions from all publishers are returned."
      operationId: mkt_subscriptions
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
        - name: ApplicationId
          in: query
          description: Restricts the subscriptions to an application if specified.
          schema:
            title: Restricts the subscriptions to an application if specified.
            minimum: 1
            type: integer
            format: int32
            x-type-name: ApplicationId
          example: "8637"
        - name: ContextId
          in: query
          description: Restricts the subscriptions to a streaming session if specified along with a session id.
          schema:
            title: Restricts the subscriptions to a streaming session if specified along with a session id.
            type: string
          example: "2c49a334-a95b-443f-a0be-8e0d17499fa4"
        - name: Publisher
          in: query
          description: Restricts the subscriptions to a publisher if specified.
          schema:
            title: Restricts the subscriptions to a publisher if specified.
            type: string
          example: "2c49a334-a95b-443f-a0be-8e0d17499fa4"
        - name: SessionId
          in: query
          description: Restricts the subscriptions to a session if specified.
          schema:
            title: Restricts the subscriptions to a session if specified.
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            x-type-name: SessionId
          example: "d4c53a63-5ed3-4961-af2b-d906b3195f2c"
        - name: UserId
          in: query
          description: Restricts the subscriptions to a MITS user if specified.
          schema:
            title: Restricts the subscriptions to a MITS user if specified.
            allOf:
              - $ref: '#/components/schemas/UserIdNullable'
          example: 733765616
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  /mkt/diagnostics/publishers:
    get:
      description: Returns the list of publisher names.
      operationId: mkt_publishers
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  /mkt/v2/MarketData/Analyst:
    get:
      tags:
        - MarketData
      summary: Gets Analyst Grid
      description: Returns Analyst Grid.
      operationId: MarketDataV2GetAnalystGridAsync
      parameters:
        - name: $skiptoken
          in: query
          schema:
            type: string
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: InstrumentFilters
          in: query
          description: InstrumentFilters
          schema:
            title: InstrumentFilters
            type: array
            items:
              $ref: '#/components/schemas/AssetTypeFilter'
          example: [
  {
    "AssetType": "FxSpot",
    "Uic": 22181
  }
]
        - name: Instruments
          in: query
          description: "Instrument Filter. This needs to be there for the model binding to allow the query notation and model\r\n                binding/parsing."
          schema:
            title: "Instrument Filter. This needs to be there for the model binding to allow the query notation and model\r\n                binding/parsing."
            type: string
          example: "2c49a334-a95b-443f-a0be-8e0d17499fa4"
        - name: KeywordFilters
          in: query
          description: Keyword filters
          schema:
            title: Keyword filters
            type: array
            items:
              $ref: '#/components/schemas/KeywordFilter'
          example: [
  {
    "Keyword": "Keyworda7339f25-35e4-4b41-8e2c-96c0d56cc834",
    "Values": [
      "4ea206ee-e6a3-4368-a7c7-db9a5db498a6"
    ]
  }
]
        - name: Size
          in: query
          description: Gets or sets the size of the search result.
          schema:
            title: Gets or sets the size of the search result.
            type: integer
            format: int32
          example: 858
        - name: Uics
          in: query
          description: Uics
          schema:
            title: Uics
            type: array
            items:
              type: integer
              format: int32
          example: [
  224
]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalystGrid'
              example: {
  "AnalystAction": {
    "Key": "maintained",
    "Value": "maintained"
  },
  "AnalystInfo": {
    "FirmName": "Shawn Harrison",
    "GoodRecommendations": 20,
    "Id": "c6def9d68558a7b14e09de7c8c5086db9a216eae",
    "Name": "Chad Bennett",
    "NumberOfStars": 4.5,
    "OverallAverageReturn": 15.3,
    "OverallSuccessRate": 0.606,
    "PictureUrl": "2208_JGCECGHDDB_tsqr.jpg",
    "Rank": 1575,
    "TotalNumberOfRankedAnalysts": 5144,
    "TotalRecommendations": 33
  },
  "AverageReturn": 17.0,
  "Consensus": {
    "Key": "Buy",
    "Value": "Buy"
  },
  "GoodRecommendations": 18,
  "Id": 1,
  "InstrumentInfo": {
    "AssetType": "CfdOnStock",
    "CountryCode": "US",
    "Description": "Apple Inc.",
    "ExchangeId": "NASDAQ",
    "Format": {
      "Decimals": 2
    },
    "Instrument": "AAPL:xnas",
    "Uic": 211
  },
  "RecommendationArticleTitle": "Apple (AAPL) March quarter guidance expected to be soft, says Canaccord",
  "RecommendationDate": "2022-04-07",
  "RecommendationSite": "TheFly",
  "RecommendationUrl": "http://www.streetinsider.com/analyst+eps+view/apple+%28aapl%29+neutral+rating+maintained+at+longbow+research%2c+despite+forecast+of+10-15%25+decline+in+fy19+iphone+production/15019714.html?si_client=tipranks-15019714-27df0bbf37",
  "SuccessRate": 0.783,
  "TargetPrice": 43.0,
  "TotalRecommendations": 35
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - AnalystGridNotFound
                      - AnalystGridNotServedForInstrumentType
                      - NoAccessToMarketDataSecurityGroup
                    type: string
                    x-enum-descriptions:
                      AnalystGridNotFound: Analyst Grid Not Found
                      AnalystGridNotServedForInstrumentType: Analyst Grid data is served only for Stocks
                      NoAccessToMarketDataSecurityGroup: User has no access to market data security group
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - AnalystGridTooManyEntriesRequested
                      - InvalidRequest
                      - NoSearchCriteriaProvided
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: Invalid request.
                      AnalystGridTooManyEntriesRequested: Too many entries requested in Top argument. Max allowed is 100.
                      NoSearchCriteriaProvided: No Search Criteria Provided
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v3/MarketData/{AssetType}/{Uic}':
    get:
      tags:
        - MarketData
      summary: Get market data information about an instrument
      description: Returns market data information for an instrument.
      operationId: MarketDataV3GetInstrumentMarketData
      parameters:
        - name: AssetType
          in: path
          description: Asset Type
          required: true
          schema:
            $ref: '#/components/schemas/AssetType'
        - name: FieldSets
          in: query
          description: Details about which field sets are requested
          schema:
            title: Details about which field sets are requested
            type: array
            items:
              $ref: '#/components/schemas/MarketDataFieldSet'
          example: [
  "FinancialsSemiAnnually"
]
        - name: Uic
          in: path
          description: Uic for a given instrument
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketDataResponse'
              example: {
  "AnalystConsensus": {
    "Buy": 4181,
    "Consensus": {
      "Key": "4",
      "Value": "FactSheet"
    },
    "Hold": 21453,
    "ImpliedReturn": 46100.771730056156,
    "ImpliedReturnPct": -5774.2641276170734,
    "Overweight": 17150,
    "Rating": 1032270572.2530335,
    "Sell": 3177,
    "TargetPrice": -28526.642293072691,
    "Underweight": 32304
  },
  "AssetType": "CompanyWarrant",
  "CountryCode": "CountryCode3e321637-e40f-42c2-91b5-8d5682164c15",
  "CurrencyCode": "CurrencyCode8121543c-90e6-4d5f-b09b-f99b8eee023c",
  "Description": "Description5f20338a-bbb1-490c-b9b9-863642178b8e",
  "ExchangeId": "ExchangeId8410a39a-b761-4109-8c12-34d1ab1a906a",
  "Financials": [
    {
      "BalanceSheets": [
        {
          "Key": "Earnings Per Share",
          "Value": 6.45
        }
      ],
      "Incomes": [
        {
          "Key": "Earnings Per Share",
          "Value": 6.45
        }
      ],
      "IsEstimates": false,
      "KeyNumbers": [
        {
          "Key": "Earnings Per Share",
          "Value": 6.45
        }
      ],
      "ReportingPeriod": "2023-04-18",
      "StatementType": "StatementType0cbe4bb6-1bc6-43e2-9f70-b0d2a77fb5f3"
    }
  ],
  "Format": {
    "Decimals": 7689
  },
  "GeneralInformation": {
    "StockInformation": {
      "AboutCompany": "AboutCompanyc8e10003-32bf-4c29-8034-8e12f233d4ce",
      "Industry": {
        "Key": "4",
        "Value": "FactSheet"
      },
      "MarketCap": 2.7852688753227552E+17,
      "MarketCapCurrencyCode": "MarketCapCurrencyCode139f13be-b1ac-4bb4-bf57-772b15808753",
      "OneYearReturnPct": 1515.37816927206,
      "Sector": {
        "Key": "4",
        "Value": "FactSheet"
      },
      "ThreeYearsReturnPct": 5208262.0908634691,
      "YtdReturnPct": 5.1876246765270126
    }
  },
  "Instrument": "Instrumentde814590-6813-4233-92a3-5dfb7f3eaf09",
  "KeyStats": [
    {
      "Key": "Keye91c42a5-3fff-4cd3-99a8-f413e8348aa9",
      "Value": 59653495.910120137
    }
  ],
  "ListedCurrency": "ListedCurrencya364b4af-37e1-46a5-b06e-d3af1cfd7858",
  "TargetPriceCurrency": "TargetPriceCurrency3f529845-3a45-4de7-9b9a-cdf4e6a668ef",
  "Uic": 32465
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentNotFound
                      - MarketDataNotFound
                      - MarketDataNotServedForInstrumentType
                      - NoAccessToMarketDataSecurityGroup
                    type: string
                    x-enum-descriptions:
                      MarketDataNotServedForInstrumentType: 'Market data are served only for Stocks, Bonds and all Mutual Funds'
                      MarketDataNotFound: Market data  not found
                      InstrumentNotFound: Instrument not found or user is missing access to the instrument.
                      NoAccessToMarketDataSecurityGroup: User has no access to market data security group
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - MarketDataError
                      - NoAccessToInstrument
                    type: string
                    x-enum-descriptions:
                      MarketDataError: Error occured in processing market data
                      NoAccessToInstrument: User has no trade access to the instrument.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/kfs/{Uic}/MutualFund':
    get:
      tags:
        - KeyInfoDocument
      summary: Get KFS document for mutual funds
      description: To get KFS in pdf format for given uic (applicable only for Mutual Funds)
      operationId: KeyInfoDocV1GetKfsDocument
      parameters:
        - name: FileName
          in: query
          schema:
            type: string
        - name: Uic
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
            x-type-name: Uic
      responses:
        '200':
          description: OK
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotSupportedAcceptHeader
                    type: string
                    x-enum-descriptions:
                      NotSupportedAcceptHeader: The end point only supports 'application/pdf' format.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - MutualFundDocumentNotFound
                    type: string
                    x-enum-descriptions:
                      MutualFundDocumentNotFound: 'MutualFund document not found '
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentNotFound
                      - NoAccessToInstrument
                    type: string
                    x-enum-descriptions:
                      InstrumentNotFound: Instrument not found or user is missing access to the instrument.
                      NoAccessToInstrument: User has no trade access to the instrument.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/phs/{Uic}/MutualFund':
    get:
      tags:
        - KeyInfoDocument
      summary: Get PHS document for mutual funds
      description: To get PHS in pdf format for given uic (applicable only for Mutual Funds)
      operationId: KeyInfoDocV1GetPhsDocument
      parameters:
        - name: FileName
          in: query
          schema:
            type: string
        - name: Uic
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
            x-type-name: Uic
      responses:
        '200':
          description: OK
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotSupportedAcceptHeader
                    type: string
                    x-enum-descriptions:
                      NotSupportedAcceptHeader: The end point only supports 'application/pdf' format.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - MutualFundDocumentNotFound
                    type: string
                    x-enum-descriptions:
                      MutualFundDocumentNotFound: 'MutualFund document not found '
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentNotFound
                      - NoAccessToInstrument
                    type: string
                    x-enum-descriptions:
                      InstrumentNotFound: Instrument not found or user is missing access to the instrument.
                      NoAccessToInstrument: User has no trade access to the instrument.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/prospectus/{Uic}/MutualFund':
    get:
      tags:
        - KeyInfoDocument
      summary: Get Prospectus document for mutual funds
      description: To get Prospectus in pdf format for given uic (applicable only for Mutual Funds)
      operationId: KeyInfoDocV1GetProspectus
      parameters:
        - name: FileName
          in: query
          schema:
            type: string
        - name: Uic
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
            x-type-name: Uic
      responses:
        '200':
          description: OK
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotSupportedAcceptHeader
                    type: string
                    x-enum-descriptions:
                      NotSupportedAcceptHeader: The end point only supports 'application/pdf' format.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - MutualFundDocumentNotFound
                    type: string
                    x-enum-descriptions:
                      MutualFundDocumentNotFound: 'MutualFund document not found '
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentNotFound
                      - NoAccessToInstrument
                    type: string
                    x-enum-descriptions:
                      InstrumentNotFound: Instrument not found or user is missing access to the instrument.
                      NoAccessToInstrument: User has no trade access to the instrument.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/FactSheet/{Uic}/MutualFund':
    get:
      tags:
        - KeyInfoDocument
      description: To get FactSheet in pdf format for given uic (applicable only for Managed/Mutual Funds)
      operationId: KeyInfoDocV1GetFactSheet
      parameters:
        - name: FileName
          in: query
          schema:
            type: string
        - name: Uic
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
            x-type-name: Uic
      responses:
        '200':
          description: OK
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotSupportedAcceptHeader
                    type: string
                    x-enum-descriptions:
                      NotSupportedAcceptHeader: The end point only supports 'application/pdf' format.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - MutualFundDocumentNotFound
                    type: string
                    x-enum-descriptions:
                      MutualFundDocumentNotFound: 'MutualFund document not found '
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentNotFound
                      - NoAccessToInstrument
                    type: string
                    x-enum-descriptions:
                      InstrumentNotFound: Instrument not found or user is missing access to the instrument.
                      NoAccessToInstrument: User has no trade access to the instrument.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/commercialmemorandum/{Uic}/MutualFund':
    get:
      tags:
        - KeyInfoDocument
      description: To get Commercial Memorandum in pdf format for given uic (applicable only for Managed/Mutual Funds)
      operationId: KeyInfoDocV1GetCommercialMemorandum
      parameters:
        - name: FileName
          in: query
          schema:
            type: string
        - name: Uic
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
            x-type-name: Uic
      responses:
        '200':
          description: OK
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotSupportedAcceptHeader
                    type: string
                    x-enum-descriptions:
                      NotSupportedAcceptHeader: The end point only supports 'application/pdf' format.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - MutualFundDocumentNotFound
                    type: string
                    x-enum-descriptions:
                      MutualFundDocumentNotFound: 'MutualFund document not found '
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentNotFound
                      - NoAccessToInstrument
                    type: string
                    x-enum-descriptions:
                      InstrumentNotFound: Instrument not found or user is missing access to the instrument.
                      NoAccessToInstrument: User has no trade access to the instrument.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/financialstatement/{Uic}/MutualFund':
    get:
      tags:
        - KeyInfoDocument
      summary: Get Financial Statement for mutual funds
      description: To get Financial Statement in pdf format for given uic (applicable only for Mutual Funds)
      operationId: KeyInfoDocV1GetFinancialStatement
      parameters:
        - name: FileName
          in: query
          description: Filename
          schema:
            type: string
        - name: FinancialReportType
          in: query
          description: Financial report type
          schema:
            $ref: '#/components/schemas/FinancialReportTypeNullable'
        - name: Uic
          in: path
          description: Uic
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
            x-type-name: Uic
      responses:
        '200':
          description: OK
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotSupportedAcceptHeader
                    type: string
                    x-enum-descriptions:
                      NotSupportedAcceptHeader: The end point only supports 'application/pdf' format.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - MutualFundDocumentNotFound
                    type: string
                    x-enum-descriptions:
                      MutualFundDocumentNotFound: 'MutualFund document not found '
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentNotFound
                      - NoAccessToInstrument
                    type: string
                    x-enum-descriptions:
                      InstrumentNotFound: Instrument not found or user is missing access to the instrument.
                      NoAccessToInstrument: User has no trade access to the instrument.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/keyinformationdocument/{Uic}/{AssetType}':
    get:
      tags:
        - KeyInfoDocument
      summary: Get key Information Document
      description: To get key Information Document in pdf format for given uic
      operationId: KeyInfoDocV1GetKeyInformationDocument
      parameters:
        - name: AssetType
          in: path
          required: true
          schema:
            $ref: '#/components/schemas/AssetType'
        - name: FileName
          in: query
          schema:
            type: string
        - name: Uic
          in: path
          required: true
          schema:
            minimum: 1
            type: integer
            format: int32
            x-type-name: Uic
      responses:
        '200':
          description: OK
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotSupportedAcceptHeader
                    type: string
                    x-enum-descriptions:
                      NotSupportedAcceptHeader: The end point only supports 'application/pdf' format.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - KeyInfoDocNotServedForInstrumentType
                      - KeyInformationDocumentNotFound
                    type: string
                    x-enum-descriptions:
                      KeyInfoDocNotServedForInstrumentType: Key Information Documents are served only for a select few stocks and all Mutual Funds
                      KeyInformationDocumentNotFound: 'Key Information Document not found '
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentNotFound
                      - NoAccessToInstrument
                    type: string
                    x-enum-descriptions:
                      InstrumentNotFound: Instrument not found or user is missing access to the instrument.
                      NoAccessToInstrument: User has no trade access to the instrument.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - Forbidden
                    type: string
                    x-enum-descriptions:
                      Forbidden: The user does not have necessary permissions for the resource
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v4/MarketData/{AssetType}/{Uic}/allocations':
    get:
      tags:
        - MarketData
      summary: Get market allocation data information about an instrument
      description: Returns market allocation data information for an instrument.
      operationId: MarketDataV4GetInstrumentMarketAllocationData
      parameters:
        - name: AssetType
          in: path
          description: Asset Type
          required: true
          schema:
            $ref: '#/components/schemas/AssetType'
        - name: Date
          in: query
          description: Date for which data to be returned
          schema:
            type: string
            format: date
            x-type-name: Date
        - name: FieldGroups
          in: query
          description: Details about which field groups is requested
          schema:
            title: Details about which field groups is requested
            type: array
            items:
              $ref: '#/components/schemas/MarketDataFieldGroup'
          example: [
  "GeneralInfo"
]
        - name: Uic
          in: path
          description: Uic for a given instrument
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllocationDataResponse'
              example: {
  "AssetAllocations": [
    {
      "Key": {
        "Key": "4",
        "Value": "FactSheet"
      },
      "Pct": -395678617.1801123
    }
  ],
  "AssetType": "CertificateTracker",
  "CountryWeightAllocations": [
    {
      "Country": {
        "Key": "4",
        "Value": "FactSheet"
      },
      "Pct": 38.995424526913943
    }
  ],
  "DisplayHint": "Etf",
  "SectorAllocations": [
    {
      "Key": {
        "Key": "SectorKey",
        "Value": "SectorKey"
      },
      "Pct": 7.0
    }
  ],
  "Uic": 31012
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentNotFound
                      - MarketAllocationDataNotFound
                      - NoAccessToMarketDataSecurityGroup
                    type: string
                    x-enum-descriptions:
                      MarketAllocationDataNotFound: Market allocation data  not found
                      InstrumentNotFound: Instrument not found or user is missing access to the instrument.
                      NoAccessToMarketDataSecurityGroup: User has no access to market data security group
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NoAccessToInstrument
                    type: string
                    x-enum-descriptions:
                      NoAccessToInstrument: User has no trade access to the instrument.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /mkt/online:
    post:
      description: Attempts to take the application online
      operationId: mkt_online
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-application-visibility: saxo-only
      x-network-visibility: internal
  /mkt/offline:
    post:
      description: Attempts to take the application offline
      operationId: mkt_offline
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      requestBody:
        content:
          application/json:
            schema:
              type: string
            example: "00:00:00.0026866"
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-application-visibility: saxo-only
      x-network-visibility: internal
  /mkt/v2/instruments/documents:
    get:
      tags:
        - Instrument Document
      summary: Filters data related to instrument documents
      description: This endpoint is used to filter instrument documents based on the search parameters provided.
      operationId: InstrumentDocumentV2GetDocumentsForAllInstruments
      parameters:
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            maximum: 100
            minimum: 0
            type: integer
            format: int32
            default: 50
        - name: AssetTypes
          in: query
          description: Limits the return information for the mentioned asset types
          schema:
            title: Limits the return information for the mentioned asset types
            type: array
            items:
              $ref: '#/components/schemas/AssetType'
          example: [
  "Etf"
]
        - name: BaseContractIds
          in: query
          description: Limits the return information for the mentioned base contract ids
          schema:
            title: Limits the return information for the mentioned base contract ids
            type: array
            items:
              type: integer
              format: int32
          example: [
  224
]
        - name: DocumentRelationIds
          in: query
          description: Limits the return information for the mentioned document relation ids
          schema:
            title: Limits the return information for the mentioned document relation ids
            type: array
            items:
              type: integer
              format: int32
          example: [
  224
]
        - name: DocumentTypes
          in: query
          description: Limits the return information for the mentioned document types
          schema:
            title: Limits the return information for the mentioned document types
            type: array
            items:
              $ref: '#/components/schemas/DocumentType'
          example: [
  "SimplifiedProspectus"
]
        - name: ExchangeCodes
          in: query
          description: Limits the return information for the mentioned exchange codes
          schema:
            title: Limits the return information for the mentioned exchange codes
            type: array
            items:
              type: string
          example: [
  "00530d08-a1eb-4104-b478-f4a0fc532e6b"
]
        - name: FieldGroups
          in: query
          description: Includes the additional information required like display and format.
          schema:
            $ref: '#/components/schemas/FieldGroupsNullable'
        - name: FromDateTime
          in: query
          description: Limits the return information before the mentioned datetime
          schema:
            title: Limits the return information before the mentioned datetime
            type: string
            format: date-time
            x-type-name: UtcDateTime
          example: "2024-03-07T10:45:59.34858Z"
        - name: LanguageCodes
          in: query
          description: Limits the return information for the mentioned language codes
          schema:
            title: Limits the return information for the mentioned language codes
            type: array
            items:
              type: string
          example: [
  "00530d08-a1eb-4104-b478-f4a0fc532e6b"
]
        - name: Markets
          in: query
          description: Limits the return information for the mentioned makkets
          schema:
            title: Limits the return information for the mentioned makkets
            type: array
            items:
              type: string
          example: [
  "00530d08-a1eb-4104-b478-f4a0fc532e6b"
]
        - name: OptionRootIds
          in: query
          description: Limits the return information for the mentioned option root ids
          schema:
            title: Limits the return information for the mentioned option root ids
            type: array
            items:
              type: integer
              format: int32
          example: [
  224
]
        - name: OwnerIds
          in: query
          description: Limits the return information for the mentioned owner ids
          schema:
            title: Limits the return information for the mentioned owner ids
            type: array
            items:
              type: integer
              format: int32
          example: [
  224
]
        - name: Providers
          in: query
          description: Limits the return information for the mentioned providers
          schema:
            title: Limits the return information for the mentioned providers
            type: array
            items:
              $ref: '#/components/schemas/Provider'
          example: [
  "AllFunds"
]
        - name: ToDateTime
          in: query
          description: Limits the return information after the mentioned datetime
          schema:
            title: Limits the return information after the mentioned datetime
            type: string
            format: date-time
            x-type-name: UtcDateTime
          example: "2024-03-07T10:45:59.34858Z"
        - name: Uics
          in: query
          description: Limits the return information for the mentioned uics
          schema:
            title: Limits the return information for the mentioned uics
            type: array
            items:
              type: integer
              format: int32
          example: [
  224
]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentDocumentResponseListResult'
              example: {
  "__next": "/openapi/....../?$top=1&$skip=1",
  "Data": [
    {
      "AssetType": "FxSpot",
      "BaseContractId": 4095508,
      "DocumentRelationId": 19585,
      "DocumentType": "KIIDs",
      "ExchangeCode": "EUREX",
      "LanguageCode": "en",
      "LastUpdated": "2020-04-20T00:00:00Z",
      "Market": "DK",
      "OptionRootId": 13512200,
      "OwnerId": 565,
      "OwnerName": "TestOwner",
      "Provider": "MorningStar",
      "Uic": 21
    },
    {
      "AssetType": "FxSpot",
      "BaseContractId": 4095508,
      "DocumentRelationId": 19586,
      "DocumentType": "PHS",
      "ExchangeCode": "NYSE",
      "LanguageCode": "fr",
      "LastUpdated": "2020-04-25T00:00:00Z",
      "Market": "0",
      "OptionRootId": 13512200,
      "OwnerId": 4215,
      "OwnerName": "TestOwner1",
      "Provider": "Saxo",
      "Uic": 9104
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                      - TooManyRecordsRequested
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: The request is invalid!
                      TooManyRecordsRequested: Your filter criteria results exceed upper limit of 20000. Refine your search to perform export operation.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - DocumentsForAllInstrumentsNotFound
                      - InstrumentDocumentCsvNotFound
                    type: string
                    x-enum-descriptions:
                      DocumentsForAllInstrumentsNotFound: Documents related to instruments not found
                      InstrumentDocumentCsvNotFound: Instrument document csv not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - Forbidden
                    type: string
                    x-enum-descriptions:
                      Forbidden: The user does not have necessary permissions for the resource
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    post:
      tags:
        - Instrument Document
      summary: Posts a new instrument document
      description: This endpoint is used to upload a new instrument document.
      operationId: InstrumentDocumentV2PostInstrumentDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostInstrumentDocumentRequest'
            example: {
  "AssetType": "FxSpot",
  "BaseContractId": 4095508,
  "Document": "sgdcgdchgdhdfvfh",
  "DocumentName": "abc.pdf",
  "DocumentType": "KIIDs",
  "Exchange": "EUREX",
  "LanguageCode": "en",
  "Market": "DK",
  "OptionRootId": 13512200,
  "OwnerId": 566,
  "Provider": "Saxo",
  "Uic": 21
}
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: The request is invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - Forbidden
                    type: string
                    x-enum-descriptions:
                      Forbidden: The user does not have necessary permissions for the resource
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentDocumentRuleAlreadyExist
                    type: string
                    x-enum-descriptions:
                      InstrumentDocumentRuleAlreadyExist: Instrument document rule already exist.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v2/instruments/{Uic}/{AssetType}/documents/pdf':
    get:
      tags:
        - Instrument Document
      summary: Gets document related to instrument.
      description: 'This endpoint is used to fetch pdf document for the specified AssetType, Uic, DocumentType and LanguageCode.'
      operationId: InstrumentDocumentV2GetDocumentByDocumentTypeAndLanguageCode
      parameters:
        - name: AssetType
          in: path
          description: AssetType of the instrument.
          required: true
          schema:
            $ref: '#/components/schemas/AssetType'
        - name: DocumentType
          in: query
          description: DocumentType for which to request information.
          required: true
          schema:
            $ref: '#/components/schemas/DocumentType'
        - name: LanguageCode
          in: query
          description: LanguageCode for which to request information.
          required: true
          schema:
            type: string
        - name: Uic
          in: path
          description: Uic of the instrument.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentDocumentNotFound
                      - InstrumentInformationDocumentNotFound
                    type: string
                    x-enum-descriptions:
                      InstrumentInformationDocumentNotFound: 'Instrument Document not found '
                      InstrumentDocumentNotFound: 'Instrument Document not found '
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentDocumentDetailsNotFound
                      - InstrumentNotFound
                      - InvalidRequest
                      - NoAccessToInstrument
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: Invalid request.
                      InstrumentNotFound: Instrument not found or user is missing access to the instrument.
                      NoAccessToInstrument: User has no trade access to the instrument.
                      InstrumentDocumentDetailsNotFound: Instrument Document details not found
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - Forbidden
                    type: string
                    x-enum-descriptions:
                      Forbidden: The user does not have necessary permissions for the resource
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/mkt/v2/instruments/{Uic}/{AssetType}/documents':
    get:
      tags:
        - Instrument Document
      summary: Get list of preferred instrument document information.
      description: 'This endpoint is used to fetch a list of instrument document information for the specified AssetType,Uic,DocumentTypes and LanguageCodes.'
      operationId: InstrumentDocumentV2GetInstrumentDocumentInformationByLanguage
      parameters:
        - name: AssetType
          in: path
          description: AssetType of the instrument.
          required: true
          schema:
            $ref: '#/components/schemas/AssetType'
        - name: DocumentTypes
          in: query
          description: The list of document types for which to request information
          required: true
          schema:
            title: The list of document types for which to request information
            type: array
            items:
              $ref: '#/components/schemas/DocumentType'
          example: [
  "SimplifiedProspectus"
]
        - name: LanguageCodes
          in: query
          description: The list of language codes for which to request information.
          required: true
          schema:
            type: string
        - name: Uic
          in: path
          description: Uic of the instrument.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentDocumentDetailsListResult'
              example: {
  "Data": [
    {
      "DocumentDateTime": "2020-04-20T00:00:00Z",
      "DocumentRelationId": 1289,
      "DocumentType": "KIIDs",
      "LanguageCode": "en"
    },
    {
      "DocumentDateTime": "2019-09-20T00:00:00Z",
      "DocumentRelationId": 4028,
      "DocumentType": "PRIIPKIDs",
      "LanguageCode": "da"
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentNotFound
                      - NoAccessToInstrument
                    type: string
                    x-enum-descriptions:
                      InstrumentNotFound: Instrument not found or user is missing access to the instrument.
                      NoAccessToInstrument: User has no trade access to the instrument.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v2/instruments/{Uic}/{AssetType}/documents/recommended':
    get:
      tags:
        - Instrument Document
      summary: Gets list of recommended instrument document information.
      description: This endpoint is used to fetch a list of instrument document information for the specified input parameters.
      operationId: InstrumentDocumentV2GetRecommendedInstrumentDocumentInformation
      parameters:
        - name: AssetType
          in: path
          description: AssetType of the instrument.
          required: true
          schema:
            $ref: '#/components/schemas/AssetType'
        - name: ClientKey
          in: query
          description: Client Key for which information is requested.
          schema:
            title: Client Key for which information is requested.
            minLength: 1
            type: string
            x-network-visibility: internal
            x-type-name: ClientKey
          example: "d4ba721a-644f-4726-8e14-8eb6b115a8a5"
          x-network-visibility: internal
        - name: DocumentTypes
          in: query
          description: The list of document types for which to request information
          required: true
          schema:
            title: The list of document types for which to request information
            type: array
            items:
              $ref: '#/components/schemas/DocumentType'
          example: [
  "SimplifiedProspectus"
]
        - name: Uic
          in: path
          description: Uic of the instrument.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentDocumentDetailsListResult'
              example: {
  "Data": [
    {
      "DocumentDateTime": "2020-04-20T00:00:00Z",
      "DocumentRelationId": 1289,
      "DocumentType": "KIIDs",
      "LanguageCode": "en"
    },
    {
      "DocumentDateTime": "2019-09-20T00:00:00Z",
      "DocumentRelationId": 4028,
      "DocumentType": "PRIIPKIDs",
      "LanguageCode": "da"
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentNotFound
                      - NoAccessToInstrument
                    type: string
                    x-enum-descriptions:
                      InstrumentNotFound: Instrument not found or user is missing access to the instrument.
                      NoAccessToInstrument: User has no trade access to the instrument.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - Forbidden
                    type: string
                    x-enum-descriptions:
                      Forbidden: The user does not have necessary permissions for the resource
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /mkt/v1/instruments/documents/copy:
    post:
      tags:
        - Instrument Document
      summary: Copy instrument document for BaseContract/OptionRoot
      description: This endpoint will copy all documents for source basecontractid/optionrootid to target basecontractid/optionrootid for a particular asset(eg. Contractfutures) and documentType(eg. PriipKids)
      operationId: InstrumentDocumentV1CopyInstrumentDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyInstrumentDocumentRequest'
            example: {
  "AssetType": "Etn",
  "DocumentType": "KFS",
  "Exchange": "Exchange71a25aaa-4f74-47b3-a3ad-7548da94c73a",
  "FromBaseContractId": 10533,
  "FromOptionRootId": 1615,
  "ToBaseContractIds": [
    21235
  ],
  "ToOptionRootIds": [
    1863
  ]
}
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: The request is invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - Forbidden
                    type: string
                    x-enum-descriptions:
                      Forbidden: The user does not have necessary permissions for the resource
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentDocumentRuleAlreadyExist
                      - InstrumentDocumentRuleNotExist
                    type: string
                    x-enum-descriptions:
                      InstrumentDocumentRuleNotExist: Instrument document does not exist.
                      InstrumentDocumentRuleAlreadyExist: Instrument document rule already exist.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /mkt/v1/instruments/documents/lookupdata:
    get:
      tags:
        - Instrument Document
      summary: List of lookup data for documentTypes and providers
      description: "Returns a list of lookup data that can be used while fetching data for instruments document. \r\n            The resource serves as the starting point for an application/user who wants to know the different documentTypes and providers."
      operationId: InstrumentDocumentV1GetInstrumentDocumentLookupData
      parameters:
        - name: FieldGroups
          in: query
          description: Includes the information to search like Providers or DocumentTypes.
          schema:
            $ref: '#/components/schemas/SearchOptionType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentLookupDataListResult'
              example: {
  "Data": [
    {
      "OptionType": "DocumentTypes",
      "Values": [
        {
          "Key": "1",
          "Value": "KIIDs"
        },
        {
          "Key": "2",
          "Value": "PRIIP KIDs"
        },
        {
          "Key": "4",
          "Value": "FactSheet"
        },
        {
          "Key": "8",
          "Value": "FinancialStatement"
        },
        {
          "Key": "16",
          "Value": "CommercialMemorandum"
        },
        {
          "Key": "32",
          "Value": "Prospectus"
        },
        {
          "Key": "64",
          "Value": "PHS"
        },
        {
          "Key": "128",
          "Value": "KFS"
        },
        {
          "Key": "256",
          "Value": "FinancialStatementES"
        },
        {
          "Key": "512",
          "Value": "FinancialStatementNonES"
        }
      ]
    },
    {
      "OptionType": "Providers",
      "Values": [
        {
          "Key": "1",
          "Value": "Saxo"
        },
        {
          "Key": "2",
          "Value": "Exchange"
        },
        {
          "Key": "3",
          "Value": "MorningStar"
        },
        {
          "Key": "4",
          "Value": "AllFunds"
        }
      ]
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: The request is invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/instruments/documents/{DocumentRelationId}':
    put:
      tags:
        - Instrument Document
      summary: Update instrument document
      description: This endpoint is used to update an exisiting document and its name. It adds a new version of document in place of existing document in document repository.
      operationId: InstrumentDocumentV1UpdateInstrumentDocument
      parameters:
        - name: DocumentRelationId
          in: path
          description: Document relation id.
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInstrumentDocumentRequest'
            example: {
  "Document": "sgdcgdchgdhdfvfh",
  "DocumentName": "abc.pdf"
}
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentDocumentDetailsNotFound
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: The request is invalid!
                      InstrumentDocumentDetailsNotFound: Instrument Document details not found
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - Forbidden
                    type: string
                    x-enum-descriptions:
                      Forbidden: The user does not have necessary permissions for the resource
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    delete:
      tags:
        - Instrument Document
      summary: Delete document related to instrument based on document relation id.
      description: 'This endpoint will delete document related to instrument based on document relation id. Only documents having provider as Saxo , SaxoInternal or Exchange can be deleted.'
      operationId: InstrumentDocumentV1DeleteDocumentByDocumentRelationId
      parameters:
        - name: DocumentRelationId
          in: path
          description: Id of the document to be deleted.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: The request is invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - Forbidden
                    type: string
                    x-enum-descriptions:
                      Forbidden: The user does not have necessary permissions for the resource
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentInformationDocumentNotFound
                    type: string
                    x-enum-descriptions:
                      InstrumentInformationDocumentNotFound: 'Instrument Document not found '
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/instruments/documents/pdf/{DocumentRelationId}':
    get:
      tags:
        - Instrument Document
      description: Gets document related to instrument.
      operationId: InstrumentDocumentV1GetDocumentByDocumentRelationId
      parameters:
        - name: DocumentRelationId
          in: path
          description: Document relation id.
          required: true
          schema:
            type: integer
            format: int32
        - name: UtcDateTime
          in: query
          description: 'UTCDateTime, If timestamp is empty latest document will be returned.'
          schema:
            type: string
            format: date-time
            x-type-name: UtcDateTime
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentDocumentNotFound
                    type: string
                    x-enum-descriptions:
                      InstrumentDocumentNotFound: 'Instrument Document not found '
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentDocumentDetailsNotFound
                      - InstrumentNotFound
                      - InvalidRequest
                      - NoAccessToInstrument
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: Invalid request.
                      InstrumentDocumentDetailsNotFound: Instrument Document details not found
                      InstrumentNotFound: Instrument not found or user is missing access to the instrument.
                      NoAccessToInstrument: User has no trade access to the instrument.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /mkt/v1/instruments/documents:
    get:
      tags:
        - Instrument Document
      summary: Filters data related to instrument documents
      description: This endpoint is used to filter instrument documents based on the search parameters provided.
      operationId: InstrumentDocumentV1GetDocumentsForAllInstruments
      parameters:
        - name: $skip
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
        - name: $top
          in: query
          schema:
            maximum: 100
            minimum: 0
            type: integer
            format: int32
            default: 50
        - name: AssetTypes
          in: query
          description: Limits the return information for the mentioned asset types
          schema:
            title: Limits the return information for the mentioned asset types
            type: array
            items:
              $ref: '#/components/schemas/AssetType'
          example: [
  "Etf"
]
        - name: BaseContractIds
          in: query
          description: Limits the return information for the mentioned base contract ids
          schema:
            title: Limits the return information for the mentioned base contract ids
            type: array
            items:
              type: integer
              format: int32
          example: [
  224
]
        - name: DocumentRelationIds
          in: query
          description: Limits the return information for the mentioned document relation ids
          schema:
            title: Limits the return information for the mentioned document relation ids
            type: array
            items:
              type: integer
              format: int32
          example: [
  224
]
        - name: DocumentTypes
          in: query
          description: Limits the return information for the mentioned document types
          schema:
            title: Limits the return information for the mentioned document types
            type: array
            items:
              type: integer
              format: int32
          example: [
  224
]
        - name: ExchangeCodes
          in: query
          description: Limits the return information for the mentioned exchange codes
          schema:
            title: Limits the return information for the mentioned exchange codes
            type: array
            items:
              type: string
          example: [
  "00530d08-a1eb-4104-b478-f4a0fc532e6b"
]
        - name: FieldGroups
          in: query
          description: Includes the additional information required like display and format.
          schema:
            $ref: '#/components/schemas/FieldGroupsNullable'
        - name: FromDateTime
          in: query
          description: Limits the return information before the mentioned datetime
          schema:
            title: Limits the return information before the mentioned datetime
            type: string
            format: date-time
            x-type-name: UtcDateTime
          example: "2024-03-07T10:45:59.34858Z"
        - name: LanguageCodes
          in: query
          description: Limits the return information for the mentioned language codes
          schema:
            title: Limits the return information for the mentioned language codes
            type: array
            items:
              type: string
          example: [
  "00530d08-a1eb-4104-b478-f4a0fc532e6b"
]
        - name: Markets
          in: query
          description: Limits the return information for the mentioned makkets
          schema:
            title: Limits the return information for the mentioned makkets
            type: array
            items:
              type: string
          example: [
  "00530d08-a1eb-4104-b478-f4a0fc532e6b"
]
        - name: OptionRootIds
          in: query
          description: Limits the return information for the mentioned option root ids
          schema:
            title: Limits the return information for the mentioned option root ids
            type: array
            items:
              type: integer
              format: int32
          example: [
  224
]
        - name: OwnerIds
          in: query
          description: Limits the return information for the mentioned owner ids
          schema:
            title: Limits the return information for the mentioned owner ids
            type: array
            items:
              type: integer
              format: int32
          example: [
  224
]
        - name: Providers
          in: query
          description: Limits the return information for the mentioned providers
          schema:
            title: Limits the return information for the mentioned providers
            type: array
            items:
              type: integer
              format: int32
          example: [
  224
]
        - name: ToDateTime
          in: query
          description: Limits the return information after the mentioned datetime
          schema:
            title: Limits the return information after the mentioned datetime
            type: string
            format: date-time
            x-type-name: UtcDateTime
          example: "2024-03-07T10:45:59.34858Z"
        - name: Uics
          in: query
          description: Limits the return information for the mentioned uics
          schema:
            title: Limits the return information for the mentioned uics
            type: array
            items:
              type: integer
              format: int32
          example: [
  224
]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentDocumentSearchResponseListResult'
              example: {
  "__next": "/openapi/....../?$top=1&$skip=1",
  "Data": [
    {
      "AssetType": "FxSpot",
      "BaseContractId": 4095508,
      "DocumentRelationId": 19585,
      "DocumentType": {
        "Key": "1",
        "Value": "PRIIP KIDs"
      },
      "ExchangeCode": "EUREX",
      "LanguageCode": "en",
      "LastUpdated": "2020-04-20T00:00:00Z",
      "Market": "DK",
      "OptionRootId": 13512200,
      "OwnerId": 565,
      "OwnerName": "TestOwner",
      "Provider": {
        "Key": "3",
        "Value": "MorningStar"
      },
      "Uic": 21
    },
    {
      "AssetType": "FxSpot",
      "BaseContractId": 4095508,
      "DocumentRelationId": 19586,
      "DocumentType": {
        "Key": "64",
        "Value": "PHS"
      },
      "ExchangeCode": "NYSE",
      "LanguageCode": "fr",
      "LastUpdated": "2020-04-25T00:00:00Z",
      "Market": "0",
      "OptionRootId": 13512200,
      "OwnerId": 4215,
      "OwnerName": "TestOwner1",
      "Provider": {
        "Key": "1",
        "Value": "Saxo"
      },
      "Uic": 9104
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                      - TooManyRecordsRequested
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: The request is invalid!
                      TooManyRecordsRequested: Your filter criteria results exceed upper limit of 20000. Refine your search to perform export operation.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - DocumentsForAllInstrumentsNotFound
                      - InstrumentDocumentCsvNotFound
                    type: string
                    x-enum-descriptions:
                      DocumentsForAllInstrumentsNotFound: Documents related to instruments not found
                      InstrumentDocumentCsvNotFound: Instrument document csv not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - Forbidden
                    type: string
                    x-enum-descriptions:
                      Forbidden: The user does not have necessary permissions for the resource
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
    post:
      tags:
        - Instrument Document
      summary: Posts a new instrument document
      description: This endpoint is used to upload a new instrument document.
      operationId: InstrumentDocumentV1PostInstrumentDocument
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InsertInstrumentDocumentRequest'
            example: {
  "AssetType": "FxSpot",
  "BaseContractId": 4095508,
  "Document": "sgdcgdchgdhdfvfh",
  "DocumentName": "abc.pdf",
  "DocumentType": "2",
  "Exchange": "EUREX",
  "LanguageCode": "en",
  "Market": "DK",
  "OptionRootId": 13512200,
  "OwnerId": 566,
  "Provider": "3",
  "Uic": 21
}
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidRequest
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: The request is invalid!
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - Forbidden
                    type: string
                    x-enum-descriptions:
                      Forbidden: The user does not have necessary permissions for the resource
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentDocumentRuleAlreadyExist
                    type: string
                    x-enum-descriptions:
                      InstrumentDocumentRuleAlreadyExist: Instrument document rule already exist.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/instruments/{Uic}/{AssetType}/documents/pdf':
    get:
      tags:
        - Instrument Document
      summary: Gets document related to instrument.
      description: 'This endpoint is used to fetch pdf document for the specified AssetType, Uic, DocumentType and LanguageCode.'
      operationId: InstrumentDocumentV1GetDocumentByDocumentTypeAndLanguageCode
      parameters:
        - name: AssetType
          in: path
          description: AssetType of the instrument.
          required: true
          schema:
            $ref: '#/components/schemas/AssetType'
        - name: DocumentType
          in: query
          description: DocumentType for which to request information.
          required: true
          schema:
            $ref: '#/components/schemas/DocumentType'
        - name: LanguageCode
          in: query
          description: LanguageCode for which to request information.
          required: true
          schema:
            type: string
        - name: Uic
          in: path
          description: Uic of the instrument.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentDocumentNotFound
                      - InstrumentInformationDocumentNotFound
                    type: string
                    x-enum-descriptions:
                      InstrumentInformationDocumentNotFound: 'Instrument Document not found '
                      InstrumentDocumentNotFound: 'Instrument Document not found '
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentDocumentDetailsNotFound
                      - InstrumentNotFound
                      - InvalidRequest
                      - NoAccessToInstrument
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: Invalid request.
                      InstrumentNotFound: Instrument not found or user is missing access to the instrument.
                      NoAccessToInstrument: User has no trade access to the instrument.
                      InstrumentDocumentDetailsNotFound: Instrument Document details not found
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - Forbidden
                    type: string
                    x-enum-descriptions:
                      Forbidden: The user does not have necessary permissions for the resource
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/mkt/v1/instruments/{Uic}/{AssetType}/documents':
    get:
      tags:
        - Instrument Document
      summary: Get list of preferred instrument document information.
      description: 'This endpoint is used to fetch a list of instrument document information for the specified AssetType,Uic,DocumentTypes and LanguageCodes.'
      operationId: InstrumentDocumentV1GetInstrumentDocumentInformationByLanguage
      parameters:
        - name: AssetType
          in: path
          description: AssetType of the instrument.
          required: true
          schema:
            $ref: '#/components/schemas/AssetType'
        - name: DocumentType
          in: query
          description: The list of document types for which to request information.
          required: true
          schema:
            $ref: '#/components/schemas/DocumentTypes'
        - name: LanguageCode
          in: query
          description: The list of language codes for which to request information.
          required: true
          schema:
            type: string
        - name: Uic
          in: path
          description: Uic of the instrument.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentDocumentInformationResponse'
              example: {
  "DocumentDetails": [
    {
      "DocumentDateTime": "2020-04-20T00:00:00Z",
      "DocumentRelationId": 1289,
      "DocumentType": "KIIDs",
      "LanguageCode": "en"
    },
    {
      "DocumentDateTime": "2019-09-20T00:00:00Z",
      "DocumentRelationId": 4028,
      "DocumentType": "PRIIP KIDs",
      "LanguageCode": "da"
    }
  ]
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentInformationDocumentNotFound
                    type: string
                    x-enum-descriptions:
                      InstrumentInformationDocumentNotFound: 'Instrument Document not found '
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentNotFound
                      - NoAccessToInstrument
                    type: string
                    x-enum-descriptions:
                      InstrumentNotFound: Instrument not found or user is missing access to the instrument.
                      NoAccessToInstrument: User has no trade access to the instrument.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/instruments/{Uic}/{AssetType}/documents/recommended':
    get:
      tags:
        - Instrument Document
      summary: Gets list of recommended instrument document information.
      description: This endpoint is used to fetch a list of instrument document information for the specified input parameters.
      operationId: InstrumentDocumentV1GetRecommendedInstrumentDocumentInformation
      parameters:
        - name: AssetType
          in: path
          description: AssetType of the instrument.
          required: true
          schema:
            $ref: '#/components/schemas/AssetType'
        - name: ClientKey
          in: query
          description: Client Key for which information is requested.
          schema:
            title: Client Key for which information is requested.
            minLength: 1
            type: string
            x-network-visibility: internal
            x-type-name: ClientKey
          example: "d4ba721a-644f-4726-8e14-8eb6b115a8a5"
          x-network-visibility: internal
        - name: DocumentType
          in: query
          description: Document types for which to request information
          required: true
          schema:
            title: Document types for which to request information
            allOf:
              - $ref: '#/components/schemas/DocumentTypes'
          example: "KIIDs"
        - name: Uic
          in: path
          description: Uic of the instrument.
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InstrumentDocumentInformationResponse'
              example: {
  "DocumentDetails": [
    {
      "DocumentDateTime": "2020-04-20T00:00:00Z",
      "DocumentRelationId": 1289,
      "DocumentType": "KIIDs",
      "LanguageCode": "en"
    },
    {
      "DocumentDateTime": "2019-09-20T00:00:00Z",
      "DocumentRelationId": 4028,
      "DocumentType": "PRIIP KIDs",
      "LanguageCode": "da"
    }
  ]
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentInformationDocumentNotFound
                    type: string
                    x-enum-descriptions:
                      InstrumentInformationDocumentNotFound: 'Instrument Document not found '
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentNotFound
                      - NoAccessToInstrument
                    type: string
                    x-enum-descriptions:
                      InstrumentNotFound: Instrument not found or user is missing access to the instrument.
                      NoAccessToInstrument: User has no trade access to the instrument.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '403':
          description: Forbidden
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - Forbidden
                    type: string
                    x-enum-descriptions:
                      Forbidden: The user does not have necessary permissions for the resource
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /mkt/api/oas3:
    get:
      summary: Get Open API Specification 3.0 documentation for the service group.
      description: Returns the OAS 3 document for the service group.
      operationId: OasGetOas3
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  '/mkt/v1/losers/subscriptions/{ContextId}/{ReferenceId}':
    delete:
      tags:
        - MarketMovers
      summary: Remove subscription
      description: Removes subscription for the current session identified by subscription id..
      operationId: MarketMoversV1DeleteSubscriptionLosers
      parameters:
        - name: ContextId
          in: path
          description: The context id part of the streaming session (used to identify the subscription within a streaming session).
          required: true
          schema:
            type: string
          example: 29931122
        - name: ReferenceId
          in: path
          description: Mandatory client specified reference id for the subscription. This parameter must only contain alphanumberic characters as well as - (dash) and _ (underscore). Cannot start with _. It is case insensitive. Max length is 50 characters.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/gainers/subscriptions/{ContextId}/{ReferenceId}':
    delete:
      tags:
        - MarketMovers
      summary: Remove subscription
      description: Removes subscription for the current session identified by subscription id..
      operationId: MarketMoversV1DeleteSubscriptionGainers
      parameters:
        - name: ContextId
          in: path
          description: The context id part of the streaming session (used to identify the subscription within a streaming session).
          required: true
          schema:
            type: string
          example: 29931122
        - name: ReferenceId
          in: path
          description: Mandatory client specified reference id for the subscription. This parameter must only contain alphanumberic characters as well as - (dash) and _ (underscore). Cannot start with _. It is case insensitive. Max length is 50 characters.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/subscriptions/{ContextId}/{ReferenceId}':
    delete:
      tags:
        - MarketMovers
      summary: Remove subscription
      description: Removes subscription for the current session identified by subscription id.
      operationId: MarketMoversV1DeleteSubscription
      parameters:
        - name: ContextId
          in: path
          description: The context id part of the streaming session (used to identify the subscription within a streaming session).
          required: true
          schema:
            type: string
          example: 29931122
        - name: ReferenceId
          in: path
          description: Mandatory client specified reference id for the subscription. This parameter must only contain alphanumberic characters as well as - (dash) and _ (underscore). Cannot start with _. It is case insensitive. Max length is 50 characters.
          required: true
          schema:
            type: string
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/losers/subscriptions/{ContextId}':
    delete:
      tags:
        - MarketMovers
      summary: Remove multiple subscriptions
      description: 'Removes multiple subscriptions for the current session on this resource, and frees all resources on the server.'
      operationId: MarketMoversV1DeleteSubscriptionsLosers
      parameters:
        - name: ContextId
          in: path
          description: The context id part of the streaming session (used to identify the subscription within a streaming session).
          required: true
          schema:
            type: string
          example: 29931122
        - name: Tag
          in: query
          description: Tag that subscriptions are marked with
          schema:
            type: string
          example: 2345223
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/gainers/subscriptions/{ContextId}':
    delete:
      tags:
        - MarketMovers
      summary: Remove multiple subscriptions
      description: 'Removes multiple subscriptions for the current session on this resource, and frees all resources on the server.'
      operationId: MarketMoversV1DeleteSubscriptionsGainers
      parameters:
        - name: ContextId
          in: path
          description: The context id part of the streaming session (used to identify the subscription within a streaming session).
          required: true
          schema:
            type: string
          example: 29931122
        - name: Tag
          in: query
          description: Tag that subscriptions are marked with
          schema:
            type: string
          example: 2345223
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/subscriptions/{ContextId}':
    delete:
      tags:
        - MarketMovers
      summary: Remove multiple subscriptions
      description: 'Removes multiple subscriptions for the current session on this resource, and frees all resources on the server.'
      operationId: MarketMoversV1DeleteSubscriptions
      parameters:
        - name: ContextId
          in: path
          description: The context id part of the streaming session (used to identify the subscription within a streaming session).
          required: true
          schema:
            type: string
          example: 29931122
        - name: Tag
          in: query
          description: Tag that subscriptions are marked with
          schema:
            type: string
          example: 2345223
      responses:
        '204':
          description: No Content
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /mkt/v1/losers/subscriptions:
    post:
      tags:
        - MarketMovers
      summary: Create a subscription on top losers on a given exchange
      description: 'Sets up a subscription, and returns an initial snapshot containing a list of the desired intervals top gainers, losers or most active instruments on the specified exchange.'
      operationId: MarketMoversV1AddActiveLosersSubscription
      parameters:
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketMoversSubscriptionRequest'
            example: {
  "Arguments": {
    "ExchangeId": "ExchangeId0617c38a-7132-4da9-b0e2-3b0971b25437",
    "FieldGroups": [
      "DisplayAndFormat"
    ],
    "Interval": "Daily",
    "MarketCaps": [
      "BelowOneBillion"
    ]
  },
  "ContextId": "-",
  "Format": "Format7b07ee28-dbdc-4b57-93c1-8d8b4d060ac7",
  "KnownSchemas": [
    "95422934-4781-4eab-bd43-4f0c5035246a"
  ],
  "ReferenceId": "-",
  "RefreshRate": 240,
  "ReplaceReferenceId": "-",
  "Tag": "Tag51cd7c92-da15-486a-9844-5b67de7df168"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketMoversSubscriptionResponse'
              example: {
  "ContextId": "ContextIdeca29052-a007-48a1-b8af-1f734daee7a4",
  "Format": "Formatdcdaa333-0b2f-4e5a-a790-b43a8c8beb3f",
  "InactivityTimeout": 116,
  "ReferenceId": "ReferenceIdb911c0b5-aa52-43f4-9b8a-95c89186a804",
  "RefreshRate": 179,
  "Schema": "Schemac0d17050-bac9-48cd-91e7-a24e53c4cf50",
  "SchemaName": "SchemaNamee0893740-0ec8-4d33-94f6-b78797f45e61",
  "Snapshot": {
    "PriceDelayMinutes": 41,
    "RankedInstruments": [
      {
        "Description": "Descriptionc01ddccd-1439-407d-8425-1292cff88734",
        "DisplayAndFormat": {
          "Currency": "Currency6fb65671-7836-4442-93e9-483cb746a276",
          "Decimals": 114,
          "Description": "Description3d1a0f8c-d760-4c47-9490-b3c686adf569",
          "Symbol": "Symbol6ae34178-6f59-407f-b079-f6e96b7f2860"
        },
        "LastTraded": 693.96874721301924,
        "MarketCap": 6979198003.33556,
        "PercentChange": -1.612185735598039E+24,
        "Rank": 70,
        "Uic": 198
      }
    ]
  },
  "State": "Active",
  "Tag": "Tag3450e3cf-4440-4df8-ae87-35efc67f2a9e"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidExchange
                      - InvalidModelState
                      - InvalidRequest
                      - TooManyEntriesRequested
                      - UnsupportedSubscriptionFormat
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: Invalid request.
                      InvalidModelState: Error code returned when model state is invalid.
                      UnsupportedSubscriptionFormat: Error code returned when a subscription format that isn't supported by the publisher is requested.
                      InvalidExchange: Exchange is either invalid or not supported.
                      TooManyEntriesRequested: Too many entries requested in Top argument. Max allowed is 20.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - SubscriptionLimitExceeded
                    type: string
                    x-enum-descriptions:
                      SubscriptionLimitExceeded: 'Error code returned when more than the maximum allowed number of subscriptions for a specified type, is exceeded.'
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
      x-streaming-type: '#/components/schemas/RankedInstrumentResponseDomainEvent'
  /mkt/v1/gainers/subscriptions:
    post:
      tags:
        - MarketMovers
      summary: Create a subscription on top gainers on a given exchange
      description: 'Sets up a subscription, and returns an initial snapshot containing a list of the desired intervals top gainers, losers or most active instruments on the specified exchange.'
      operationId: MarketMoversV1AddActiveGainersSubscription
      parameters:
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MarketMoversSubscriptionRequest'
            example: {
  "Arguments": {
    "ExchangeId": "ExchangeId0617c38a-7132-4da9-b0e2-3b0971b25437",
    "FieldGroups": [
      "DisplayAndFormat"
    ],
    "Interval": "Daily",
    "MarketCaps": [
      "BelowOneBillion"
    ]
  },
  "ContextId": "-",
  "Format": "Format7b07ee28-dbdc-4b57-93c1-8d8b4d060ac7",
  "KnownSchemas": [
    "95422934-4781-4eab-bd43-4f0c5035246a"
  ],
  "ReferenceId": "-",
  "RefreshRate": 240,
  "ReplaceReferenceId": "-",
  "Tag": "Tag51cd7c92-da15-486a-9844-5b67de7df168"
}
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarketMoversSubscriptionResponse'
              example: {
  "ContextId": "ContextIdeca29052-a007-48a1-b8af-1f734daee7a4",
  "Format": "Formatdcdaa333-0b2f-4e5a-a790-b43a8c8beb3f",
  "InactivityTimeout": 116,
  "ReferenceId": "ReferenceIdb911c0b5-aa52-43f4-9b8a-95c89186a804",
  "RefreshRate": 179,
  "Schema": "Schemac0d17050-bac9-48cd-91e7-a24e53c4cf50",
  "SchemaName": "SchemaNamee0893740-0ec8-4d33-94f6-b78797f45e61",
  "Snapshot": {
    "PriceDelayMinutes": 41,
    "RankedInstruments": [
      {
        "Description": "Descriptionc01ddccd-1439-407d-8425-1292cff88734",
        "DisplayAndFormat": {
          "Currency": "Currency6fb65671-7836-4442-93e9-483cb746a276",
          "Decimals": 114,
          "Description": "Description3d1a0f8c-d760-4c47-9490-b3c686adf569",
          "Symbol": "Symbol6ae34178-6f59-407f-b079-f6e96b7f2860"
        },
        "LastTraded": 693.96874721301924,
        "MarketCap": 6979198003.33556,
        "PercentChange": -1.612185735598039E+24,
        "Rank": 70,
        "Uic": 198
      }
    ]
  },
  "State": "Active",
  "Tag": "Tag3450e3cf-4440-4df8-ae87-35efc67f2a9e"
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidExchange
                      - InvalidModelState
                      - InvalidRequest
                      - TooManyEntriesRequested
                      - UnsupportedSubscriptionFormat
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: Invalid request.
                      InvalidModelState: Error code returned when model state is invalid.
                      UnsupportedSubscriptionFormat: Error code returned when a subscription format that isn't supported by the publisher is requested.
                      InvalidExchange: Exchange is either invalid or not supported.
                      TooManyEntriesRequested: Too many entries requested in Top argument. Max allowed is 20.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '409':
          description: Conflict
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - SubscriptionLimitExceeded
                    type: string
                    x-enum-descriptions:
                      SubscriptionLimitExceeded: 'Error code returned when more than the maximum allowed number of subscriptions for a specified type, is exceeded.'
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
      x-streaming-type: '#/components/schemas/RankedInstrumentResponseDomainEvent'
  '/mkt/v1/losers/{ExchangeId}/{Interval}':
    get:
      tags:
        - MarketMovers
      summary: Get top losers for a specified exchange
      description: Returns a list of biggest losers for the specified interval.
      operationId: MarketMoversV1GetLosersWithInterval
      parameters:
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: ExchangeId
          in: path
          description: The ID of the exchange
          required: true
          schema:
            type: string
        - name: FieldGroups
          in: query
          description: Details about which field groups are requested
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MarketMoversFieldGroup'
        - name: Interval
          in: path
          description: Predefined intervals for querying market movers data
          required: true
          schema:
            $ref: '#/components/schemas/QueryInterval'
        - name: MarketCaps
          in: query
          description: Specific market capitalization -only relevant when losers data is requested with marketCap filter
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MarketCapType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RankedInstrumentResponse'
              example: {
  "PriceDelayMinutes": 183,
  "RankedInstruments": [
    {
      "Description": "Description6c10016b-5821-4ce4-bdf9-0f1d0c0adb5e",
      "DisplayAndFormat": {
        "Currency": "Currencyf8353c4f-3a93-4872-8bcb-aca11ecf6cdb",
        "Decimals": 93,
        "Description": "Descriptiona880dc82-6219-4c4b-aa1e-6bc1cffe1365",
        "Symbol": "Symbol811580b3-a114-4abc-9cc1-0caac9540035"
      },
      "LastTraded": -4.8438037718198968E+27,
      "MarketCap": 1.7182024665056834E+19,
      "PercentChange": -226817.04683278551,
      "Rank": 150,
      "Uic": 211
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidExchange
                      - InvalidRequest
                      - TooManyEntriesRequested
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: Invalid request.
                      InvalidExchange: Exchange is either invalid or not supported.
                      TooManyEntriesRequested: Too many entries requested in Top argument. Max allowed is 20.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/losers/{ExchangeId}':
    get:
      tags:
        - MarketMovers
      summary: Get todays top losers for a specified exchange
      description: Returns a list of biggest losers for the current day.
      operationId: MarketMoversV1GetLosers
      parameters:
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: ExchangeId
          in: path
          description: The ID of the exchange
          required: true
          schema:
            type: string
        - name: FieldGroups
          in: query
          description: Details about which field groups are requested
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MarketMoversFieldGroup'
        - name: MarketCaps
          in: query
          description: Specific market capitalization -only relevant when losers data is requested with marketCap filter
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MarketCapType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RankedInstrumentResponse'
              example: {
  "PriceDelayMinutes": 183,
  "RankedInstruments": [
    {
      "Description": "Description6c10016b-5821-4ce4-bdf9-0f1d0c0adb5e",
      "DisplayAndFormat": {
        "Currency": "Currencyf8353c4f-3a93-4872-8bcb-aca11ecf6cdb",
        "Decimals": 93,
        "Description": "Descriptiona880dc82-6219-4c4b-aa1e-6bc1cffe1365",
        "Symbol": "Symbol811580b3-a114-4abc-9cc1-0caac9540035"
      },
      "LastTraded": -4.8438037718198968E+27,
      "MarketCap": 1.7182024665056834E+19,
      "PercentChange": -226817.04683278551,
      "Rank": 150,
      "Uic": 211
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidExchange
                      - InvalidRequest
                      - TooManyEntriesRequested
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: Invalid request.
                      InvalidExchange: Exchange is either invalid or not supported.
                      TooManyEntriesRequested: Too many entries requested in Top argument. Max allowed is 20.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/gainers/{ExchangeId}/{Interval}':
    get:
      tags:
        - MarketMovers
      summary: Get top gainers for a specified exchange
      description: Returns a list of top gainers for the specified interval.
      operationId: MarketMoversV1GetGainersWithInterval
      parameters:
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: ExchangeId
          in: path
          description: The ID of the exchange
          required: true
          schema:
            type: string
        - name: FieldGroups
          in: query
          description: Details about which field groups are requested
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MarketMoversFieldGroup'
        - name: Interval
          in: path
          description: Predefined intervals for querying market movers data
          required: true
          schema:
            $ref: '#/components/schemas/QueryInterval'
        - name: MarketCaps
          in: query
          description: Specific market capitalization -only relevant when gainers data is requested with marketCap filter
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MarketCapType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RankedInstrumentResponse'
              example: {
  "PriceDelayMinutes": 183,
  "RankedInstruments": [
    {
      "Description": "Description6c10016b-5821-4ce4-bdf9-0f1d0c0adb5e",
      "DisplayAndFormat": {
        "Currency": "Currencyf8353c4f-3a93-4872-8bcb-aca11ecf6cdb",
        "Decimals": 93,
        "Description": "Descriptiona880dc82-6219-4c4b-aa1e-6bc1cffe1365",
        "Symbol": "Symbol811580b3-a114-4abc-9cc1-0caac9540035"
      },
      "LastTraded": -4.8438037718198968E+27,
      "MarketCap": 1.7182024665056834E+19,
      "PercentChange": -226817.04683278551,
      "Rank": 150,
      "Uic": 211
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidExchange
                      - InvalidRequest
                      - TooManyEntriesRequested
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: Invalid request.
                      InvalidExchange: Exchange is either invalid or not supported.
                      TooManyEntriesRequested: Too many entries requested in Top argument. Max allowed is 20.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/gainers/{ExchangeId}':
    get:
      tags:
        - MarketMovers
      summary: Get todays top gainers for a specified exchange
      description: Returns a list of top gainers for the current day.
      operationId: MarketMoversV1GetGainers
      parameters:
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: ExchangeId
          in: path
          description: The ID of the exchange
          required: true
          schema:
            type: string
        - name: FieldGroups
          in: query
          description: Details about which field groups are requested
          required: true
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MarketMoversFieldGroup'
        - name: MarketCaps
          in: query
          description: Specific market capitalization -only relevant when gainers data is requested with marketCap filter
          schema:
            type: array
            items:
              $ref: '#/components/schemas/MarketCapType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RankedInstrumentResponse'
              example: {
  "PriceDelayMinutes": 183,
  "RankedInstruments": [
    {
      "Description": "Description6c10016b-5821-4ce4-bdf9-0f1d0c0adb5e",
      "DisplayAndFormat": {
        "Currency": "Currencyf8353c4f-3a93-4872-8bcb-aca11ecf6cdb",
        "Decimals": 93,
        "Description": "Descriptiona880dc82-6219-4c4b-aa1e-6bc1cffe1365",
        "Symbol": "Symbol811580b3-a114-4abc-9cc1-0caac9540035"
      },
      "LastTraded": -4.8438037718198968E+27,
      "MarketCap": 1.7182024665056834E+19,
      "PercentChange": -226817.04683278551,
      "Rank": 150,
      "Uic": 211
    }
  ]
}
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InvalidExchange
                      - InvalidRequest
                      - TooManyEntriesRequested
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: Invalid request.
                      InvalidExchange: Exchange is either invalid or not supported.
                      TooManyEntriesRequested: Too many entries requested in Top argument. Max allowed is 20.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/MarketData/{AssetType}/{Uic}':
    get:
      tags:
        - MarketData
      summary: Get market data information about an instrument
      description: Returns market data information for an instrument.
      operationId: MarketDataGetInstrumentMarketData
      parameters:
        - name: AssetType
          in: path
          description: Asset Type
          required: true
          schema:
            $ref: '#/components/schemas/AssetType'
        - name: FieldGroups
          in: query
          description: Details about which field groups is requested
          schema:
            title: Details about which field groups is requested
            type: array
            items:
              $ref: '#/components/schemas/MarketDataFieldGroup'
          example: [
  "GeneralInfo"
]
        - name: Uic
          in: path
          description: Uic for a given instrument
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductPageResponse'
              example: {
  "AnalystRating": {
    "Buy": 10,
    "Consensus": {
      "Key": "Buy",
      "Value": "Buy"
    },
    "HighTargetPrice": 89.05,
    "Hold": 15,
    "LowTargetPrice": 80.0,
    "Sell": 20,
    "TargetPrice": 1.3,
    "UpsidePct": 7.0
  },
  "AssetType": "Stock",
  "BestPerformingAnalystRating": {
    "Buy": 10,
    "Consensus": {
      "Key": "Buy",
      "Value": "Buy"
    },
    "HighTargetPrice": 89.05,
    "Hold": 15,
    "LowTargetPrice": 80.0,
    "Sell": 20,
    "TargetPrice": 1.3,
    "UpsidePct": 7.0
  },
  "ComparableCompanies": [
    {
      "BETA": 1.2,
      "Company": "Apple Inc.",
      "Consensus": {
        "Key": "Buy",
        "Value": "Buy"
      },
      "EPS": 9.22,
      "PriceEarnings": 1.3,
      "ROE": 38.0,
      "SalesUSD": 216.226,
      "TargetPrice": 176.63,
      "Uic": 3125322
    }
  ],
  "CountryCode": "US",
  "CurrencyCode": "USD",
  "Description": "China Unicom",
  "DisplayHint": "Interests",
  "ExchangeId": "NYSE",
  "Financials": [
    {
      "BalanceSheets": [
        {
          "Key": "Assets",
          "Value": 207.0
        },
        {
          "Key": "Assets",
          "Value": 207.0
        },
        {
          "Key": "Stocks",
          "Value": 5866.0
        },
        {
          "Key": "BondsIssued",
          "Value": 83.0
        },
        {
          "Key": "TotalDebt",
          "Value": 83.0
        }
      ],
      "Incomes": [
        {
          "Key": "Sales",
          "Value": 183.0
        },
        {
          "Key": "EBITDA",
          "Value": 60.6
        },
        {
          "Key": "EBIT",
          "Value": 52.6
        },
        {
          "Key": "NetIncome",
          "Value": 39.54
        }
      ],
      "IsEstimates": false,
      "KeyNumbers": [
        {
          "Key": "Earnings Per Share",
          "Value": 6.45
        },
        {
          "Key": "DividendVsShare",
          "Value": 1.81
        },
        {
          "Key": "GrossMargin",
          "Value": 52.6
        },
        {
          "Key": "ROE",
          "Value": 39.54
        },
        {
          "Key": "DebtVsCapitalRatio",
          "Value": 24.0
        }
      ],
      "ReportingPeriod": "2022-12-31"
    }
  ],
  "Format": {
    "Decimals": 2
  },
  "GeneralInfo": {
    "StockInfo": {
      "Beta": 1.1,
      "Description": "The Lyxor S&P 500 UCITS ETF is a UCITS compliant exchange traded fund that aims to track the benchmark index S&P 500 Total Return. The S&P 500 Index includes 500 leading companies in leading industries of the U.S. economy and reflects the risk and return characteristics of the broader large cap universe on an on-going basis. The complete constuction of the index is available on www.standardandpoors.com. Lyxor ETFs are efficient investment vehicles listed on exchange that offer transparent liquid and low-cost exposure to the underlying benchmark index",
      "DividentYieldPct": 1.63,
      "MarketCap": 795000000.0,
      "NoOfEmployees": 116000.0,
      "SalesGrowthRatePct": 7.7,
      "Sector": {
        "Key": "Technology",
        "Value": "Technology"
      },
      "SubSector": {
        "Key": "Hardware",
        "Value": "Hardware"
      }
    }
  },
  "Instrument": "CHU:xnys",
  "RevenueExposure": {
    "Countries": [
      {
        "CountryCode": "us",
        "Key": "United States",
        "Pct": 22.0
      }
    ],
    "Segments": [
      {
        "Key": "SegmentA",
        "Pct": 43.0
      }
    ]
  },
  "Uic": 137
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InstrumentNotFound
                      - MarketDataNotFound
                      - MarketDataNotServedForInstrumentType
                      - NoAccessToMarketDataSecurityGroup
                    type: string
                    x-enum-descriptions:
                      MarketDataNotServedForInstrumentType: 'Market data are served only for Stocks, Bonds and all Mutual Funds'
                      MarketDataNotFound: Market data  not found
                      InstrumentNotFound: Instrument not found or user is missing access to the instrument.
                      NoAccessToMarketDataSecurityGroup: User has no access to market data security group
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - MarketDataError
                      - NoAccessToInstrument
                    type: string
                    x-enum-descriptions:
                      MarketDataError: Error occured in processing market data
                      NoAccessToInstrument: User has no trade access to the instrument.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /mkt/v1/MarketData/Analyst:
    get:
      tags:
        - MarketData
      summary: Gets Analyst Grid
      description: Returns Analyst Grid.
      operationId: MarketDataGetAnalystGridAsync
      parameters:
        - name: $skiptoken
          in: query
          schema:
            type: string
        - name: $top
          in: query
          schema:
            minimum: 0
            type: integer
            format: int32
            default: 0
        - name: AssetType
          in: query
          description: 'Asset Type: It can be one of Stock or CfdOnStock'
          required: true
          schema:
            title: 'Asset Type: It can be one of Stock or CfdOnStock'
            allOf:
              - $ref: '#/components/schemas/AssetType'
          example: "FxKnockInOption"
        - name: CountryCodes
          in: query
          description: Country Codes
          schema:
            title: Country Codes
            type: array
            items:
              type: string
          example: [
  "00530d08-a1eb-4104-b478-f4a0fc532e6b"
]
        - name: ExchangeIds
          in: query
          description: Exchange Ids
          schema:
            title: Exchange Ids
            type: array
            items:
              type: string
          example: [
  "00530d08-a1eb-4104-b478-f4a0fc532e6b"
]
        - name: Uics
          in: query
          description: Uics
          schema:
            title: Uics
            type: array
            items:
              type: integer
              format: int32
          example: [
  224
]
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalystGrid'
              example: {
  "AnalystAction": {
    "Key": "maintained",
    "Value": "maintained"
  },
  "AnalystInfo": {
    "FirmName": "Shawn Harrison",
    "GoodRecommendations": 20,
    "Id": "c6def9d68558a7b14e09de7c8c5086db9a216eae",
    "Name": "Chad Bennett",
    "NumberOfStars": 4.5,
    "OverallAverageReturn": 15.3,
    "OverallSuccessRate": 0.606,
    "PictureUrl": "2208_JGCECGHDDB_tsqr.jpg",
    "Rank": 1575,
    "TotalNumberOfRankedAnalysts": 5144,
    "TotalRecommendations": 33
  },
  "AverageReturn": 17.0,
  "Consensus": {
    "Key": "Buy",
    "Value": "Buy"
  },
  "GoodRecommendations": 18,
  "Id": 1,
  "InstrumentInfo": {
    "AssetType": "CfdOnStock",
    "CountryCode": "US",
    "Description": "Apple Inc.",
    "ExchangeId": "NASDAQ",
    "Format": {
      "Decimals": 2
    },
    "Instrument": "AAPL:xnas",
    "Uic": 211
  },
  "RecommendationArticleTitle": "Apple (AAPL) March quarter guidance expected to be soft, says Canaccord",
  "RecommendationDate": "2022-04-07",
  "RecommendationSite": "TheFly",
  "RecommendationUrl": "http://www.streetinsider.com/analyst+eps+view/apple+%28aapl%29+neutral+rating+maintained+at+longbow+research%2c+despite+forecast+of+10-15%25+decline+in+fy19+iphone+production/15019714.html?si_client=tipranks-15019714-27df0bbf37",
  "SuccessRate": 0.783,
  "TargetPrice": 43.0,
  "TotalRecommendations": 35
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - AnalystGridNotFound
                      - AnalystGridNotServedForInstrumentType
                      - NoAccessToMarketDataSecurityGroup
                    type: string
                    x-enum-descriptions:
                      AnalystGridNotFound: Analyst Grid Not Found
                      AnalystGridNotServedForInstrumentType: Analyst Grid data is served only for Stocks
                      NoAccessToMarketDataSecurityGroup: User has no access to market data security group
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - AnalystGridTooManyEntriesRequested
                      - InvalidRequest
                      - NoSearchCriteriaProvided
                    type: string
                    x-enum-descriptions:
                      InvalidRequest: Invalid request.
                      AnalystGridTooManyEntriesRequested: Too many entries requested in Top argument. Max allowed is 100.
                      NoSearchCriteriaProvided: No Search Criteria Provided
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/mkt/v1/MarketData/Analyst/{AnalystId}':
    get:
      tags:
        - MarketData
      summary: Gets Analyst Profile
      description: Returns Analyst Profile.
      operationId: MarketDataGetAnalystDetails
      parameters:
        - name: AnalystId
          in: path
          description: Analyst Id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnalystProfile'
              example: {
  "FirmName": "Craig-Hallum",
  "GoodRecommendations": 20,
  "ID": "1234627559c61c59",
  "Name": "Chad Bennett",
  "NumberOfStars": 4.5,
  "OverallAverageReturn": 5.3,
  "OverallSuccessRate": 0.606,
  "PictureUrl": "http://www.streetinsider.com/analyst+pt+change/attunity+%28attu%29+pt+raised+to+%2424+at+craig-hallum/14773439.html?si_client=tipranks-14773439-787c37c582",
  "Rank": 1575,
  "TotalNumberOfRankedAnalysts": 5144,
  "TotalRecommendations": 33
}
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - AnalystNotFound
                      - NoAccessToMarketDataSecurityGroup
                    type: string
                    x-enum-descriptions:
                      AnalystNotFound: Analyst Not Found
                      NoAccessToMarketDataSecurityGroup: User has no access to market data security group
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - Unknown
                    type: string
                    x-enum-descriptions:
                      Unknown: One or more of the provided parameters are invalid.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /mkt/apistatus:
    get:
      description: Returns default server status information
      operationId: mkt_apistatus
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerStatus'
              example: {
  "Created": "0001-01-01T00:00:00Z",
  "LeasePeriod": 0,
  "LogicalProcessors": 0,
  "MachineUptime": 0,
  "SystemUptime": 0,
  "TimeSpentMs": 1.33,
  "ToolId": 0
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  /mkt/isalive:
    get:
      description: Determines whether this service-group instance is alive.
      operationId: mkt_isalive
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
              example: "2c49a334-a95b-443f-a0be-8e0d17499fa4"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
components:
  schemas:
    AllocationDataResponse:
      title: Public data contract representing market allocation data for an instrument.
      type: object
      properties:
        AssetAllocations:
          title: Asset allocations
          type: array
          items:
            $ref: '#/components/schemas/AssetAllocationPct'
        AssetType:
          title: Asset Type
          allOf:
            - $ref: '#/components/schemas/AssetType'
        CountryWeightAllocations:
          title: Country weight allocations
          type: array
          items:
            $ref: '#/components/schemas/CountryWeightAllocationPct'
        DisplayHint:
          title: Display Hint
          allOf:
            - $ref: '#/components/schemas/DisplayHintTypeNullable'
          x-network-visibility: internal
        SectorAllocations:
          title: Sector allocation
          type: array
          items:
            $ref: '#/components/schemas/SectorAllocation'
        Uic:
          title: Uic for the request
          type: integer
          format: int32
      additionalProperties: false
    AnalystConsensus:
      title: Analyst Consensus
      type: object
      properties:
        Buy:
          title: Buy
          type: integer
          format: int32
        Consensus:
          title: Analyst consensus
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        Hold:
          title: Hold
          type: integer
          format: int32
        ImpliedReturn:
          title: Implied Return
          type: number
        ImpliedReturnPct:
          title: Implied Return Percentage
          type: number
        Overweight:
          title: Overweight
          type: integer
          format: int32
        Rating:
          title: Factset rating
          type: number
        Sell:
          title: Sell
          type: integer
          format: int32
        TargetPrice:
          title: Analyst target price
          type: number
        Underweight:
          title: Underweight
          type: integer
          format: int32
      additionalProperties: false
    AnalystGrid:
      title: Analyst Grid
      type: object
      properties:
        AnalystAction:
          title: Analyst Action
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        AnalystInfo:
          title: Analyst Information
          allOf:
            - $ref: '#/components/schemas/AnalystInfo'
        AverageReturn:
          title: Analyst average return on this stock
          type: number
        Consensus:
          title: Analyst consensus
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        GoodRecommendations:
          title: Number of good recommendations done by an analyst till date
          type: integer
          format: int32
        Id:
          title: Analyst Ticker Detail Id
          type: integer
          format: int32
        InstrumentInfo:
          title: Analyst Instrument Details
          allOf:
            - $ref: '#/components/schemas/InstrumentInfo'
        RecommendationArticleTitle:
          title: Recommendation Article Title
          type: string
        RecommendationDate:
          title: Recommendation Date
          type: string
          format: date
          x-type-name: Date
        RecommendationSite:
          title: Recommendation Site
          type: string
        RecommendationUrl:
          title: Recommendation Url
          type: string
        SuccessRate:
          title: Analyst success rate on this stock
          type: number
        TargetPrice:
          title: Target Price
          type: number
        TotalRecommendations:
          title: Total recommendations done by an analyst till date
          type: integer
          format: int32
      additionalProperties: false
    AnalystGridRequest:
      title: Analyst Grid Request
      required:
        - AssetType
      type: object
      properties:
        AssetType:
          title: 'Asset Type: It can be one of Stock or CfdOnStock'
          allOf:
            - $ref: '#/components/schemas/AssetType'
        CountryCodes:
          title: Country Codes
          type: array
          items:
            type: string
        ExchangeIds:
          title: Exchange Ids
          type: array
          items:
            type: string
        Uics:
          title: Uics
          type: array
          items:
            type: integer
            format: int32
      additionalProperties: false
    AnalystInfo:
      title: Analyst Information
      type: object
      properties:
        FirmName:
          title: Firm Name
          type: string
        GoodRecommendations:
          title: Number of good recommendations done by an analyst till date
          type: integer
          format: int32
        Id:
          title: Analyst  Expert UID
          type: string
        Name:
          title: Analyst Name
          type: string
        NumberOfStars:
          title: Rating of the Analyst (1-5)
          type: number
        OverallAverageReturn:
          title: Analyst average return on all stock
          type: number
        OverallSuccessRate:
          title: Analyst success rate on all stock
          type: number
        PictureUrl:
          title: Analyst Picture URL
          type: string
        Rank:
          title: Analyst Rank
          type: integer
          format: int32
        TotalNumberOfRankedAnalysts:
          title: Total Number Of Ranked Analysts
          type: integer
          format: int32
        TotalRecommendations:
          title: Total recommendations done by an analyst till date
          type: integer
          format: int32
      additionalProperties: false
    AnalystProfile:
      title: Analyst Information
      type: object
      properties:
        FirmName:
          title: Firm Name
          type: string
        GoodRecommendations:
          title: Number of good recommendations done by an analyst till date
          type: integer
          format: int32
        ID:
          title: Analyst Id
          type: string
        Name:
          title: Name
          type: string
        NumberOfStars:
          title: Rating of the Analyst (1-5)
          type: number
        OverallAverageReturn:
          title: Analyst average return on all stock
          type: number
        OverallSuccessRate:
          title: Analyst success rate on all stock
          type: number
        PictureUrl:
          title: Analyst Picture URL
          type: string
        Rank:
          title: Rank
          type: integer
          format: int32
        TotalNumberOfRankedAnalysts:
          title: Total Number Of Ranked Analysts
          type: integer
          format: int32
        TotalRecommendations:
          title: Total recommendations done by an analyst till date
          type: integer
          format: int32
      additionalProperties: false
    AnalystRating:
      title: Represent analyst rating
      type: object
      properties:
        Buy:
          title: Buy
          type: integer
          format: int32
        Consensus:
          title: Analyst consensus
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        HighTargetPrice:
          title: High target price
          type: number
        Hold:
          title: Hold
          type: integer
          format: int32
        LowTargetPrice:
          title: Low target price
          type: number
        Sell:
          title: Sell
          type: integer
          format: int32
        TargetPrice:
          title: Analyst target price
          type: number
        UpsidePct:
          title: Upside percentage
          type: number
      additionalProperties: false
    AnalystRiskRating:
      title: Analyst risk rating for an Instrument.
      type: object
      properties:
        Category:
          title: Risk rating category
          allOf:
            - $ref: '#/components/schemas/RiskRatingCategory'
        Rating:
          title: Risk rating type
          allOf:
            - $ref: '#/components/schemas/RiskRatingType'
      additionalProperties: false
    ApiGroupInfo:
      title: Infor for an Api Group.
      type: object
      properties:
        Controller:
          title: Gets the Api Controller name.
          type: string
        Routes:
          title: Gets the routes for the ApiGroup.
          type: array
          items:
            type: string
      additionalProperties: false
    AssetAllocation:
      title: Defines the percentage allocation of a Fund in particular Asset.
      type: object
      properties:
        Key:
          title: Key representing the AssetType.
          type: string
        Pct:
          title: Percentage allocation in the respective Asset.
          type: number
      additionalProperties: false
    AssetAllocationPct:
      title: Defines the percentage allocation of a Fund in particular Asset.
      type: object
      properties:
        Key:
          title: Key representing the asset class.
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        Pct:
          title: Percentage allocation in the respective asset class.
          type: number
      additionalProperties: false
    AssetType:
      title: The possible AssetTypes for which you can get a quote or place an order or a trade.
      enum:
        - Bond
        - Cash
        - CertificateBonus
        - CertificateCappedBonus
        - CertificateCappedCapitalProtected
        - CertificateCappedOutperformance
        - CertificateConstantLeverage
        - CertificateDiscount
        - CertificateExpress
        - CertificateTracker
        - CertificateUncappedCapitalProtection
        - CertificateUncappedOutperformance
        - CfdFutureOption
        - CfdIndexOption
        - CfdOnCompanyWarrant
        - CfdOnEtc
        - CfdOnEtf
        - CfdOnEtn
        - CfdOnFund
        - CfdOnFutures
        - CfdOnIndex
        - CfdOnRights
        - CfdOnStock
        - CfdStockOption
        - CompanyWarrant
        - ContractFutures
        - Etc
        - Etf
        - Etn
        - Fund
        - FuturesOption
        - FuturesStrategy
        - FxBinaryOption
        - FxForwards
        - FxKnockInOption
        - FxKnockOutOption
        - FxNoTouchOption
        - FxOneTouchOption
        - FxSpot
        - FxSwap
        - FxVanillaOption
        - GuaranteeNote
        - IpoOnStock
        - ManagedFund
        - MiniFuture
        - MutualFund
        - PortfolioNote
        - Rights
        - SrdOnEtf
        - SrdOnStock
        - Stock
        - StockIndex
        - StockIndexOption
        - StockOption
        - Warrant
        - WarrantDoubleKnockOut
        - WarrantKnockOut
        - WarrantOpenEndKnockOut
        - WarrantSpread
      type: string
      x-enum-descriptions:
        FxSpot: Forex Spot.
        FxForwards: Forex Forward.
        FxVanillaOption: Forex Vanilla Option.
        FxKnockInOption: Forex Knock In Option.
        FxKnockOutOption: Forex Knock Out Option.
        FxBinaryOption: Forex Binary Option.
        FxOneTouchOption: Forex One Touch Option.
        FxNoTouchOption: Forex No Touch Option.
        ContractFutures: Contract Futures.
        FuturesStrategy: Futures Strategy.
        Stock: Stock.
        StockOption: Stock Option.
        Bond: Bond.
        FuturesOption: Futures Option.
        StockIndexOption: Stock Index Option.
        ManagedFund: 'Obsolete: Managed Fund.'
        Cash: Cash. Not tradeable!
        CfdOnStock: Cfd on Stock.
        CfdOnIndex: Cfd on Stock Index.
        CfdOnFutures: Cfd on Futures.
        StockIndex: Stock Index.
        MutualFund: Mutual Fund.
        CfdIndexOption: Cfd Index Option.
        CfdOnEtf: Cfd on Etf
        CfdOnEtc: Cfd on Etc
        CfdOnEtn: Cfd on Etn
        CfdOnFund: Cfd on Fund
        CfdOnRights: Cfd on Rights
        CfdStockOption: Cfd Stock Option
        CfdOnCompanyWarrant: Cfd on unlisted warrant issued by a corporation.
        Etf: Exchange traded fund.
        Etc: Etc
        Etn: Etn
        Fund: Fund
        FxSwap: Forex Swap.
        Rights: Rights
        Warrant: Warrant
        CfdFutureOption: Cfd Future Option.
        MiniFuture: MiniFuture.
        WarrantSpread: Warrant with built-in spread.
        WarrantKnockOut: Warrant with a knock-out barrier.
        WarrantOpenEndKnockOut: Knock-out Warrant with no expiry.
        WarrantDoubleKnockOut: Warrant with two knock-out barriers.
        CertificateUncappedCapitalProtection: Guarantees a percentage increase of the underlying asset's value above the issue price at expiry/maturity. Max loss is the amount invested multiplied by the CapitalProtection percentage.
        CertificateCappedCapitalProtected: Guarantees a capped percentage increase of the underlying asset's value above the issue price at expiry/maturity. Max loss is the amount invested multiplied by the CapitalProtection percentage.
        CertificateDiscount: 'Yields a capped return if the underlying asset''s value is above the specified cap level at expiry. If the underlying''s value is below the strike at expiry, the investor received the underlying or equivalent value. Offers direct exposure in underlying at a lower price (discount) with a capped potential profit and limited loss.'
        CertificateCappedOutperformance: Capped Outperformance Certificate.
        CertificateCappedBonus: Certificate Capped Bonus.
        CertificateExpress: Certificate Express kick out.
        CertificateTracker: A certificate that mirrors the price movement of the underlying instrument. Often used to trade movements in indicies. Movements can be a fixed ratio of the underlying and can be inverted for bearish/short speculation. Risk is equivalent to owning the underlying.
        CertificateUncappedOutperformance: 'Provides leveraged returns when the underlying price exceeds the threshold strike price. The amount leverage is defined by the Participation %. When the underlying is below the strike price, the certificate mirrors the underlying price 1:1.'
        CertificateBonus: 'Mirrors the price movement of the underlying only if and when the underlying price exceeds the defined barrier. If the certificate expires below the barrier, it offers partial protection/return of investment.'
        CertificateConstantLeverage: Certificate Constant Leverage.
        SrdOnStock: SRD. (Service de Règlement Différé) on Stock.
        SrdOnEtf: SRD. (Service de Règlement Différé) on Etf.
        IpoOnStock: IPO on Stock
        CompanyWarrant: 'Unlisted warrant issued by a corporation, often physically settled.'
        PortfolioNote: Danish pooled investment scheme (“Pulje”). Not online tradeable.
        GuaranteeNote: Danish investment scheme (“Grantbevis”). Not online tradeable.
      x-enum-network-visibility:
        CfdStockOption: internal
        FxSwap: internal
        CfdFutureOption: internal
    AssetTypeFilter:
      title: AssetType filter
      type: object
      properties:
        AssetType:
          title: AssetType
          allOf:
            - $ref: '#/components/schemas/AssetTypeNullable'
        Uic:
          title: Uic
          type: integer
          format: int32
      additionalProperties: false
    AssetTypeFilterCriteriaRequest:
      title: DTO class for Asset Type filter criteria transportation
      type: object
      properties:
        InstrumentFilters:
          title: InstrumentFilters
          type: array
          items:
            $ref: '#/components/schemas/AssetTypeFilter'
        Instruments:
          title: "Instrument Filter. This needs to be there for the model binding to allow the query notation and model\r\n                binding/parsing."
          type: string
        KeywordFilters:
          title: Keyword filters
          type: array
          items:
            $ref: '#/components/schemas/KeywordFilter'
        Size:
          title: Gets or sets the size of the search result.
          type: integer
          format: int32
        Uics:
          title: Uics
          type: array
          items:
            type: integer
            format: int32
      additionalProperties: false
    AssetTypeNullable:
      $ref: '#/components/schemas/AssetType'
    BestPerformingAnalystRating:
      title: Represent analyst rating (Applicable for Equities)
      type: object
      properties:
        Buy:
          title: Buy
          type: integer
          format: int32
        Consensus:
          title: Analyst consensus
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        HighTargetPrice:
          title: High target price
          type: number
        Hold:
          title: Hold
          type: integer
          format: int32
        LowTargetPrice:
          title: Low target price
          type: number
        Sell:
          title: Sell
          type: integer
          format: int32
        TargetPrice:
          title: Analyst target price
          type: number
        UpsidePct:
          title: Upside percentage
          type: number
      additionalProperties: false
    BondInfo:
      title: Represents general information for a given Bond instrument.
      type: object
      properties:
        BondType:
          title: Bond type
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        Callable:
          title: Callable
          type: boolean
        CreditRatings:
          title: Credit ratings
          type: array
          items:
            $ref: '#/components/schemas/CreditRating'
        DebtType:
          title: Loan type
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        Description:
          title: Description
          type: string
        IndustrySector:
          title: Industry sector
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        IssueDate:
          title: Issue date
          type: string
          format: date
          x-type-name: Date
        Issuer:
          title: Issuer
          type: string
        MaturityDate:
          title: Maturity date
          type: string
          format: date
          x-type-name: Date
        NextCallDate:
          title: Next call date
          type: string
          format: date
          x-type-name: Date
      additionalProperties: false
    BondType:
      title: Describes the type of bond.
      enum:
        - Convertible
        - DualCurrency
        - FloatingRateNote
        - InflationLinked
        - NonInflationLinked
        - Perpetual
      type: string
      x-enum-descriptions:
        NonInflationLinked: Non Inflation Linked Bond.
        InflationLinked: Inflation Linked Bond.
        Convertible: Convertible Bond
        Perpetual: Perpetual Bond
        FloatingRateNote: FloatingRateNote Bond
        DualCurrency: DualCurrency Bond
    BondTypeNullable:
      $ref: '#/components/schemas/BondType'
    ClientKeyRequest:
      title: Client Key as request
      type: object
      properties:
        ClientKey:
          title: Client Key for which information is requested.
          minLength: 1
          type: string
          x-network-visibility: internal
          x-type-name: ClientKey
      additionalProperties: false
    ComparableCompany:
      title: "Represent data for the Company/Instrument which can be compared to the company/Instrument in question.\r\n            Comparable companies belong to same Sector and Subsector and also fall into same P/E range."
      type: object
      properties:
        BETA:
          title: BETA
          type: number
        Company:
          title: Company name
          type: string
        Consensus:
          title: Analyst consensus
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        EPS:
          title: Earning Per Share
          type: number
        PriceEarnings:
          title: Price and Earning Ratio
          type: number
        ROE:
          title: ROE
          type: number
        SalesUSD:
          title: Sales in USD
          type: number
        TargetPrice:
          title: Analyst Target price
          type: number
        Uic:
          title: Uic
          type: integer
          format: int32
        Yield:
          title: Yield
          type: number
      additionalProperties: false
    CopyInstrumentDocumentRequest:
      title: Insert New Document for instrument request
      required:
        - AssetType
        - DocumentType
      type: object
      properties:
        AssetType:
          title: Assetype
          allOf:
            - $ref: '#/components/schemas/AssetType'
        DocumentType:
          title: Document Type
          allOf:
            - $ref: '#/components/schemas/DocumentType'
        Exchange:
          title: Exchange
          type: string
        FromBaseContractId:
          title: Source BaseContract Id
          type: integer
          format: int32
        FromOptionRootId:
          title: Source OptionRoot Id
          type: integer
          format: int32
        ToBaseContractIds:
          title: Target BaseContract Ids
          type: array
          items:
            type: integer
            format: int32
        ToOptionRootIds:
          title: Target OptionRoot Ids
          type: array
          items:
            type: integer
            format: int32
      additionalProperties: false
    Country:
      title: Represents revenue percentage for a given country key.
      type: object
      properties:
        CountryCode:
          title: Country code
          type: string
        Key:
          title: Key
          type: string
        Pct:
          title: Percentage
          type: number
      additionalProperties: false
    CountryWeightAllocation:
      title: Represents country weight allocations
      type: object
      properties:
        Country:
          title: Country
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        CountryCode:
          title: Country Code
          type: string
        Pct:
          title: Allocation percentage
          type: number
      additionalProperties: false
    CountryWeightAllocationPct:
      title: Represents country weight allocations
      type: object
      properties:
        Country:
          title: Country - Country Code as key and countrry as value
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        Pct:
          title: Allocation percentage
          type: number
      additionalProperties: false
    CreditRating:
      title: Represents a credit ranking
      type: object
      properties:
        Agency:
          title: Agency
          type: string
        Rating:
          title: Rating
          type: string
      additionalProperties: false
    DependencyInfo:
      title: 'Represents information about named dependency, component, or subsystem.'
      type: object
      properties:
        Events:
          title: The events related to the dependency.
          type: array
          items:
            $ref: '#/components/schemas/DependencyStatusEvent'
        Name:
          title: The unique name of the dependency.
          type: string
      additionalProperties: false
    DependencyStatusEvent:
      type: object
      properties:
        Message:
          title: A free-text message describing the event.
          type: string
          description: 'The message can indicate the type of failure, an exception message, or likewise.'
        Status:
          title: The dependency status after the event.
          allOf:
            - $ref: '#/components/schemas/DependencyStatusKind'
        Timestamp:
          type: string
          format: date-time
          x-type-name: UtcDateTime
      additionalProperties: false
    DependencyStatusKind:
      title: Represents different dependency statuses.
      enum:
        - Failed
        - Initializing
        - None
        - Ready
      type: string
      x-enum-descriptions:
        None: Indicates that no status has been set for a dependency.
        Initializing: Indicates a dependency is initializing.
        Ready: Indicates that a dependency has operational status.
        Failed: Indicates that a dependency is not operational.
    DiskDrive:
      title: 'Data contract for logical disk drives, including Total and Free disk space'
      type: object
      properties:
        DriveSize:
          title: DriveSize (in GB)
          type: integer
          format: int64
        FreeSpace:
          title: FreeSpace (in GB)
          type: integer
          format: int64
        LogicalDrive:
          title: LogicalDrive (e.g. C or D)
          type: string
        PercentUsed:
          title: PercentUsed
          type: integer
          format: int32
      additionalProperties: false
    DisplayAndFormat:
      title: Data contract containing information about the instrument(Description and Symbol).
      type: object
      properties:
        Description:
          title: 'Description of instrument (DAX Index - Nov 2013), in English.'
          type: string
        ISIN:
          title: ISIN of instrument
          type: string
        Symbol:
          title: Symbol- A combination of letters used to uniquely identify a traded instrument. e.g. ODAX/X13C8950:xeur.
          type: string
      additionalProperties: false
    DisplayHintType:
      title: Display Hint Type.
      enum:
        - Continuous
        - CryptoCurrencies
        - Etc
        - Etf
        - Etn
        - Forex
        - Fund
        - Interests
        - None
        - PreciousMetal
        - Rights
        - StockIndices
        - Warrant
      type: string
      x-enum-descriptions:
        None: Indicates not special display hint is required.
        PreciousMetal: Metals like XAUUSD.
        Continuous: Used for the parent ContractFutures.
        Etf: Exchange Traded Funds.
        Etn: Exchange Traded Notes.
        Etc: Exchange Traded Certificates/Currencies.
        Rights: Rights.
        Warrant: Warrants.
        Forex: Forex. Intended to be used for Cfds on Futures on Forex.
        Interests: Interest rates. Intended to be used for Cfds on Futures on bonds.
        StockIndices: Stock indices. Intended to be used for Cfds on Futures on stock indices.
        Fund: Fund.
        CryptoCurrencies: Crypto currencies.
    DisplayHintTypeNullable:
      $ref: '#/components/schemas/DisplayHintType'
    DocumentType:
      title: "This Document Enum can be used to fetch multiple documents simultaneously\r\n            For single Document Pass DocumentType as KIIDs\r\n            For Multiple Documents Pass DocumentType as comma separated values in api endpoint: KIIDs,PRIIP_KIDs,FactSheet"
      enum:
        - AnnualFinancialStatement
        - CommercialMemorandum
        - FactSheet
        - KFS
        - KIIDs
        - PHS
        - PRIIPKIDs
        - Prospectus
        - SemiAnnualFinancialStatement
        - SimplifiedProspectus
      type: string
      x-enum-descriptions:
        KIIDs: Key Investor Information Document
        PRIIPKIDs: Key Investor Information Document provided by PRIIP (Packaged Retail and Insurance-based Investment Products)
        FactSheet: Fact Sheet
        AnnualFinancialStatement: Annual Financial Statement
        CommercialMemorandum: Commercial Memorandum
        Prospectus: Prospectus
        PHS: Product Highlight Sheet
        KFS: Key Fact Sheet
        SimplifiedProspectus: Simplified Prospectus
        SemiAnnualFinancialStatement: Semi Annual Financial Statement
      x-type-warning: FlaggableEnum
    DocumentTypeRequest:
      title: Document type request
      required:
        - DocumentTypes
      type: object
      properties:
        DocumentTypes:
          title: The list of document types for which to request information
          type: array
          items:
            $ref: '#/components/schemas/DocumentType'
      additionalProperties: false
    DocumentTypes:
      title: "This Document Enum can be used to fetch multiple documents simultaneously\r\n            For single Document Pass DocumentType as KIIDs\r\n            For Multiple Documents Pass DocumentType as comma separated values in api endpoint: KIIDs,PRIIP_KIDs,FactSheet"
      enum:
        - AnnualFinancialStatement
        - CommercialMemorandum
        - FactSheet
        - KFS
        - KIIDs
        - PHS
        - PRIIP_KIDs
        - Prospectus
        - SemiAnnualFinancialStatement
        - SimplifiedProspectus
      type: string
      x-enum-descriptions:
        KIIDs: Key Investor Information Document
        PRIIP_KIDs: Key Investor Information Document provided by PRIIP (Packaged Retail and Insurance-based Investment Products)
        FactSheet: Fact Sheet
        AnnualFinancialStatement: Annual Financial Statement
        CommercialMemorandum: Commercial Memorandum
        Prospectus: Prospectus
        PHS: Product Highlight Sheet
        KFS: Key Fact Sheet
        SimplifiedProspectus: Simplified Prospectus
        SemiAnnualFinancialStatement: Semi Annual Financial Statement
      x-type-warning: FlaggableEnum
    EquityStyleBox:
      title: Represent Equity Style Box
      type: object
      properties:
        Horizontal:
          title: Horizontal
          allOf:
            - $ref: '#/components/schemas/EquityStyleBoxType'
        Vertical:
          title: Vertical
          allOf:
            - $ref: '#/components/schemas/EquityStyleBoxType'
      additionalProperties: false
    EquityStyleBoxType:
      title: Represents existing Equity style box types
      enum:
        - Large
        - Medium
        - Small
      type: string
      x-enum-descriptions:
        Large: Large
        Medium: Medium
        Small: Small
    FieldGroups:
      title: Specification of fieldsets to include in results.
      enum:
        - DisplayAndFormat
      type: string
      x-enum-descriptions:
        DisplayAndFormat: Additional information about the instrument and how to display it.
      x-type-warning: FlaggableEnum
    FieldGroupsNullable:
      $ref: '#/components/schemas/FieldGroups'
    FileVersionInfo:
      type: object
      properties:
        Comments:
          type: string
        CompanyName:
          type: string
        FileBuildPart:
          type: integer
          format: int32
        FileDescription:
          type: string
        FileMajorPart:
          type: integer
          format: int32
        FileMinorPart:
          type: integer
          format: int32
        FileName:
          type: string
        FilePrivatePart:
          type: integer
          format: int32
        FileVersion:
          type: string
        InternalName:
          type: string
        IsDebug:
          type: boolean
        IsPatched:
          type: boolean
        IsPreRelease:
          type: boolean
        IsPrivateBuild:
          type: boolean
        IsSpecialBuild:
          type: boolean
        Language:
          type: string
        LegalCopyright:
          type: string
        LegalTrademarks:
          type: string
        OriginalFilename:
          type: string
        PrivateBuild:
          type: string
        ProductBuildPart:
          type: integer
          format: int32
        ProductMajorPart:
          type: integer
          format: int32
        ProductMinorPart:
          type: integer
          format: int32
        ProductName:
          type: string
        ProductPrivatePart:
          type: integer
          format: int32
        ProductVersion:
          type: string
        SpecialBuild:
          type: string
      additionalProperties: false
    Financial:
      title: Represent financial data for a given year.
      type: object
      properties:
        BalanceSheets:
          title: Balance sheets
          type: array
          items:
            $ref: '#/components/schemas/StringNullableKeyValue'
        Incomes:
          title: Income
          type: array
          items:
            $ref: '#/components/schemas/StringNullableKeyValue'
        IsEstimates:
          title: Actual or Estimate
          type: boolean
        KeyNumbers:
          title: Key numbers
          type: array
          items:
            $ref: '#/components/schemas/StringNullableKeyValue'
        ReportingPeriod:
          title: Reporting Period
          type: string
          format: date
          x-type-name: Date
        StatementType:
          title: Financial statement type
          type: string
      additionalProperties: false
    FinancialInformation:
      title: Represent financial data for a given year.
      type: object
      properties:
        BalanceSheets:
          title: Balance sheets
          type: array
          items:
            $ref: '#/components/schemas/StringNullableKeyValue'
        Incomes:
          title: Income
          type: array
          items:
            $ref: '#/components/schemas/StringNullableKeyValue'
        IsEstimates:
          title: Actual or Estimate
          type: boolean
        KeyNumbers:
          title: Key numbers
          type: array
          items:
            $ref: '#/components/schemas/StringNullableKeyValue'
        ReportingPeriod:
          title: Reporting Period
          type: string
          format: date
          x-type-name: Date
        StatementType:
          title: Financial statement type
          type: string
      additionalProperties: false
    FinancialReportType:
      title: "Financial report type\r\n            If no value is provided it will return annual report"
      enum:
        - AnnualFinancialReport
        - SemiAnnualFinancialReport
      type: string
      x-enum-descriptions:
        AnnualFinancialReport: Annual report
        SemiAnnualFinancialReport: Semi-annual report
    FinancialReportTypeNullable:
      $ref: '#/components/schemas/FinancialReportType'
    Format:
      title: Instrument Format
      type: object
      properties:
        Decimals:
          title: The number of decimals prices for this instrument should be displayed with.
          type: integer
          format: int32
      additionalProperties: false
    FundBased:
      title: Represents fund based performance data.
      type: object
      properties:
        Date:
          title: Date
          type: string
          format: date
          x-type-name: Date
        Pct:
          title: Percentage
          type: number
        ReportingPeriod:
          title: Type of the reporting period
          allOf:
            - $ref: '#/components/schemas/ReportingPeriod'
      additionalProperties: false
    FundInfo:
      title: Represent general information for a given Fund instrument.
      type: object
      properties:
        AnalystRiskRatings:
          title: Analyst risk rating
          type: array
          items:
            $ref: '#/components/schemas/AnalystRiskRating'
        AssetClassification:
          title: Asset Classification
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        Benchmark:
          title: Benchmark
          type: string
        BroadAssetClass:
          title: Broad Asset Class
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        Description:
          title: Description
          type: string
        Distribution:
          title: Distribution type
          type: string
        DistributionFeePercOfNAVActualPct:
          title: Actual Distribution Fee  out of Net Asset Value
          type: number
        DistributionFeePercOfNAVEstimatedPct:
          title: Estimated Distribution Fee  out of Net Asset Value
          type: number
        DistributionFrequency:
          title: Distribution frequency
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        Domicile:
          title: Domicile
          type: string
        EquityStyleBox:
          title: Equity style box
          allOf:
            - $ref: '#/components/schemas/EquityStyleBox'
        Exchange:
          title: Exchange
          type: string
        FundBaseCurrency:
          title: Fund base currency
          type: string
        FundCategory:
          title: Morning star category
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        FundSizeMio:
          title: Fund size mio
          type: number
        FundType:
          title: Fund type
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        InceptionDate:
          title: Inception date
          type: string
          format: date
          x-type-name: Date
        IssuerName:
          title: Issuer Name
          type: string
        MaxExitChargesPct:
          title: Max Exit Charge
          type: number
        MaxInitialChargesPct:
          title: Max initial charges
          type: number
        MgtFeeActualPct:
          title: Actual Management fee
          type: number
        MgtFeeEstimatedPct:
          title: Estimated Management fee
          type: number
        OngoingCostActualPct:
          title: Actual on going cost
          type: number
        OngoingCostEstimatedPct:
          title: Estimated on going cost
          type: number
        Rating:
          title: Rating from Morning Star
          type: number
        RatingEffectiveEndDate:
          title: End date for the rate to be effective to
          type: string
          format: date
          x-type-name: Date
        ShareClassCurrency:
          title: Share Class currency
          type: string
        ShareClassInception:
          title: Share class Inception
          type: string
          format: date
          x-type-name: Date
        SustainabilityRating:
          title: Sustainability rating as provided by Morningstar
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        SustainabilityRatingDate:
          title: Date on which the sustainability rating was done as provided by Morning Star.
          type: string
          format: date
          x-type-name: Date
        TransactionFeeEstimatedPct:
          title: Esitmated Transaction Fee
          type: number
        TypicalExitCostPct:
          title: Max Exit Charge
          type: number
      additionalProperties: false
    GeneralInfo:
      title: Represents the general information for the instrument.
      type: object
      properties:
        BondInfo:
          title: Bond information
          allOf:
            - $ref: '#/components/schemas/BondInfo'
        FundInfo:
          title: Fund information
          allOf:
            - $ref: '#/components/schemas/FundInfo'
        StockInfo:
          title: Stock information
          allOf:
            - $ref: '#/components/schemas/StockInfo'
      additionalProperties: false
    GeneralInformation:
      title: Represents the general information for the instrument.
      type: object
      properties:
        StockInformation:
          title: Stock information
          allOf:
            - $ref: '#/components/schemas/StockInformation'
      additionalProperties: false
    IServiceCustomization:
      title: Information about how the services has been customized primarily through OpenApiStartup settings.
      type: object
      properties:
        Customizations:
          title: Gets the customizations.
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
      additionalProperties: false
    InsertInstrumentDocumentRequest:
      title: Insert New Document for instrument request
      required:
        - AssetType
        - DocumentType
        - LanguageCode
        - DocumentName
        - Document
      type: object
      properties:
        AssetType:
          title: Assetype
          allOf:
            - $ref: '#/components/schemas/AssetType'
        BaseContractId:
          title: BaseContract Id
          type: integer
          format: int32
        Document:
          title: Actual document in base64 string
          type: string
        DocumentName:
          title: Document Name
          type: string
        DocumentType:
          title: Document Type
          type: string
        Exchange:
          title: Exchange
          minLength: 1
          type: string
          x-type-name: ExchangeId
        LanguageCode:
          title: Language code for document
          pattern: '^[a-zA-Z]{2}(-[A-Z]{2})?$'
          type: string
          x-type-name: LanguageCode
        Market:
          title: Market
          pattern: '^[A-Z]{2}$'
          type: string
          x-type-name: CountryCode
        OptionRootId:
          title: OptionRoot Id
          type: integer
          format: int32
        OwnerId:
          title: Client id of owner
          minimum: 1
          type: integer
          x-type-name: ClientId
        Provider:
          title: Provider name
          type: string
        Uic:
          title: Identifier of instrument
          type: integer
          format: int32
      additionalProperties: false
    InstrumentDisplayAndFormat:
      title: 'Public data contract containing information about the instrument of a position, which is useful for display and formatting.'
      type: object
      properties:
        Currency:
          title: The ISO currency code of the instrument.
          type: string
        Decimals:
          title: Number of decimals used to format the last traded price.
          type: integer
          format: int32
        Description:
          title: 'Description of instrument (DAX Index - Nov 2013), in English.'
          type: string
        Symbol:
          title: Symbol- A combination of letters used to uniquely identify a traded instrument. e.g. ODAX/X13C8950:xeur.
          type: string
      additionalProperties: false
    InstrumentDocumentDetails:
      title: Instrument documents related details.
      type: object
      properties:
        DocumentDateTime:
          title: Document time stamp.
          type: string
          format: date-time
          x-type-name: UtcDateTime
        DocumentRelationId:
          title: Document Relation Id.
          type: integer
          format: int32
        DocumentType:
          title: The document type.
          allOf:
            - $ref: '#/components/schemas/DocumentType'
        LanguageCode:
          title: The language of the document.
          type: string
      additionalProperties: false
    InstrumentDocumentDetailsListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/InstrumentDocumentDetails'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    InstrumentDocumentInformation:
      title: Instrument documents related information.
      type: object
      properties:
        DocumentDateTime:
          title: Document time stamp.
          type: string
          format: date-time
          x-type-name: UtcDateTime
        DocumentRelationId:
          title: Document Relation Id.
          type: integer
          format: int32
        DocumentType:
          title: The document type.
          type: string
        LanguageCode:
          title: The language of the document.
          type: string
      additionalProperties: false
    InstrumentDocumentInformationResponse:
      title: Instrument Document Information Response
      type: object
      properties:
        DocumentDetails:
          title: List of document details.
          type: array
          items:
            $ref: '#/components/schemas/InstrumentDocumentInformation'
      additionalProperties: false
    InstrumentDocumentRequest:
      title: Request parameters for recommended api.
      required:
        - DocumentType
      type: object
      properties:
        ClientKey:
          title: Client Key for which information is requested.
          minLength: 1
          type: string
          x-network-visibility: internal
          x-type-name: ClientKey
        DocumentType:
          title: Document types for which to request information
          allOf:
            - $ref: '#/components/schemas/DocumentTypes'
      additionalProperties: false
    InstrumentDocumentResponse:
      title: Contains information related to instrument document
      type: object
      properties:
        AssetType:
          title: Asset Type
          allOf:
            - $ref: '#/components/schemas/AssetType'
        BaseContractId:
          title: Base Contract Id
          type: integer
          format: int32
        DisplayAndFormat:
          title: Additional information about the instrument and how to display it.
          allOf:
            - $ref: '#/components/schemas/DisplayAndFormat'
        DocumentRelationId:
          title: Document Id
          type: integer
          format: int32
        DocumentType:
          title: Document Type
          allOf:
            - $ref: '#/components/schemas/DocumentType'
        ExchangeCode:
          title: Exchange Code
          type: string
        LanguageCode:
          title: Language Code
          type: string
        LastUpdated:
          title: Last updated time of the document
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Market:
          title: Market
          type: string
        OptionRootId:
          title: Option Root Id
          type: integer
          format: int32
        OwnerId:
          title: Owner Id
          type: integer
          format: int32
        OwnerName:
          title: Owner Name
          type: string
        Provider:
          title: Provider
          allOf:
            - $ref: '#/components/schemas/Provider'
        Uic:
          title: Identifier for an instrument
          type: integer
          format: int32
      additionalProperties: false
    InstrumentDocumentResponseListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/InstrumentDocumentResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    InstrumentDocumentSearchCriteria:
      title: Search criteria used for searching instrument document details.
      type: object
      properties:
        AssetTypes:
          title: Limits the return information for the mentioned asset types
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
        BaseContractIds:
          title: Limits the return information for the mentioned base contract ids
          type: array
          items:
            type: integer
            format: int32
        DocumentRelationIds:
          title: Limits the return information for the mentioned document relation ids
          type: array
          items:
            type: integer
            format: int32
        DocumentTypes:
          title: Limits the return information for the mentioned document types
          type: array
          items:
            type: integer
            format: int32
        ExchangeCodes:
          title: Limits the return information for the mentioned exchange codes
          type: array
          items:
            type: string
        FromDateTime:
          title: Limits the return information before the mentioned datetime
          type: string
          format: date-time
          x-type-name: UtcDateTime
        LanguageCodes:
          title: Limits the return information for the mentioned language codes
          type: array
          items:
            type: string
        Markets:
          title: Limits the return information for the mentioned makkets
          type: array
          items:
            type: string
        OptionRootIds:
          title: Limits the return information for the mentioned option root ids
          type: array
          items:
            type: integer
            format: int32
        OwnerIds:
          title: Limits the return information for the mentioned owner ids
          type: array
          items:
            type: integer
            format: int32
        Providers:
          title: Limits the return information for the mentioned providers
          type: array
          items:
            type: integer
            format: int32
        ToDateTime:
          title: Limits the return information after the mentioned datetime
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Uics:
          title: Limits the return information for the mentioned uics
          type: array
          items:
            type: integer
            format: int32
      additionalProperties: false
    InstrumentDocumentSearchRequest:
      title: Search criteria used for searching instrument document details.
      type: object
      properties:
        AssetTypes:
          title: Limits the return information for the mentioned asset types
          type: array
          items:
            $ref: '#/components/schemas/AssetType'
        BaseContractIds:
          title: Limits the return information for the mentioned base contract ids
          type: array
          items:
            type: integer
            format: int32
        DocumentRelationIds:
          title: Limits the return information for the mentioned document relation ids
          type: array
          items:
            type: integer
            format: int32
        DocumentTypes:
          title: Limits the return information for the mentioned document types
          type: array
          items:
            $ref: '#/components/schemas/DocumentType'
        ExchangeCodes:
          title: Limits the return information for the mentioned exchange codes
          type: array
          items:
            type: string
        FromDateTime:
          title: Limits the return information before the mentioned datetime
          type: string
          format: date-time
          x-type-name: UtcDateTime
        LanguageCodes:
          title: Limits the return information for the mentioned language codes
          type: array
          items:
            type: string
        Markets:
          title: Limits the return information for the mentioned makkets
          type: array
          items:
            type: string
        OptionRootIds:
          title: Limits the return information for the mentioned option root ids
          type: array
          items:
            type: integer
            format: int32
        OwnerIds:
          title: Limits the return information for the mentioned owner ids
          type: array
          items:
            type: integer
            format: int32
        Providers:
          title: Limits the return information for the mentioned providers
          type: array
          items:
            $ref: '#/components/schemas/Provider'
        ToDateTime:
          title: Limits the return information after the mentioned datetime
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Uics:
          title: Limits the return information for the mentioned uics
          type: array
          items:
            type: integer
            format: int32
      additionalProperties: false
    InstrumentDocumentSearchResponse:
      title: Contains information related to instrument document
      type: object
      properties:
        AssetType:
          title: Asset Type
          allOf:
            - $ref: '#/components/schemas/AssetType'
        BaseContractId:
          title: Base Contract Id
          type: integer
          format: int32
        DisplayAndFormat:
          title: Additional information about the instrument and how to display it.
          allOf:
            - $ref: '#/components/schemas/DisplayAndFormat'
        DocumentRelationId:
          title: Document Id
          type: integer
          format: int32
        DocumentType:
          title: Document Type
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        ExchangeCode:
          title: Exchange Code
          type: string
        LanguageCode:
          title: Language Code
          type: string
        LastUpdated:
          title: Last updated time of the document
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Market:
          title: Market
          type: string
        OptionRootId:
          title: Option Root Id
          type: integer
          format: int32
        OwnerId:
          title: Owner Id
          type: integer
          format: int32
        OwnerName:
          title: Owner Name
          type: string
        Provider:
          title: Provider
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        Uic:
          title: Identifier for an instrument
          type: integer
          format: int32
      additionalProperties: false
    InstrumentDocumentSearchResponseListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/InstrumentDocumentSearchResponse'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    InstrumentInfo:
      title: Analyst Grid
      type: object
      properties:
        AssetType:
          title: Asset Type
          allOf:
            - $ref: '#/components/schemas/AssetType'
        CountryCode:
          title: Country Code
          type: string
        Description:
          title: Description
          type: string
        ExchangeId:
          title: Exchange Id
          type: string
        Format:
          title: Instrument Format
          allOf:
            - $ref: '#/components/schemas/Format'
        Instrument:
          title: Instrument
          type: string
        Uic:
          title: Uic
          type: integer
          format: int32
      additionalProperties: false
    InstrumentLookupData:
      title: Look up data for instruments
      type: object
      properties:
        OptionType:
          title: Type of filter option
          allOf:
            - $ref: '#/components/schemas/SearchOptionType'
        Values:
          title: Lookup values associated with filter option
          type: array
          items:
            $ref: '#/components/schemas/LocalizedInfo'
      additionalProperties: false
    InstrumentLookupDataListResult:
      type: object
      properties:
        Data:
          type: array
          items:
            $ref: '#/components/schemas/InstrumentLookupData'
          description: The collection of entities for this feed.
        MaxRows:
          type: number
          description: The maximum number of rows that can be returned (if applicable).
        __count:
          type: number
          description: The total count of items in the feed.
        __next:
          type: string
          description: The link for the next page of items in the feed.
      additionalProperties: false
    IssueDetails:
      title: Represents issuer details for a given bond instrument.
      type: object
      properties:
        BondType:
          title: 'Bond Type , Applicable for bond only.'
          allOf:
            - $ref: '#/components/schemas/BondTypeNullable'
        BondTypes:
          title: 'Bond types, Applicable for bond only.'
          type: array
          items:
            $ref: '#/components/schemas/BondType'
        ConversionRatioBond:
          title: ConversionRatio of bonds
          type: number
        Coupon:
          title: Coupon
          type: number
        CouponCurrency:
          title: CouponCurrency of bond
          type: string
        CouponFrequency:
          title: Coupon frequency
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        DeflationFloorProtectionType:
          title: 'Deflation floor protection, applicable only for Inflation Linked Bonds.'
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        IssueAmount:
          title: Amount issue
          type: number
        LastCouponDate:
          title: Last coupon date
          type: string
          format: date
          x-type-name: Date
        MinimumOrder:
          title: Minimum order
          type: number
        ModifiedDuration:
          title: Modified Duration
          type: number
        MultipleAmount:
          title: Multiple Amount
          type: number
        NextCouponDate:
          title: Next coupon date
          type: string
          format: date
          x-type-name: Date
        OutstandingAmount:
          title: Amount outstanding
          type: number
        PaymentRank:
          title: Payment rank
          type: string
        UnderlyingAssetType:
          title: The asset type of the underlying instrument.
          allOf:
            - $ref: '#/components/schemas/AssetTypeNullable'
        UnderlyingUic:
          title: The UIC of the underlying instrument.
          type: integer
          format: int32
        YieldToCall:
          title: Yield to call
          type: number
        YieldToMaturity:
          title: Yield to maturity
          type: number
        YieldToWorst:
          title: Yield to worst
          type: number
      additionalProperties: false
    KeyStat:
      title: Key stat
      type: object
      properties:
        Key:
          title: Represent specific constituent of Key stat.
          type: string
        Value:
          title: Value of the corresponding key stat constituent.
          type: number
      additionalProperties: false
    KeywordFilter:
      title: Keyword KeywordFilter
      type: object
      properties:
        Keyword:
          title: Keyword
          type: string
        Values:
          title: Values mapped to the Keyword
          type: array
          items:
            type: string
      additionalProperties: false
    LocalizedInfo:
      title: Provides information about the localization.
      type: object
      properties:
        Key:
          title: Key identifier for the value.
          type: string
        Value:
          title: "A string value that represents the localized text. If the key is not found in specific language, it will be text of default language.\r\n            If the key is not found at all in localization resources, then key will be used in value itself."
          type: string
      additionalProperties: false
    MarketCapType:
      title: Subject to data license agreements. Market cap type
      enum:
        - AboveHundredBillions
        - BelowOneBillion
        - OneToTenBillions
        - TenToHundredBillions
      type: string
      x-enum-descriptions:
        BelowOneBillion: Less than one billion
        OneToTenBillions: 'Equal to one billion, and less than ten billions'
        TenToHundredBillions: 'Equal to ten billions, and less than hundred billions'
        AboveHundredBillions: Equal to hundred billions and above
      x-type-warning: FlaggableEnum
    MarketDataFieldGroup:
      title: Specification of fieldsets to include in results.
      enum:
        - AnalystRating
        - AssetAllocations
        - BestPerformingAnalystRating
        - ComparableCompanies
        - CountryWeightAllocations
        - Financials
        - FinancialsAnnually
        - FinancialsQuarterly
        - GeneralInfo
        - IssueDetails
        - Performance
        - RevenueExposure
        - SectorAllocations
        - TopHoldings
      type: string
      x-enum-descriptions:
        GeneralInfo: GeneralInfo (Applicable to all Asset classes)
        ComparableCompanies: ComparableCompanies (Applicable for Equities)
        RevenueExposure: RevenueExposure (Applicable for Equities)
        Financials: Financials (Applicable for Equities)
        FinancialsAnnually: Financials Annually (Applicable for Equities)
        AnalystRating: AnalystRating (Applicable for Equities)
        Performance: Performance (Applicable for Funds)
        CountryWeightAllocations: CountryWeightAllocations (Applicable for Funds)
        TopHoldings: TopHoldings (Applicable for Funds)
        SectorAllocations: SectorAllocations (Applicable for Funds)
        AssetAllocations: AssetAllocations
        IssueDetails: IssueDetails (Applicable for Bonds)
        BestPerformingAnalystRating: Best Performing Analyst Rating (Applicable for Equities)
        FinancialsQuarterly: Financials Quarterly (Applicable for Equities)
      x-type-warning: FlaggableEnum
    MarketDataFieldRequest:
      title: Represents the request data for the Marked data request
      type: object
      properties:
        FieldSets:
          title: Details about which field sets are requested
          type: array
          items:
            $ref: '#/components/schemas/MarketDataFieldSet'
      additionalProperties: false
    MarketDataFieldSet:
      title: Specification of fieldsets to include in results.
      enum:
        - AnalystConsensus
        - Financials
        - FinancialsAnnually
        - FinancialsQuarterly
        - FinancialsSemiAnnually
        - GeneralInformation
        - KeyStats
      type: string
      x-enum-descriptions:
        GeneralInformation: GeneralInformation
        FinancialsQuarterly: Financials Quarterly
        FinancialsAnnually: Financials Annually
        FinancialsSemiAnnually: Financials Semi Annually
        Financials: Financials
        AnalystConsensus: AnalystConsensus
        KeyStats: KeyStats
      x-type-warning: FlaggableEnum
    MarketDataRequest:
      title: Represents the request data for the Marked data request
      type: object
      properties:
        FieldGroups:
          title: Details about which field groups is requested
          type: array
          items:
            $ref: '#/components/schemas/MarketDataFieldGroup'
      additionalProperties: false
    MarketDataResponse:
      title: Public data contract representing market data for an instrument.
      type: object
      properties:
        AnalystConsensus:
          title: Analyst Consensus
          allOf:
            - $ref: '#/components/schemas/AnalystConsensus'
        AssetType:
          title: Asset Type
          allOf:
            - $ref: '#/components/schemas/AssetType'
        CountryCode:
          title: Issuer Country
          type: string
        CurrencyCode:
          title: Instrument Currency
          type: string
        Description:
          title: Description
          type: string
        ExchangeId:
          title: Exchange id
          type: string
        Financials:
          title: Financials
          type: array
          items:
            $ref: '#/components/schemas/FinancialInformation'
        Format:
          title: Instrument Format
          allOf:
            - $ref: '#/components/schemas/Format'
        GeneralInformation:
          title: General information
          allOf:
            - $ref: '#/components/schemas/GeneralInformation'
        Instrument:
          title: Instrument
          type: string
        KeyStats:
          title: Key Stats
          type: array
          items:
            $ref: '#/components/schemas/KeyStat'
        ListedCurrency:
          title: Listed Currency
          type: string
        TargetPriceCurrency:
          title: Target Price Currency
          type: string
        Uic:
          title: Uic for the request
          type: integer
          format: int32
      additionalProperties: false
    MarketMoversFieldGroup:
      title: Specification of fieldsets to include in results.
      enum:
        - DisplayAndFormat
      type: string
      x-enum-descriptions:
        DisplayAndFormat: Additional information about the instrument and how to display it.
      x-type-warning: FlaggableEnum
    MarketMoversRequest:
      title: Represents the request a market movers list on a given exchange
      required:
        - ExchangeId
        - Interval
      type: object
      properties:
        ExchangeId:
          title: Abbreviated exchange code.
          maxLength: 32
          type: string
        FieldGroups:
          title: Specifies which supplemental data to return.
          type: array
          items:
            $ref: '#/components/schemas/MarketMoversFieldGroup'
        Interval:
          title: Desired time interval for the movers list. Default is intraday.
          allOf:
            - $ref: '#/components/schemas/QueryIntervalNullable'
        MarketCaps:
          title: Specifies list of one or more MarketCapUSD that the gainers or losers list of instruments must match.
          type: array
          items:
            $ref: '#/components/schemas/MarketCapType'
      additionalProperties: false
    MarketMoversSubscriptionRequest:
      title: 'Public request contract for setting up a subscription for top winners, losers or most traded.'
      required:
        - ContextId
        - ReferenceId
      type: object
      properties:
        ContextId:
          title: "The streaming context id that this request is associated with.\r\n            This parameter must only contain letters (a-z) and numbers (0-9) as well as - (dash) and _ (underscore). It is case insensitive. Max length is 50 characters."
          pattern: '^[a-zA-Z0-9_-]{1,50}$'
          type: string
          x-display-order: 1
        ReferenceId:
          title: "Mandatory client specified reference id for the subscription.\r\n            This parameter must only contain alphanumberic characters as well as - (dash) and _ (underscore). Cannot start with _. It is case insensitive. Max length is 50 characters."
          pattern: '^[a-zA-Z0-9-][a-zA-Z0-9_-]{0,49}$'
          type: string
          x-display-order: 2
        Arguments:
          title: Arguments for the subscription request.
          allOf:
            - $ref: '#/components/schemas/MarketMoversRequest'
        Format:
          title: "Optional Media type (RFC 2046) of the serialized data updates that are streamed to the client.\r\n            Currently only application/json and application/x-protobuf is supported.\r\n            If an unrecognized format is specified, the subscription end point will return HTTP status code 400 - Bad format."
          type: string
        KnownSchemas:
          title: "SAXO INTERNAL Optional list of known schemas for the specified . \r\n            If a schema is specified in this list it will not be returned in the  property."
          type: array
          items:
            type: string
          x-network-visibility: internal
        RefreshRate:
          title: "Optional custom refresh rate, measured in milliseconds, between each data update.\r\n            Note that it is not possible to get a refresh rate lower than the rate specified in the\r\n            customer service level agreement (SLA)."
          maximum: 2147483647
          minimum: 0
          type: integer
          format: int32
        ReplaceReferenceId:
          title: Reference id of the subscription that should be replaced.
          pattern: '^[a-zA-Z0-9-][a-zA-Z0-9_-]{0,49}$'
          type: string
        Tag:
          title: Optional client specified tag used for grouping subscriptions.
          type: string
      additionalProperties: false
    MarketMoversSubscriptionResponse:
      title: Public response contract returned after setting up a subscription for market movers.
      type: object
      properties:
        ContextId:
          title: The streaming context id that this response is associated with.
          type: string
          deprecated: true
          x-deprecated-date: '2022-11-01'
          x-display-order: 1
        ReferenceId:
          title: The reference id that (along with streaming context id and session id) identifies the subscription (within the context of a specific service/subscription type)
          type: string
          deprecated: true
          x-deprecated-date: '2022-11-01'
          x-display-order: 2
        Format:
          title: 'The media type (RFC 2046), of the serialized data updates that are streamed to the client.'
          type: string
        InactivityTimeout:
          title: The time (in seconds) that the client should accept the subscription to be inactive before considering it invalid.
          type: integer
          format: int32
        RefreshRate:
          title: Actual refresh rate assigned to the subscription according to the customers SLA.
          type: integer
          format: int32
        Schema:
          title: 'SAXO INTERNAL Optional schema that describes the message format, as in the requested media format. If this name is included in the  property on the  request then the  and  properties will be omitted from the response. Currently this will not return anything for application/json.'
          type: string
          x-network-visibility: internal
        SchemaName:
          title: SAXO INTERNAL Optional schema that names the schema requested. If this name is included in the  property on the  request then the  and  properties will be omitted from the response.
          type: string
          x-network-visibility: internal
        Snapshot:
          title: 'Snapshot of the current data on hand, when subscription was created.'
          allOf:
            - $ref: '#/components/schemas/RankedInstrumentResponse'
        State:
          title: The value "Active".
          type: string
          description: This property is kept for backwards compatibility.
          deprecated: true
          x-deprecated-date: '2022-11-01'
        Tag:
          title: 'Client specified tag assigned to the subscription, if specified in the request.'
          type: string
      additionalProperties: false
    ModelStateDictionary:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    Performance:
      title: Represents performance data for a given Fund.
      type: object
      properties:
        FundBased:
          title: Fund based performance data.
          type: array
          items:
            $ref: '#/components/schemas/FundBased'
      additionalProperties: false
    PostInstrumentDocumentRequest:
      title: Post New Document for instrument request
      required:
        - AssetType
        - DocumentType
        - LanguageCode
        - DocumentName
        - Document
      type: object
      properties:
        AssetType:
          title: Assetype
          allOf:
            - $ref: '#/components/schemas/AssetType'
        BaseContractId:
          title: BaseContract Id
          type: integer
          format: int32
        Document:
          title: Actual document in base64 string
          type: string
        DocumentName:
          title: Document Name
          type: string
        DocumentType:
          title: Document Type
          allOf:
            - $ref: '#/components/schemas/DocumentType'
        Exchange:
          title: Exchange
          minLength: 1
          type: string
          x-type-name: ExchangeId
        LanguageCode:
          title: Language code for document
          pattern: '^[a-zA-Z]{2}(-[A-Z]{2})?$'
          type: string
          x-type-name: LanguageCode
        Market:
          title: Market
          pattern: '^[A-Z]{2}$'
          type: string
          x-type-name: CountryCode
        OptionRootId:
          title: OptionRoot Id
          type: integer
          format: int32
        OwnerId:
          title: Client id of owner
          minimum: 1
          type: integer
          x-type-name: ClientId
        Provider:
          title: Provider name
          allOf:
            - $ref: '#/components/schemas/Provider'
        Uic:
          title: Identifier of instrument
          type: integer
          format: int32
      additionalProperties: false
    ProcessInfo:
      title: Data contract for process status
      type: object
      properties:
        HostName:
          title: Name of computer process is running on
          type: string
        Id:
          title: Process Id
          type: integer
          format: int32
        PeakWorkingSet:
          title: Maximum memory usage(in Bytes)
          type: integer
          format: int64
        ProcessTimePercent:
          title: Measurement of CPU Utilization Percentage based on .net process values
          type: number
        ProcessTimePercentPerformanceCounter:
          title: Measurement of CPU Utilization Percentage based on performance counter
          type: number
        StartTime:
          title: The time the process was started
          type: string
        Threads:
          title: Number of operating system threads running in process
          type: integer
          format: int32
        WorkingSet:
          title: Current memory usage (in Bytes)
          type: integer
          format: int64
      additionalProperties: false
    ProductPageResponse:
      title: Public data contract representing market data for an instrument.
      type: object
      properties:
        AnalystRating:
          title: Analyst rating
          allOf:
            - $ref: '#/components/schemas/AnalystRating'
        AssetAllocations:
          title: Asset allocations
          type: array
          items:
            $ref: '#/components/schemas/AssetAllocation'
        AssetType:
          title: Asset Type
          allOf:
            - $ref: '#/components/schemas/AssetType'
        BestPerformingAnalystRating:
          title: Best Performing Analyst rating
          allOf:
            - $ref: '#/components/schemas/BestPerformingAnalystRating'
        ComparableCompanies:
          title: Comparable companies
          type: array
          items:
            $ref: '#/components/schemas/ComparableCompany'
        CountryCode:
          title: Issuer Country
          type: string
        CountryWeightAllocations:
          title: Country weight allocations
          type: array
          items:
            $ref: '#/components/schemas/CountryWeightAllocation'
        CurrencyCode:
          title: Instrument Currency
          type: string
        Description:
          title: Description
          type: string
        DisplayHint:
          title: Display Hint
          allOf:
            - $ref: '#/components/schemas/DisplayHintTypeNullable'
          x-network-visibility: internal
        ExchangeId:
          title: Exchange id
          type: string
        Financials:
          title: Financials
          type: array
          items:
            $ref: '#/components/schemas/Financial'
        Format:
          title: Instrument Format
          allOf:
            - $ref: '#/components/schemas/Format'
        GeneralInfo:
          title: General information
          allOf:
            - $ref: '#/components/schemas/GeneralInfo'
        Instrument:
          title: Instrument
          type: string
        IssueDetails:
          title: Issue details
          allOf:
            - $ref: '#/components/schemas/IssueDetails'
        MinimumTradeSize:
          title: "The minimum trade size of a given contract. For CFDs and Stocks this value indicates number of contracts. \r\n            For ETOs and Futures this value indicates the minimum number of lots that can be traded. \r\n            In addition, the value is always 1 for ETOs and Futures. However, 1 lot can represent any number of contracts. For FX and Bonds this value\r\n            indicates nominal amount."
          type: number
        MinimumTradeSizeCurrency:
          title: The minimum trade size currency of MutualFund
          type: string
        Performance:
          title: Performance
          allOf:
            - $ref: '#/components/schemas/Performance'
        RevenueExposure:
          title: Revenue Exposures
          allOf:
            - $ref: '#/components/schemas/RevenueExposure'
        SectorAllocations:
          title: Sector allocation
          type: array
          items:
            $ref: '#/components/schemas/SectorAllocation'
        TopHoldings:
          title: Top holdings
          type: array
          items:
            $ref: '#/components/schemas/TopHolding'
        Uic:
          title: Uic for the request
          type: integer
          format: int32
      additionalProperties: false
    Provider:
      title: This can be used to fetch provider
      enum:
        - AllFunds
        - Exchange
        - MorningStar
        - Saxo
        - SaxoInternal
        - Six
        - Solvians
      type: string
      x-enum-descriptions:
        Saxo: Saxo
        Exchange: Exchange
        MorningStar: MorningStar
        AllFunds: AllFunds
        Six: Six
        Solvians: Solvians
        SaxoInternal: Saxo Internal
    QueryInterval:
      title: 'Predefined intervals for querying market movers data, such as gainers/losers and most active.'
      enum:
        - Daily
      type: string
      x-enum-descriptions:
        Daily: Current or most recent trading day. Currently the only supported data.
    QueryIntervalNullable:
      $ref: '#/components/schemas/QueryInterval'
    RankedInstrument:
      title: Instrument and movement details for a top market mover.
      required:
        - Rank
      type: object
      properties:
        Description:
          title: Short instrument name
          type: string
        DisplayAndFormat:
          title: Additional information about the instrument and how to display it.
          allOf:
            - $ref: '#/components/schemas/InstrumentDisplayAndFormat'
        LastTraded:
          title: Most recent traded price
          type: number
        MarketCap:
          title: Specifies Market capitilization - ONLY relevant when gainer losers data are request with MarketCap filter
          type: number
        PercentChange:
          title: Price change from specified start date to now.
          type: number
        Rank:
          title: Specifies instrument's movement relative to other RankedInstrument.
          type: integer
          format: int32
        Uic:
          title: Unique id of the instrument.
          type: integer
          format: int32
      additionalProperties: false
    RankedInstrumentResponse:
      title: 'Public data contract representing a ranked list of instruments that constitute a top winners, losers or most traded.'
      type: object
      properties:
        PriceDelayMinutes:
          title: Price delay level for list as defined by user's market/exchange data subscriptions.
          type: integer
          format: int32
        RankedInstruments:
          title: List of top movers of the requested type and time period.
          type: array
          items:
            $ref: '#/components/schemas/RankedInstrument'
      additionalProperties: false
    RankedInstrumentResponseDomainEvent:
      type: object
      properties:
        Data:
          title: 'The type of data transported by the DomainEvent instance (e.g. price update, position list update etc.).'
          allOf:
            - $ref: '#/components/schemas/RankedInstrumentResponse'
        PartitionNumber:
          title: The partition number if this DomainEvent is a partition.
          type: integer
          format: int32
        ReferenceId:
          title: 'Client specified id, which is sent back to the client with every data update.'
          type: string
        Timestamp:
          title: The UTC date and time of the event.
          type: string
          format: date-time
          x-type-name: UtcDateTime
        TotalPartitions:
          title: The total number of partitions if this DomainEvent is a partition.
          type: integer
          format: int32
      additionalProperties: false
    ReportingPeriod:
      title: 'Represents key,value pair for ReportingPeriod'
      type: object
      properties:
        DisplayValue:
          title: DisplayValue
          type: string
        Key:
          title: Key
          type: string
      additionalProperties: false
    ResponseFilterRegistration:
      title: Response filter/contract type registration.
      type: object
      properties:
        Contract:
          title: Contract type for which a response filter was registered.
          type: string
        Processor:
          title: ResponseFilterProcessor type handling contract.
          type: string
      additionalProperties: false
    RevenueExposure:
      title: Represents Revenue Exposure
      type: object
      properties:
        Countries:
          title: Countries
          type: array
          items:
            $ref: '#/components/schemas/Country'
        Segments:
          title: Segments
          type: array
          items:
            $ref: '#/components/schemas/Segment'
      additionalProperties: false
    RiskRatingCategory:
      title: Represents the available risk rating categories
      enum:
        - ReturnVsCategory
        - RiskVsCategory
      type: string
      x-enum-descriptions:
        RiskVsCategory: Risk vs Category
        ReturnVsCategory: Return vs Category
    RiskRatingType:
      title: Represents the available risk rating types
      enum:
        - Average
        - Etc
        - High
        - Medium
      type: string
      x-enum-descriptions:
        High: High
        Medium: Medium
        Average: Average
        Etc: Etc
    SearchOptionType:
      title: Search based on document types and provider types
      enum:
        - All
        - DocumentTypes
        - Providers
      type: string
      x-enum-descriptions:
        DocumentTypes: DocumentTypes
        Providers: Providers
        All: Document Types and Providers
      x-type-warning: FlaggableEnum
    SectorAllocation:
      title: Defines the percentage allocation of a Fund in particular Sector.
      type: object
      properties:
        Key:
          title: Key - Sector name
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        Pct:
          title: Percentage allocation
          type: number
      additionalProperties: false
    Segment:
      title: Represents revenue percentage for a given segment key.
      type: object
      properties:
        Key:
          title: Key
          type: string
        Pct:
          title: Percentage
          type: number
      additionalProperties: false
    ServerStatus:
      title: Data contract for server status.
      type: object
      properties:
        AppPoolId:
          title: Gets the current app pool id.
          type: string
        ApplicationName:
          title: Name of service group (host assembly)
          type: string
        ApplicationVersion:
          title: Version of service group (host assembly)
          type: string
        BuildTime:
          title: Gets the build time of the current assembly.
          type: string
        Created:
          title: UtcDateTime stamp for when this object was created.
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Customization:
          title: Information about how the services has been customized primarily through OpenApiStartup settings.
          allOf:
            - $ref: '#/components/schemas/IServiceCustomization'
        Dependencies:
          title: Information about the service dependencies.
          type: array
          items:
            $ref: '#/components/schemas/DependencyInfo'
        DeployTime:
          title: Gets the datetime of deployment (last modified).
          type: string
        DiskDrives:
          title: DiskDrives (drive space in GB)
          type: array
          items:
            $ref: '#/components/schemas/DiskDrive'
        FrameworkVersion:
          title: Version of OpenAI Framework in use
          type: string
        InternalInformation:
          title: InternalInformation
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
        LeasePeriod:
          title: The lease period (expiry) of the authentication token.
          type: integer
          format: int32
        LoadedAssemblies:
          title: 'Loaded assemblies, full'
          type: array
          items:
            $ref: '#/components/schemas/FileVersionInfo'
        LoadedAssembliesVersions:
          title: Loaded assemblies and versions
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
        LogicalProcessors:
          title: Information about number of logical processors on the box
          type: integer
          format: int32
        MachineUptime:
          title: Ticks since the machine was started.
          type: integer
          format: int64
        MachineUptimeText:
          title: Ticks since the machine was started in text.
          type: string
        NetFrameworkVersion:
          title: Version of .NET Framework in use
          type: string
        OSVersion:
          title: Version of server hosting Operating System.
          type: string
        PerformanceCounters:
          title: Values of performance counters reported by the servicegroup
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
        Process:
          title: Information about current process.
          allOf:
            - $ref: '#/components/schemas/ProcessInfo'
        ResponseFilters:
          title: Lists registered response filter/contract types.
          type: array
          items:
            $ref: '#/components/schemas/ResponseFilterRegistration'
        RouteTable:
          title: Gets or the route table.
          type: array
          items:
            $ref: '#/components/schemas/ApiGroupInfo'
        RunningIdentity:
          title: Identity in which the application is running.
          type: string
        SystemEnvironment:
          title: "SystemEnvironment is read from configuration and has to be one of the following:\r\n            \"Dev(elopment)\", \"Test\", \"Sim(ulation)\" or \"Live\"."
          type: string
        SystemUptime:
          title: Ticks since the service group was started.
          type: integer
          format: int64
        SystemUptimeText:
          title: Ticks since the service group was started in text.
          type: string
        TimeSpentMs:
          title: Time spent in ms to generate the status information.
          type: number
        ToolId:
          title: System ToolId (hard coded as 40 for OpenApi). See Iit.FrontOffice.Trading.Public.ToolId enum for full definition.
          type: integer
          format: int32
        WebAPIVersion:
          title: Version of WebAPI in use
          type: string
      additionalProperties: false
    StockInfo:
      title: Represent general information for a given Stock instrument.
      type: object
      properties:
        Beta:
          title: Beta
          type: number
        Description:
          title: Description
          type: string
        DividentYieldPct:
          title: Divident yield percentage
          type: number
        MarketCap:
          title: Market cap
          type: number
        NoOfEmployees:
          title: Number of employees
          type: number
        PriceEarnings:
          title: Price Earning ratio
          type: number
        SalesGrowthRatePct:
          title: Sales growth rate percentage
          type: number
        Sector:
          title: Sector from Morningstar
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        SubSector:
          title: Sub sector from Morningstar
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
      additionalProperties: false
    StockInformation:
      title: Stock information
      type: object
      properties:
        AboutCompany:
          title: About Company
          type: string
        Industry:
          title: Industry
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        MarketCap:
          title: Market cap
          type: number
        MarketCapCurrencyCode:
          title: Market cap currency code
          type: string
        OneYearReturnPct:
          title: One year return percentage
          type: number
        Sector:
          title: Sector
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
        ThreeYearsReturnPct:
          title: Three years return percentage
          type: number
        YtdReturnPct:
          title: Ytd return percentage
          type: number
      additionalProperties: false
    StringNullableKeyValue:
      type: object
      properties:
        Key:
          title: Represents a Key.
          type: string
        Value:
          title: Value of the corresponding Key.
          type: number
      additionalProperties: false
    StringStringKeyValuePair:
      type: object
      properties:
        Key:
          type: string
        Value:
          type: string
      additionalProperties: false
    SubscriptionInfoFilter:
      title: Represents subscription filters for querying the subscription diagnostics endpoint.
      type: object
      properties:
        ApplicationId:
          title: Restricts the subscriptions to an application if specified.
          minimum: 1
          type: integer
          format: int32
          x-type-name: ApplicationId
        ContextId:
          title: Restricts the subscriptions to a streaming session if specified along with a session id.
          type: string
        Publisher:
          title: Restricts the subscriptions to a publisher if specified.
          type: string
        SessionId:
          title: Restricts the subscriptions to a session if specified.
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
          x-type-name: SessionId
        UserId:
          title: Restricts the subscriptions to a MITS user if specified.
          allOf:
            - $ref: '#/components/schemas/UserIdNullable'
      additionalProperties: false
    TopHolding:
      title: Represents top holdings for a given key
      type: object
      properties:
        AllocationPct:
          title: Allocation percentage
          type: number
        Description:
          title: Description
          type: string
        Type:
          title: Asset type
          allOf:
            - $ref: '#/components/schemas/LocalizedInfo'
      additionalProperties: false
    UpdateInstrumentDocumentRequest:
      title: Contract for updating instrument document
      required:
        - DocumentName
        - Document
      type: object
      properties:
        Document:
          title: Base64 encoded document that needs to be updated.
          type: string
        DocumentName:
          title: Document Name
          type: string
      additionalProperties: false
    UserId:
      minimum: 1
      type: integer
      format: int32
    UserIdNullable:
      $ref: '#/components/schemas/UserId'
  responses:
    BadRequest:
      description: One or more of the provided parameters are invalid.
      content:
        application/json:
          schema:
            required:
              - ErrorCode
              - Message
            type: object
            properties:
              ErrorCode:
                enum:
                  - InvalidRequest
                type: string
                x-enum-descriptions:
                  InvalidRequest: Default error code returned when it cannot be determined which part of the request is malformed.
              Message:
                type: string
              ModelState:
                $ref: '#/components/schemas/ModelStateDictionary'
    ServiceUnavailable:
      description: Service Unavailable.
    TooManyRequests:
      description: The request was rejected due to rate limit being exceeded.
    Unauthorized:
      description: Indicates that the request was rejected because the 'Authorization' header was missing in the request or contained an invalid security token.
  parameters:
    XInternalIP:
      name: X-Internal-IP
      in: header
      description: Required header for access to network internal endpoints.
      required: true
      schema:
        enum:
          - '1'
        type: string
  securitySchemes:
    OpenApiJWTSecurityScheme:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OpenApiOAuthSecurityScheme:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://idp.blue.sso.sys.dom/authorize
          tokenUrl: https://idp.blue.sso.sys.dom/token
          scopes: { }
tags:
  - name: Instrument Document
    description: Provides endpoints that returns a document for requested instrument.
  - name: KeyInfoDocument
    description: Provide endpoints that returns pdf document for requested instrument
  - name: MarketData
    description: Read only end points serving Market Data for various Instruments.
  - name: MarketMovers
    description: 'Provides end points for polling and subscribing to gainers, losers and most active insruments on an exchange.'