openapi: 3.0.1
info:
  title: Services.ClientReporting
  description: The Client Reporting service group provides endpoints to retrieve various reports in .pdf/.xls format.
  version: 1.1.462+7db82139b4
  x-framework-version: 24.0.21+826409a78a
  x-machine: DEVOAWEB10-DK1
servers:
  - url: https://blue.openapi.sys.dom/openapi
paths:
  /cr/apistatus:
    get:
      description: Returns default server status information
      operationId: cr_apistatus
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServerStatus'
              example: {
  "Created": "0001-01-01T00:00:00Z",
  "LeasePeriod": 0,
  "LogicalProcessors": 0,
  "MachineUptime": 0,
  "SystemUptime": 0,
  "TimeSpentMs": 170.24,
  "ToolId": 0
}
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  /cr/v1/reports/accountvaluations:
    get:
      tags:
        - Historical Report Data - Account Valuations
      summary: Get Account valuations report for the account
      description: "Get Account valuations report for the account.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: AccountValuationsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountSubType
          in: query
          description: Account sub type
          required: true
          schema:
            $ref: '#/components/schemas/AccountSubType'
          example: '2021-07-10T00:00:00.0000000+00:00'
        - name: ClientKey
          in: query
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: Year
          in: query
          description: Year
          required: true
          schema:
            type: string
          example: 2021
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/securitieslendingdetails/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Securities Lending Details
      summary: Get Securities Lending Details report of a specified client
      description: "Get Securities Lending Details report of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n*   Excel\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf\r\n*   For Excel : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      operationId: SecuritiesLendingDetailsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: Group key of the accounts for which report is to be generated.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: Account key of the account for which report is to be generated.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include Securities Lending Details from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include Securities Lending Details till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/holdings/{ClientKey}/{FromDate}/{ToDate}':
    get:
      tags:
        - Historical Report Data - Holdings
      summary: Get Holding details report for the accounts of a specified client
      description: "Get Holding details report for the accounts of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: HoldingsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: path
          description: From date in UTC
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2021-07-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: path
          description: To date in UTC
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2021-07-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/investmentplan/{ClientKey}':
    get:
      tags:
        - InvestmentPlan
      summary: Get Investment Plan report for a specified client
      description: "Get Investment Plan report for a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n*   Excel\r\n\r\nTo request a specific format, please set the 'Accept' header on your request to one of the following:\r\n\r\n\r\n*   For PDF : application/pdf\r\n*   For Excel : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      operationId: InvestmentPlanGetResponseAsync
      parameters:
        - name: AccountKey
          in: query
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cr/api/oas3:
    get:
      summary: Get Open API Specification 3.0 documentation for the service group.
      description: Returns the OAS 3 document for the service group.
      operationId: OasGetOas3
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  '/cr/v1/reports/accountsummaries/pensions/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Pension account summary
      summary: Pension account summary
      description: "Get pension account summary report for the accounts of a Specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a specific format, please set the 'Accept' header on your request to one of the following:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: AccountSummaryGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: Account group key
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: QEPWm2RyUefWuaKFjRaJag==
        - name: AccountKey
          in: query
          description: Account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/ShareDividends/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Share Dividends
      summary: Get Share Dividends report for the accounts of a specified client
      description: "Get Share Dividends report for the accounts of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: ShareDividendsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include ShareDividends from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include ShareDividends till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cr/v1/reports/clientInfo/PersonalData:
    get:
      tags:
        - Client Personal Details
      summary: Get Client Personal Details report for the accounts of a Specified client
      description: "Get Client Personal Details report for the accounts of a Specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a specific format, please set the 'Accept' header on your request to one of the following:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: PiiClientDetailsGetAsync
      parameters:
        - name: ClientKey
          in: query
          description: Unique id of the client.
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/TradesExecuted/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Trades Executed
      summary: Get Trades Executed report for the accounts of a specified client
      description: "Get Trades Executed report for the accounts of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n*   Excel\r\n\r\nTo request a specific format, please set the 'Accept' header on your request to one of the following:\r\n\r\n\r\n*   For PDF : application/pdf\r\n*   For Excel : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      operationId: TradesExecutedGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include TradesExecuted from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include TradesExecuted till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cr/v1/convertedData/{FileName}':
    post:
      tags:
        - ConvertedData
      summary: Export to CSV or Excel data
      description: Takes input JSON and returns converted CSV or Excel file
      operationId: ConvertedDataPost
      parameters:
        - name: FileName
          in: path
          description: The File Name of the output csv or excel file. It is optional string parameter with default of "CSVDataExport.csv" or "ExcelDataExport.xlsx" as per accept header media type
          required: true
          schema:
            type: string
          example: CSVDataExport.csv/ExcelDataExport.xlsx
      requestBody:
        content:
          application/json:
            schema:
              type: array
            example: []
      responses:
        '201':
          description: Created
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - InputNotInCorrectFormat
                      - InputTooComplex
                    type: string
                    x-enum-descriptions:
                      InputNotInCorrectFormat: Input not in correct format.
                      InputTooComplex: Input too complex.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-application-visibility: saxo-only
  '/cr/v1/reports/ClosedPositions/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Closed Positions
      summary: Get Closed Positions report for the accounts of a Specified client
      description: "Get Closed Positions report for the accounts of a Specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n*   Excel\r\n\r\nTo request a specific format, please set the 'Accept' header on your request to one of the following:\r\n\r\n\r\n*   For PDF : application/pdf\r\n*   For Excel : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      operationId: ClosedPositionsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include Closed Positions from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include Closed Positions till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/Transactions/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Transactions
      summary: Get transactions report for all the accounts of a specified client and account
      description: "Get transactions report for all the accounts of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n*   Excel\r\n\r\nTo request a specific format, please set the 'Accept' header on your request to one of the following:\r\n\r\n\r\n*   For PDF : application/pdf\r\n*   For Excel : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      operationId: TransactionsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/CarryingCostDetails/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Carrying Cost Details
      summary: Get Carrying Cost Details report for the accounts of a Specified client
      description: "Get Carrying Cost Details report for the accounts of a Specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: CarryingCostDetailsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include Carrying Cost Details from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include Carrying Cost Details till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/events/{EventId}/narratives':
    get:
      tags:
        - Corporate Action - Narratives
      summary: Get narratives for specified corporate action event
      description: "Get narratives for specified corporate action event.\r\n            \r\nNarratives are available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header in your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: NarrativeGetAsync
      parameters:
        - name: ClientKey
          in: query
          description: Client identifier
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: EventId
          in: path
          description: Corporate action identifier
          required: true
          schema:
            type: string
          example: 875684
        - name: IncludeSubAccounts
          in: query
          description: Indicate whether to include events from sub-clients.
          schema:
            type: boolean
          example: false
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cr/v1/reports/orderactivities:
    get:
      tags:
        - Historical Report Data - Order Activities
      summary: Order activities history report
      description: Get Order activities history report
      operationId: OrderActivitiesGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: 'Account Group key: If specified will only return entries pertaining to specified Account Group'
          schema:
            title: 'Account Group key: If specified will only return entries pertaining to specified Account Group'
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: "value3ee4796f-9bd9-4862-9bc9-ebc74685bb36"
        - name: AccountKey
          in: query
          description: 'Account key: If specified will only return entries pertaining to specified Account'
          schema:
            title: 'Account key: If specified will only return entries pertaining to specified Account'
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: "7f24e87d-3f45-4dbc-a983-ee904216908b"
        - name: ClientKey
          in: query
          description: 'Client key: If specified will only return entries pertaining to specified client and its sub clients depending upon includeSubAccounts.'
          required: true
          schema:
            title: 'Client key: If specified will only return entries pertaining to specified client and its sub clients depending upon includeSubAccounts.'
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: "517c2910-d988-4b31-9865-878135eaed39"
        - name: Duration
          in: query
          description: 'Duration: If specified will only return entries with the specified duration type.'
          schema:
            $ref: '#/components/schemas/OpenOrderDurationNullable'
          example: GoodTillDate
        - name: EntryType
          in: query
          description: 'EntryType: optional. Defaults to ''All'': Return all entries pertaining to any order. ''Last'': Only return the latest state of an order ignoring ToDateTime (if any).'
          schema:
            $ref: '#/components/schemas/OrderEntryTypeNullable'
          example: All
        - name: ExpirationDateTime
          in: query
          description: 'ExpirationDateTime: If specified will only return entries with the specified expiry date. The expiration date, should only be set if the duration type is GoodTillDate. If the field contains the time, it must always be expressed in the exchange local time and Time zone indication must never be added. The time part should be in the following format: HH:mm, where HH is 24 hour clock. Seconds and milliseconds are not allowed. The expiration date is applicable only with Duration ''GoodTillDate'''
          schema:
            title: 'ExpirationDateTime: If specified will only return entries with the specified expiry date. The expiration date, should only be set if the duration type is GoodTillDate. If the field contains the time, it must always be expressed in the exchange local time and Time zone indication must never be added. The time part should be in the following format: HH:mm, where HH is 24 hour clock. Seconds and milliseconds are not allowed. The expiration date is applicable only with Duration ''GoodTillDate'''
            type: string
          example: "2023-01-29T03:13:56.3024004"
        - name: FromDate
          in: query
          description: 'Only include entries, with a ActivityDateTime greater than or equal to FromDateTime. FromDateTime can go back to maximum 3-years and It should be UTC Date Time. FromDateTime is required if ToDateTime is specified. If OrderId, FromDateTime and ToDateTime are not specified then response include entries with ActivityDateTime greater than past 3 month'
          schema:
            title: 'Only include entries, with a ActivityDateTime greater than or equal to FromDateTime. FromDateTime can go back to maximum 3-years and It should be UTC Date Time. FromDateTime is required if ToDateTime is specified. If OrderId, FromDateTime and ToDateTime are not specified then response include entries with ActivityDateTime greater than past 3 month'
            type: string
            format: date-time
            x-type-name: UtcDateTime
          example: "2023-08-24T09:05:03.504484Z"
        - name: OrderId
          in: query
          description: 'OrderId: Will only return entries pertaining to specified OrderId.'
          schema:
            title: 'OrderId: Will only return entries pertaining to specified OrderId.'
            type: string
          example: "e89651af-80ab-4713-86fc-f016dbc9abd1"
        - name: OrderStates
          in: query
          description: 'saxoInternal- OrderStates: If specified will only return entries with the specified Order State. By default all options will return'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OrderState'
        - name: OrderStatuses
          in: query
          description: 'OrderStatuses: If specified will only return entries with the specified OrderStatus'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OrderStatus'
          example: Placed
        - name: OrderTypes
          in: query
          description: 'OrderTypes: If specified will only return entries with the specified order type.'
          schema:
            type: array
            items:
              $ref: '#/components/schemas/PlaceableOrderType'
          example: 'Market,Limit'
        - name: ToDate
          in: query
          description: 'Only include entries, with a ActivityDateTime less than or equal to ToDateTime. Cannot be used with EntryType="Last". Maximum 3-months date range can be accepted from FromDateTime. ToDateTime is required if FromDateTime is specified'
          schema:
            title: 'Only include entries, with a ActivityDateTime less than or equal to ToDateTime. Cannot be used with EntryType="Last". Maximum 3-months date range can be accepted from FromDateTime. ToDateTime is required if FromDateTime is specified'
            type: string
            format: date-time
            x-type-name: UtcDateTime
          example: "2023-08-24T09:05:03.504484Z"
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/srdcashadjustment/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Srd Cash Adjustments
      summary: Get Srd Cash Adjustments report for the accounts of a Specified client
      description: "Get Srd Cash Adjustments report for the accounts of a Specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: SrdCashAdjustmentsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include Srd Cash Adjustments from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include Srd Cash Adjustments till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/Portfolio/me/{FromDate}/{ToDate}':
    get:
      tags:
        - Historical Report Data - Portfolio Management
      summary: Get Portfolio report for the logged in user
      description: "Get Portfolio report for the logged in user.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: PortfolioGetMeAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: FromDate
          in: path
          description: From date in UTC
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: IncludeYTDInformation
          in: query
          description: Include additional information about performance Year To Date.
          schema:
            type: boolean
          example: true
        - name: OptionalReportSections
          in: query
          description: Parameter specifing if any optional section is needed in the report
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OptionalReportSection'
          example: Trasactions
        - name: ToDate
          in: path
          description: To date in UTC
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cr/v1/reports/Portfolio/{ClientKey}/{FromDate}/{ToDate}':
    get:
      tags:
        - Historical Report Data - Portfolio Management
      summary: Get Portfolio report for the accounts of a specified client
      description: "Get Portfolio report for the accounts of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: PortfolioGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: path
          description: From date in UTC
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: IncludeYTDInformation
          in: query
          description: Include additional information about performance Year To Date.
          schema:
            type: boolean
          example: true
        - name: OptionalReportSections
          in: query
          description: Whether any optional section is needed in the report
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OptionalReportSection'
          example: Trasactions
        - name: ToDate
          in: path
          description: To date in UTC
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cr/v1/reports/ForexCommissions/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Forex Commissions
      summary: Get Forex Commissions report of a Specified client
      description: "Get Forex Commissions report of a Specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: ForexCommissionsGetAsync
      parameters:
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include Forex Commissions from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include Forex Commissions till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/AuditRequest/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Audit Request
      summary: Get Audit Request report for the accounts of a specified client
      description: "Get Audit Request report for the accounts of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: AuditRequestGetAsync
      parameters:
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: ReportDate
          in: query
          description: Include Audit Request from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/quarterlyportfolio/me/{Fromdate}/{Todate}':
    get:
      tags:
        - Historical Report Data - quarterly Portfolio Management
      summary: Get Quarterly Portfolio report for the logged in user
      description: "Get Quarterly Portfolio report for the logged in user.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: QuarterlyPortfolioGetMeAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: Fromdate
          in: path
          description: From date in UTC
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: Todate
          in: path
          description: To date in UTC
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/quarterlyportfolio/{ClientKey}/{Fromdate}/{Todate}':
    get:
      tags:
        - Historical Report Data - quarterly Portfolio Management
      summary: Get  Quarterly Portfolio report for the accounts of a specified client
      description: "Get Quarterly Portfolio report for the accounts of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: QuarterlyPortfolioGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: Fromdate
          in: path
          description: From date in UTC
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: Todate
          in: path
          description: To date in UTC
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/TransactionBalance/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Transaction Balance
      summary: Get Transaction Balance report for the accounts of a Specified client
      description: "Get Transaction Balance report for the accounts of a Specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n*   Excel\r\n\r\nTo request a specific format, please set the 'Accept' header on your request to one of the following:\r\n\r\n\r\n*   For PDF : application/pdf\r\n*   For Excel : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      operationId: TransactionBalanceGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include TransactionBalance from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include TransactionBalance till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/CfdFinanceDetails/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Cfd Finance Details
      summary: Get Cfd Finance Details report of a Specified client
      description: "Get Cfd Finance Details report of a Specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: CfdFinanceDetailsGetAsync
      parameters:
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include Cfd Finance Details from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include Cfd Finance Details till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/ipofinancedetails/{ClientKey}':
    get:
      tags:
        - Historical Report Data - IPO Finance Details
      summary: Get IPO Finance Details report of a Specified client
      description: "Get IPO Finance Details report of a Specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n*   Excel\r\n\r\nTo request a specific format, please set the 'Accept' header on your request to one of the following:\r\n\r\n\r\n*   For PDF : application/pdf\r\n*   For Excel : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      operationId: IPOFinanceDetailsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: Unique identifier of account group
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: AccountKey
          in: query
          description: Unique identifier of account
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include IPO Finance Details from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include IPO Finance Details till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  /cr/diagnostics/users:
    get:
      description: Get information about unique users served by the publishers and other performance related information.
      operationId: cr_users
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  /cr/diagnostics/subscriptions:
    get:
      description: "Gets information about subscriptions in the publishers.\r\n\r\nIf no filter is specified all subscriptions from all publishers are returned."
      operationId: cr_subscriptions
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
        - name: ApplicationId
          in: query
          description: Restricts the subscriptions to an application if specified.
          schema:
            title: Restricts the subscriptions to an application if specified.
            minimum: 1
            type: integer
            format: int32
            x-type-name: ApplicationId
          example: "206"
        - name: ContextId
          in: query
          description: Restricts the subscriptions to a streaming session if specified along with a session id.
          schema:
            title: Restricts the subscriptions to a streaming session if specified along with a session id.
            type: string
          example: "e89651af-80ab-4713-86fc-f016dbc9abd1"
        - name: Publisher
          in: query
          description: Restricts the subscriptions to a publisher if specified.
          schema:
            title: Restricts the subscriptions to a publisher if specified.
            type: string
          example: "e89651af-80ab-4713-86fc-f016dbc9abd1"
        - name: SessionId
          in: query
          description: Restricts the subscriptions to a session if specified.
          schema:
            title: Restricts the subscriptions to a session if specified.
            pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
            type: string
            x-type-name: SessionId
          example: "e2da1855-9f50-4b23-be71-b8c178e3d581"
        - name: UserId
          in: query
          description: Restricts the subscriptions to a MITS user if specified.
          schema:
            title: Restricts the subscriptions to a MITS user if specified.
            allOf:
              - $ref: '#/components/schemas/UserIdNullable'
          example: 1814304310
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  /cr/diagnostics/publishers:
    get:
      description: Returns the list of publisher names.
      operationId: cr_publishers
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '200':
          description: OK
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-network-visibility: internal
  '/cr/v1/reports/SubscriptionBilling/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Subscription Billing History
      summary: Get Subscription Billing History report for the accounts of a specified client
      description: "Get Subscription Billing History report for the accounts of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: SubscriptionBillingHistoryGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include Subscription Billing History from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include Subscription Billing History till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/TradeCorrections/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Trade Corrections
      summary: Get Trade Corrections report for the accounts of a specified client
      description: "Get Trade Corrections report for the accounts of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: TradeCorrectionsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: path
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: FromDate
          in: query
          schema:
            type: string
            format: date
            x-type-name: Date
        - name: ToDate
          in: query
          schema:
            type: string
            format: date
            x-type-name: Date
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/ConsolidatedFeeSchedule/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Consolidated Fee Schedule
      summary: Get Consolidated Fee Schedule report for the accounts of a Specified client
      description: "Get Consolidated Fee Schedule report for the accounts of a Specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n*   Excel\r\n\r\nTo request a specific format, please set the 'Accept' header on your request to one of the following:\r\n\r\n\r\n*   For PDF : application/pdf\r\n*   For Excel : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      operationId: ConsolidatedFeeScheduleGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include Consolidated Fee Schedule from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include Consolidated Fee Schedule till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/srdfinancedetails/{ClientKey}':
    get:
      tags:
        - Historical Report Data - SRD Finance Details
      summary: Get SRD Finance Details report of a Specified client
      description: "Get SRD Finance Details report of a Specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n*   Excel\r\n\r\nTo request a specific format, please set the 'Accept' header on your request to one of the following:\r\n\r\n\r\n*   For PDF : application/pdf\r\n*   For Excel : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      operationId: SrdFinanceDetailsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include SRD Finance Details from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include SRD Finance Details till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/CloseoutOverview/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Closeout Overview
      summary: Get Closeout Overview report for the accounts of a specified client
      description: "Get Closeout Overview report for the accounts of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: CloseoutOverviewGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: path
          description: The client key.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: FromDate
          in: query
          description: From date.
          schema:
            type: string
            format: date
            x-type-name: Date
        - name: ToDate
          in: query
          description: To date.
          schema:
            type: string
            format: date
            x-type-name: Date
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/CfdCashAdjustment/{ClientKey}':
    get:
      tags:
        - Historical Report Data - CFD Cash Adjustments
      summary: Get CFD Cash Adjustments report for the accounts of a Specified client
      description: "Get CFD Cash Adjustments report for the accounts of a Specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: CfdCashAdjustmentsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include CFD Cash Adjustments from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include CFD Cash Adjustments till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/AccountStatement/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Account Statement
      summary: Get Account statement report for the accounts of a Specified client
      description: "Get an account statement report for the accounts of a Specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n*   Excel\r\n\r\nTo request a specific format, please set the 'Accept' header on your request to one of the following:\r\n\r\n\r\n*   For PDF : application/pdf\r\n*   For Excel : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      operationId: AccountStatementGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include Account statement from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include Account statement till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cr/v1/reports/FxOptions/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Forex Options
      summary: Get Forex Options report for the accounts of a specified client
      description: "Get Forex Options report for the accounts of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: FxOptionsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: path
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: FromDate
          in: query
          schema:
            type: string
            format: date
            x-type-name: Date
        - name: ToDate
          in: query
          schema:
            type: string
            format: date
            x-type-name: Date
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/FinancialStatement/AIB/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Financial Statement
      summary: Get Financial Statement report for the accounts of AIB clients
      description: "Get Financial Statement report for the accounts of AIB clients.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: FinancialStatementGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: path
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: FromDate
          in: query
          schema:
            type: string
            format: date
            x-type-name: Date
        - name: ToDate
          in: query
          schema:
            type: string
            format: date
            x-type-name: Date
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/TradeDetails/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Trade Details
      summary: Get Trade Details report for the accounts of a specified client
      description: "Get Trade Details report for the accounts of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: TradeDetailsGetAsync
      parameters:
        - name: AccountKey
          in: query
          description: The account key.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FilterType
          in: query
          description: Values which gets included in the request
          required: true
          schema:
            $ref: '#/components/schemas/BookingRequestType'
        - name: FilterValue
          in: query
          description: Id for the specified filter type.
          required: true
          schema:
            type: string
        - name: TradeId
          in: query
          description: Trade id
          required: true
          schema:
            type: string
          example: 293832
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  /cr/online:
    post:
      description: Attempts to take the application online
      operationId: cr_online
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-application-visibility: saxo-only
      x-network-visibility: internal
  /cr/isalive:
    get:
      description: Determines whether this service-group instance is alive.
      operationId: cr_isalive
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: string
              example: "e89651af-80ab-4713-86fc-f016dbc9abd1"
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
  /cr/offline:
    post:
      description: Attempts to take the application offline
      operationId: cr_offline
      parameters:
        - $ref: '#/components/parameters/XInternalIP'
      requestBody:
        content:
          application/json:
            schema:
              type: string
            example: "00:00:00.0000075"
      responses:
        '202':
          description: Accepted
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      x-application-visibility: saxo-only
      x-network-visibility: internal
  '/cr/v1/reports/MarginLendingInterestDetails/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Margin Lending Interest Details
      summary: Get Margin Lending Interest Details report of a specified client
      description: "Get Margin Lending Interest Details report of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n*   Excel\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf\r\n*   For Excel : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      operationId: MarginLendingInterestDetailsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: Group key of the accounts for which report is to be generated.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: Account key of the account for which report is to be generated.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include Margin Lending Interest Details from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include Margin Lending Interest Details till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/BondCouponPayments/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Bond Coupon Payments
      summary: Get Bond Coupon Payments report for the accounts of a specified client
      description: "Get Bond Coupon Payments report for the accounts of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: BondCouponPaymentsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include BondCouponPaymentsService from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include BondCouponPaymentsService till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/SecurityTransfer/{ClientKey}':
    get:
      tags:
        - Security Transfer
      summary: Get Security Transfer report for the accounts of a specified client
      description: "Get Security Transfer report for the accounts of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: SecurityTransferGetAsync
      parameters:
        - name: ClientKey
          in: path
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: TransferIds
          in: query
          description: Comma separated transfer Ids
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/ClosedPositionDetails/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Closed Position Details
      summary: Get Closed Position Details report for the closed position of a specified client
      description: "Get Closed Position Details report for the closed position of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: ClosedPositionDetailsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: ClosePositionId
          in: query
          description: Close position id of requested closed position.
          required: true
          schema:
            type: string
          example: 342567
        - name: FromDate
          in: query
          description: Include Closed Positions from this date. By default include last 30 days closed positions.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: OpenPositionId
          in: query
          description: Open position id of requested closed position.
          required: true
          schema:
            type: string
          example: 123456
        - name: ToDate
          in: query
          description: Include Closed Positions till this date. By default include last 30 days closed positions.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/srdhistoricalinstructions/{ClientKey}':
    get:
      tags:
        - Historical Report Data - SRD Historical Instructions
      summary: Get SRD Historical Instructions report of a Specified client
      description: "Get SRD Historical Instructions report of a Specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n*   Excel\r\n\r\nTo request a specific format, please set the 'Accept' header on your request to one of the following:\r\n\r\n\r\n*   For PDF : application/pdf\r\n*   For Excel : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      operationId: SrdHistoricalInstructionsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include SRD Historical Instructions from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include SRD Historical Instructions till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v2/reports/Transactions/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Transactions
      summary: Get Transactions report for all the accounts of a specified client and accounts with filters
      description: "Get Transactions report for all the accounts of a specified client or passed accounts for a client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n*   Excel\r\n\r\nTo request a specific format, please set the 'Accept' header on your request to one of the following:\r\n\r\n\r\n*   For PDF : application/pdf\r\n*   For Excel : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      operationId: TransactionsV2GetAsyncUsingFilters
      parameters:
        - name: AccountGroupKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKeys
          in: query
          description: Comma seperated account keys list to provide filterd transaction only for passed accountKeys.
          schema:
            type: array
            items:
              minLength: 1
              type: string
              x-type-name: AccountKey
          example: 'LZTc7DdejXODf-WSl2aCyQ==,LZTc7DdejXODf-WSl2aCyQ=='
        - name: AssetTypeFilters
          in: query
          description: Comma seperated asset type list to provide filterd transaction only for passed asset types. If no asset type is passed then all asset type adata will be returned
          schema:
            type: array
            items:
              $ref: '#/components/schemas/AssetType'
          example: FxSpot
        - name: ClientKey
          in: path
          description: Unique id of the client
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: EventTypeFilters
          in: query
          description: Comma seperated event type list to provide filterd transaction only for passed event types. If no asset type is passed then all event type adata will be returned
          schema:
            type: array
            items:
              type: string
          example: Cash Amount
        - name: FromDate
          in: query
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/WholeAccountTransfer/{ClientKey}':
    get:
      tags:
        - Security Transfer
      summary: Get Security Transfer report for the accounts of a specified client
      description: "Get Security Transfer report for the accounts of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: WholeAccountTransferGetAsync
      parameters:
        - name: ClientKey
          in: path
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: TransferIds
          in: query
          description: Comma separated transfer Ids
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/InterestDetails/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Interest Details
      summary: Get Interest Details report for the accounts of a Specified client
      description: "Get Interest Details report for the accounts of a Specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n*   Excel\r\n\r\nTo request a specific format, please set the 'Accept' header on your request to one of the following:\r\n\r\n\r\n*   For PDF : application/pdf\r\n*   For Excel : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      operationId: InterestDetailsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include Interest Details from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include Interest Details till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/holdingFeeDetails/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Holding Fee Details
      summary: Get Holding Fee Details report for the accounts of a Specified client
      description: "Get Holding Fee Details report for the accounts of a Specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: HoldingFeeDetailsGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          description: The account group id.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: AccountKey
          in: query
          description: The account key.
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: ClientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: FromDate
          in: query
          description: Include Holding Fee Details from this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: ToDate
          in: query
          description: Include Holding Fee Details till this date. By default returns the previous date report.
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
  '/cr/v1/reports/ForexRollOver/{ClientKey}':
    get:
      tags:
        - Historical Report Data - Forex Rollover
      summary: Get Forex Rollover report for the accounts of a Specified client
      description: "Get Forex Rollover report for the accounts of a Specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: ForexRolloverGetAsync
      parameters:
        - name: AccountGroupKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: AccountGroupKey
        - name: AccountKey
          in: query
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
        - name: ClientKey
          in: path
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
        - name: FromDate
          in: query
          schema:
            type: string
            format: date
            x-type-name: Date
        - name: ToDate
          in: query
          schema:
            type: string
            format: date
            x-type-name: Date
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
      x-application-visibility: saxo-only
components:
  schemas:
    AccountSubType:
      enum:
        - BankingBook
        - Error
        - FinlandEsa
        - FrancePea
        - FrancePeaPme
        - InternalCustody
        - None
        - NorwayASK
        - PendingSettlement
        - SwedenISK
        - TradingBook
        - VAT
      type: string
    ApiGroupInfo:
      title: Infor for an Api Group.
      type: object
      properties:
        Controller:
          title: Gets the Api Controller name.
          type: string
        Routes:
          title: Gets the routes for the ApiGroup.
          type: array
          items:
            type: string
      additionalProperties: false
    AssetType:
      title: The possible AssetTypes for which you can get a quote or place an order or a trade.
      enum:
        - Bond
        - Cash
        - CertificateBonus
        - CertificateCappedBonus
        - CertificateCappedCapitalProtected
        - CertificateCappedOutperformance
        - CertificateConstantLeverage
        - CertificateDiscount
        - CertificateExpress
        - CertificateTracker
        - CertificateUncappedCapitalProtection
        - CertificateUncappedOutperformance
        - CfdFutureOption
        - CfdIndexOption
        - CfdOnCompanyWarrant
        - CfdOnEtc
        - CfdOnEtf
        - CfdOnEtn
        - CfdOnFund
        - CfdOnFutures
        - CfdOnIndex
        - CfdOnRights
        - CfdOnStock
        - CfdStockOption
        - CompanyWarrant
        - ContractFutures
        - Etc
        - Etf
        - Etn
        - Fund
        - FuturesOption
        - FuturesStrategy
        - FxBinaryOption
        - FxForwards
        - FxKnockInOption
        - FxKnockOutOption
        - FxNoTouchOption
        - FxOneTouchOption
        - FxSpot
        - FxSwap
        - FxVanillaOption
        - GuaranteeNote
        - IpoOnStock
        - ManagedFund
        - MiniFuture
        - MutualFund
        - PortfolioNote
        - Rights
        - SrdOnEtf
        - SrdOnStock
        - Stock
        - StockIndex
        - StockIndexOption
        - StockOption
        - Warrant
        - WarrantDoubleKnockOut
        - WarrantKnockOut
        - WarrantOpenEndKnockOut
        - WarrantSpread
      type: string
      x-enum-descriptions:
        FxSpot: Forex Spot.
        FxForwards: Forex Forward.
        FxVanillaOption: Forex Vanilla Option.
        FxKnockInOption: Forex Knock In Option.
        FxKnockOutOption: Forex Knock Out Option.
        FxBinaryOption: Forex Binary Option.
        FxOneTouchOption: Forex One Touch Option.
        FxNoTouchOption: Forex No Touch Option.
        ContractFutures: Contract Futures.
        FuturesStrategy: Futures Strategy.
        Stock: Stock.
        StockOption: Stock Option.
        Bond: Bond.
        FuturesOption: Futures Option.
        StockIndexOption: Stock Index Option.
        ManagedFund: 'Obsolete: Managed Fund.'
        Cash: Cash. Not tradeable!
        CfdOnStock: Cfd on Stock.
        CfdOnIndex: Cfd on Stock Index.
        CfdOnFutures: Cfd on Futures.
        StockIndex: Stock Index.
        MutualFund: Mutual Fund.
        CfdIndexOption: Cfd Index Option.
        CfdOnEtf: Cfd on Etf
        CfdOnEtc: Cfd on Etc
        CfdOnEtn: Cfd on Etn
        CfdOnFund: Cfd on Fund
        CfdOnRights: Cfd on Rights
        CfdStockOption: Cfd Stock Option
        CfdOnCompanyWarrant: Cfd on unlisted warrant issued by a corporation.
        Etf: Exchange traded fund.
        Etc: Etc
        Etn: Etn
        Fund: Fund
        FxSwap: Forex Swap.
        Rights: Rights
        Warrant: Warrant
        CfdFutureOption: Cfd Future Option.
        MiniFuture: MiniFuture.
        WarrantSpread: Warrant with built-in spread.
        WarrantKnockOut: Warrant with a knock-out barrier.
        WarrantOpenEndKnockOut: Knock-out Warrant with no expiry.
        WarrantDoubleKnockOut: Warrant with two knock-out barriers.
        CertificateUncappedCapitalProtection: Guarantees a percentage increase of the underlying asset's value above the issue price at expiry/maturity. Max loss is the amount invested multiplied by the CapitalProtection percentage.
        CertificateCappedCapitalProtected: Guarantees a capped percentage increase of the underlying asset's value above the issue price at expiry/maturity. Max loss is the amount invested multiplied by the CapitalProtection percentage.
        CertificateDiscount: 'Yields a capped return if the underlying asset''s value is above the specified cap level at expiry. If the underlying''s value is below the strike at expiry, the investor received the underlying or equivalent value. Offers direct exposure in underlying at a lower price (discount) with a capped potential profit and limited loss.'
        CertificateCappedOutperformance: Capped Outperformance Certificate.
        CertificateCappedBonus: Certificate Capped Bonus.
        CertificateExpress: Certificate Express kick out.
        CertificateTracker: A certificate that mirrors the price movement of the underlying instrument. Often used to trade movements in indicies. Movements can be a fixed ratio of the underlying and can be inverted for bearish/short speculation. Risk is equivalent to owning the underlying.
        CertificateUncappedOutperformance: 'Provides leveraged returns when the underlying price exceeds the threshold strike price. The amount leverage is defined by the Participation %. When the underlying is below the strike price, the certificate mirrors the underlying price 1:1.'
        CertificateBonus: 'Mirrors the price movement of the underlying only if and when the underlying price exceeds the defined barrier. If the certificate expires below the barrier, it offers partial protection/return of investment.'
        CertificateConstantLeverage: Certificate Constant Leverage.
        SrdOnStock: SRD. (Service de Règlement Différé) on Stock.
        SrdOnEtf: SRD. (Service de Règlement Différé) on Etf.
        IpoOnStock: IPO on Stock
        CompanyWarrant: 'Unlisted warrant issued by a corporation, often physically settled.'
        PortfolioNote: Danish pooled investment scheme (“Pulje”). Not online tradeable.
        GuaranteeNote: Danish investment scheme (“Grantbevis”). Not online tradeable.
      x-enum-network-visibility:
        CfdStockOption: internal
        FxSwap: internal
        CfdFutureOption: internal
    BookingRequestType:
      title: 'Request type, basis on which bookings are reterived'
      enum:
        - BkAmountId
        - CaMasterRecordId
        - RelatedTradeId
      type: string
      x-enum-descriptions:
        BkAmountId: Booking amount Id
        CaMasterRecordId: Corporate action Id
        RelatedTradeId: Related trade Id
    DependencyInfo:
      title: 'Represents information about named dependency, component, or subsystem.'
      type: object
      properties:
        Events:
          title: The events related to the dependency.
          type: array
          items:
            $ref: '#/components/schemas/DependencyStatusEvent'
        Name:
          title: The unique name of the dependency.
          type: string
      additionalProperties: false
    DependencyStatusEvent:
      type: object
      properties:
        Message:
          title: A free-text message describing the event.
          type: string
          description: 'The message can indicate the type of failure, an exception message, or likewise.'
        Status:
          title: The dependency status after the event.
          allOf:
            - $ref: '#/components/schemas/DependencyStatusKind'
        Timestamp:
          type: string
          format: date-time
          x-type-name: UtcDateTime
      additionalProperties: false
    DependencyStatusKind:
      title: Represents different dependency statuses.
      enum:
        - Failed
        - Initializing
        - None
        - Ready
      type: string
      x-enum-descriptions:
        None: Indicates that no status has been set for a dependency.
        Initializing: Indicates a dependency is initializing.
        Ready: Indicates that a dependency has operational status.
        Failed: Indicates that a dependency is not operational.
    DiskDrive:
      title: 'Data contract for logical disk drives, including Total and Free disk space'
      type: object
      properties:
        DriveSize:
          title: DriveSize (in GB)
          type: integer
          format: int64
        FreeSpace:
          title: FreeSpace (in GB)
          type: integer
          format: int64
        LogicalDrive:
          title: LogicalDrive (e.g. C or D)
          type: string
        PercentUsed:
          title: PercentUsed
          type: integer
          format: int32
      additionalProperties: false
    FileVersionInfo:
      type: object
      properties:
        Comments:
          type: string
        CompanyName:
          type: string
        FileBuildPart:
          type: integer
          format: int32
        FileDescription:
          type: string
        FileMajorPart:
          type: integer
          format: int32
        FileMinorPart:
          type: integer
          format: int32
        FileName:
          type: string
        FilePrivatePart:
          type: integer
          format: int32
        FileVersion:
          type: string
        InternalName:
          type: string
        IsDebug:
          type: boolean
        IsPatched:
          type: boolean
        IsPreRelease:
          type: boolean
        IsPrivateBuild:
          type: boolean
        IsSpecialBuild:
          type: boolean
        Language:
          type: string
        LegalCopyright:
          type: string
        LegalTrademarks:
          type: string
        OriginalFilename:
          type: string
        PrivateBuild:
          type: string
        ProductBuildPart:
          type: integer
          format: int32
        ProductMajorPart:
          type: integer
          format: int32
        ProductMinorPart:
          type: integer
          format: int32
        ProductName:
          type: string
        ProductPrivatePart:
          type: integer
          format: int32
        ProductVersion:
          type: string
        SpecialBuild:
          type: string
      additionalProperties: false
    IServiceCustomization:
      title: Information about how the services has been customized primarily through OpenApiStartup settings.
      type: object
      properties:
        Customizations:
          title: Gets the customizations.
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
      additionalProperties: false
    ModelStateDictionary:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    OpenOrderDuration:
      title: Order durations
      enum:
        - AtTheClose
        - AtTheOpening
        - DayOrder
        - FillOrKill
        - GoodForPeriod
        - GoodTillCancel
        - GoodTillDate
        - ImmediateOrCancel
        - Unknown
      type: string
      x-enum-descriptions:
        Unknown: Unspecified duration
        GoodTillCancel: Good Till Cancel - working until explicitly cancelled
        DayOrder: Day order - working in all session until trade date roll
        FillOrKill: Fill or kill
        ImmediateOrCancel: Fill or fill partially and cancel remaining
        AtTheOpening: Working at the opening auction only
        AtTheClose: Working at the closing auction only
        GoodTillDate: Working untill specified date
        GoodForPeriod: Working for specified period
    OpenOrderDurationNullable:
      $ref: '#/components/schemas/OpenOrderDuration'
    OptionalReportSection:
      title: Optional section to be added in report.
      enum:
        - Transactions
      type: string
      x-enum-descriptions:
        Transactions: Add transaction section
    OrderActivityReportRequestParam:
      title: Order Activity request Pramameters
      required:
        - ClientKey
      type: object
      properties:
        AccountGroupKey:
          title: 'Account Group key: If specified will only return entries pertaining to specified Account Group'
          minLength: 1
          type: string
          x-type-name: AccountGroupKey
        AccountKey:
          title: 'Account key: If specified will only return entries pertaining to specified Account'
          minLength: 1
          type: string
          x-type-name: AccountKey
        ClientKey:
          title: 'Client key: If specified will only return entries pertaining to specified client and its sub clients depending upon includeSubAccounts.'
          minLength: 1
          type: string
          x-type-name: ClientKey
        ExpirationDateTime:
          title: 'ExpirationDateTime: If specified will only return entries with the specified expiry date. The expiration date, should only be set if the duration type is GoodTillDate. If the field contains the time, it must always be expressed in the exchange local time and Time zone indication must never be added. The time part should be in the following format: HH:mm, where HH is 24 hour clock. Seconds and milliseconds are not allowed. The expiration date is applicable only with Duration ''GoodTillDate'''
          type: string
        FromDate:
          title: 'Only include entries, with a ActivityDateTime greater than or equal to FromDateTime. FromDateTime can go back to maximum 3-years and It should be UTC Date Time. FromDateTime is required if ToDateTime is specified. If OrderId, FromDateTime and ToDateTime are not specified then response include entries with ActivityDateTime greater than past 3 month'
          type: string
          format: date-time
          x-type-name: UtcDateTime
        OrderId:
          title: 'OrderId: Will only return entries pertaining to specified OrderId.'
          type: string
        ToDate:
          title: 'Only include entries, with a ActivityDateTime less than or equal to ToDateTime. Cannot be used with EntryType="Last". Maximum 3-months date range can be accepted from FromDateTime. ToDateTime is required if FromDateTime is specified'
          type: string
          format: date-time
          x-type-name: UtcDateTime
      additionalProperties: false
    OrderEntryType:
      title: Order entry type
      enum:
        - All
        - Last
      type: string
      x-enum-descriptions:
        Last: 'EntryType:- Last: Only return the latest state of an order.'
        All: 'EntryType:- All: Return all entries pertaining to any order.'
    OrderEntryTypeNullable:
      $ref: '#/components/schemas/OrderEntryType'
    OrderState:
      title: Order state prepared with order status and sub status
      enum:
        - Cancelled
        - Expired
        - Traded
        - Working
      type: string
      x-enum-descriptions:
        Working: Working
        Traded: Traded
        Cancelled: Cancelled
        Expired: Expired
    OrderStatus:
      title: Order status
      enum:
        - Cancelled
        - Changed
        - DoneForDay
        - Expired
        - Fill
        - FinalFill
        - Placed
        - Working
      type: string
      x-enum-descriptions:
        Placed: New order placement.
        Working: System or dealer initiated order placement in external OMS of existing order.
        Changed: Order change.
        Cancelled: Order cancel initiated by client or dealer.
        Fill: Order fill - (Also used for trade on quote in OrderLog)
        FinalFill: Order fill - final fill of an open order.
        DoneForDay: Order is done for day in external OMS.
        Expired: Order has expired.
    PlaceableOrderType:
      title: Placeable Order Type
      enum:
        - Algorithmic
        - GuaranteedStop
        - Limit
        - Market
        - PreviouslyQuoted
        - Stop
        - StopIfTraded
        - StopLimit
        - Switch
        - TrailingStop
        - TrailingStopIfTraded
        - Traspaso
        - TraspasoIn
      type: string
      x-enum-descriptions:
        Market: Market Order.
        Limit: Limit Order.
        StopIfTraded: Stop if traded.
        Stop: Stop Order.
        StopLimit: Stop Limit Order.
        TrailingStopIfTraded: Trailing stop if traded.
        TrailingStop: Trailing stop.
        Algorithmic: Algo order.
        Switch: 'Switch order, Sell X and Buy Y with one order.'
        Traspaso: Traspaso. Specific type of switch order. Only available on select MutualFunds.
        TraspasoIn: TraspasoIn. Specific type of switch order
        GuaranteedStop: Order Type currently not supported.
        PreviouslyQuoted: Order on Previous Quote. Only applies for B2BExecutionReports for Fx DMA Clients
    ProcessInfo:
      title: Data contract for process status
      type: object
      properties:
        HostName:
          title: Name of computer process is running on
          type: string
        Id:
          title: Process Id
          type: integer
          format: int32
        PeakWorkingSet:
          title: Maximum memory usage(in Bytes)
          type: integer
          format: int64
        ProcessTimePercent:
          title: Measurement of CPU Utilization Percentage based on .net process values
          type: number
        ProcessTimePercentPerformanceCounter:
          title: Measurement of CPU Utilization Percentage based on performance counter
          type: number
        StartTime:
          title: The time the process was started
          type: string
        Threads:
          title: Number of operating system threads running in process
          type: integer
          format: int32
        WorkingSet:
          title: Current memory usage (in Bytes)
          type: integer
          format: int64
      additionalProperties: false
    ResponseFilterRegistration:
      title: Response filter/contract type registration.
      type: object
      properties:
        Contract:
          title: Contract type for which a response filter was registered.
          type: string
        Processor:
          title: ResponseFilterProcessor type handling contract.
          type: string
      additionalProperties: false
    ServerStatus:
      title: Data contract for server status.
      type: object
      properties:
        AppPoolId:
          title: Gets the current app pool id.
          type: string
        ApplicationName:
          title: Name of service group (host assembly)
          type: string
        ApplicationVersion:
          title: Version of service group (host assembly)
          type: string
        BuildTime:
          title: Gets the build time of the current assembly.
          type: string
        Created:
          title: UtcDateTime stamp for when this object was created.
          type: string
          format: date-time
          x-type-name: UtcDateTime
        Customization:
          title: Information about how the services has been customized primarily through OpenApiStartup settings.
          allOf:
            - $ref: '#/components/schemas/IServiceCustomization'
        Dependencies:
          title: Information about the service dependencies.
          type: array
          items:
            $ref: '#/components/schemas/DependencyInfo'
        DeployTime:
          title: Gets the datetime of deployment (last modified).
          type: string
        DiskDrives:
          title: DiskDrives (drive space in GB)
          type: array
          items:
            $ref: '#/components/schemas/DiskDrive'
        FrameworkVersion:
          title: Version of OpenAI Framework in use
          type: string
        InternalInformation:
          title: InternalInformation
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
        LeasePeriod:
          title: The lease period (expiry) of the authentication token.
          type: integer
          format: int32
        LoadedAssemblies:
          title: 'Loaded assemblies, full'
          type: array
          items:
            $ref: '#/components/schemas/FileVersionInfo'
        LoadedAssembliesVersions:
          title: Loaded assemblies and versions
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
        LogicalProcessors:
          title: Information about number of logical processors on the box
          type: integer
          format: int32
        MachineUptime:
          title: Ticks since the machine was started.
          type: integer
          format: int64
        MachineUptimeText:
          title: Ticks since the machine was started in text.
          type: string
        NetFrameworkVersion:
          title: Version of .NET Framework in use
          type: string
        OSVersion:
          title: Version of server hosting Operating System.
          type: string
        PerformanceCounters:
          title: Values of performance counters reported by the servicegroup
          type: array
          items:
            $ref: '#/components/schemas/StringStringKeyValuePair'
        Process:
          title: Information about current process.
          allOf:
            - $ref: '#/components/schemas/ProcessInfo'
        ResponseFilters:
          title: Lists registered response filter/contract types.
          type: array
          items:
            $ref: '#/components/schemas/ResponseFilterRegistration'
        RouteTable:
          title: Gets or the route table.
          type: array
          items:
            $ref: '#/components/schemas/ApiGroupInfo'
        RunningIdentity:
          title: Identity in which the application is running.
          type: string
        SystemEnvironment:
          title: "SystemEnvironment is read from configuration and has to be one of the following:\r\n            \"Dev(elopment)\", \"Test\", \"Sim(ulation)\" or \"Live\"."
          type: string
        SystemUptime:
          title: Ticks since the service group was started.
          type: integer
          format: int64
        SystemUptimeText:
          title: Ticks since the service group was started in text.
          type: string
        TimeSpentMs:
          title: Time spent in ms to generate the status information.
          type: number
        ToolId:
          title: System ToolId (hard coded as 40 for OpenApi). See Iit.FrontOffice.Trading.Public.ToolId enum for full definition.
          type: integer
          format: int32
        WebAPIVersion:
          title: Version of WebAPI in use
          type: string
      additionalProperties: false
    StringStringKeyValuePair:
      type: object
      properties:
        Key:
          type: string
        Value:
          type: string
      additionalProperties: false
    SubscriptionInfoFilter:
      title: Represents subscription filters for querying the subscription diagnostics endpoint.
      type: object
      properties:
        ApplicationId:
          title: Restricts the subscriptions to an application if specified.
          minimum: 1
          type: integer
          format: int32
          x-type-name: ApplicationId
        ContextId:
          title: Restricts the subscriptions to a streaming session if specified along with a session id.
          type: string
        Publisher:
          title: Restricts the subscriptions to a publisher if specified.
          type: string
        SessionId:
          title: Restricts the subscriptions to a session if specified.
          pattern: '^[0-9a-fA-F]{32}$|^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$'
          type: string
          x-type-name: SessionId
        UserId:
          title: Restricts the subscriptions to a MITS user if specified.
          allOf:
            - $ref: '#/components/schemas/UserIdNullable'
      additionalProperties: false
    UserId:
      minimum: 1
      type: integer
      format: int32
    UserIdNullable:
      $ref: '#/components/schemas/UserId'
  responses:
    BadRequest:
      description: One or more of the provided parameters are invalid.
      content:
        application/json:
          schema:
            required:
              - ErrorCode
              - Message
            type: object
            properties:
              ErrorCode:
                enum:
                  - InvalidRequest
                type: string
                x-enum-descriptions:
                  InvalidRequest: Default error code returned when it cannot be determined which part of the request is malformed.
              Message:
                type: string
              ModelState:
                $ref: '#/components/schemas/ModelStateDictionary'
    ServiceUnavailable:
      description: Service Unavailable.
    TooManyRequests:
      description: The request was rejected due to rate limit being exceeded.
    Unauthorized:
      description: Indicates that the request was rejected because the 'Authorization' header was missing in the request or contained an invalid security token.
  parameters:
    XInternalIP:
      name: X-Internal-IP
      in: header
      description: Required header for access to network internal endpoints.
      required: true
      schema:
        enum:
          - '1'
        type: string
  securitySchemes:
    OpenApiJWTSecurityScheme:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OpenApiOAuthSecurityScheme:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://idp.blue.sso.sys.dom/authorize
          tokenUrl: https://idp.blue.sso.sys.dom/token
          scopes: { }
tags:
  - name: Client Personal Details
    description: Client Personal Details Report.
  - name: ConvertedData
    description: End points for converting data from one format to another.
  - name: Corporate Action - Narratives
    description: Corporate action narratives.
  - name: Historical Report Data - Account Statement
    description: Account Statement Report.
  - name: Historical Report Data - Account Valuations
    description: Account Valuations Report
  - name: Historical Report Data - Audit Request
    description: Audit Request Report.
  - name: Historical Report Data - Bond Coupon Payments
    description: Bond Coupon Payments Report.
  - name: Historical Report Data - CFD Cash Adjustments
    description: CFD Cash Adjustments.
  - name: Historical Report Data - Carrying Cost Details
    description: CarryingCostDetailsController
  - name: Historical Report Data - Cfd Finance Details
    description: Cfd Finance Details Report
  - name: Historical Report Data - Closed Position Details
    description: ClosedPositionDetailsController
  - name: Historical Report Data - Closed Positions
    description: Closed Positions Report.
  - name: Historical Report Data - Closeout Overview
    description: CloseoutOverviewController
  - name: Historical Report Data - Consolidated Fee Schedule
    description: Consolidated Fee Schedule Report.
  - name: Historical Report Data - Financial Statement
    description: AIBFinancialStatementController
  - name: Historical Report Data - Forex Commissions
    description: ForexCommissionsController
  - name: Historical Report Data - Forex Options
    description: FxOptionsController
  - name: Historical Report Data - Forex Rollover
    description: ForexRolloverController
  - name: Historical Report Data - Holding Fee Details
    description: HoldingFeeDetailsController
  - name: Historical Report Data - Holdings
    description: Holding Details Report
  - name: Historical Report Data - IPO Finance Details
    description: IPO Finance Details Report
  - name: Historical Report Data - Interest Details
    description: Interest Details Report.
  - name: Historical Report Data - Margin Lending Interest Details
    description: Margin Lending Interest Details Report
  - name: Historical Report Data - Order Activities
    description: Order Activities report
  - name: Historical Report Data - Pension account summary
    description: Generate pension account summary report
  - name: Historical Report Data - Portfolio Management
    description: Portfolio Report
  - name: Historical Report Data - SRD Finance Details
    description: SRD Finance Details Report
  - name: Historical Report Data - SRD Historical Instructions
    description: SRD Historical Instructions Report
  - name: Historical Report Data - Securities Lending Details
    description: Securities Lending Details Report
  - name: Historical Report Data - Share Dividends
    description: Share Dividends Report.
  - name: Historical Report Data - Srd Cash Adjustments
    description: Srd Cash Adjustments.
  - name: Historical Report Data - Subscription Billing History
    description: SubscriptionBillingHistoryController
  - name: Historical Report Data - Trade Corrections
    description: TradeCorrectionsController
  - name: Historical Report Data - Trade Details
    description: Trade Details Report.
  - name: Historical Report Data - Trades Executed
    description: Trades Executed Report.
  - name: Historical Report Data - Transaction Balance
    description: Transaction Balance Controller
  - name: Historical Report Data - Transactions
    description: Transactions report v2
  - name: Historical Report Data - quarterly Portfolio Management
    description: Quarterly Portfolio Report
  - name: InvestmentPlan
    description: Transactions report
  - name: Security Transfer
    description: WholeAccountTransferController