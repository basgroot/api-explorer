openapi: 3.0.1
info:
  title: Services.ClientReporting
  description: The Client Reporting service group provides endpoints to retrieve various reports in .pdf/.xls format.
  version: 1.1.448+27f242c8dd
  x-framework-version: 22.0.28+8a9c9a332b
  x-machine: SATOAWEB22-DK1
servers:
  - url: https://gateway.saxobank.com/openapi
paths:
  '/cr/v1/reports/AccountStatement/{clientKey}':
    get:
      tags:
        - Historical Report Data - Account Statement
      summary: Get Account statement report for the accounts of a Specified client
      description: "Get an account statement report for the accounts of a Specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n*   Excel\r\n\r\nTo request a specific format, please set the 'Accept' header on your request to one of the following:\r\n\r\n\r\n*   For PDF : application/pdf\r\n*   For Excel : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      operationId: AccountStatementGetAsync
      parameters:
        - name: accountGroupKey
          in: query
          description: The account group id.
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: accountKey
          in: query
          description: The account key.
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: clientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: fromDate
          in: query
          description: Include Account statement from this date. By default returns the previous date report.
          schema:
            allOf:
              - type: string
                format: date
                x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: toDate
          in: query
          description: Include Account statement till this date. By default returns the previous date report.
          schema:
            allOf:
              - type: string
                format: date
                x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cr/v1/reports/Portfolio/{clientKey}/{fromDate}/{toDate}':
    get:
      tags:
        - Historical Report Data - Portfolio Management
      summary: Get Portfolio report for the accounts of a specified client
      description: "Get Portfolio report for the accounts of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: PortfolioGetAsync
      parameters:
        - name: IncludeYTDInformation
          in: query
          description: Include additional information about performance Year To Date.
          schema:
            type: boolean
          example: true
        - name: accountGroupKey
          in: query
          description: The account group id.
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: accountKey
          in: query
          description: The account key.
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: clientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: fromDate
          in: path
          description: From date in UTC
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000'
        - name: optionalReportSections
          in: query
          description: Whether any optional section is needed in the report
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OptionalReportSection'
          example: Trasactions
        - name: toDate
          in: path
          description: To date in UTC
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cr/v1/reports/Portfolio/me/{fromDate}/{toDate}':
    get:
      tags:
        - Historical Report Data - Portfolio Management
      summary: Get Portfolio report for the logged in user
      description: "Get Portfolio report for the logged in user.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: PortfolioGetMeAsync
      parameters:
        - name: IncludeYTDInformation
          in: query
          description: Include additional information about performance Year To Date.
          schema:
            type: boolean
          example: true
        - name: accountGroupKey
          in: query
          description: The account group id.
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: accountKey
          in: query
          description: The account key.
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: fromDate
          in: path
          description: From date in UTC
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2016-10-10T00:00:00.0000000'
        - name: optionalReportSections
          in: query
          description: Parameter specifing if any optional section is needed in the report
          schema:
            type: array
            items:
              $ref: '#/components/schemas/OptionalReportSection'
          example: Trasactions
        - name: toDate
          in: path
          description: To date in UTC
          required: true
          schema:
            type: string
            format: date
            x-type-name: Date
          example: '2017-10-10T00:00:00.0000000'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cr/v1/reports/TradeDetails/{clientKey}':
    get:
      tags:
        - Historical Report Data - Trade Details
      summary: Get Trade Details report for the accounts of a specified client
      description: "Get Trade Details report for the accounts of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n\r\nTo request a PDF format, please set the 'Accept' header on your request as follows:\r\n\r\n\r\n*   For PDF : application/pdf"
      operationId: TradeDetailsGetAsync
      parameters:
        - name: accountKey
          in: query
          description: The account key.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: clientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: filterType
          in: query
          description: Values which gets included in the request
          required: true
          schema:
            $ref: '#/components/schemas/BookingRequestType'
        - name: filterValue
          in: query
          description: Id for the specified filter type.
          required: true
          schema:
            type: string
        - name: tradeId
          in: query
          description: Trade id
          required: true
          schema:
            type: string
          example: '293832'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
  '/cr/v1/reports/TradesExecuted/{clientKey}':
    get:
      tags:
        - Historical Report Data - Trades Executed
      summary: Get Trades Executed report for the accounts of a specified client
      description: "Get Trades Executed report for the accounts of a specified client.\r\n            \r\nThis report is available in the following formats:\r\n\r\n\r\n*   PDF\r\n*   Excel\r\n\r\nTo request a specific format, please set the 'Accept' header on your request to one of the following:\r\n\r\n\r\n*   For PDF : application/pdf\r\n*   For Excel : application/vnd.openxmlformats-officedocument.spreadsheetml.sheet"
      operationId: TradesExecutedGetAsync
      parameters:
        - name: accountGroupKey
          in: query
          description: The account group id.
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: AccountGroupKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: accountKey
          in: query
          description: The account key.
          schema:
            allOf:
              - minLength: 1
                type: string
                x-type-name: AccountKey
          example: LZTc7DdejXODf-WSl2aCyQ==
        - name: clientKey
          in: path
          description: Unique id of the client.
          required: true
          schema:
            minLength: 1
            type: string
            x-type-name: ClientKey
          example: 5DG7K1P5cqYBZ77tl7Af4w==
        - name: fromDate
          in: query
          description: Include TradesExecuted from this date. By default returns the previous date report.
          schema:
            allOf:
              - type: string
                format: date
                x-type-name: Date
          example: '2016-10-10T00:00:00.0000000+00:00'
        - name: toDate
          in: query
          description: Include TradesExecuted till this date. By default returns the previous date report.
          schema:
            allOf:
              - type: string
                format: date
                x-type-name: Date
          example: '2017-10-10T00:00:00.0000000+00:00'
      responses:
        '200':
          description: Indicates that the request was performed correctly.
        '404':
          description: Not Found
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - NotFoundError
                    type: string
                    x-enum-descriptions:
                      NotFoundError: Not found.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '400':
          description: Bad Request
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - BadRequestError
                    type: string
                    x-enum-descriptions:
                      BadRequestError: Bad request.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '500':
          description: Internal Server Error
        '406':
          description: Not Acceptable
          content:
            application/json:
              schema:
                required:
                  - ErrorCode
                  - Message
                type: object
                properties:
                  ErrorCode:
                    enum:
                      - RequestedFormatNotSupported
                    type: string
                    x-enum-descriptions:
                      RequestedFormatNotSupported: Request format not supported.
                  Message:
                    type: string
                  ModelState:
                    $ref: '#/components/schemas/ModelStateDictionary'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '503':
          $ref: '#/components/responses/ServiceUnavailable'
        '429':
          $ref: '#/components/responses/TooManyRequests'
      security:
        - OpenApiOAuthSecurityScheme: [ ]
        - OpenApiJWTSecurityScheme: [ ]
components:
  schemas:
    BookingRequestType:
      title: 'Request type, basis on which bookings are reterived'
      enum:
        - BkAmountId
        - CaMasterRecordId
        - RelatedTradeId
      type: string
      x-enum-descriptions:
        BkAmountId: Booking amount Id
        CaMasterRecordId: Corporate action Id
        RelatedTradeId: Related trade Id
    ModelStateDictionary:
      type: object
      additionalProperties:
        type: array
        items:
          type: string
    OptionalReportSection:
      title: Optional section to be added in report.
      enum:
        - Transactions
      type: string
      x-enum-descriptions:
        Transactions: Add transaction section
  responses:
    ServiceUnavailable:
      description: Service Unavailable.
    TooManyRequests:
      description: The request was rejected due to rate limit being exceeded.
    Unauthorized:
      description: Indicates that the request was rejected because the 'Authorization' header was missing in the request or contained an invalid security token.
  securitySchemes:
    OpenApiJWTSecurityScheme:
      type: http
      scheme: bearer
      bearerFormat: JWT
    OpenApiOAuthSecurityScheme:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://live.logonvalidation.net/authorize
          tokenUrl: https://live.logonvalidation.net/token
          scopes: { }
tags:
  - name: Client Personal Details
    description: Client Personal Details Report.
  - name: ConvertedData
    description: End points for converting data from one format to another.
  - name: Corporate Action - Narratives
    description: Corporate action narratives.
  - name: Historical Report Data - Account Statement
    description: Account Statement Report.
  - name: Historical Report Data - Account Valuations
    description: Account Valuations Report
  - name: Historical Report Data - Audit Request
    description: Audit Request Report.
  - name: Historical Report Data - Bond Coupon Payments
    description: Bond Coupon Payments Report.
  - name: Historical Report Data - CFD Cash Adjustments
    description: CFD Cash Adjustments.
  - name: Historical Report Data - Carrying Cost Details
    description: CarryingCostDetailsController
  - name: Historical Report Data - Cfd Finance Details
    description: Cfd Finance Details Report
  - name: Historical Report Data - Closed Position Details
    description: ClosedPositionDetailsController
  - name: Historical Report Data - Closed Positions
    description: Closed Positions Report.
  - name: Historical Report Data - Closeout Overview
    description: CloseoutOverviewController
  - name: Historical Report Data - Consolidated Fee Schedule
    description: Consolidated Fee Schedule Report.
  - name: Historical Report Data - Financial Statement
    description: AIBFinancialStatementController
  - name: Historical Report Data - Forex Commissions
    description: ForexCommissionsController
  - name: Historical Report Data - Forex Options
    description: FxOptionsController
  - name: Historical Report Data - Forex Rollover
    description: ForexRolloverController
  - name: Historical Report Data - Holding Fee Details
    description: HoldingFeeDetailsController
  - name: Historical Report Data - Holdings
    description: Holding Details Report
  - name: Historical Report Data - IPO Finance Details
    description: IPO Finance Details Report
  - name: Historical Report Data - Interest Details
    description: Interest Details Report.
  - name: Historical Report Data - Margin Lending Interest Details
    description: Margin Lending Interest Details Report
  - name: Historical Report Data - Order Activities
    description: Order Activities report
  - name: Historical Report Data - Pension account summary
    description: Generate pension account summary report
  - name: Historical Report Data - Portfolio Management
    description: Portfolio Report
  - name: Historical Report Data - SRD Finance Details
    description: SRD Finance Details Report
  - name: Historical Report Data - SRD Historical Instructions
    description: SRD Historical Instructions Report
  - name: Historical Report Data - Securities Lending Details
    description: Securities Lending Details Report
  - name: Historical Report Data - Share Dividends
    description: Share Dividends Report.
  - name: Historical Report Data - Srd Cash Adjustments
    description: Srd Cash Adjustments.
  - name: Historical Report Data - Subscription Billing History
    description: SubscriptionBillingHistoryController
  - name: Historical Report Data - Trade Corrections
    description: TradeCorrectionsController
  - name: Historical Report Data - Trade Details
    description: Trade Details Report.
  - name: Historical Report Data - Trades Executed
    description: Trades Executed Report.
  - name: Historical Report Data - Transaction Balance
    description: Transaction Balance Controller
  - name: Historical Report Data - Transactions
    description: Transactions report
  - name: Historical Report Data - quarterly Portfolio Management
    description: Quarterly Portfolio Report
  - name: InvestmentPlan
    description: Transactions report
  - name: Security Transfer
    description: SecurityTransferController